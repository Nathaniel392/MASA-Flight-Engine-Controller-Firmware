
tsm-flight-ec-firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000ce1c  080001c8  080001c8  000101c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000060  0800cfe8  0800cfe8  0001cfe8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800d048  0800d048  0002028c  2**0
                  CONTENTS
  4 .ARM          00000008  0800d048  0800d048  0001d048  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800d050  0800d050  0002028c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800d050  0800d050  0001d050  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800d054  0800d054  0001d054  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000028c  20000000  0800d058  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002178  2000028c  0800d2e4  0002028c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20002404  0800d2e4  00022404  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002028c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00023feb  00000000  00000000  000202bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000040ea  00000000  00000000  000442a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000014c0  00000000  00000000  00048398  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001310  00000000  00000000  00049858  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00025a79  00000000  00000000  0004ab68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001abec  00000000  00000000  000705e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000dc157  00000000  00000000  0008b1cd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00167324  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000058c4  00000000  00000000  00167378  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	2000028c 	.word	0x2000028c
 80001e4:	00000000 	.word	0x00000000
 80001e8:	0800cfcc 	.word	0x0800cfcc

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000290 	.word	0x20000290
 8000204:	0800cfcc 	.word	0x0800cfcc

08000208 <__aeabi_drsub>:
 8000208:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800020c:	e002      	b.n	8000214 <__adddf3>
 800020e:	bf00      	nop

08000210 <__aeabi_dsub>:
 8000210:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000214 <__adddf3>:
 8000214:	b530      	push	{r4, r5, lr}
 8000216:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800021a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800021e:	ea94 0f05 	teq	r4, r5
 8000222:	bf08      	it	eq
 8000224:	ea90 0f02 	teqeq	r0, r2
 8000228:	bf1f      	itttt	ne
 800022a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800022e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000232:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000236:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800023a:	f000 80e2 	beq.w	8000402 <__adddf3+0x1ee>
 800023e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000242:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000246:	bfb8      	it	lt
 8000248:	426d      	neglt	r5, r5
 800024a:	dd0c      	ble.n	8000266 <__adddf3+0x52>
 800024c:	442c      	add	r4, r5
 800024e:	ea80 0202 	eor.w	r2, r0, r2
 8000252:	ea81 0303 	eor.w	r3, r1, r3
 8000256:	ea82 0000 	eor.w	r0, r2, r0
 800025a:	ea83 0101 	eor.w	r1, r3, r1
 800025e:	ea80 0202 	eor.w	r2, r0, r2
 8000262:	ea81 0303 	eor.w	r3, r1, r3
 8000266:	2d36      	cmp	r5, #54	; 0x36
 8000268:	bf88      	it	hi
 800026a:	bd30      	pophi	{r4, r5, pc}
 800026c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000270:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000274:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000278:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800027c:	d002      	beq.n	8000284 <__adddf3+0x70>
 800027e:	4240      	negs	r0, r0
 8000280:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000284:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000288:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800028c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000290:	d002      	beq.n	8000298 <__adddf3+0x84>
 8000292:	4252      	negs	r2, r2
 8000294:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000298:	ea94 0f05 	teq	r4, r5
 800029c:	f000 80a7 	beq.w	80003ee <__adddf3+0x1da>
 80002a0:	f1a4 0401 	sub.w	r4, r4, #1
 80002a4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002a8:	db0d      	blt.n	80002c6 <__adddf3+0xb2>
 80002aa:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ae:	fa22 f205 	lsr.w	r2, r2, r5
 80002b2:	1880      	adds	r0, r0, r2
 80002b4:	f141 0100 	adc.w	r1, r1, #0
 80002b8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002bc:	1880      	adds	r0, r0, r2
 80002be:	fa43 f305 	asr.w	r3, r3, r5
 80002c2:	4159      	adcs	r1, r3
 80002c4:	e00e      	b.n	80002e4 <__adddf3+0xd0>
 80002c6:	f1a5 0520 	sub.w	r5, r5, #32
 80002ca:	f10e 0e20 	add.w	lr, lr, #32
 80002ce:	2a01      	cmp	r2, #1
 80002d0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002d4:	bf28      	it	cs
 80002d6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002da:	fa43 f305 	asr.w	r3, r3, r5
 80002de:	18c0      	adds	r0, r0, r3
 80002e0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002e4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002e8:	d507      	bpl.n	80002fa <__adddf3+0xe6>
 80002ea:	f04f 0e00 	mov.w	lr, #0
 80002ee:	f1dc 0c00 	rsbs	ip, ip, #0
 80002f2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002f6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002fa:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002fe:	d31b      	bcc.n	8000338 <__adddf3+0x124>
 8000300:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000304:	d30c      	bcc.n	8000320 <__adddf3+0x10c>
 8000306:	0849      	lsrs	r1, r1, #1
 8000308:	ea5f 0030 	movs.w	r0, r0, rrx
 800030c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000310:	f104 0401 	add.w	r4, r4, #1
 8000314:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000318:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800031c:	f080 809a 	bcs.w	8000454 <__adddf3+0x240>
 8000320:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000324:	bf08      	it	eq
 8000326:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800032a:	f150 0000 	adcs.w	r0, r0, #0
 800032e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000332:	ea41 0105 	orr.w	r1, r1, r5
 8000336:	bd30      	pop	{r4, r5, pc}
 8000338:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800033c:	4140      	adcs	r0, r0
 800033e:	eb41 0101 	adc.w	r1, r1, r1
 8000342:	3c01      	subs	r4, #1
 8000344:	bf28      	it	cs
 8000346:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800034a:	d2e9      	bcs.n	8000320 <__adddf3+0x10c>
 800034c:	f091 0f00 	teq	r1, #0
 8000350:	bf04      	itt	eq
 8000352:	4601      	moveq	r1, r0
 8000354:	2000      	moveq	r0, #0
 8000356:	fab1 f381 	clz	r3, r1
 800035a:	bf08      	it	eq
 800035c:	3320      	addeq	r3, #32
 800035e:	f1a3 030b 	sub.w	r3, r3, #11
 8000362:	f1b3 0220 	subs.w	r2, r3, #32
 8000366:	da0c      	bge.n	8000382 <__adddf3+0x16e>
 8000368:	320c      	adds	r2, #12
 800036a:	dd08      	ble.n	800037e <__adddf3+0x16a>
 800036c:	f102 0c14 	add.w	ip, r2, #20
 8000370:	f1c2 020c 	rsb	r2, r2, #12
 8000374:	fa01 f00c 	lsl.w	r0, r1, ip
 8000378:	fa21 f102 	lsr.w	r1, r1, r2
 800037c:	e00c      	b.n	8000398 <__adddf3+0x184>
 800037e:	f102 0214 	add.w	r2, r2, #20
 8000382:	bfd8      	it	le
 8000384:	f1c2 0c20 	rsble	ip, r2, #32
 8000388:	fa01 f102 	lsl.w	r1, r1, r2
 800038c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000390:	bfdc      	itt	le
 8000392:	ea41 010c 	orrle.w	r1, r1, ip
 8000396:	4090      	lslle	r0, r2
 8000398:	1ae4      	subs	r4, r4, r3
 800039a:	bfa2      	ittt	ge
 800039c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003a0:	4329      	orrge	r1, r5
 80003a2:	bd30      	popge	{r4, r5, pc}
 80003a4:	ea6f 0404 	mvn.w	r4, r4
 80003a8:	3c1f      	subs	r4, #31
 80003aa:	da1c      	bge.n	80003e6 <__adddf3+0x1d2>
 80003ac:	340c      	adds	r4, #12
 80003ae:	dc0e      	bgt.n	80003ce <__adddf3+0x1ba>
 80003b0:	f104 0414 	add.w	r4, r4, #20
 80003b4:	f1c4 0220 	rsb	r2, r4, #32
 80003b8:	fa20 f004 	lsr.w	r0, r0, r4
 80003bc:	fa01 f302 	lsl.w	r3, r1, r2
 80003c0:	ea40 0003 	orr.w	r0, r0, r3
 80003c4:	fa21 f304 	lsr.w	r3, r1, r4
 80003c8:	ea45 0103 	orr.w	r1, r5, r3
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	f1c4 040c 	rsb	r4, r4, #12
 80003d2:	f1c4 0220 	rsb	r2, r4, #32
 80003d6:	fa20 f002 	lsr.w	r0, r0, r2
 80003da:	fa01 f304 	lsl.w	r3, r1, r4
 80003de:	ea40 0003 	orr.w	r0, r0, r3
 80003e2:	4629      	mov	r1, r5
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ea:	4629      	mov	r1, r5
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	f094 0f00 	teq	r4, #0
 80003f2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003f6:	bf06      	itte	eq
 80003f8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003fc:	3401      	addeq	r4, #1
 80003fe:	3d01      	subne	r5, #1
 8000400:	e74e      	b.n	80002a0 <__adddf3+0x8c>
 8000402:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000406:	bf18      	it	ne
 8000408:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800040c:	d029      	beq.n	8000462 <__adddf3+0x24e>
 800040e:	ea94 0f05 	teq	r4, r5
 8000412:	bf08      	it	eq
 8000414:	ea90 0f02 	teqeq	r0, r2
 8000418:	d005      	beq.n	8000426 <__adddf3+0x212>
 800041a:	ea54 0c00 	orrs.w	ip, r4, r0
 800041e:	bf04      	itt	eq
 8000420:	4619      	moveq	r1, r3
 8000422:	4610      	moveq	r0, r2
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	ea91 0f03 	teq	r1, r3
 800042a:	bf1e      	ittt	ne
 800042c:	2100      	movne	r1, #0
 800042e:	2000      	movne	r0, #0
 8000430:	bd30      	popne	{r4, r5, pc}
 8000432:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000436:	d105      	bne.n	8000444 <__adddf3+0x230>
 8000438:	0040      	lsls	r0, r0, #1
 800043a:	4149      	adcs	r1, r1
 800043c:	bf28      	it	cs
 800043e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000442:	bd30      	pop	{r4, r5, pc}
 8000444:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000448:	bf3c      	itt	cc
 800044a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800044e:	bd30      	popcc	{r4, r5, pc}
 8000450:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000454:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000458:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800045c:	f04f 0000 	mov.w	r0, #0
 8000460:	bd30      	pop	{r4, r5, pc}
 8000462:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000466:	bf1a      	itte	ne
 8000468:	4619      	movne	r1, r3
 800046a:	4610      	movne	r0, r2
 800046c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000470:	bf1c      	itt	ne
 8000472:	460b      	movne	r3, r1
 8000474:	4602      	movne	r2, r0
 8000476:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800047a:	bf06      	itte	eq
 800047c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000480:	ea91 0f03 	teqeq	r1, r3
 8000484:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	bf00      	nop

0800048c <__aeabi_ui2d>:
 800048c:	f090 0f00 	teq	r0, #0
 8000490:	bf04      	itt	eq
 8000492:	2100      	moveq	r1, #0
 8000494:	4770      	bxeq	lr
 8000496:	b530      	push	{r4, r5, lr}
 8000498:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800049c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004a0:	f04f 0500 	mov.w	r5, #0
 80004a4:	f04f 0100 	mov.w	r1, #0
 80004a8:	e750      	b.n	800034c <__adddf3+0x138>
 80004aa:	bf00      	nop

080004ac <__aeabi_i2d>:
 80004ac:	f090 0f00 	teq	r0, #0
 80004b0:	bf04      	itt	eq
 80004b2:	2100      	moveq	r1, #0
 80004b4:	4770      	bxeq	lr
 80004b6:	b530      	push	{r4, r5, lr}
 80004b8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004bc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004c0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004c4:	bf48      	it	mi
 80004c6:	4240      	negmi	r0, r0
 80004c8:	f04f 0100 	mov.w	r1, #0
 80004cc:	e73e      	b.n	800034c <__adddf3+0x138>
 80004ce:	bf00      	nop

080004d0 <__aeabi_f2d>:
 80004d0:	0042      	lsls	r2, r0, #1
 80004d2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004d6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004da:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004de:	bf1f      	itttt	ne
 80004e0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004e4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004e8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004ec:	4770      	bxne	lr
 80004ee:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004f2:	bf08      	it	eq
 80004f4:	4770      	bxeq	lr
 80004f6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004fa:	bf04      	itt	eq
 80004fc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000500:	4770      	bxeq	lr
 8000502:	b530      	push	{r4, r5, lr}
 8000504:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000510:	e71c      	b.n	800034c <__adddf3+0x138>
 8000512:	bf00      	nop

08000514 <__aeabi_ul2d>:
 8000514:	ea50 0201 	orrs.w	r2, r0, r1
 8000518:	bf08      	it	eq
 800051a:	4770      	bxeq	lr
 800051c:	b530      	push	{r4, r5, lr}
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	e00a      	b.n	800053a <__aeabi_l2d+0x16>

08000524 <__aeabi_l2d>:
 8000524:	ea50 0201 	orrs.w	r2, r0, r1
 8000528:	bf08      	it	eq
 800052a:	4770      	bxeq	lr
 800052c:	b530      	push	{r4, r5, lr}
 800052e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000532:	d502      	bpl.n	800053a <__aeabi_l2d+0x16>
 8000534:	4240      	negs	r0, r0
 8000536:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800053a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800053e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000542:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000546:	f43f aed8 	beq.w	80002fa <__adddf3+0xe6>
 800054a:	f04f 0203 	mov.w	r2, #3
 800054e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000552:	bf18      	it	ne
 8000554:	3203      	addne	r2, #3
 8000556:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800055a:	bf18      	it	ne
 800055c:	3203      	addne	r2, #3
 800055e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000562:	f1c2 0320 	rsb	r3, r2, #32
 8000566:	fa00 fc03 	lsl.w	ip, r0, r3
 800056a:	fa20 f002 	lsr.w	r0, r0, r2
 800056e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000572:	ea40 000e 	orr.w	r0, r0, lr
 8000576:	fa21 f102 	lsr.w	r1, r1, r2
 800057a:	4414      	add	r4, r2
 800057c:	e6bd      	b.n	80002fa <__adddf3+0xe6>
 800057e:	bf00      	nop

08000580 <__aeabi_dmul>:
 8000580:	b570      	push	{r4, r5, r6, lr}
 8000582:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000586:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800058a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800058e:	bf1d      	ittte	ne
 8000590:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000594:	ea94 0f0c 	teqne	r4, ip
 8000598:	ea95 0f0c 	teqne	r5, ip
 800059c:	f000 f8de 	bleq	800075c <__aeabi_dmul+0x1dc>
 80005a0:	442c      	add	r4, r5
 80005a2:	ea81 0603 	eor.w	r6, r1, r3
 80005a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005b2:	bf18      	it	ne
 80005b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005bc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005c0:	d038      	beq.n	8000634 <__aeabi_dmul+0xb4>
 80005c2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ce:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005d2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005d6:	f04f 0600 	mov.w	r6, #0
 80005da:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005de:	f09c 0f00 	teq	ip, #0
 80005e2:	bf18      	it	ne
 80005e4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005e8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005ec:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005f0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005f4:	d204      	bcs.n	8000600 <__aeabi_dmul+0x80>
 80005f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005fa:	416d      	adcs	r5, r5
 80005fc:	eb46 0606 	adc.w	r6, r6, r6
 8000600:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000604:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000608:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800060c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000610:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000614:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000618:	bf88      	it	hi
 800061a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800061e:	d81e      	bhi.n	800065e <__aeabi_dmul+0xde>
 8000620:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000624:	bf08      	it	eq
 8000626:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800062a:	f150 0000 	adcs.w	r0, r0, #0
 800062e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000638:	ea46 0101 	orr.w	r1, r6, r1
 800063c:	ea40 0002 	orr.w	r0, r0, r2
 8000640:	ea81 0103 	eor.w	r1, r1, r3
 8000644:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000648:	bfc2      	ittt	gt
 800064a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800064e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000652:	bd70      	popgt	{r4, r5, r6, pc}
 8000654:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000658:	f04f 0e00 	mov.w	lr, #0
 800065c:	3c01      	subs	r4, #1
 800065e:	f300 80ab 	bgt.w	80007b8 <__aeabi_dmul+0x238>
 8000662:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000666:	bfde      	ittt	le
 8000668:	2000      	movle	r0, #0
 800066a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800066e:	bd70      	pople	{r4, r5, r6, pc}
 8000670:	f1c4 0400 	rsb	r4, r4, #0
 8000674:	3c20      	subs	r4, #32
 8000676:	da35      	bge.n	80006e4 <__aeabi_dmul+0x164>
 8000678:	340c      	adds	r4, #12
 800067a:	dc1b      	bgt.n	80006b4 <__aeabi_dmul+0x134>
 800067c:	f104 0414 	add.w	r4, r4, #20
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f305 	lsl.w	r3, r0, r5
 8000688:	fa20 f004 	lsr.w	r0, r0, r4
 800068c:	fa01 f205 	lsl.w	r2, r1, r5
 8000690:	ea40 0002 	orr.w	r0, r0, r2
 8000694:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000698:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800069c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a0:	fa21 f604 	lsr.w	r6, r1, r4
 80006a4:	eb42 0106 	adc.w	r1, r2, r6
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 040c 	rsb	r4, r4, #12
 80006b8:	f1c4 0520 	rsb	r5, r4, #32
 80006bc:	fa00 f304 	lsl.w	r3, r0, r4
 80006c0:	fa20 f005 	lsr.w	r0, r0, r5
 80006c4:	fa01 f204 	lsl.w	r2, r1, r4
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d4:	f141 0100 	adc.w	r1, r1, #0
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f1c4 0520 	rsb	r5, r4, #32
 80006e8:	fa00 f205 	lsl.w	r2, r0, r5
 80006ec:	ea4e 0e02 	orr.w	lr, lr, r2
 80006f0:	fa20 f304 	lsr.w	r3, r0, r4
 80006f4:	fa01 f205 	lsl.w	r2, r1, r5
 80006f8:	ea43 0302 	orr.w	r3, r3, r2
 80006fc:	fa21 f004 	lsr.w	r0, r1, r4
 8000700:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000704:	fa21 f204 	lsr.w	r2, r1, r4
 8000708:	ea20 0002 	bic.w	r0, r0, r2
 800070c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000710:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000714:	bf08      	it	eq
 8000716:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	f094 0f00 	teq	r4, #0
 8000720:	d10f      	bne.n	8000742 <__aeabi_dmul+0x1c2>
 8000722:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000726:	0040      	lsls	r0, r0, #1
 8000728:	eb41 0101 	adc.w	r1, r1, r1
 800072c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000730:	bf08      	it	eq
 8000732:	3c01      	subeq	r4, #1
 8000734:	d0f7      	beq.n	8000726 <__aeabi_dmul+0x1a6>
 8000736:	ea41 0106 	orr.w	r1, r1, r6
 800073a:	f095 0f00 	teq	r5, #0
 800073e:	bf18      	it	ne
 8000740:	4770      	bxne	lr
 8000742:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000746:	0052      	lsls	r2, r2, #1
 8000748:	eb43 0303 	adc.w	r3, r3, r3
 800074c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000750:	bf08      	it	eq
 8000752:	3d01      	subeq	r5, #1
 8000754:	d0f7      	beq.n	8000746 <__aeabi_dmul+0x1c6>
 8000756:	ea43 0306 	orr.w	r3, r3, r6
 800075a:	4770      	bx	lr
 800075c:	ea94 0f0c 	teq	r4, ip
 8000760:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000764:	bf18      	it	ne
 8000766:	ea95 0f0c 	teqne	r5, ip
 800076a:	d00c      	beq.n	8000786 <__aeabi_dmul+0x206>
 800076c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000770:	bf18      	it	ne
 8000772:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000776:	d1d1      	bne.n	800071c <__aeabi_dmul+0x19c>
 8000778:	ea81 0103 	eor.w	r1, r1, r3
 800077c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000780:	f04f 0000 	mov.w	r0, #0
 8000784:	bd70      	pop	{r4, r5, r6, pc}
 8000786:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800078a:	bf06      	itte	eq
 800078c:	4610      	moveq	r0, r2
 800078e:	4619      	moveq	r1, r3
 8000790:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000794:	d019      	beq.n	80007ca <__aeabi_dmul+0x24a>
 8000796:	ea94 0f0c 	teq	r4, ip
 800079a:	d102      	bne.n	80007a2 <__aeabi_dmul+0x222>
 800079c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007a0:	d113      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007a2:	ea95 0f0c 	teq	r5, ip
 80007a6:	d105      	bne.n	80007b4 <__aeabi_dmul+0x234>
 80007a8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007ac:	bf1c      	itt	ne
 80007ae:	4610      	movne	r0, r2
 80007b0:	4619      	movne	r1, r3
 80007b2:	d10a      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007b4:	ea81 0103 	eor.w	r1, r1, r3
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007c0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007c4:	f04f 0000 	mov.w	r0, #0
 80007c8:	bd70      	pop	{r4, r5, r6, pc}
 80007ca:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007ce:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007d2:	bd70      	pop	{r4, r5, r6, pc}

080007d4 <__aeabi_ddiv>:
 80007d4:	b570      	push	{r4, r5, r6, lr}
 80007d6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007da:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007de:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007e2:	bf1d      	ittte	ne
 80007e4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007e8:	ea94 0f0c 	teqne	r4, ip
 80007ec:	ea95 0f0c 	teqne	r5, ip
 80007f0:	f000 f8a7 	bleq	8000942 <__aeabi_ddiv+0x16e>
 80007f4:	eba4 0405 	sub.w	r4, r4, r5
 80007f8:	ea81 0e03 	eor.w	lr, r1, r3
 80007fc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000800:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000804:	f000 8088 	beq.w	8000918 <__aeabi_ddiv+0x144>
 8000808:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800080c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000810:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000814:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000818:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800081c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000820:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000824:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000828:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800082c:	429d      	cmp	r5, r3
 800082e:	bf08      	it	eq
 8000830:	4296      	cmpeq	r6, r2
 8000832:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000836:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800083a:	d202      	bcs.n	8000842 <__aeabi_ddiv+0x6e>
 800083c:	085b      	lsrs	r3, r3, #1
 800083e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000842:	1ab6      	subs	r6, r6, r2
 8000844:	eb65 0503 	sbc.w	r5, r5, r3
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000852:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 000c 	orrcs.w	r0, r0, ip
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000880:	085b      	lsrs	r3, r3, #1
 8000882:	ea4f 0232 	mov.w	r2, r2, rrx
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008b0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008b4:	d018      	beq.n	80008e8 <__aeabi_ddiv+0x114>
 80008b6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ba:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008be:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008c2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008c6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008ca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ce:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008d2:	d1c0      	bne.n	8000856 <__aeabi_ddiv+0x82>
 80008d4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008d8:	d10b      	bne.n	80008f2 <__aeabi_ddiv+0x11e>
 80008da:	ea41 0100 	orr.w	r1, r1, r0
 80008de:	f04f 0000 	mov.w	r0, #0
 80008e2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008e6:	e7b6      	b.n	8000856 <__aeabi_ddiv+0x82>
 80008e8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008ec:	bf04      	itt	eq
 80008ee:	4301      	orreq	r1, r0
 80008f0:	2000      	moveq	r0, #0
 80008f2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008f6:	bf88      	it	hi
 80008f8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008fc:	f63f aeaf 	bhi.w	800065e <__aeabi_dmul+0xde>
 8000900:	ebb5 0c03 	subs.w	ip, r5, r3
 8000904:	bf04      	itt	eq
 8000906:	ebb6 0c02 	subseq.w	ip, r6, r2
 800090a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800090e:	f150 0000 	adcs.w	r0, r0, #0
 8000912:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000916:	bd70      	pop	{r4, r5, r6, pc}
 8000918:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800091c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000920:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000924:	bfc2      	ittt	gt
 8000926:	ebd4 050c 	rsbsgt	r5, r4, ip
 800092a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800092e:	bd70      	popgt	{r4, r5, r6, pc}
 8000930:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000934:	f04f 0e00 	mov.w	lr, #0
 8000938:	3c01      	subs	r4, #1
 800093a:	e690      	b.n	800065e <__aeabi_dmul+0xde>
 800093c:	ea45 0e06 	orr.w	lr, r5, r6
 8000940:	e68d      	b.n	800065e <__aeabi_dmul+0xde>
 8000942:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000946:	ea94 0f0c 	teq	r4, ip
 800094a:	bf08      	it	eq
 800094c:	ea95 0f0c 	teqeq	r5, ip
 8000950:	f43f af3b 	beq.w	80007ca <__aeabi_dmul+0x24a>
 8000954:	ea94 0f0c 	teq	r4, ip
 8000958:	d10a      	bne.n	8000970 <__aeabi_ddiv+0x19c>
 800095a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800095e:	f47f af34 	bne.w	80007ca <__aeabi_dmul+0x24a>
 8000962:	ea95 0f0c 	teq	r5, ip
 8000966:	f47f af25 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800096a:	4610      	mov	r0, r2
 800096c:	4619      	mov	r1, r3
 800096e:	e72c      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000970:	ea95 0f0c 	teq	r5, ip
 8000974:	d106      	bne.n	8000984 <__aeabi_ddiv+0x1b0>
 8000976:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800097a:	f43f aefd 	beq.w	8000778 <__aeabi_dmul+0x1f8>
 800097e:	4610      	mov	r0, r2
 8000980:	4619      	mov	r1, r3
 8000982:	e722      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000984:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000988:	bf18      	it	ne
 800098a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800098e:	f47f aec5 	bne.w	800071c <__aeabi_dmul+0x19c>
 8000992:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000996:	f47f af0d 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800099a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800099e:	f47f aeeb 	bne.w	8000778 <__aeabi_dmul+0x1f8>
 80009a2:	e712      	b.n	80007ca <__aeabi_dmul+0x24a>

080009a4 <__gedf2>:
 80009a4:	f04f 3cff 	mov.w	ip, #4294967295
 80009a8:	e006      	b.n	80009b8 <__cmpdf2+0x4>
 80009aa:	bf00      	nop

080009ac <__ledf2>:
 80009ac:	f04f 0c01 	mov.w	ip, #1
 80009b0:	e002      	b.n	80009b8 <__cmpdf2+0x4>
 80009b2:	bf00      	nop

080009b4 <__cmpdf2>:
 80009b4:	f04f 0c01 	mov.w	ip, #1
 80009b8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009c4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009c8:	bf18      	it	ne
 80009ca:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009ce:	d01b      	beq.n	8000a08 <__cmpdf2+0x54>
 80009d0:	b001      	add	sp, #4
 80009d2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009d6:	bf0c      	ite	eq
 80009d8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009dc:	ea91 0f03 	teqne	r1, r3
 80009e0:	bf02      	ittt	eq
 80009e2:	ea90 0f02 	teqeq	r0, r2
 80009e6:	2000      	moveq	r0, #0
 80009e8:	4770      	bxeq	lr
 80009ea:	f110 0f00 	cmn.w	r0, #0
 80009ee:	ea91 0f03 	teq	r1, r3
 80009f2:	bf58      	it	pl
 80009f4:	4299      	cmppl	r1, r3
 80009f6:	bf08      	it	eq
 80009f8:	4290      	cmpeq	r0, r2
 80009fa:	bf2c      	ite	cs
 80009fc:	17d8      	asrcs	r0, r3, #31
 80009fe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a02:	f040 0001 	orr.w	r0, r0, #1
 8000a06:	4770      	bx	lr
 8000a08:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a0c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a10:	d102      	bne.n	8000a18 <__cmpdf2+0x64>
 8000a12:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a16:	d107      	bne.n	8000a28 <__cmpdf2+0x74>
 8000a18:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a20:	d1d6      	bne.n	80009d0 <__cmpdf2+0x1c>
 8000a22:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a26:	d0d3      	beq.n	80009d0 <__cmpdf2+0x1c>
 8000a28:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a2c:	4770      	bx	lr
 8000a2e:	bf00      	nop

08000a30 <__aeabi_cdrcmple>:
 8000a30:	4684      	mov	ip, r0
 8000a32:	4610      	mov	r0, r2
 8000a34:	4662      	mov	r2, ip
 8000a36:	468c      	mov	ip, r1
 8000a38:	4619      	mov	r1, r3
 8000a3a:	4663      	mov	r3, ip
 8000a3c:	e000      	b.n	8000a40 <__aeabi_cdcmpeq>
 8000a3e:	bf00      	nop

08000a40 <__aeabi_cdcmpeq>:
 8000a40:	b501      	push	{r0, lr}
 8000a42:	f7ff ffb7 	bl	80009b4 <__cmpdf2>
 8000a46:	2800      	cmp	r0, #0
 8000a48:	bf48      	it	mi
 8000a4a:	f110 0f00 	cmnmi.w	r0, #0
 8000a4e:	bd01      	pop	{r0, pc}

08000a50 <__aeabi_dcmpeq>:
 8000a50:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a54:	f7ff fff4 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a58:	bf0c      	ite	eq
 8000a5a:	2001      	moveq	r0, #1
 8000a5c:	2000      	movne	r0, #0
 8000a5e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a62:	bf00      	nop

08000a64 <__aeabi_dcmplt>:
 8000a64:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a68:	f7ff ffea 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a6c:	bf34      	ite	cc
 8000a6e:	2001      	movcc	r0, #1
 8000a70:	2000      	movcs	r0, #0
 8000a72:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a76:	bf00      	nop

08000a78 <__aeabi_dcmple>:
 8000a78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a7c:	f7ff ffe0 	bl	8000a40 <__aeabi_cdcmpeq>
 8000a80:	bf94      	ite	ls
 8000a82:	2001      	movls	r0, #1
 8000a84:	2000      	movhi	r0, #0
 8000a86:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8a:	bf00      	nop

08000a8c <__aeabi_dcmpge>:
 8000a8c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a90:	f7ff ffce 	bl	8000a30 <__aeabi_cdrcmple>
 8000a94:	bf94      	ite	ls
 8000a96:	2001      	movls	r0, #1
 8000a98:	2000      	movhi	r0, #0
 8000a9a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_dcmpgt>:
 8000aa0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa4:	f7ff ffc4 	bl	8000a30 <__aeabi_cdrcmple>
 8000aa8:	bf34      	ite	cc
 8000aaa:	2001      	movcc	r0, #1
 8000aac:	2000      	movcs	r0, #0
 8000aae:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_dcmpun>:
 8000ab4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000abc:	d102      	bne.n	8000ac4 <__aeabi_dcmpun+0x10>
 8000abe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ac2:	d10a      	bne.n	8000ada <__aeabi_dcmpun+0x26>
 8000ac4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000acc:	d102      	bne.n	8000ad4 <__aeabi_dcmpun+0x20>
 8000ace:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ad2:	d102      	bne.n	8000ada <__aeabi_dcmpun+0x26>
 8000ad4:	f04f 0000 	mov.w	r0, #0
 8000ad8:	4770      	bx	lr
 8000ada:	f04f 0001 	mov.w	r0, #1
 8000ade:	4770      	bx	lr

08000ae0 <__aeabi_d2uiz>:
 8000ae0:	004a      	lsls	r2, r1, #1
 8000ae2:	d211      	bcs.n	8000b08 <__aeabi_d2uiz+0x28>
 8000ae4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ae8:	d211      	bcs.n	8000b0e <__aeabi_d2uiz+0x2e>
 8000aea:	d50d      	bpl.n	8000b08 <__aeabi_d2uiz+0x28>
 8000aec:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000af0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000af4:	d40e      	bmi.n	8000b14 <__aeabi_d2uiz+0x34>
 8000af6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000afa:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000afe:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b02:	fa23 f002 	lsr.w	r0, r3, r2
 8000b06:	4770      	bx	lr
 8000b08:	f04f 0000 	mov.w	r0, #0
 8000b0c:	4770      	bx	lr
 8000b0e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b12:	d102      	bne.n	8000b1a <__aeabi_d2uiz+0x3a>
 8000b14:	f04f 30ff 	mov.w	r0, #4294967295
 8000b18:	4770      	bx	lr
 8000b1a:	f04f 0000 	mov.w	r0, #0
 8000b1e:	4770      	bx	lr

08000b20 <__aeabi_d2f>:
 8000b20:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b24:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b28:	bf24      	itt	cs
 8000b2a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b2e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b32:	d90d      	bls.n	8000b50 <__aeabi_d2f+0x30>
 8000b34:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b38:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b3c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b40:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b44:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b48:	bf08      	it	eq
 8000b4a:	f020 0001 	biceq.w	r0, r0, #1
 8000b4e:	4770      	bx	lr
 8000b50:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b54:	d121      	bne.n	8000b9a <__aeabi_d2f+0x7a>
 8000b56:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b5a:	bfbc      	itt	lt
 8000b5c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b60:	4770      	bxlt	lr
 8000b62:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b66:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b6a:	f1c2 0218 	rsb	r2, r2, #24
 8000b6e:	f1c2 0c20 	rsb	ip, r2, #32
 8000b72:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b76:	fa20 f002 	lsr.w	r0, r0, r2
 8000b7a:	bf18      	it	ne
 8000b7c:	f040 0001 	orrne.w	r0, r0, #1
 8000b80:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b84:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b88:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b8c:	ea40 000c 	orr.w	r0, r0, ip
 8000b90:	fa23 f302 	lsr.w	r3, r3, r2
 8000b94:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b98:	e7cc      	b.n	8000b34 <__aeabi_d2f+0x14>
 8000b9a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b9e:	d107      	bne.n	8000bb0 <__aeabi_d2f+0x90>
 8000ba0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000ba4:	bf1e      	ittt	ne
 8000ba6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000baa:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000bae:	4770      	bxne	lr
 8000bb0:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000bb4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000bb8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bbc:	4770      	bx	lr
 8000bbe:	bf00      	nop

08000bc0 <__aeabi_uldivmod>:
 8000bc0:	b953      	cbnz	r3, 8000bd8 <__aeabi_uldivmod+0x18>
 8000bc2:	b94a      	cbnz	r2, 8000bd8 <__aeabi_uldivmod+0x18>
 8000bc4:	2900      	cmp	r1, #0
 8000bc6:	bf08      	it	eq
 8000bc8:	2800      	cmpeq	r0, #0
 8000bca:	bf1c      	itt	ne
 8000bcc:	f04f 31ff 	movne.w	r1, #4294967295
 8000bd0:	f04f 30ff 	movne.w	r0, #4294967295
 8000bd4:	f000 b96e 	b.w	8000eb4 <__aeabi_idiv0>
 8000bd8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bdc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000be0:	f000 f806 	bl	8000bf0 <__udivmoddi4>
 8000be4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000be8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bec:	b004      	add	sp, #16
 8000bee:	4770      	bx	lr

08000bf0 <__udivmoddi4>:
 8000bf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bf4:	9d08      	ldr	r5, [sp, #32]
 8000bf6:	4604      	mov	r4, r0
 8000bf8:	468c      	mov	ip, r1
 8000bfa:	2b00      	cmp	r3, #0
 8000bfc:	f040 8083 	bne.w	8000d06 <__udivmoddi4+0x116>
 8000c00:	428a      	cmp	r2, r1
 8000c02:	4617      	mov	r7, r2
 8000c04:	d947      	bls.n	8000c96 <__udivmoddi4+0xa6>
 8000c06:	fab2 f282 	clz	r2, r2
 8000c0a:	b142      	cbz	r2, 8000c1e <__udivmoddi4+0x2e>
 8000c0c:	f1c2 0020 	rsb	r0, r2, #32
 8000c10:	fa24 f000 	lsr.w	r0, r4, r0
 8000c14:	4091      	lsls	r1, r2
 8000c16:	4097      	lsls	r7, r2
 8000c18:	ea40 0c01 	orr.w	ip, r0, r1
 8000c1c:	4094      	lsls	r4, r2
 8000c1e:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000c22:	0c23      	lsrs	r3, r4, #16
 8000c24:	fbbc f6f8 	udiv	r6, ip, r8
 8000c28:	fa1f fe87 	uxth.w	lr, r7
 8000c2c:	fb08 c116 	mls	r1, r8, r6, ip
 8000c30:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c34:	fb06 f10e 	mul.w	r1, r6, lr
 8000c38:	4299      	cmp	r1, r3
 8000c3a:	d909      	bls.n	8000c50 <__udivmoddi4+0x60>
 8000c3c:	18fb      	adds	r3, r7, r3
 8000c3e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000c42:	f080 8119 	bcs.w	8000e78 <__udivmoddi4+0x288>
 8000c46:	4299      	cmp	r1, r3
 8000c48:	f240 8116 	bls.w	8000e78 <__udivmoddi4+0x288>
 8000c4c:	3e02      	subs	r6, #2
 8000c4e:	443b      	add	r3, r7
 8000c50:	1a5b      	subs	r3, r3, r1
 8000c52:	b2a4      	uxth	r4, r4
 8000c54:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c58:	fb08 3310 	mls	r3, r8, r0, r3
 8000c5c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c60:	fb00 fe0e 	mul.w	lr, r0, lr
 8000c64:	45a6      	cmp	lr, r4
 8000c66:	d909      	bls.n	8000c7c <__udivmoddi4+0x8c>
 8000c68:	193c      	adds	r4, r7, r4
 8000c6a:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c6e:	f080 8105 	bcs.w	8000e7c <__udivmoddi4+0x28c>
 8000c72:	45a6      	cmp	lr, r4
 8000c74:	f240 8102 	bls.w	8000e7c <__udivmoddi4+0x28c>
 8000c78:	3802      	subs	r0, #2
 8000c7a:	443c      	add	r4, r7
 8000c7c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c80:	eba4 040e 	sub.w	r4, r4, lr
 8000c84:	2600      	movs	r6, #0
 8000c86:	b11d      	cbz	r5, 8000c90 <__udivmoddi4+0xa0>
 8000c88:	40d4      	lsrs	r4, r2
 8000c8a:	2300      	movs	r3, #0
 8000c8c:	e9c5 4300 	strd	r4, r3, [r5]
 8000c90:	4631      	mov	r1, r6
 8000c92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c96:	b902      	cbnz	r2, 8000c9a <__udivmoddi4+0xaa>
 8000c98:	deff      	udf	#255	; 0xff
 8000c9a:	fab2 f282 	clz	r2, r2
 8000c9e:	2a00      	cmp	r2, #0
 8000ca0:	d150      	bne.n	8000d44 <__udivmoddi4+0x154>
 8000ca2:	1bcb      	subs	r3, r1, r7
 8000ca4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000ca8:	fa1f f887 	uxth.w	r8, r7
 8000cac:	2601      	movs	r6, #1
 8000cae:	fbb3 fcfe 	udiv	ip, r3, lr
 8000cb2:	0c21      	lsrs	r1, r4, #16
 8000cb4:	fb0e 331c 	mls	r3, lr, ip, r3
 8000cb8:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000cbc:	fb08 f30c 	mul.w	r3, r8, ip
 8000cc0:	428b      	cmp	r3, r1
 8000cc2:	d907      	bls.n	8000cd4 <__udivmoddi4+0xe4>
 8000cc4:	1879      	adds	r1, r7, r1
 8000cc6:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000cca:	d202      	bcs.n	8000cd2 <__udivmoddi4+0xe2>
 8000ccc:	428b      	cmp	r3, r1
 8000cce:	f200 80e9 	bhi.w	8000ea4 <__udivmoddi4+0x2b4>
 8000cd2:	4684      	mov	ip, r0
 8000cd4:	1ac9      	subs	r1, r1, r3
 8000cd6:	b2a3      	uxth	r3, r4
 8000cd8:	fbb1 f0fe 	udiv	r0, r1, lr
 8000cdc:	fb0e 1110 	mls	r1, lr, r0, r1
 8000ce0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000ce4:	fb08 f800 	mul.w	r8, r8, r0
 8000ce8:	45a0      	cmp	r8, r4
 8000cea:	d907      	bls.n	8000cfc <__udivmoddi4+0x10c>
 8000cec:	193c      	adds	r4, r7, r4
 8000cee:	f100 33ff 	add.w	r3, r0, #4294967295
 8000cf2:	d202      	bcs.n	8000cfa <__udivmoddi4+0x10a>
 8000cf4:	45a0      	cmp	r8, r4
 8000cf6:	f200 80d9 	bhi.w	8000eac <__udivmoddi4+0x2bc>
 8000cfa:	4618      	mov	r0, r3
 8000cfc:	eba4 0408 	sub.w	r4, r4, r8
 8000d00:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000d04:	e7bf      	b.n	8000c86 <__udivmoddi4+0x96>
 8000d06:	428b      	cmp	r3, r1
 8000d08:	d909      	bls.n	8000d1e <__udivmoddi4+0x12e>
 8000d0a:	2d00      	cmp	r5, #0
 8000d0c:	f000 80b1 	beq.w	8000e72 <__udivmoddi4+0x282>
 8000d10:	2600      	movs	r6, #0
 8000d12:	e9c5 0100 	strd	r0, r1, [r5]
 8000d16:	4630      	mov	r0, r6
 8000d18:	4631      	mov	r1, r6
 8000d1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d1e:	fab3 f683 	clz	r6, r3
 8000d22:	2e00      	cmp	r6, #0
 8000d24:	d14a      	bne.n	8000dbc <__udivmoddi4+0x1cc>
 8000d26:	428b      	cmp	r3, r1
 8000d28:	d302      	bcc.n	8000d30 <__udivmoddi4+0x140>
 8000d2a:	4282      	cmp	r2, r0
 8000d2c:	f200 80b8 	bhi.w	8000ea0 <__udivmoddi4+0x2b0>
 8000d30:	1a84      	subs	r4, r0, r2
 8000d32:	eb61 0103 	sbc.w	r1, r1, r3
 8000d36:	2001      	movs	r0, #1
 8000d38:	468c      	mov	ip, r1
 8000d3a:	2d00      	cmp	r5, #0
 8000d3c:	d0a8      	beq.n	8000c90 <__udivmoddi4+0xa0>
 8000d3e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000d42:	e7a5      	b.n	8000c90 <__udivmoddi4+0xa0>
 8000d44:	f1c2 0320 	rsb	r3, r2, #32
 8000d48:	fa20 f603 	lsr.w	r6, r0, r3
 8000d4c:	4097      	lsls	r7, r2
 8000d4e:	fa01 f002 	lsl.w	r0, r1, r2
 8000d52:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d56:	40d9      	lsrs	r1, r3
 8000d58:	4330      	orrs	r0, r6
 8000d5a:	0c03      	lsrs	r3, r0, #16
 8000d5c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000d60:	fa1f f887 	uxth.w	r8, r7
 8000d64:	fb0e 1116 	mls	r1, lr, r6, r1
 8000d68:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d6c:	fb06 f108 	mul.w	r1, r6, r8
 8000d70:	4299      	cmp	r1, r3
 8000d72:	fa04 f402 	lsl.w	r4, r4, r2
 8000d76:	d909      	bls.n	8000d8c <__udivmoddi4+0x19c>
 8000d78:	18fb      	adds	r3, r7, r3
 8000d7a:	f106 3cff 	add.w	ip, r6, #4294967295
 8000d7e:	f080 808d 	bcs.w	8000e9c <__udivmoddi4+0x2ac>
 8000d82:	4299      	cmp	r1, r3
 8000d84:	f240 808a 	bls.w	8000e9c <__udivmoddi4+0x2ac>
 8000d88:	3e02      	subs	r6, #2
 8000d8a:	443b      	add	r3, r7
 8000d8c:	1a5b      	subs	r3, r3, r1
 8000d8e:	b281      	uxth	r1, r0
 8000d90:	fbb3 f0fe 	udiv	r0, r3, lr
 8000d94:	fb0e 3310 	mls	r3, lr, r0, r3
 8000d98:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d9c:	fb00 f308 	mul.w	r3, r0, r8
 8000da0:	428b      	cmp	r3, r1
 8000da2:	d907      	bls.n	8000db4 <__udivmoddi4+0x1c4>
 8000da4:	1879      	adds	r1, r7, r1
 8000da6:	f100 3cff 	add.w	ip, r0, #4294967295
 8000daa:	d273      	bcs.n	8000e94 <__udivmoddi4+0x2a4>
 8000dac:	428b      	cmp	r3, r1
 8000dae:	d971      	bls.n	8000e94 <__udivmoddi4+0x2a4>
 8000db0:	3802      	subs	r0, #2
 8000db2:	4439      	add	r1, r7
 8000db4:	1acb      	subs	r3, r1, r3
 8000db6:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000dba:	e778      	b.n	8000cae <__udivmoddi4+0xbe>
 8000dbc:	f1c6 0c20 	rsb	ip, r6, #32
 8000dc0:	fa03 f406 	lsl.w	r4, r3, r6
 8000dc4:	fa22 f30c 	lsr.w	r3, r2, ip
 8000dc8:	431c      	orrs	r4, r3
 8000dca:	fa20 f70c 	lsr.w	r7, r0, ip
 8000dce:	fa01 f306 	lsl.w	r3, r1, r6
 8000dd2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000dd6:	fa21 f10c 	lsr.w	r1, r1, ip
 8000dda:	431f      	orrs	r7, r3
 8000ddc:	0c3b      	lsrs	r3, r7, #16
 8000dde:	fbb1 f9fe 	udiv	r9, r1, lr
 8000de2:	fa1f f884 	uxth.w	r8, r4
 8000de6:	fb0e 1119 	mls	r1, lr, r9, r1
 8000dea:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000dee:	fb09 fa08 	mul.w	sl, r9, r8
 8000df2:	458a      	cmp	sl, r1
 8000df4:	fa02 f206 	lsl.w	r2, r2, r6
 8000df8:	fa00 f306 	lsl.w	r3, r0, r6
 8000dfc:	d908      	bls.n	8000e10 <__udivmoddi4+0x220>
 8000dfe:	1861      	adds	r1, r4, r1
 8000e00:	f109 30ff 	add.w	r0, r9, #4294967295
 8000e04:	d248      	bcs.n	8000e98 <__udivmoddi4+0x2a8>
 8000e06:	458a      	cmp	sl, r1
 8000e08:	d946      	bls.n	8000e98 <__udivmoddi4+0x2a8>
 8000e0a:	f1a9 0902 	sub.w	r9, r9, #2
 8000e0e:	4421      	add	r1, r4
 8000e10:	eba1 010a 	sub.w	r1, r1, sl
 8000e14:	b2bf      	uxth	r7, r7
 8000e16:	fbb1 f0fe 	udiv	r0, r1, lr
 8000e1a:	fb0e 1110 	mls	r1, lr, r0, r1
 8000e1e:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000e22:	fb00 f808 	mul.w	r8, r0, r8
 8000e26:	45b8      	cmp	r8, r7
 8000e28:	d907      	bls.n	8000e3a <__udivmoddi4+0x24a>
 8000e2a:	19e7      	adds	r7, r4, r7
 8000e2c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e30:	d22e      	bcs.n	8000e90 <__udivmoddi4+0x2a0>
 8000e32:	45b8      	cmp	r8, r7
 8000e34:	d92c      	bls.n	8000e90 <__udivmoddi4+0x2a0>
 8000e36:	3802      	subs	r0, #2
 8000e38:	4427      	add	r7, r4
 8000e3a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e3e:	eba7 0708 	sub.w	r7, r7, r8
 8000e42:	fba0 8902 	umull	r8, r9, r0, r2
 8000e46:	454f      	cmp	r7, r9
 8000e48:	46c6      	mov	lr, r8
 8000e4a:	4649      	mov	r1, r9
 8000e4c:	d31a      	bcc.n	8000e84 <__udivmoddi4+0x294>
 8000e4e:	d017      	beq.n	8000e80 <__udivmoddi4+0x290>
 8000e50:	b15d      	cbz	r5, 8000e6a <__udivmoddi4+0x27a>
 8000e52:	ebb3 020e 	subs.w	r2, r3, lr
 8000e56:	eb67 0701 	sbc.w	r7, r7, r1
 8000e5a:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000e5e:	40f2      	lsrs	r2, r6
 8000e60:	ea4c 0202 	orr.w	r2, ip, r2
 8000e64:	40f7      	lsrs	r7, r6
 8000e66:	e9c5 2700 	strd	r2, r7, [r5]
 8000e6a:	2600      	movs	r6, #0
 8000e6c:	4631      	mov	r1, r6
 8000e6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e72:	462e      	mov	r6, r5
 8000e74:	4628      	mov	r0, r5
 8000e76:	e70b      	b.n	8000c90 <__udivmoddi4+0xa0>
 8000e78:	4606      	mov	r6, r0
 8000e7a:	e6e9      	b.n	8000c50 <__udivmoddi4+0x60>
 8000e7c:	4618      	mov	r0, r3
 8000e7e:	e6fd      	b.n	8000c7c <__udivmoddi4+0x8c>
 8000e80:	4543      	cmp	r3, r8
 8000e82:	d2e5      	bcs.n	8000e50 <__udivmoddi4+0x260>
 8000e84:	ebb8 0e02 	subs.w	lr, r8, r2
 8000e88:	eb69 0104 	sbc.w	r1, r9, r4
 8000e8c:	3801      	subs	r0, #1
 8000e8e:	e7df      	b.n	8000e50 <__udivmoddi4+0x260>
 8000e90:	4608      	mov	r0, r1
 8000e92:	e7d2      	b.n	8000e3a <__udivmoddi4+0x24a>
 8000e94:	4660      	mov	r0, ip
 8000e96:	e78d      	b.n	8000db4 <__udivmoddi4+0x1c4>
 8000e98:	4681      	mov	r9, r0
 8000e9a:	e7b9      	b.n	8000e10 <__udivmoddi4+0x220>
 8000e9c:	4666      	mov	r6, ip
 8000e9e:	e775      	b.n	8000d8c <__udivmoddi4+0x19c>
 8000ea0:	4630      	mov	r0, r6
 8000ea2:	e74a      	b.n	8000d3a <__udivmoddi4+0x14a>
 8000ea4:	f1ac 0c02 	sub.w	ip, ip, #2
 8000ea8:	4439      	add	r1, r7
 8000eaa:	e713      	b.n	8000cd4 <__udivmoddi4+0xe4>
 8000eac:	3802      	subs	r0, #2
 8000eae:	443c      	add	r4, r7
 8000eb0:	e724      	b.n	8000cfc <__udivmoddi4+0x10c>
 8000eb2:	bf00      	nop

08000eb4 <__aeabi_idiv0>:
 8000eb4:	4770      	bx	lr
 8000eb6:	bf00      	nop

08000eb8 <init_autosequence_timings>:
Autosequence_Info autosequence;

/**
 * This function must be called AFTER variables are read from flash
 */
void init_autosequence_timings() {
 8000eb8:	b480      	push	{r7}
 8000eba:	af00      	add	r7, sp, #0
	// Valve timings read from flash
	// PID start delay read from flash
	// Film cooling start time read from flash
	// hotfire duration read from flash

	autosequence.startup_motor_start_delay_ms = 500;
 8000ebc:	4b0a      	ldr	r3, [pc, #40]	; (8000ee8 <init_autosequence_timings+0x30>)
 8000ebe:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8000ec2:	601a      	str	r2, [r3, #0]

	autosequence.post_vent_on_time_ms = 1000;
 8000ec4:	4b08      	ldr	r3, [pc, #32]	; (8000ee8 <init_autosequence_timings+0x30>)
 8000ec6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000eca:	619a      	str	r2, [r3, #24]
	autosequence.post_vent_off_time_ms = 6000;
 8000ecc:	4b06      	ldr	r3, [pc, #24]	; (8000ee8 <init_autosequence_timings+0x30>)
 8000ece:	f241 7270 	movw	r2, #6000	; 0x1770
 8000ed2:	61da      	str	r2, [r3, #28]
	autosequence.post_purge_off_time_ms = 10000;
 8000ed4:	4b04      	ldr	r3, [pc, #16]	; (8000ee8 <init_autosequence_timings+0x30>)
 8000ed6:	f242 7210 	movw	r2, #10000	; 0x2710
 8000eda:	621a      	str	r2, [r3, #32]
}
 8000edc:	bf00      	nop
 8000ede:	46bd      	mov	sp, r7
 8000ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee4:	4770      	bx	lr
 8000ee6:	bf00      	nop
 8000ee8:	20000604 	.word	0x20000604

08000eec <enter_abort_state>:

/**
 * Call this function every time you want to abort.
 * Handles all actuations.
 */
void enter_abort_state() {
 8000eec:	b580      	push	{r7, lr}
 8000eee:	af00      	add	r7, sp, #0
	// Enter Abort state
	// This line is for in case someone forgets to set Abort elsewhere
	STATE = Abort;
 8000ef0:	4b1f      	ldr	r3, [pc, #124]	; (8000f70 <enter_abort_state+0x84>)
 8000ef2:	2206      	movs	r2, #6
 8000ef4:	701a      	strb	r2, [r3, #0]

	// Close MPVs
	set_valve_channel(FUEL_MPV_PRESS_VALVE_CH, VALVE_OFF);
 8000ef6:	2100      	movs	r1, #0
 8000ef8:	2006      	movs	r0, #6
 8000efa:	f006 f839 	bl	8006f70 <set_valve_channel>
	set_valve_channel(FUEL_MPV_VENT_VALVE_CH, VALVE_OFF);
 8000efe:	2100      	movs	r1, #0
 8000f00:	2005      	movs	r0, #5
 8000f02:	f006 f835 	bl	8006f70 <set_valve_channel>
	set_valve_channel(LOX_MPV_VALVE_CH, VALVE_OFF);
 8000f06:	2100      	movs	r1, #0
 8000f08:	2007      	movs	r0, #7
 8000f0a:	f006 f831 	bl	8006f70 <set_valve_channel>

	// Stop nozzle film cooling
	set_valve_channel(NOZZLE_FILM_COOLING_VALVE_CH, VALVE_OFF);
 8000f0e:	2100      	movs	r1, #0
 8000f10:	2008      	movs	r0, #8
 8000f12:	f006 f82d 	bl	8006f70 <set_valve_channel>

	// Close control valves
	set_valve_channel(LOX_CONTROL_VALVE_CH, VALVE_OFF);
 8000f16:	2100      	movs	r1, #0
 8000f18:	2000      	movs	r0, #0
 8000f1a:	f006 f829 	bl	8006f70 <set_valve_channel>
	set_valve_channel(FUEL_CONTROL_VALVE_CH, VALVE_OFF);
 8000f1e:	2100      	movs	r1, #0
 8000f20:	2001      	movs	r0, #1
 8000f22:	f006 f825 	bl	8006f70 <set_valve_channel>

	// De-energize ignitor
	set_valve_channel(IGNITOR_CH, VALVE_OFF);
 8000f26:	2100      	movs	r1, #0
 8000f28:	2009      	movs	r0, #9
 8000f2a:	f006 f821 	bl	8006f70 <set_valve_channel>

	// Open vent valves
	set_valve_channel(FUEL_TANK_VENT_VALVE_CH, VALVE_ON);
 8000f2e:	2101      	movs	r1, #1
 8000f30:	2003      	movs	r0, #3
 8000f32:	f006 f81d 	bl	8006f70 <set_valve_channel>
	set_valve_channel(LOX_TANK_VENT_VALVE_CH, VALVE_ON);
 8000f36:	2101      	movs	r1, #1
 8000f38:	2002      	movs	r0, #2
 8000f3a:	f006 f819 	bl	8006f70 <set_valve_channel>

	// Open purge valve
	set_valve_channel(PURGE_VALVE_CH, VALVE_ON);
 8000f3e:	2101      	movs	r1, #1
 8000f40:	2004      	movs	r0, #4
 8000f42:	f006 f815 	bl	8006f70 <set_valve_channel>

	// Close motors (needle valves), 0 degrees should be closed.
	L6470_goto_motor_pos(&(tanks[LOX_TANK_NUM].motor), 0);
 8000f46:	ed9f 0a0b 	vldr	s0, [pc, #44]	; 8000f74 <enter_abort_state+0x88>
 8000f4a:	480b      	ldr	r0, [pc, #44]	; (8000f78 <enter_abort_state+0x8c>)
 8000f4c:	f006 fa5d 	bl	800740a <L6470_goto_motor_pos>
	L6470_goto_motor_pos(&(tanks[FUEL_TANK_NUM].motor), 0);
 8000f50:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8000f74 <enter_abort_state+0x88>
 8000f54:	4809      	ldr	r0, [pc, #36]	; (8000f7c <enter_abort_state+0x90>)
 8000f56:	f006 fa58 	bl	800740a <L6470_goto_motor_pos>

	// Stop TPC (not an actuation)
	autosequence.hotfire_lox_tank_enable_PID_control = 0;
 8000f5a:	4b09      	ldr	r3, [pc, #36]	; (8000f80 <enter_abort_state+0x94>)
 8000f5c:	2200      	movs	r2, #0
 8000f5e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
	autosequence.hotfire_fuel_tank_enable_PID_control = 0;
 8000f62:	4b07      	ldr	r3, [pc, #28]	; (8000f80 <enter_abort_state+0x94>)
 8000f64:	2200      	movs	r2, #0
 8000f66:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
}
 8000f6a:	bf00      	nop
 8000f6c:	bd80      	pop	{r7, pc}
 8000f6e:	bf00      	nop
 8000f70:	200003f0 	.word	0x200003f0
 8000f74:	00000000 	.word	0x00000000
 8000f78:	20000500 	.word	0x20000500
 8000f7c:	20000584 	.word	0x20000584
 8000f80:	20000604 	.word	0x20000604

08000f84 <enter_safe_disarm_state>:
 * Call this function to safe the system.
 * Not the same as abort.
 *
 * Can only be called in AutoPress and Startup.
 */
void enter_safe_disarm_state() {
 8000f84:	b580      	push	{r7, lr}
 8000f86:	af00      	add	r7, sp, #0
	// Including this line in case programmer forgets to set it elsewhere
	STATE = Safe;
 8000f88:	4b06      	ldr	r3, [pc, #24]	; (8000fa4 <enter_safe_disarm_state+0x20>)
 8000f8a:	2208      	movs	r2, #8
 8000f8c:	701a      	strb	r2, [r3, #0]

	// Close control valves and go back to Manual.
	// TODO: should tank enable be looked at here?
	set_valve_channel(LOX_CONTROL_VALVE_CH, VALVE_OFF);
 8000f8e:	2100      	movs	r1, #0
 8000f90:	2000      	movs	r0, #0
 8000f92:	f005 ffed 	bl	8006f70 <set_valve_channel>
	set_valve_channel(FUEL_CONTROL_VALVE_CH, VALVE_OFF);
 8000f96:	2100      	movs	r1, #0
 8000f98:	2001      	movs	r0, #1
 8000f9a:	f005 ffe9 	bl	8006f70 <set_valve_channel>

	// TODO: go back to Manual?
}
 8000f9e:	bf00      	nop
 8000fa0:	bd80      	pop	{r7, pc}
 8000fa2:	bf00      	nop
 8000fa4:	200003f0 	.word	0x200003f0

08000fa8 <manual_state_transition>:

void manual_state_transition(uint8_t next_state) {
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	b082      	sub	sp, #8
 8000fac:	af00      	add	r7, sp, #0
 8000fae:	4603      	mov	r3, r0
 8000fb0:	71fb      	strb	r3, [r7, #7]

	// Aborts work in any state
	if (next_state == Abort) {
 8000fb2:	79fb      	ldrb	r3, [r7, #7]
 8000fb4:	2b06      	cmp	r3, #6
 8000fb6:	d108      	bne.n	8000fca <manual_state_transition+0x22>
		STATE = Abort;
 8000fb8:	4b41      	ldr	r3, [pc, #260]	; (80010c0 <manual_state_transition+0x118>)
 8000fba:	2206      	movs	r2, #6
 8000fbc:	701a      	strb	r2, [r3, #0]
		enter_abort_state();
 8000fbe:	f7ff ff95 	bl	8000eec <enter_abort_state>
		set_status_flag(EC_FLAG_ABORT_MANUAL);
 8000fc2:	2001      	movs	r0, #1
 8000fc4:	f004 fbde 	bl	8005784 <set_status_flag>
		return;
 8000fc8:	e077      	b.n	80010ba <manual_state_transition+0x112>
	}

	// Check current state to determine next state transition
	if (STATE == Manual) {
 8000fca:	4b3d      	ldr	r3, [pc, #244]	; (80010c0 <manual_state_transition+0x118>)
 8000fcc:	781b      	ldrb	r3, [r3, #0]
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	d106      	bne.n	8000fe0 <manual_state_transition+0x38>
		if (next_state == Armed) {
 8000fd2:	79fb      	ldrb	r3, [r7, #7]
 8000fd4:	2b01      	cmp	r3, #1
 8000fd6:	d170      	bne.n	80010ba <manual_state_transition+0x112>
			STATE = Armed;
 8000fd8:	4b39      	ldr	r3, [pc, #228]	; (80010c0 <manual_state_transition+0x118>)
 8000fda:	2201      	movs	r2, #1
 8000fdc:	701a      	strb	r2, [r3, #0]
 8000fde:	e06c      	b.n	80010ba <manual_state_transition+0x112>
		}
	}
	else if (STATE == Armed) {
 8000fe0:	4b37      	ldr	r3, [pc, #220]	; (80010c0 <manual_state_transition+0x118>)
 8000fe2:	781b      	ldrb	r3, [r3, #0]
 8000fe4:	2b01      	cmp	r3, #1
 8000fe6:	d10d      	bne.n	8001004 <manual_state_transition+0x5c>
		if (next_state == Manual) {
 8000fe8:	79fb      	ldrb	r3, [r7, #7]
 8000fea:	2b00      	cmp	r3, #0
 8000fec:	d103      	bne.n	8000ff6 <manual_state_transition+0x4e>
			STATE = Manual;
 8000fee:	4b34      	ldr	r3, [pc, #208]	; (80010c0 <manual_state_transition+0x118>)
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	701a      	strb	r2, [r3, #0]
 8000ff4:	e061      	b.n	80010ba <manual_state_transition+0x112>
		}
		else if (next_state == AutoPress) {
 8000ff6:	79fb      	ldrb	r3, [r7, #7]
 8000ff8:	2b02      	cmp	r3, #2
 8000ffa:	d15e      	bne.n	80010ba <manual_state_transition+0x112>
			STATE = AutoPress;
 8000ffc:	4b30      	ldr	r3, [pc, #192]	; (80010c0 <manual_state_transition+0x118>)
 8000ffe:	2202      	movs	r2, #2
 8001000:	701a      	strb	r2, [r3, #0]
 8001002:	e05a      	b.n	80010ba <manual_state_transition+0x112>
		}
	}
	else if (STATE == AutoPress) {
 8001004:	4b2e      	ldr	r3, [pc, #184]	; (80010c0 <manual_state_transition+0x118>)
 8001006:	781b      	ldrb	r3, [r3, #0]
 8001008:	2b02      	cmp	r3, #2
 800100a:	d120      	bne.n	800104e <manual_state_transition+0xa6>
		if (next_state == Manual) {
 800100c:	79fb      	ldrb	r3, [r7, #7]
 800100e:	2b00      	cmp	r3, #0
 8001010:	d105      	bne.n	800101e <manual_state_transition+0x76>
			STATE = Safe;
 8001012:	4b2b      	ldr	r3, [pc, #172]	; (80010c0 <manual_state_transition+0x118>)
 8001014:	2208      	movs	r2, #8
 8001016:	701a      	strb	r2, [r3, #0]
			enter_safe_disarm_state();
 8001018:	f7ff ffb4 	bl	8000f84 <enter_safe_disarm_state>
 800101c:	e04d      	b.n	80010ba <manual_state_transition+0x112>
		}
		// Autopress is given instead of Startup to simplify the GUI code
		else if (next_state == AutoPress) {
 800101e:	79fb      	ldrb	r3, [r7, #7]
 8001020:	2b02      	cmp	r3, #2
 8001022:	d14a      	bne.n	80010ba <manual_state_transition+0x112>
			// Close control valves
			set_valve_channel(LOX_CONTROL_VALVE_CH, VALVE_OFF);
 8001024:	2100      	movs	r1, #0
 8001026:	2000      	movs	r0, #0
 8001028:	f005 ffa2 	bl	8006f70 <set_valve_channel>
			set_valve_channel(FUEL_CONTROL_VALVE_CH, VALVE_OFF);
 800102c:	2100      	movs	r1, #0
 800102e:	2001      	movs	r0, #1
 8001030:	f005 ff9e 	bl	8006f70 <set_valve_channel>

			autosequence.startup_start_time_ms = SYS_MILLIS;
 8001034:	4b23      	ldr	r3, [pc, #140]	; (80010c4 <manual_state_transition+0x11c>)
 8001036:	681b      	ldr	r3, [r3, #0]
 8001038:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800103a:	4a23      	ldr	r2, [pc, #140]	; (80010c8 <manual_state_transition+0x120>)
 800103c:	fba2 2303 	umull	r2, r3, r2, r3
 8001040:	099b      	lsrs	r3, r3, #6
 8001042:	4a22      	ldr	r2, [pc, #136]	; (80010cc <manual_state_transition+0x124>)
 8001044:	6293      	str	r3, [r2, #40]	; 0x28
			STATE = Startup;
 8001046:	4b1e      	ldr	r3, [pc, #120]	; (80010c0 <manual_state_transition+0x118>)
 8001048:	2203      	movs	r2, #3
 800104a:	701a      	strb	r2, [r3, #0]
 800104c:	e035      	b.n	80010ba <manual_state_transition+0x112>
		}
	}
	else if (STATE == Startup) {
 800104e:	4b1c      	ldr	r3, [pc, #112]	; (80010c0 <manual_state_transition+0x118>)
 8001050:	781b      	ldrb	r3, [r3, #0]
 8001052:	2b03      	cmp	r3, #3
 8001054:	d11c      	bne.n	8001090 <manual_state_transition+0xe8>
		if (next_state == Manual) {
 8001056:	79fb      	ldrb	r3, [r7, #7]
 8001058:	2b00      	cmp	r3, #0
 800105a:	d105      	bne.n	8001068 <manual_state_transition+0xc0>
			STATE = Safe;
 800105c:	4b18      	ldr	r3, [pc, #96]	; (80010c0 <manual_state_transition+0x118>)
 800105e:	2208      	movs	r2, #8
 8001060:	701a      	strb	r2, [r3, #0]
			enter_safe_disarm_state();
 8001062:	f7ff ff8f 	bl	8000f84 <enter_safe_disarm_state>
 8001066:	e028      	b.n	80010ba <manual_state_transition+0x112>
		}
		else if (next_state == Ignition) {
 8001068:	79fb      	ldrb	r3, [r7, #7]
 800106a:	2b04      	cmp	r3, #4
 800106c:	d125      	bne.n	80010ba <manual_state_transition+0x112>
			STATE = Ignition;
 800106e:	4b14      	ldr	r3, [pc, #80]	; (80010c0 <manual_state_transition+0x118>)
 8001070:	2204      	movs	r2, #4
 8001072:	701a      	strb	r2, [r3, #0]
			autosequence.ignition_start_time_ms = SYS_MILLIS;
 8001074:	4b13      	ldr	r3, [pc, #76]	; (80010c4 <manual_state_transition+0x11c>)
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800107a:	4a13      	ldr	r2, [pc, #76]	; (80010c8 <manual_state_transition+0x120>)
 800107c:	fba2 2303 	umull	r2, r3, r2, r3
 8001080:	099b      	lsrs	r3, r3, #6
 8001082:	4a12      	ldr	r2, [pc, #72]	; (80010cc <manual_state_transition+0x124>)
 8001084:	62d3      	str	r3, [r2, #44]	; 0x2c
			set_valve_channel(PURGE_VALVE_CH, VALVE_ON);  // Turn purge on
 8001086:	2101      	movs	r1, #1
 8001088:	2004      	movs	r0, #4
 800108a:	f005 ff71 	bl	8006f70 <set_valve_channel>
 800108e:	e014      	b.n	80010ba <manual_state_transition+0x112>
		}
	}
	else if (STATE == IgnitionFail) {
 8001090:	4b0b      	ldr	r3, [pc, #44]	; (80010c0 <manual_state_transition+0x118>)
 8001092:	781b      	ldrb	r3, [r3, #0]
 8001094:	2b09      	cmp	r3, #9
 8001096:	d106      	bne.n	80010a6 <manual_state_transition+0xfe>
		if (next_state == Manual) {
 8001098:	79fb      	ldrb	r3, [r7, #7]
 800109a:	2b00      	cmp	r3, #0
 800109c:	d10d      	bne.n	80010ba <manual_state_transition+0x112>
			STATE = Manual;  // Operator must dismiss IgnitionFail condition
 800109e:	4b08      	ldr	r3, [pc, #32]	; (80010c0 <manual_state_transition+0x118>)
 80010a0:	2200      	movs	r2, #0
 80010a2:	701a      	strb	r2, [r3, #0]
 80010a4:	e009      	b.n	80010ba <manual_state_transition+0x112>
		}
	}
	else if (STATE == Abort) {
 80010a6:	4b06      	ldr	r3, [pc, #24]	; (80010c0 <manual_state_transition+0x118>)
 80010a8:	781b      	ldrb	r3, [r3, #0]
 80010aa:	2b06      	cmp	r3, #6
 80010ac:	d105      	bne.n	80010ba <manual_state_transition+0x112>
		if (next_state == Manual) {
 80010ae:	79fb      	ldrb	r3, [r7, #7]
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d102      	bne.n	80010ba <manual_state_transition+0x112>
			STATE = Manual;  // Operator must dismiss Abort condition
 80010b4:	4b02      	ldr	r3, [pc, #8]	; (80010c0 <manual_state_transition+0x118>)
 80010b6:	2200      	movs	r2, #0
 80010b8:	701a      	strb	r2, [r3, #0]
		}
	}
}
 80010ba:	3708      	adds	r7, #8
 80010bc:	46bd      	mov	sp, r7
 80010be:	bd80      	pop	{r7, pc}
 80010c0:	200003f0 	.word	0x200003f0
 80010c4:	20000a70 	.word	0x20000a70
 80010c8:	10624dd3 	.word	0x10624dd3
 80010cc:	20000604 	.word	0x20000604

080010d0 <get_ellapsed_time_in_autosequence_state_ms>:

/**
 * Only works for Ignition, Hotfire, and Post
 */
uint32_t get_ellapsed_time_in_autosequence_state_ms() {
 80010d0:	b480      	push	{r7}
 80010d2:	af00      	add	r7, sp, #0
	if (STATE == Startup) {
 80010d4:	4b20      	ldr	r3, [pc, #128]	; (8001158 <get_ellapsed_time_in_autosequence_state_ms+0x88>)
 80010d6:	781b      	ldrb	r3, [r3, #0]
 80010d8:	2b03      	cmp	r3, #3
 80010da:	d10a      	bne.n	80010f2 <get_ellapsed_time_in_autosequence_state_ms+0x22>
		return SYS_MILLIS - autosequence.startup_start_time_ms;
 80010dc:	4b1f      	ldr	r3, [pc, #124]	; (800115c <get_ellapsed_time_in_autosequence_state_ms+0x8c>)
 80010de:	681b      	ldr	r3, [r3, #0]
 80010e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80010e2:	4a1f      	ldr	r2, [pc, #124]	; (8001160 <get_ellapsed_time_in_autosequence_state_ms+0x90>)
 80010e4:	fba2 2303 	umull	r2, r3, r2, r3
 80010e8:	099a      	lsrs	r2, r3, #6
 80010ea:	4b1e      	ldr	r3, [pc, #120]	; (8001164 <get_ellapsed_time_in_autosequence_state_ms+0x94>)
 80010ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80010ee:	1ad3      	subs	r3, r2, r3
 80010f0:	e02d      	b.n	800114e <get_ellapsed_time_in_autosequence_state_ms+0x7e>
	}
	else if (STATE == Ignition) {
 80010f2:	4b19      	ldr	r3, [pc, #100]	; (8001158 <get_ellapsed_time_in_autosequence_state_ms+0x88>)
 80010f4:	781b      	ldrb	r3, [r3, #0]
 80010f6:	2b04      	cmp	r3, #4
 80010f8:	d10a      	bne.n	8001110 <get_ellapsed_time_in_autosequence_state_ms+0x40>
		return SYS_MILLIS - autosequence.ignition_start_time_ms;
 80010fa:	4b18      	ldr	r3, [pc, #96]	; (800115c <get_ellapsed_time_in_autosequence_state_ms+0x8c>)
 80010fc:	681b      	ldr	r3, [r3, #0]
 80010fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001100:	4a17      	ldr	r2, [pc, #92]	; (8001160 <get_ellapsed_time_in_autosequence_state_ms+0x90>)
 8001102:	fba2 2303 	umull	r2, r3, r2, r3
 8001106:	099a      	lsrs	r2, r3, #6
 8001108:	4b16      	ldr	r3, [pc, #88]	; (8001164 <get_ellapsed_time_in_autosequence_state_ms+0x94>)
 800110a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800110c:	1ad3      	subs	r3, r2, r3
 800110e:	e01e      	b.n	800114e <get_ellapsed_time_in_autosequence_state_ms+0x7e>
	}
	else if (STATE == Hotfire) {
 8001110:	4b11      	ldr	r3, [pc, #68]	; (8001158 <get_ellapsed_time_in_autosequence_state_ms+0x88>)
 8001112:	781b      	ldrb	r3, [r3, #0]
 8001114:	2b05      	cmp	r3, #5
 8001116:	d10a      	bne.n	800112e <get_ellapsed_time_in_autosequence_state_ms+0x5e>
		return SYS_MILLIS - autosequence.hotfire_start_time_ms;
 8001118:	4b10      	ldr	r3, [pc, #64]	; (800115c <get_ellapsed_time_in_autosequence_state_ms+0x8c>)
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800111e:	4a10      	ldr	r2, [pc, #64]	; (8001160 <get_ellapsed_time_in_autosequence_state_ms+0x90>)
 8001120:	fba2 2303 	umull	r2, r3, r2, r3
 8001124:	099a      	lsrs	r2, r3, #6
 8001126:	4b0f      	ldr	r3, [pc, #60]	; (8001164 <get_ellapsed_time_in_autosequence_state_ms+0x94>)
 8001128:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800112a:	1ad3      	subs	r3, r2, r3
 800112c:	e00f      	b.n	800114e <get_ellapsed_time_in_autosequence_state_ms+0x7e>
	}
	else if (STATE == Post) {
 800112e:	4b0a      	ldr	r3, [pc, #40]	; (8001158 <get_ellapsed_time_in_autosequence_state_ms+0x88>)
 8001130:	781b      	ldrb	r3, [r3, #0]
 8001132:	2b07      	cmp	r3, #7
 8001134:	d10a      	bne.n	800114c <get_ellapsed_time_in_autosequence_state_ms+0x7c>
		return SYS_MILLIS - autosequence.post_start_time_ms;
 8001136:	4b09      	ldr	r3, [pc, #36]	; (800115c <get_ellapsed_time_in_autosequence_state_ms+0x8c>)
 8001138:	681b      	ldr	r3, [r3, #0]
 800113a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800113c:	4a08      	ldr	r2, [pc, #32]	; (8001160 <get_ellapsed_time_in_autosequence_state_ms+0x90>)
 800113e:	fba2 2303 	umull	r2, r3, r2, r3
 8001142:	099a      	lsrs	r2, r3, #6
 8001144:	4b07      	ldr	r3, [pc, #28]	; (8001164 <get_ellapsed_time_in_autosequence_state_ms+0x94>)
 8001146:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001148:	1ad3      	subs	r3, r2, r3
 800114a:	e000      	b.n	800114e <get_ellapsed_time_in_autosequence_state_ms+0x7e>
	}
	else {
		return 0;
 800114c:	2300      	movs	r3, #0
	}
}
 800114e:	4618      	mov	r0, r3
 8001150:	46bd      	mov	sp, r7
 8001152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001156:	4770      	bx	lr
 8001158:	200003f0 	.word	0x200003f0
 800115c:	20000a70 	.word	0x20000a70
 8001160:	10624dd3 	.word	0x10624dd3
 8001164:	20000604 	.word	0x20000604

08001168 <send_gse_set_vlv_cmd>:
#define VLV_CMD_SZ (17)

/**
 * Pack and send a valve command to the GSE controller
 */
void send_gse_set_vlv_cmd(uint32_t vlv_num, uint8_t vlv_state) {
 8001168:	b580      	push	{r7, lr}
 800116a:	b08c      	sub	sp, #48	; 0x30
 800116c:	af00      	add	r7, sp, #0
 800116e:	6078      	str	r0, [r7, #4]
 8001170:	460b      	mov	r3, r1
 8001172:	70fb      	strb	r3, [r7, #3]
	uint8_t cmd_packet[VLV_CMD_SZ];
	uint8_t cobs_cmd_packet[VLV_CMD_SZ+2];

	cmd_packet[0] = 8;  // set_vlv
 8001174:	2308      	movs	r3, #8
 8001176:	773b      	strb	r3, [r7, #28]
	cmd_packet[1] = FLIGHT_EC_ADDR;       // origin_addr
 8001178:	2302      	movs	r3, #2
 800117a:	777b      	strb	r3, [r7, #29]
	cmd_packet[2] = GSE_CONTROLLER_ADDR;  // target_addr
 800117c:	2300      	movs	r3, #0
 800117e:	77bb      	strb	r3, [r7, #30]
	cmd_packet[3] = 1;  // priority
 8001180:	2301      	movs	r3, #1
 8001182:	77fb      	strb	r3, [r7, #31]
	cmd_packet[4] = 1;  // num_packets
 8001184:	2301      	movs	r3, #1
 8001186:	f887 3020 	strb.w	r3, [r7, #32]
	cmd_packet[5] = 1;  // do_cobbs
 800118a:	2301      	movs	r3, #1
 800118c:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	cmd_packet[6] = 0;  // checksum
 8001190:	2300      	movs	r3, #0
 8001192:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
	cmd_packet[7] = 0;  // checksum
 8001196:	2300      	movs	r3, #0
 8001198:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	cmd_packet[8] = (SYS_MICROS >> 0) & 0xFF;    // timestamp
 800119c:	4b23      	ldr	r3, [pc, #140]	; (800122c <send_gse_set_vlv_cmd+0xc4>)
 800119e:	681b      	ldr	r3, [r3, #0]
 80011a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80011a2:	b2db      	uxtb	r3, r3
 80011a4:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	cmd_packet[9] = (SYS_MICROS >> 8) & 0xFF;    // timestamp
 80011a8:	4b20      	ldr	r3, [pc, #128]	; (800122c <send_gse_set_vlv_cmd+0xc4>)
 80011aa:	681b      	ldr	r3, [r3, #0]
 80011ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80011ae:	0a1b      	lsrs	r3, r3, #8
 80011b0:	b2db      	uxtb	r3, r3
 80011b2:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
	cmd_packet[10] = (SYS_MICROS >> 16) & 0xFF;  // timestamp
 80011b6:	4b1d      	ldr	r3, [pc, #116]	; (800122c <send_gse_set_vlv_cmd+0xc4>)
 80011b8:	681b      	ldr	r3, [r3, #0]
 80011ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80011bc:	0c1b      	lsrs	r3, r3, #16
 80011be:	b2db      	uxtb	r3, r3
 80011c0:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	cmd_packet[11] = (SYS_MICROS >> 24) & 0xFF;  // timestamp
 80011c4:	4b19      	ldr	r3, [pc, #100]	; (800122c <send_gse_set_vlv_cmd+0xc4>)
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80011ca:	0e1b      	lsrs	r3, r3, #24
 80011cc:	b2db      	uxtb	r3, r3
 80011ce:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	cmd_packet[12] = (vlv_num >> 0) & 0xFF;
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	b2db      	uxtb	r3, r3
 80011d6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	cmd_packet[13] = (vlv_num >> 8) & 0xFF;
 80011da:	687b      	ldr	r3, [r7, #4]
 80011dc:	0a1b      	lsrs	r3, r3, #8
 80011de:	b2db      	uxtb	r3, r3
 80011e0:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
	cmd_packet[14] = (vlv_num >> 16) & 0xFF;
 80011e4:	687b      	ldr	r3, [r7, #4]
 80011e6:	0c1b      	lsrs	r3, r3, #16
 80011e8:	b2db      	uxtb	r3, r3
 80011ea:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
	cmd_packet[15] = (vlv_num >> 24) & 0xFF;
 80011ee:	687b      	ldr	r3, [r7, #4]
 80011f0:	0e1b      	lsrs	r3, r3, #24
 80011f2:	b2db      	uxtb	r3, r3
 80011f4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
	cmd_packet[16] = vlv_state;
 80011f8:	78fb      	ldrb	r3, [r7, #3]
 80011fa:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c

	uint16_t packed_sz = stuff_packet(cmd_packet, cobs_cmd_packet, VLV_CMD_SZ);
 80011fe:	f107 0108 	add.w	r1, r7, #8
 8001202:	f107 031c 	add.w	r3, r7, #28
 8001206:	2211      	movs	r2, #17
 8001208:	4618      	mov	r0, r3
 800120a:	f006 fc63 	bl	8007ad4 <stuff_packet>
 800120e:	4603      	mov	r3, r0
 8001210:	85fb      	strh	r3, [r7, #46]	; 0x2e

	HAL_UART_Transmit(&COM_UART, cobs_cmd_packet, packed_sz, HAL_MAX_DELAY);
 8001212:	8dfa      	ldrh	r2, [r7, #46]	; 0x2e
 8001214:	f107 0108 	add.w	r1, r7, #8
 8001218:	f04f 33ff 	mov.w	r3, #4294967295
 800121c:	4804      	ldr	r0, [pc, #16]	; (8001230 <send_gse_set_vlv_cmd+0xc8>)
 800121e:	f00a f81a 	bl	800b256 <HAL_UART_Transmit>
}
 8001222:	bf00      	nop
 8001224:	3730      	adds	r7, #48	; 0x30
 8001226:	46bd      	mov	sp, r7
 8001228:	bd80      	pop	{r7, pc}
 800122a:	bf00      	nop
 800122c:	20000a70 	.word	0x20000a70
 8001230:	20000b58 	.word	0x20000b58

08001234 <HAL_TIM_PeriodElapsedCallback>:
/* USER CODE BEGIN 0 */

/**
 * Timer interrupt flag handling
 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim) {
 8001234:	b480      	push	{r7}
 8001236:	b083      	sub	sp, #12
 8001238:	af00      	add	r7, sp, #0
 800123a:	6078      	str	r0, [r7, #4]
	if (htim == &TIM_5MS) {
 800123c:	687b      	ldr	r3, [r7, #4]
 800123e:	4a0e      	ldr	r2, [pc, #56]	; (8001278 <HAL_TIM_PeriodElapsedCallback+0x44>)
 8001240:	4293      	cmp	r3, r2
 8001242:	d103      	bne.n	800124c <HAL_TIM_PeriodElapsedCallback+0x18>
		periodic_flag_5ms = 1;
 8001244:	4b0d      	ldr	r3, [pc, #52]	; (800127c <HAL_TIM_PeriodElapsedCallback+0x48>)
 8001246:	2201      	movs	r2, #1
 8001248:	701a      	strb	r2, [r3, #0]
		periodic_flag_50ms = 1;
	}
	else if (htim == &TIM_100MS) {
		periodic_flag_100ms = 1;
	}
}
 800124a:	e00e      	b.n	800126a <HAL_TIM_PeriodElapsedCallback+0x36>
	else if (htim == &TIM_50MS) {
 800124c:	687b      	ldr	r3, [r7, #4]
 800124e:	4a0c      	ldr	r2, [pc, #48]	; (8001280 <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8001250:	4293      	cmp	r3, r2
 8001252:	d103      	bne.n	800125c <HAL_TIM_PeriodElapsedCallback+0x28>
		periodic_flag_50ms = 1;
 8001254:	4b0b      	ldr	r3, [pc, #44]	; (8001284 <HAL_TIM_PeriodElapsedCallback+0x50>)
 8001256:	2201      	movs	r2, #1
 8001258:	701a      	strb	r2, [r3, #0]
}
 800125a:	e006      	b.n	800126a <HAL_TIM_PeriodElapsedCallback+0x36>
	else if (htim == &TIM_100MS) {
 800125c:	687b      	ldr	r3, [r7, #4]
 800125e:	4a0a      	ldr	r2, [pc, #40]	; (8001288 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8001260:	4293      	cmp	r3, r2
 8001262:	d102      	bne.n	800126a <HAL_TIM_PeriodElapsedCallback+0x36>
		periodic_flag_100ms = 1;
 8001264:	4b09      	ldr	r3, [pc, #36]	; (800128c <HAL_TIM_PeriodElapsedCallback+0x58>)
 8001266:	2201      	movs	r2, #1
 8001268:	701a      	strb	r2, [r3, #0]
}
 800126a:	bf00      	nop
 800126c:	370c      	adds	r7, #12
 800126e:	46bd      	mov	sp, r7
 8001270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001274:	4770      	bx	lr
 8001276:	bf00      	nop
 8001278:	20000b10 	.word	0x20000b10
 800127c:	200009c8 	.word	0x200009c8
 8001280:	20000a24 	.word	0x20000a24
 8001284:	20000dc3 	.word	0x20000dc3
 8001288:	20000b9c 	.word	0x20000b9c
 800128c:	20000a6c 	.word	0x20000a6c

08001290 <HAL_UART_RxCpltCallback>:
volatile uint16_t telem_buffer_sz = 0;
uint8_t telem_buffer[255];
uint8_t eof_received = 0;


void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8001290:	b580      	push	{r7, lr}
 8001292:	b082      	sub	sp, #8
 8001294:	af00      	add	r7, sp, #0
 8001296:	6078      	str	r0, [r7, #4]
	if (huart == &COM_UART) {
 8001298:	687b      	ldr	r3, [r7, #4]
 800129a:	4a0f      	ldr	r2, [pc, #60]	; (80012d8 <HAL_UART_RxCpltCallback+0x48>)
 800129c:	4293      	cmp	r3, r2
 800129e:	d117      	bne.n	80012d0 <HAL_UART_RxCpltCallback+0x40>
		HAL_UART_Receive_IT(&COM_UART, &last_byte_uart, 1);
 80012a0:	2201      	movs	r2, #1
 80012a2:	490e      	ldr	r1, [pc, #56]	; (80012dc <HAL_UART_RxCpltCallback+0x4c>)
 80012a4:	480c      	ldr	r0, [pc, #48]	; (80012d8 <HAL_UART_RxCpltCallback+0x48>)
 80012a6:	f00a f868 	bl	800b37a <HAL_UART_Receive_IT>
		telem_buffer[telem_buffer_sz++] = last_byte_uart;
 80012aa:	4b0d      	ldr	r3, [pc, #52]	; (80012e0 <HAL_UART_RxCpltCallback+0x50>)
 80012ac:	881b      	ldrh	r3, [r3, #0]
 80012ae:	b29b      	uxth	r3, r3
 80012b0:	1c5a      	adds	r2, r3, #1
 80012b2:	b291      	uxth	r1, r2
 80012b4:	4a0a      	ldr	r2, [pc, #40]	; (80012e0 <HAL_UART_RxCpltCallback+0x50>)
 80012b6:	8011      	strh	r1, [r2, #0]
 80012b8:	461a      	mov	r2, r3
 80012ba:	4b08      	ldr	r3, [pc, #32]	; (80012dc <HAL_UART_RxCpltCallback+0x4c>)
 80012bc:	7819      	ldrb	r1, [r3, #0]
 80012be:	4b09      	ldr	r3, [pc, #36]	; (80012e4 <HAL_UART_RxCpltCallback+0x54>)
 80012c0:	5499      	strb	r1, [r3, r2]
		if (last_byte_uart == 0) {
 80012c2:	4b06      	ldr	r3, [pc, #24]	; (80012dc <HAL_UART_RxCpltCallback+0x4c>)
 80012c4:	781b      	ldrb	r3, [r3, #0]
 80012c6:	2b00      	cmp	r3, #0
 80012c8:	d102      	bne.n	80012d0 <HAL_UART_RxCpltCallback+0x40>
			eof_received = 1;
 80012ca:	4b07      	ldr	r3, [pc, #28]	; (80012e8 <HAL_UART_RxCpltCallback+0x58>)
 80012cc:	2201      	movs	r2, #1
 80012ce:	701a      	strb	r2, [r3, #0]
		}
	}
}
 80012d0:	bf00      	nop
 80012d2:	3708      	adds	r7, #8
 80012d4:	46bd      	mov	sp, r7
 80012d6:	bd80      	pop	{r7, pc}
 80012d8:	20000b58 	.word	0x20000b58
 80012dc:	20000000 	.word	0x20000000
 80012e0:	200004f8 	.word	0x200004f8
 80012e4:	20000cc4 	.word	0x20000cc4
 80012e8:	200004fa 	.word	0x200004fa

080012ec <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80012ec:	b580      	push	{r7, lr}
 80012ee:	b082      	sub	sp, #8
 80012f0:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80012f2:	f007 fbe3 	bl	8008abc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80012f6:	f000 f90d 	bl	8001514 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80012fa:	f000 fb33 	bl	8001964 <MX_GPIO_Init>
  MX_SPI1_Init();
 80012fe:	f000 f975 	bl	80015ec <MX_SPI1_Init>
  MX_SPI4_Init();
 8001302:	f000 fa15 	bl	8001730 <MX_SPI4_Init>
  MX_SPI2_Init();
 8001306:	f000 f9a7 	bl	8001658 <MX_SPI2_Init>
  MX_SPI3_Init();
 800130a:	f000 f9db 	bl	80016c4 <MX_SPI3_Init>
  MX_USART1_UART_Init();
 800130e:	f000 faff 	bl	8001910 <MX_USART1_UART_Init>
  MX_TIM5_Init();
 8001312:	f000 fa43 	bl	800179c <MX_TIM5_Init>
  MX_TIM10_Init();
 8001316:	f000 fa8f 	bl	8001838 <MX_TIM10_Init>
  MX_TIM11_Init();
 800131a:	f000 fab1 	bl	8001880 <MX_TIM11_Init>
  MX_TIM13_Init();
 800131e:	f000 fad3 	bl	80018c8 <MX_TIM13_Init>

  // Initialize everything

  /* Initialize HAL stuff */
  // Timers
  HAL_TIM_Base_Start(&TIM_MICROS);
 8001322:	4861      	ldr	r0, [pc, #388]	; (80014a8 <main+0x1bc>)
 8001324:	f009 fab4 	bl	800a890 <HAL_TIM_Base_Start>
  HAL_TIM_Base_Start_IT(&TIM_5MS);
 8001328:	4860      	ldr	r0, [pc, #384]	; (80014ac <main+0x1c0>)
 800132a:	f009 fb19 	bl	800a960 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&TIM_50MS);
 800132e:	4860      	ldr	r0, [pc, #384]	; (80014b0 <main+0x1c4>)
 8001330:	f009 fb16 	bl	800a960 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&TIM_100MS);
 8001334:	485f      	ldr	r0, [pc, #380]	; (80014b4 <main+0x1c8>)
 8001336:	f009 fb13 	bl	800a960 <HAL_TIM_Base_Start_IT>

  // UART DMA
  HAL_UART_Receive_IT(&COM_UART, &last_byte_uart, 1);
 800133a:	2201      	movs	r2, #1
 800133c:	495e      	ldr	r1, [pc, #376]	; (80014b8 <main+0x1cc>)
 800133e:	485f      	ldr	r0, [pc, #380]	; (80014bc <main+0x1d0>)
 8001340:	f00a f81b 	bl	800b37a <HAL_UART_Receive_IT>


  // Watchdog

  // Read variables from flash: this must be called very early in initialization!
  init_flash(&flash, &SPI_MEM, FLASH_CS_GPIO_Port, FLASH_CS_Pin);
 8001344:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001348:	4a5d      	ldr	r2, [pc, #372]	; (80014c0 <main+0x1d4>)
 800134a:	495e      	ldr	r1, [pc, #376]	; (80014c4 <main+0x1d8>)
 800134c:	485e      	ldr	r0, [pc, #376]	; (80014c8 <main+0x1dc>)
 800134e:	f007 f8cc 	bl	80084ea <init_flash>
  read_nonvolatile_variables();
 8001352:	f000 fc0b 	bl	8001b6c <read_nonvolatile_variables>
  // Board-specific hardware
  //init_spi_peripherals();  // Set chip selects high and initialize

  //init_adcs();
  //init_thermocouples();
  init_serial_data(&buffer_info);
 8001356:	485d      	ldr	r0, [pc, #372]	; (80014cc <main+0x1e0>)
 8001358:	f004 f8e2 	bl	8005520 <init_serial_data>

  init_board(FLIGHT_EC_ADDR);  // Comms
 800135c:	2002      	movs	r0, #2
 800135e:	f006 f8cf 	bl	8007500 <init_board>

  init_autosequence_timings();
 8001362:	f7ff fda9 	bl	8000eb8 <init_autosequence_timings>


  // Motor stress test
  motor.hspi = &SPI_MOTOR;
 8001366:	4b5a      	ldr	r3, [pc, #360]	; (80014d0 <main+0x1e4>)
 8001368:	4a5a      	ldr	r2, [pc, #360]	; (80014d4 <main+0x1e8>)
 800136a:	601a      	str	r2, [r3, #0]
  motor.cs_base = MTR0_CS_GPIO_Port;
 800136c:	4b58      	ldr	r3, [pc, #352]	; (80014d0 <main+0x1e4>)
 800136e:	4a5a      	ldr	r2, [pc, #360]	; (80014d8 <main+0x1ec>)
 8001370:	605a      	str	r2, [r3, #4]
  motor.cs_pin = MTR0_CS_Pin;
 8001372:	4b57      	ldr	r3, [pc, #348]	; (80014d0 <main+0x1e4>)
 8001374:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001378:	811a      	strh	r2, [r3, #8]
  motor.busy_base = MTR0_BUSY_GPIO_Port;
 800137a:	4b55      	ldr	r3, [pc, #340]	; (80014d0 <main+0x1e4>)
 800137c:	4a56      	ldr	r2, [pc, #344]	; (80014d8 <main+0x1ec>)
 800137e:	60da      	str	r2, [r3, #12]
  motor.busy_pin = MTR0_BUSY_Pin;
 8001380:	4b53      	ldr	r3, [pc, #332]	; (80014d0 <main+0x1e4>)
 8001382:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001386:	821a      	strh	r2, [r3, #16]

  L6470_init_motor(&motor, L6470_FULL_STEP_MODE, 1.8);
 8001388:	ed9f 0a54 	vldr	s0, [pc, #336]	; 80014dc <main+0x1f0>
 800138c:	2100      	movs	r1, #0
 800138e:	4850      	ldr	r0, [pc, #320]	; (80014d0 <main+0x1e4>)
 8001390:	f006 f81a 	bl	80073c8 <L6470_init_motor>
  {
	  // Handle autosequence first in every loop
	  // most important, time sensitive operation
	  // TODO: call autosequence functions
	  //execute_autosequence();
	  flash_mem = get_bytes_remaining(&flash);
 8001394:	484c      	ldr	r0, [pc, #304]	; (80014c8 <main+0x1dc>)
 8001396:	f007 fb08 	bl	80089aa <get_bytes_remaining>
 800139a:	4603      	mov	r3, r0
 800139c:	4a50      	ldr	r2, [pc, #320]	; (80014e0 <main+0x1f4>)
 800139e:	6013      	str	r3, [r2, #0]



	  if (periodic_flag_50ms) {
 80013a0:	4b50      	ldr	r3, [pc, #320]	; (80014e4 <main+0x1f8>)
 80013a2:	781b      	ldrb	r3, [r3, #0]
 80013a4:	b2db      	uxtb	r3, r3
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d016      	beq.n	80013d8 <main+0xec>
		  periodic_flag_50ms = 0;
 80013aa:	4b4e      	ldr	r3, [pc, #312]	; (80014e4 <main+0x1f8>)
 80013ac:	2200      	movs	r2, #0
 80013ae:	701a      	strb	r2, [r3, #0]

		  // Active tank pressure PID control
		  // tank enable flags get set during the autosequence
		  if (STATE == Hotfire) {
 80013b0:	4b4d      	ldr	r3, [pc, #308]	; (80014e8 <main+0x1fc>)
 80013b2:	781b      	ldrb	r3, [r3, #0]
 80013b4:	2b05      	cmp	r3, #5
 80013b6:	d10f      	bne.n	80013d8 <main+0xec>
			  if (autosequence.hotfire_lox_tank_enable_PID_control) {
 80013b8:	4b4c      	ldr	r3, [pc, #304]	; (80014ec <main+0x200>)
 80013ba:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 80013be:	2b00      	cmp	r3, #0
 80013c0:	d002      	beq.n	80013c8 <main+0xdc>
				  tank_PID_pressure_control(&tanks[LOX_TANK_NUM]);
 80013c2:	484b      	ldr	r0, [pc, #300]	; (80014f0 <main+0x204>)
 80013c4:	f004 fc94 	bl	8005cf0 <tank_PID_pressure_control>
			  }
			  if (autosequence.hotfire_fuel_tank_enable_PID_control) {
 80013c8:	4b48      	ldr	r3, [pc, #288]	; (80014ec <main+0x200>)
 80013ca:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 80013ce:	2b00      	cmp	r3, #0
 80013d0:	d002      	beq.n	80013d8 <main+0xec>
				  tank_PID_pressure_control(&tanks[FUEL_TANK_NUM]);
 80013d2:	4848      	ldr	r0, [pc, #288]	; (80014f4 <main+0x208>)
 80013d4:	f004 fc8c 	bl	8005cf0 <tank_PID_pressure_control>
			  }
		  }
	  }

	  if (periodic_flag_5ms) {
 80013d8:	4b47      	ldr	r3, [pc, #284]	; (80014f8 <main+0x20c>)
 80013da:	781b      	ldrb	r3, [r3, #0]
 80013dc:	b2db      	uxtb	r3, r3
 80013de:	2b00      	cmp	r3, #0
 80013e0:	d03b      	beq.n	800145a <main+0x16e>
		  periodic_flag_5ms = 0;
 80013e2:	4b45      	ldr	r3, [pc, #276]	; (80014f8 <main+0x20c>)
 80013e4:	2200      	movs	r2, #0
 80013e6:	701a      	strb	r2, [r3, #0]

		  // handle redundant sensor voting algorithms
		  //resolve_redundant_sensors();

		  // Autopress bang bang
		  if (STATE == AutoPress) {
 80013e8:	4b3f      	ldr	r3, [pc, #252]	; (80014e8 <main+0x1fc>)
 80013ea:	781b      	ldrb	r3, [r3, #0]
 80013ec:	2b02      	cmp	r3, #2
 80013ee:	d106      	bne.n	80013fe <main+0x112>
			  tank_autopress_bang_bang(&tanks[LOX_TANK_NUM]);
 80013f0:	483f      	ldr	r0, [pc, #252]	; (80014f0 <main+0x204>)
 80013f2:	f004 fc48 	bl	8005c86 <tank_autopress_bang_bang>
			  tank_autopress_bang_bang(&tanks[FUEL_TANK_NUM]);
 80013f6:	483f      	ldr	r0, [pc, #252]	; (80014f4 <main+0x208>)
 80013f8:	f004 fc45 	bl	8005c86 <tank_autopress_bang_bang>
 80013fc:	e027      	b.n	800144e <main+0x162>
		  }

		  else if (STATE == Startup) {
 80013fe:	4b3a      	ldr	r3, [pc, #232]	; (80014e8 <main+0x1fc>)
 8001400:	781b      	ldrb	r3, [r3, #0]
 8001402:	2b03      	cmp	r3, #3
 8001404:	d10f      	bne.n	8001426 <main+0x13a>
			  // Very similar to execute_autosequence() logic
			  uint32_t T_state = get_ellapsed_time_in_autosequence_state_ms();
 8001406:	f7ff fe63 	bl	80010d0 <get_ellapsed_time_in_autosequence_state_ms>
 800140a:	4603      	mov	r3, r0
 800140c:	607b      	str	r3, [r7, #4]

			  // Initial motor position is arbitrarily put in the 5ms loop
			  if (T_state >= autosequence.startup_motor_start_delay_ms) {
 800140e:	4b37      	ldr	r3, [pc, #220]	; (80014ec <main+0x200>)
 8001410:	681b      	ldr	r3, [r3, #0]
 8001412:	687a      	ldr	r2, [r7, #4]
 8001414:	429a      	cmp	r2, r3
 8001416:	d31a      	bcc.n	800144e <main+0x162>
				  tank_startup_init_motor_position(&tanks[LOX_TANK_NUM]);
 8001418:	4835      	ldr	r0, [pc, #212]	; (80014f0 <main+0x204>)
 800141a:	f004 fd35 	bl	8005e88 <tank_startup_init_motor_position>
				  tank_startup_init_motor_position(&tanks[FUEL_TANK_NUM]);
 800141e:	4835      	ldr	r0, [pc, #212]	; (80014f4 <main+0x208>)
 8001420:	f004 fd32 	bl	8005e88 <tank_startup_init_motor_position>
 8001424:	e013      	b.n	800144e <main+0x162>
			  }
		  }

		  // Active tank pressure control valve bang bang
		  // tank enable flags get set during the autosequence
		  else if (STATE == Hotfire) {
 8001426:	4b30      	ldr	r3, [pc, #192]	; (80014e8 <main+0x1fc>)
 8001428:	781b      	ldrb	r3, [r3, #0]
 800142a:	2b05      	cmp	r3, #5
 800142c:	d10f      	bne.n	800144e <main+0x162>
			  if (autosequence.hotfire_lox_tank_enable_PID_control) {
 800142e:	4b2f      	ldr	r3, [pc, #188]	; (80014ec <main+0x200>)
 8001430:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8001434:	2b00      	cmp	r3, #0
 8001436:	d002      	beq.n	800143e <main+0x152>
				  tank_check_control_valve_threshold(&tanks[LOX_TANK_NUM]);
 8001438:	482d      	ldr	r0, [pc, #180]	; (80014f0 <main+0x204>)
 800143a:	f004 fcfb 	bl	8005e34 <tank_check_control_valve_threshold>
			  }
			  if (autosequence.hotfire_fuel_tank_enable_PID_control) {
 800143e:	4b2b      	ldr	r3, [pc, #172]	; (80014ec <main+0x200>)
 8001440:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8001444:	2b00      	cmp	r3, #0
 8001446:	d002      	beq.n	800144e <main+0x162>
				  tank_check_control_valve_threshold(&tanks[FUEL_TANK_NUM]);
 8001448:	482a      	ldr	r0, [pc, #168]	; (80014f4 <main+0x208>)
 800144a:	f004 fcf3 	bl	8005e34 <tank_check_control_valve_threshold>
			  }
		  }

		  // log flash data
		  if (LOGGING_ACTIVE) {
 800144e:	4b2b      	ldr	r3, [pc, #172]	; (80014fc <main+0x210>)
 8001450:	781b      	ldrb	r3, [r3, #0]
 8001452:	2b00      	cmp	r3, #0
 8001454:	d001      	beq.n	800145a <main+0x16e>
			  save_flash_packet();
 8001456:	f004 f8ed 	bl	8005634 <save_flash_packet>
	  }



	  // Check periodic interrupt flags and call appropriate functions if needed
	  if (periodic_flag_100ms) {
 800145a:	4b29      	ldr	r3, [pc, #164]	; (8001500 <main+0x214>)
 800145c:	781b      	ldrb	r3, [r3, #0]
 800145e:	b2db      	uxtb	r3, r3
 8001460:	2b00      	cmp	r3, #0
 8001462:	d00d      	beq.n	8001480 <main+0x194>
		  periodic_flag_100ms = 0;
 8001464:	4b26      	ldr	r3, [pc, #152]	; (8001500 <main+0x214>)
 8001466:	2200      	movs	r2, #0
 8001468:	701a      	strb	r2, [r3, #0]

		  if (!telem_disabled) {
 800146a:	4b26      	ldr	r3, [pc, #152]	; (8001504 <main+0x218>)
 800146c:	781b      	ldrb	r3, [r3, #0]
 800146e:	2b00      	cmp	r3, #0
 8001470:	d106      	bne.n	8001480 <main+0x194>
			  send_telem_packet(SERVER_ADDR);
 8001472:	2007      	movs	r0, #7
 8001474:	f004 f8bc 	bl	80055f0 <send_telem_packet>
			  HAL_GPIO_TogglePin(LED_TELEM_PORT, LED_TELEM_PIN);
 8001478:	2101      	movs	r1, #1
 800147a:	4811      	ldr	r0, [pc, #68]	; (80014c0 <main+0x1d4>)
 800147c:	f007 fee1 	bl	8009242 <HAL_GPIO_TogglePin>

	  }

	  //HAL_UART_Receive(&COM_UART, rx_buffer, 13, HAL_MAX_DELAY);

	  if (eof_received) {
 8001480:	4b21      	ldr	r3, [pc, #132]	; (8001508 <main+0x21c>)
 8001482:	781b      	ldrb	r3, [r3, #0]
 8001484:	2b00      	cmp	r3, #0
 8001486:	d085      	beq.n	8001394 <main+0xa8>
		  receive_data(&COM_UART, telem_buffer, telem_buffer_sz);
 8001488:	4b20      	ldr	r3, [pc, #128]	; (800150c <main+0x220>)
 800148a:	881b      	ldrh	r3, [r3, #0]
 800148c:	b29b      	uxth	r3, r3
 800148e:	461a      	mov	r2, r3
 8001490:	491f      	ldr	r1, [pc, #124]	; (8001510 <main+0x224>)
 8001492:	480a      	ldr	r0, [pc, #40]	; (80014bc <main+0x1d0>)
 8001494:	f006 f97a 	bl	800778c <receive_data>
		  eof_received = 0;
 8001498:	4b1b      	ldr	r3, [pc, #108]	; (8001508 <main+0x21c>)
 800149a:	2200      	movs	r2, #0
 800149c:	701a      	strb	r2, [r3, #0]
		  telem_buffer_sz = 0;
 800149e:	4b1b      	ldr	r3, [pc, #108]	; (800150c <main+0x220>)
 80014a0:	2200      	movs	r2, #0
 80014a2:	801a      	strh	r2, [r3, #0]
	  flash_mem = get_bytes_remaining(&flash);
 80014a4:	e776      	b.n	8001394 <main+0xa8>
 80014a6:	bf00      	nop
 80014a8:	20000a70 	.word	0x20000a70
 80014ac:	20000b10 	.word	0x20000b10
 80014b0:	20000a24 	.word	0x20000a24
 80014b4:	20000b9c 	.word	0x20000b9c
 80014b8:	20000000 	.word	0x20000000
 80014bc:	20000b58 	.word	0x20000b58
 80014c0:	40020800 	.word	0x40020800
 80014c4:	20000be4 	.word	0x20000be4
 80014c8:	20000ec4 	.word	0x20000ec4
 80014cc:	200010dc 	.word	0x200010dc
 80014d0:	20000c94 	.word	0x20000c94
 80014d4:	20000ab8 	.word	0x20000ab8
 80014d8:	40020000 	.word	0x40020000
 80014dc:	3fe66666 	.word	0x3fe66666
 80014e0:	2000042c 	.word	0x2000042c
 80014e4:	20000dc3 	.word	0x20000dc3
 80014e8:	200003f0 	.word	0x200003f0
 80014ec:	20000604 	.word	0x20000604
 80014f0:	200004fc 	.word	0x200004fc
 80014f4:	20000580 	.word	0x20000580
 80014f8:	200009c8 	.word	0x200009c8
 80014fc:	20000430 	.word	0x20000430
 8001500:	20000a6c 	.word	0x20000a6c
 8001504:	200004fb 	.word	0x200004fb
 8001508:	200004fa 	.word	0x200004fa
 800150c:	200004f8 	.word	0x200004f8
 8001510:	20000cc4 	.word	0x20000cc4

08001514 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001514:	b580      	push	{r7, lr}
 8001516:	b094      	sub	sp, #80	; 0x50
 8001518:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800151a:	f107 031c 	add.w	r3, r7, #28
 800151e:	2234      	movs	r2, #52	; 0x34
 8001520:	2100      	movs	r1, #0
 8001522:	4618      	mov	r0, r3
 8001524:	f00a fcdc 	bl	800bee0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001528:	f107 0308 	add.w	r3, r7, #8
 800152c:	2200      	movs	r2, #0
 800152e:	601a      	str	r2, [r3, #0]
 8001530:	605a      	str	r2, [r3, #4]
 8001532:	609a      	str	r2, [r3, #8]
 8001534:	60da      	str	r2, [r3, #12]
 8001536:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001538:	2300      	movs	r3, #0
 800153a:	607b      	str	r3, [r7, #4]
 800153c:	4b29      	ldr	r3, [pc, #164]	; (80015e4 <SystemClock_Config+0xd0>)
 800153e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001540:	4a28      	ldr	r2, [pc, #160]	; (80015e4 <SystemClock_Config+0xd0>)
 8001542:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001546:	6413      	str	r3, [r2, #64]	; 0x40
 8001548:	4b26      	ldr	r3, [pc, #152]	; (80015e4 <SystemClock_Config+0xd0>)
 800154a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800154c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001550:	607b      	str	r3, [r7, #4]
 8001552:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001554:	2300      	movs	r3, #0
 8001556:	603b      	str	r3, [r7, #0]
 8001558:	4b23      	ldr	r3, [pc, #140]	; (80015e8 <SystemClock_Config+0xd4>)
 800155a:	681b      	ldr	r3, [r3, #0]
 800155c:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001560:	4a21      	ldr	r2, [pc, #132]	; (80015e8 <SystemClock_Config+0xd4>)
 8001562:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001566:	6013      	str	r3, [r2, #0]
 8001568:	4b1f      	ldr	r3, [pc, #124]	; (80015e8 <SystemClock_Config+0xd4>)
 800156a:	681b      	ldr	r3, [r3, #0]
 800156c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001570:	603b      	str	r3, [r7, #0]
 8001572:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001574:	2302      	movs	r3, #2
 8001576:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001578:	2301      	movs	r3, #1
 800157a:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800157c:	2310      	movs	r3, #16
 800157e:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001580:	2302      	movs	r3, #2
 8001582:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001584:	2300      	movs	r3, #0
 8001586:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001588:	2308      	movs	r3, #8
 800158a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 90;
 800158c:	235a      	movs	r3, #90	; 0x5a
 800158e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001590:	2302      	movs	r3, #2
 8001592:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001594:	2302      	movs	r3, #2
 8001596:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001598:	2302      	movs	r3, #2
 800159a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800159c:	f107 031c 	add.w	r3, r7, #28
 80015a0:	4618      	mov	r0, r3
 80015a2:	f008 f8df 	bl	8009764 <HAL_RCC_OscConfig>
 80015a6:	4603      	mov	r3, r0
 80015a8:	2b00      	cmp	r3, #0
 80015aa:	d001      	beq.n	80015b0 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 80015ac:	f000 fad8 	bl	8001b60 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80015b0:	230f      	movs	r3, #15
 80015b2:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80015b4:	2302      	movs	r3, #2
 80015b6:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 80015b8:	2380      	movs	r3, #128	; 0x80
 80015ba:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80015bc:	2300      	movs	r3, #0
 80015be:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80015c0:	2300      	movs	r3, #0
 80015c2:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80015c4:	f107 0308 	add.w	r3, r7, #8
 80015c8:	2101      	movs	r1, #1
 80015ca:	4618      	mov	r0, r3
 80015cc:	f007 fe54 	bl	8009278 <HAL_RCC_ClockConfig>
 80015d0:	4603      	mov	r3, r0
 80015d2:	2b00      	cmp	r3, #0
 80015d4:	d001      	beq.n	80015da <SystemClock_Config+0xc6>
  {
    Error_Handler();
 80015d6:	f000 fac3 	bl	8001b60 <Error_Handler>
  }
}
 80015da:	bf00      	nop
 80015dc:	3750      	adds	r7, #80	; 0x50
 80015de:	46bd      	mov	sp, r7
 80015e0:	bd80      	pop	{r7, pc}
 80015e2:	bf00      	nop
 80015e4:	40023800 	.word	0x40023800
 80015e8:	40007000 	.word	0x40007000

080015ec <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 80015ec:	b580      	push	{r7, lr}
 80015ee:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 80015f0:	4b17      	ldr	r3, [pc, #92]	; (8001650 <MX_SPI1_Init+0x64>)
 80015f2:	4a18      	ldr	r2, [pc, #96]	; (8001654 <MX_SPI1_Init+0x68>)
 80015f4:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80015f6:	4b16      	ldr	r3, [pc, #88]	; (8001650 <MX_SPI1_Init+0x64>)
 80015f8:	f44f 7282 	mov.w	r2, #260	; 0x104
 80015fc:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80015fe:	4b14      	ldr	r3, [pc, #80]	; (8001650 <MX_SPI1_Init+0x64>)
 8001600:	2200      	movs	r2, #0
 8001602:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8001604:	4b12      	ldr	r3, [pc, #72]	; (8001650 <MX_SPI1_Init+0x64>)
 8001606:	2200      	movs	r2, #0
 8001608:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 800160a:	4b11      	ldr	r3, [pc, #68]	; (8001650 <MX_SPI1_Init+0x64>)
 800160c:	2200      	movs	r2, #0
 800160e:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001610:	4b0f      	ldr	r3, [pc, #60]	; (8001650 <MX_SPI1_Init+0x64>)
 8001612:	2200      	movs	r2, #0
 8001614:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8001616:	4b0e      	ldr	r3, [pc, #56]	; (8001650 <MX_SPI1_Init+0x64>)
 8001618:	f44f 7200 	mov.w	r2, #512	; 0x200
 800161c:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800161e:	4b0c      	ldr	r3, [pc, #48]	; (8001650 <MX_SPI1_Init+0x64>)
 8001620:	2218      	movs	r2, #24
 8001622:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001624:	4b0a      	ldr	r3, [pc, #40]	; (8001650 <MX_SPI1_Init+0x64>)
 8001626:	2200      	movs	r2, #0
 8001628:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800162a:	4b09      	ldr	r3, [pc, #36]	; (8001650 <MX_SPI1_Init+0x64>)
 800162c:	2200      	movs	r2, #0
 800162e:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001630:	4b07      	ldr	r3, [pc, #28]	; (8001650 <MX_SPI1_Init+0x64>)
 8001632:	2200      	movs	r2, #0
 8001634:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8001636:	4b06      	ldr	r3, [pc, #24]	; (8001650 <MX_SPI1_Init+0x64>)
 8001638:	220a      	movs	r2, #10
 800163a:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 800163c:	4804      	ldr	r0, [pc, #16]	; (8001650 <MX_SPI1_Init+0x64>)
 800163e:	f008 fb2f 	bl	8009ca0 <HAL_SPI_Init>
 8001642:	4603      	mov	r3, r0
 8001644:	2b00      	cmp	r3, #0
 8001646:	d001      	beq.n	800164c <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8001648:	f000 fa8a 	bl	8001b60 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 800164c:	bf00      	nop
 800164e:	bd80      	pop	{r7, pc}
 8001650:	20000c3c 	.word	0x20000c3c
 8001654:	40013000 	.word	0x40013000

08001658 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8001658:	b580      	push	{r7, lr}
 800165a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 800165c:	4b17      	ldr	r3, [pc, #92]	; (80016bc <MX_SPI2_Init+0x64>)
 800165e:	4a18      	ldr	r2, [pc, #96]	; (80016c0 <MX_SPI2_Init+0x68>)
 8001660:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8001662:	4b16      	ldr	r3, [pc, #88]	; (80016bc <MX_SPI2_Init+0x64>)
 8001664:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001668:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 800166a:	4b14      	ldr	r3, [pc, #80]	; (80016bc <MX_SPI2_Init+0x64>)
 800166c:	2200      	movs	r2, #0
 800166e:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001670:	4b12      	ldr	r3, [pc, #72]	; (80016bc <MX_SPI2_Init+0x64>)
 8001672:	2200      	movs	r2, #0
 8001674:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8001676:	4b11      	ldr	r3, [pc, #68]	; (80016bc <MX_SPI2_Init+0x64>)
 8001678:	2202      	movs	r2, #2
 800167a:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 800167c:	4b0f      	ldr	r3, [pc, #60]	; (80016bc <MX_SPI2_Init+0x64>)
 800167e:	2201      	movs	r2, #1
 8001680:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8001682:	4b0e      	ldr	r3, [pc, #56]	; (80016bc <MX_SPI2_Init+0x64>)
 8001684:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001688:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800168a:	4b0c      	ldr	r3, [pc, #48]	; (80016bc <MX_SPI2_Init+0x64>)
 800168c:	2218      	movs	r2, #24
 800168e:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001690:	4b0a      	ldr	r3, [pc, #40]	; (80016bc <MX_SPI2_Init+0x64>)
 8001692:	2200      	movs	r2, #0
 8001694:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8001696:	4b09      	ldr	r3, [pc, #36]	; (80016bc <MX_SPI2_Init+0x64>)
 8001698:	2200      	movs	r2, #0
 800169a:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800169c:	4b07      	ldr	r3, [pc, #28]	; (80016bc <MX_SPI2_Init+0x64>)
 800169e:	2200      	movs	r2, #0
 80016a0:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 80016a2:	4b06      	ldr	r3, [pc, #24]	; (80016bc <MX_SPI2_Init+0x64>)
 80016a4:	220a      	movs	r2, #10
 80016a6:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80016a8:	4804      	ldr	r0, [pc, #16]	; (80016bc <MX_SPI2_Init+0x64>)
 80016aa:	f008 faf9 	bl	8009ca0 <HAL_SPI_Init>
 80016ae:	4603      	mov	r3, r0
 80016b0:	2b00      	cmp	r3, #0
 80016b2:	d001      	beq.n	80016b8 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 80016b4:	f000 fa54 	bl	8001b60 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 80016b8:	bf00      	nop
 80016ba:	bd80      	pop	{r7, pc}
 80016bc:	200009cc 	.word	0x200009cc
 80016c0:	40003800 	.word	0x40003800

080016c4 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 80016c4:	b580      	push	{r7, lr}
 80016c6:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 80016c8:	4b17      	ldr	r3, [pc, #92]	; (8001728 <MX_SPI3_Init+0x64>)
 80016ca:	4a18      	ldr	r2, [pc, #96]	; (800172c <MX_SPI3_Init+0x68>)
 80016cc:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 80016ce:	4b16      	ldr	r3, [pc, #88]	; (8001728 <MX_SPI3_Init+0x64>)
 80016d0:	f44f 7282 	mov.w	r2, #260	; 0x104
 80016d4:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 80016d6:	4b14      	ldr	r3, [pc, #80]	; (8001728 <MX_SPI3_Init+0x64>)
 80016d8:	2200      	movs	r2, #0
 80016da:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 80016dc:	4b12      	ldr	r3, [pc, #72]	; (8001728 <MX_SPI3_Init+0x64>)
 80016de:	2200      	movs	r2, #0
 80016e0:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 80016e2:	4b11      	ldr	r3, [pc, #68]	; (8001728 <MX_SPI3_Init+0x64>)
 80016e4:	2200      	movs	r2, #0
 80016e6:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 80016e8:	4b0f      	ldr	r3, [pc, #60]	; (8001728 <MX_SPI3_Init+0x64>)
 80016ea:	2200      	movs	r2, #0
 80016ec:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 80016ee:	4b0e      	ldr	r3, [pc, #56]	; (8001728 <MX_SPI3_Init+0x64>)
 80016f0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80016f4:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80016f6:	4b0c      	ldr	r3, [pc, #48]	; (8001728 <MX_SPI3_Init+0x64>)
 80016f8:	2218      	movs	r2, #24
 80016fa:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80016fc:	4b0a      	ldr	r3, [pc, #40]	; (8001728 <MX_SPI3_Init+0x64>)
 80016fe:	2200      	movs	r2, #0
 8001700:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 8001702:	4b09      	ldr	r3, [pc, #36]	; (8001728 <MX_SPI3_Init+0x64>)
 8001704:	2200      	movs	r2, #0
 8001706:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001708:	4b07      	ldr	r3, [pc, #28]	; (8001728 <MX_SPI3_Init+0x64>)
 800170a:	2200      	movs	r2, #0
 800170c:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 800170e:	4b06      	ldr	r3, [pc, #24]	; (8001728 <MX_SPI3_Init+0x64>)
 8001710:	220a      	movs	r2, #10
 8001712:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 8001714:	4804      	ldr	r0, [pc, #16]	; (8001728 <MX_SPI3_Init+0x64>)
 8001716:	f008 fac3 	bl	8009ca0 <HAL_SPI_Init>
 800171a:	4603      	mov	r3, r0
 800171c:	2b00      	cmp	r3, #0
 800171e:	d001      	beq.n	8001724 <MX_SPI3_Init+0x60>
  {
    Error_Handler();
 8001720:	f000 fa1e 	bl	8001b60 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8001724:	bf00      	nop
 8001726:	bd80      	pop	{r7, pc}
 8001728:	20000ab8 	.word	0x20000ab8
 800172c:	40003c00 	.word	0x40003c00

08001730 <MX_SPI4_Init>:
  * @brief SPI4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI4_Init(void)
{
 8001730:	b580      	push	{r7, lr}
 8001732:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI4_Init 1 */

  /* USER CODE END SPI4_Init 1 */
  /* SPI4 parameter configuration*/
  hspi4.Instance = SPI4;
 8001734:	4b17      	ldr	r3, [pc, #92]	; (8001794 <MX_SPI4_Init+0x64>)
 8001736:	4a18      	ldr	r2, [pc, #96]	; (8001798 <MX_SPI4_Init+0x68>)
 8001738:	601a      	str	r2, [r3, #0]
  hspi4.Init.Mode = SPI_MODE_MASTER;
 800173a:	4b16      	ldr	r3, [pc, #88]	; (8001794 <MX_SPI4_Init+0x64>)
 800173c:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001740:	605a      	str	r2, [r3, #4]
  hspi4.Init.Direction = SPI_DIRECTION_2LINES;
 8001742:	4b14      	ldr	r3, [pc, #80]	; (8001794 <MX_SPI4_Init+0x64>)
 8001744:	2200      	movs	r2, #0
 8001746:	609a      	str	r2, [r3, #8]
  hspi4.Init.DataSize = SPI_DATASIZE_8BIT;
 8001748:	4b12      	ldr	r3, [pc, #72]	; (8001794 <MX_SPI4_Init+0x64>)
 800174a:	2200      	movs	r2, #0
 800174c:	60da      	str	r2, [r3, #12]
  hspi4.Init.CLKPolarity = SPI_POLARITY_LOW;
 800174e:	4b11      	ldr	r3, [pc, #68]	; (8001794 <MX_SPI4_Init+0x64>)
 8001750:	2200      	movs	r2, #0
 8001752:	611a      	str	r2, [r3, #16]
  hspi4.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001754:	4b0f      	ldr	r3, [pc, #60]	; (8001794 <MX_SPI4_Init+0x64>)
 8001756:	2200      	movs	r2, #0
 8001758:	615a      	str	r2, [r3, #20]
  hspi4.Init.NSS = SPI_NSS_SOFT;
 800175a:	4b0e      	ldr	r3, [pc, #56]	; (8001794 <MX_SPI4_Init+0x64>)
 800175c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001760:	619a      	str	r2, [r3, #24]
  hspi4.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001762:	4b0c      	ldr	r3, [pc, #48]	; (8001794 <MX_SPI4_Init+0x64>)
 8001764:	2200      	movs	r2, #0
 8001766:	61da      	str	r2, [r3, #28]
  hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001768:	4b0a      	ldr	r3, [pc, #40]	; (8001794 <MX_SPI4_Init+0x64>)
 800176a:	2200      	movs	r2, #0
 800176c:	621a      	str	r2, [r3, #32]
  hspi4.Init.TIMode = SPI_TIMODE_DISABLE;
 800176e:	4b09      	ldr	r3, [pc, #36]	; (8001794 <MX_SPI4_Init+0x64>)
 8001770:	2200      	movs	r2, #0
 8001772:	625a      	str	r2, [r3, #36]	; 0x24
  hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001774:	4b07      	ldr	r3, [pc, #28]	; (8001794 <MX_SPI4_Init+0x64>)
 8001776:	2200      	movs	r2, #0
 8001778:	629a      	str	r2, [r3, #40]	; 0x28
  hspi4.Init.CRCPolynomial = 10;
 800177a:	4b06      	ldr	r3, [pc, #24]	; (8001794 <MX_SPI4_Init+0x64>)
 800177c:	220a      	movs	r2, #10
 800177e:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi4) != HAL_OK)
 8001780:	4804      	ldr	r0, [pc, #16]	; (8001794 <MX_SPI4_Init+0x64>)
 8001782:	f008 fa8d 	bl	8009ca0 <HAL_SPI_Init>
 8001786:	4603      	mov	r3, r0
 8001788:	2b00      	cmp	r3, #0
 800178a:	d001      	beq.n	8001790 <MX_SPI4_Init+0x60>
  {
    Error_Handler();
 800178c:	f000 f9e8 	bl	8001b60 <Error_Handler>
  }
  /* USER CODE BEGIN SPI4_Init 2 */

  /* USER CODE END SPI4_Init 2 */

}
 8001790:	bf00      	nop
 8001792:	bd80      	pop	{r7, pc}
 8001794:	20000be4 	.word	0x20000be4
 8001798:	40013400 	.word	0x40013400

0800179c <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 800179c:	b580      	push	{r7, lr}
 800179e:	b086      	sub	sp, #24
 80017a0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80017a2:	f107 0308 	add.w	r3, r7, #8
 80017a6:	2200      	movs	r2, #0
 80017a8:	601a      	str	r2, [r3, #0]
 80017aa:	605a      	str	r2, [r3, #4]
 80017ac:	609a      	str	r2, [r3, #8]
 80017ae:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017b0:	463b      	mov	r3, r7
 80017b2:	2200      	movs	r2, #0
 80017b4:	601a      	str	r2, [r3, #0]
 80017b6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 80017b8:	4b1d      	ldr	r3, [pc, #116]	; (8001830 <MX_TIM5_Init+0x94>)
 80017ba:	4a1e      	ldr	r2, [pc, #120]	; (8001834 <MX_TIM5_Init+0x98>)
 80017bc:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 45 - 1;
 80017be:	4b1c      	ldr	r3, [pc, #112]	; (8001830 <MX_TIM5_Init+0x94>)
 80017c0:	222c      	movs	r2, #44	; 0x2c
 80017c2:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017c4:	4b1a      	ldr	r3, [pc, #104]	; (8001830 <MX_TIM5_Init+0x94>)
 80017c6:	2200      	movs	r2, #0
 80017c8:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 80017ca:	4b19      	ldr	r3, [pc, #100]	; (8001830 <MX_TIM5_Init+0x94>)
 80017cc:	f04f 32ff 	mov.w	r2, #4294967295
 80017d0:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017d2:	4b17      	ldr	r3, [pc, #92]	; (8001830 <MX_TIM5_Init+0x94>)
 80017d4:	2200      	movs	r2, #0
 80017d6:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017d8:	4b15      	ldr	r3, [pc, #84]	; (8001830 <MX_TIM5_Init+0x94>)
 80017da:	2200      	movs	r2, #0
 80017dc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 80017de:	4814      	ldr	r0, [pc, #80]	; (8001830 <MX_TIM5_Init+0x94>)
 80017e0:	f009 f806 	bl	800a7f0 <HAL_TIM_Base_Init>
 80017e4:	4603      	mov	r3, r0
 80017e6:	2b00      	cmp	r3, #0
 80017e8:	d001      	beq.n	80017ee <MX_TIM5_Init+0x52>
  {
    Error_Handler();
 80017ea:	f000 f9b9 	bl	8001b60 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017ee:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80017f2:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 80017f4:	f107 0308 	add.w	r3, r7, #8
 80017f8:	4619      	mov	r1, r3
 80017fa:	480d      	ldr	r0, [pc, #52]	; (8001830 <MX_TIM5_Init+0x94>)
 80017fc:	f009 fa28 	bl	800ac50 <HAL_TIM_ConfigClockSource>
 8001800:	4603      	mov	r3, r0
 8001802:	2b00      	cmp	r3, #0
 8001804:	d001      	beq.n	800180a <MX_TIM5_Init+0x6e>
  {
    Error_Handler();
 8001806:	f000 f9ab 	bl	8001b60 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800180a:	2300      	movs	r3, #0
 800180c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800180e:	2300      	movs	r3, #0
 8001810:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001812:	463b      	mov	r3, r7
 8001814:	4619      	mov	r1, r3
 8001816:	4806      	ldr	r0, [pc, #24]	; (8001830 <MX_TIM5_Init+0x94>)
 8001818:	f009 fc40 	bl	800b09c <HAL_TIMEx_MasterConfigSynchronization>
 800181c:	4603      	mov	r3, r0
 800181e:	2b00      	cmp	r3, #0
 8001820:	d001      	beq.n	8001826 <MX_TIM5_Init+0x8a>
  {
    Error_Handler();
 8001822:	f000 f99d 	bl	8001b60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 8001826:	bf00      	nop
 8001828:	3718      	adds	r7, #24
 800182a:	46bd      	mov	sp, r7
 800182c:	bd80      	pop	{r7, pc}
 800182e:	bf00      	nop
 8001830:	20000a70 	.word	0x20000a70
 8001834:	40000c00 	.word	0x40000c00

08001838 <MX_TIM10_Init>:
  * @brief TIM10 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM10_Init(void)
{
 8001838:	b580      	push	{r7, lr}
 800183a:	af00      	add	r7, sp, #0
  /* USER CODE END TIM10_Init 0 */

  /* USER CODE BEGIN TIM10_Init 1 */

  /* USER CODE END TIM10_Init 1 */
  htim10.Instance = TIM10;
 800183c:	4b0e      	ldr	r3, [pc, #56]	; (8001878 <MX_TIM10_Init+0x40>)
 800183e:	4a0f      	ldr	r2, [pc, #60]	; (800187c <MX_TIM10_Init+0x44>)
 8001840:	601a      	str	r2, [r3, #0]
  htim10.Init.Prescaler = 45000 - 1;
 8001842:	4b0d      	ldr	r3, [pc, #52]	; (8001878 <MX_TIM10_Init+0x40>)
 8001844:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 8001848:	605a      	str	r2, [r3, #4]
  htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 800184a:	4b0b      	ldr	r3, [pc, #44]	; (8001878 <MX_TIM10_Init+0x40>)
 800184c:	2200      	movs	r2, #0
 800184e:	609a      	str	r2, [r3, #8]
  htim10.Init.Period = 50 - 1;
 8001850:	4b09      	ldr	r3, [pc, #36]	; (8001878 <MX_TIM10_Init+0x40>)
 8001852:	2231      	movs	r2, #49	; 0x31
 8001854:	60da      	str	r2, [r3, #12]
  htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001856:	4b08      	ldr	r3, [pc, #32]	; (8001878 <MX_TIM10_Init+0x40>)
 8001858:	2200      	movs	r2, #0
 800185a:	611a      	str	r2, [r3, #16]
  htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800185c:	4b06      	ldr	r3, [pc, #24]	; (8001878 <MX_TIM10_Init+0x40>)
 800185e:	2200      	movs	r2, #0
 8001860:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 8001862:	4805      	ldr	r0, [pc, #20]	; (8001878 <MX_TIM10_Init+0x40>)
 8001864:	f008 ffc4 	bl	800a7f0 <HAL_TIM_Base_Init>
 8001868:	4603      	mov	r3, r0
 800186a:	2b00      	cmp	r3, #0
 800186c:	d001      	beq.n	8001872 <MX_TIM10_Init+0x3a>
  {
    Error_Handler();
 800186e:	f000 f977 	bl	8001b60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM10_Init 2 */

  /* USER CODE END TIM10_Init 2 */

}
 8001872:	bf00      	nop
 8001874:	bd80      	pop	{r7, pc}
 8001876:	bf00      	nop
 8001878:	20000a24 	.word	0x20000a24
 800187c:	40014400 	.word	0x40014400

08001880 <MX_TIM11_Init>:
  * @brief TIM11 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM11_Init(void)
{
 8001880:	b580      	push	{r7, lr}
 8001882:	af00      	add	r7, sp, #0
  /* USER CODE END TIM11_Init 0 */

  /* USER CODE BEGIN TIM11_Init 1 */

  /* USER CODE END TIM11_Init 1 */
  htim11.Instance = TIM11;
 8001884:	4b0e      	ldr	r3, [pc, #56]	; (80018c0 <MX_TIM11_Init+0x40>)
 8001886:	4a0f      	ldr	r2, [pc, #60]	; (80018c4 <MX_TIM11_Init+0x44>)
 8001888:	601a      	str	r2, [r3, #0]
  htim11.Init.Prescaler = 45000 - 1;
 800188a:	4b0d      	ldr	r3, [pc, #52]	; (80018c0 <MX_TIM11_Init+0x40>)
 800188c:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 8001890:	605a      	str	r2, [r3, #4]
  htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001892:	4b0b      	ldr	r3, [pc, #44]	; (80018c0 <MX_TIM11_Init+0x40>)
 8001894:	2200      	movs	r2, #0
 8001896:	609a      	str	r2, [r3, #8]
  htim11.Init.Period = 100 - 1;
 8001898:	4b09      	ldr	r3, [pc, #36]	; (80018c0 <MX_TIM11_Init+0x40>)
 800189a:	2263      	movs	r2, #99	; 0x63
 800189c:	60da      	str	r2, [r3, #12]
  htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800189e:	4b08      	ldr	r3, [pc, #32]	; (80018c0 <MX_TIM11_Init+0x40>)
 80018a0:	2200      	movs	r2, #0
 80018a2:	611a      	str	r2, [r3, #16]
  htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018a4:	4b06      	ldr	r3, [pc, #24]	; (80018c0 <MX_TIM11_Init+0x40>)
 80018a6:	2200      	movs	r2, #0
 80018a8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 80018aa:	4805      	ldr	r0, [pc, #20]	; (80018c0 <MX_TIM11_Init+0x40>)
 80018ac:	f008 ffa0 	bl	800a7f0 <HAL_TIM_Base_Init>
 80018b0:	4603      	mov	r3, r0
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d001      	beq.n	80018ba <MX_TIM11_Init+0x3a>
  {
    Error_Handler();
 80018b6:	f000 f953 	bl	8001b60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM11_Init 2 */

  /* USER CODE END TIM11_Init 2 */

}
 80018ba:	bf00      	nop
 80018bc:	bd80      	pop	{r7, pc}
 80018be:	bf00      	nop
 80018c0:	20000b9c 	.word	0x20000b9c
 80018c4:	40014800 	.word	0x40014800

080018c8 <MX_TIM13_Init>:
  * @brief TIM13 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM13_Init(void)
{
 80018c8:	b580      	push	{r7, lr}
 80018ca:	af00      	add	r7, sp, #0
  /* USER CODE END TIM13_Init 0 */

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 80018cc:	4b0e      	ldr	r3, [pc, #56]	; (8001908 <MX_TIM13_Init+0x40>)
 80018ce:	4a0f      	ldr	r2, [pc, #60]	; (800190c <MX_TIM13_Init+0x44>)
 80018d0:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 45000 - 1;
 80018d2:	4b0d      	ldr	r3, [pc, #52]	; (8001908 <MX_TIM13_Init+0x40>)
 80018d4:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 80018d8:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018da:	4b0b      	ldr	r3, [pc, #44]	; (8001908 <MX_TIM13_Init+0x40>)
 80018dc:	2200      	movs	r2, #0
 80018de:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 5 - 1;
 80018e0:	4b09      	ldr	r3, [pc, #36]	; (8001908 <MX_TIM13_Init+0x40>)
 80018e2:	2204      	movs	r2, #4
 80018e4:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80018e6:	4b08      	ldr	r3, [pc, #32]	; (8001908 <MX_TIM13_Init+0x40>)
 80018e8:	2200      	movs	r2, #0
 80018ea:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018ec:	4b06      	ldr	r3, [pc, #24]	; (8001908 <MX_TIM13_Init+0x40>)
 80018ee:	2200      	movs	r2, #0
 80018f0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 80018f2:	4805      	ldr	r0, [pc, #20]	; (8001908 <MX_TIM13_Init+0x40>)
 80018f4:	f008 ff7c 	bl	800a7f0 <HAL_TIM_Base_Init>
 80018f8:	4603      	mov	r3, r0
 80018fa:	2b00      	cmp	r3, #0
 80018fc:	d001      	beq.n	8001902 <MX_TIM13_Init+0x3a>
  {
    Error_Handler();
 80018fe:	f000 f92f 	bl	8001b60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */

}
 8001902:	bf00      	nop
 8001904:	bd80      	pop	{r7, pc}
 8001906:	bf00      	nop
 8001908:	20000b10 	.word	0x20000b10
 800190c:	40001c00 	.word	0x40001c00

08001910 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001910:	b580      	push	{r7, lr}
 8001912:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001914:	4b11      	ldr	r3, [pc, #68]	; (800195c <MX_USART1_UART_Init+0x4c>)
 8001916:	4a12      	ldr	r2, [pc, #72]	; (8001960 <MX_USART1_UART_Init+0x50>)
 8001918:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800191a:	4b10      	ldr	r3, [pc, #64]	; (800195c <MX_USART1_UART_Init+0x4c>)
 800191c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001920:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001922:	4b0e      	ldr	r3, [pc, #56]	; (800195c <MX_USART1_UART_Init+0x4c>)
 8001924:	2200      	movs	r2, #0
 8001926:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001928:	4b0c      	ldr	r3, [pc, #48]	; (800195c <MX_USART1_UART_Init+0x4c>)
 800192a:	2200      	movs	r2, #0
 800192c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800192e:	4b0b      	ldr	r3, [pc, #44]	; (800195c <MX_USART1_UART_Init+0x4c>)
 8001930:	2200      	movs	r2, #0
 8001932:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001934:	4b09      	ldr	r3, [pc, #36]	; (800195c <MX_USART1_UART_Init+0x4c>)
 8001936:	220c      	movs	r2, #12
 8001938:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800193a:	4b08      	ldr	r3, [pc, #32]	; (800195c <MX_USART1_UART_Init+0x4c>)
 800193c:	2200      	movs	r2, #0
 800193e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001940:	4b06      	ldr	r3, [pc, #24]	; (800195c <MX_USART1_UART_Init+0x4c>)
 8001942:	2200      	movs	r2, #0
 8001944:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001946:	4805      	ldr	r0, [pc, #20]	; (800195c <MX_USART1_UART_Init+0x4c>)
 8001948:	f009 fc38 	bl	800b1bc <HAL_UART_Init>
 800194c:	4603      	mov	r3, r0
 800194e:	2b00      	cmp	r3, #0
 8001950:	d001      	beq.n	8001956 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8001952:	f000 f905 	bl	8001b60 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001956:	bf00      	nop
 8001958:	bd80      	pop	{r7, pc}
 800195a:	bf00      	nop
 800195c:	20000b58 	.word	0x20000b58
 8001960:	40011000 	.word	0x40011000

08001964 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001964:	b580      	push	{r7, lr}
 8001966:	b08c      	sub	sp, #48	; 0x30
 8001968:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800196a:	f107 031c 	add.w	r3, r7, #28
 800196e:	2200      	movs	r2, #0
 8001970:	601a      	str	r2, [r3, #0]
 8001972:	605a      	str	r2, [r3, #4]
 8001974:	609a      	str	r2, [r3, #8]
 8001976:	60da      	str	r2, [r3, #12]
 8001978:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800197a:	2300      	movs	r3, #0
 800197c:	61bb      	str	r3, [r7, #24]
 800197e:	4b72      	ldr	r3, [pc, #456]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 8001980:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001982:	4a71      	ldr	r2, [pc, #452]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 8001984:	f043 0310 	orr.w	r3, r3, #16
 8001988:	6313      	str	r3, [r2, #48]	; 0x30
 800198a:	4b6f      	ldr	r3, [pc, #444]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 800198c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800198e:	f003 0310 	and.w	r3, r3, #16
 8001992:	61bb      	str	r3, [r7, #24]
 8001994:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001996:	2300      	movs	r3, #0
 8001998:	617b      	str	r3, [r7, #20]
 800199a:	4b6b      	ldr	r3, [pc, #428]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 800199c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800199e:	4a6a      	ldr	r2, [pc, #424]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019a0:	f043 0304 	orr.w	r3, r3, #4
 80019a4:	6313      	str	r3, [r2, #48]	; 0x30
 80019a6:	4b68      	ldr	r3, [pc, #416]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019aa:	f003 0304 	and.w	r3, r3, #4
 80019ae:	617b      	str	r3, [r7, #20]
 80019b0:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80019b2:	2300      	movs	r3, #0
 80019b4:	613b      	str	r3, [r7, #16]
 80019b6:	4b64      	ldr	r3, [pc, #400]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019ba:	4a63      	ldr	r2, [pc, #396]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80019c0:	6313      	str	r3, [r2, #48]	; 0x30
 80019c2:	4b61      	ldr	r3, [pc, #388]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019c6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80019ca:	613b      	str	r3, [r7, #16]
 80019cc:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80019ce:	2300      	movs	r3, #0
 80019d0:	60fb      	str	r3, [r7, #12]
 80019d2:	4b5d      	ldr	r3, [pc, #372]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019d6:	4a5c      	ldr	r2, [pc, #368]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019d8:	f043 0301 	orr.w	r3, r3, #1
 80019dc:	6313      	str	r3, [r2, #48]	; 0x30
 80019de:	4b5a      	ldr	r3, [pc, #360]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019e2:	f003 0301 	and.w	r3, r3, #1
 80019e6:	60fb      	str	r3, [r7, #12]
 80019e8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80019ea:	2300      	movs	r3, #0
 80019ec:	60bb      	str	r3, [r7, #8]
 80019ee:	4b56      	ldr	r3, [pc, #344]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019f2:	4a55      	ldr	r2, [pc, #340]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019f4:	f043 0302 	orr.w	r3, r3, #2
 80019f8:	6313      	str	r3, [r2, #48]	; 0x30
 80019fa:	4b53      	ldr	r3, [pc, #332]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 80019fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019fe:	f003 0302 	and.w	r3, r3, #2
 8001a02:	60bb      	str	r3, [r7, #8]
 8001a04:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a06:	2300      	movs	r3, #0
 8001a08:	607b      	str	r3, [r7, #4]
 8001a0a:	4b4f      	ldr	r3, [pc, #316]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 8001a0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a0e:	4a4e      	ldr	r2, [pc, #312]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 8001a10:	f043 0308 	orr.w	r3, r3, #8
 8001a14:	6313      	str	r3, [r2, #48]	; 0x30
 8001a16:	4b4c      	ldr	r3, [pc, #304]	; (8001b48 <MX_GPIO_Init+0x1e4>)
 8001a18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a1a:	f003 0308 	and.w	r3, r3, #8
 8001a1e:	607b      	str	r3, [r7, #4]
 8001a20:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, ADC2_CS_Pin|en_vlv0_Pin|en_vlv1_Pin|en_vlv2_Pin, GPIO_PIN_RESET);
 8001a22:	2200      	movs	r2, #0
 8001a24:	f24e 0110 	movw	r1, #57360	; 0xe010
 8001a28:	4848      	ldr	r0, [pc, #288]	; (8001b4c <MX_GPIO_Init+0x1e8>)
 8001a2a:	f007 fbf1 	bl	8009210 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, FLASH_CS_Pin|EEPROM_CS_Pin|LED_0_Pin|LED_1_Pin
 8001a2e:	2200      	movs	r2, #0
 8001a30:	f246 31ff 	movw	r1, #25599	; 0x63ff
 8001a34:	4846      	ldr	r0, [pc, #280]	; (8001b50 <MX_GPIO_Init+0x1ec>)
 8001a36:	f007 fbeb 	bl	8009210 <HAL_GPIO_WritePin>
                          |LED_2_Pin|LED_3_Pin|TC_MUX_EN_Pin|TC_MUX_A3_Pin
                          |ADC1_CS_Pin|en_vlv10_Pin|en_vlv11_Pin|en_vlv12_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, ADC3_CS_Pin|en_vlv13_Pin|MTR0_CS_Pin|MTR1_CS_Pin, GPIO_PIN_RESET);
 8001a3a:	2200      	movs	r2, #0
 8001a3c:	f241 5104 	movw	r1, #5380	; 0x1504
 8001a40:	4844      	ldr	r0, [pc, #272]	; (8001b54 <MX_GPIO_Init+0x1f0>)
 8001a42:	f007 fbe5 	bl	8009210 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, TC_MUX_A2_Pin|TC_MUX_A1_Pin|TC_MUX_A0_Pin|en_vlv3_Pin
 8001a46:	2200      	movs	r2, #0
 8001a48:	f241 4107 	movw	r1, #5127	; 0x1407
 8001a4c:	4842      	ldr	r0, [pc, #264]	; (8001b58 <MX_GPIO_Init+0x1f4>)
 8001a4e:	f007 fbdf 	bl	8009210 <HAL_GPIO_WritePin>
                          |en_vlv4_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, en_vlv5_Pin|en_vlv6_Pin|en_vlv7_Pin|en_vlv8_Pin
 8001a52:	2200      	movs	r2, #0
 8001a54:	f44f 41be 	mov.w	r1, #24320	; 0x5f00
 8001a58:	4840      	ldr	r0, [pc, #256]	; (8001b5c <MX_GPIO_Init+0x1f8>)
 8001a5a:	f007 fbd9 	bl	8009210 <HAL_GPIO_WritePin>
                          |en_vlv9_Pin|ADC0_CS_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : ADC2_EOC_Pin */
  GPIO_InitStruct.Pin = ADC2_EOC_Pin;
 8001a5e:	2308      	movs	r3, #8
 8001a60:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001a62:	2300      	movs	r3, #0
 8001a64:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a66:	2300      	movs	r3, #0
 8001a68:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(ADC2_EOC_GPIO_Port, &GPIO_InitStruct);
 8001a6a:	f107 031c 	add.w	r3, r7, #28
 8001a6e:	4619      	mov	r1, r3
 8001a70:	4836      	ldr	r0, [pc, #216]	; (8001b4c <MX_GPIO_Init+0x1e8>)
 8001a72:	f007 fa39 	bl	8008ee8 <HAL_GPIO_Init>

  /*Configure GPIO pins : ADC2_CS_Pin en_vlv0_Pin en_vlv1_Pin en_vlv2_Pin */
  GPIO_InitStruct.Pin = ADC2_CS_Pin|en_vlv0_Pin|en_vlv1_Pin|en_vlv2_Pin;
 8001a76:	f24e 0310 	movw	r3, #57360	; 0xe010
 8001a7a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a7c:	2301      	movs	r3, #1
 8001a7e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a80:	2300      	movs	r3, #0
 8001a82:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a84:	2300      	movs	r3, #0
 8001a86:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a88:	f107 031c 	add.w	r3, r7, #28
 8001a8c:	4619      	mov	r1, r3
 8001a8e:	482f      	ldr	r0, [pc, #188]	; (8001b4c <MX_GPIO_Init+0x1e8>)
 8001a90:	f007 fa2a 	bl	8008ee8 <HAL_GPIO_Init>

  /*Configure GPIO pins : FLASH_CS_Pin EEPROM_CS_Pin LED_0_Pin LED_1_Pin
                           LED_2_Pin LED_3_Pin TC_MUX_EN_Pin TC_MUX_A3_Pin
                           ADC1_CS_Pin en_vlv10_Pin en_vlv11_Pin en_vlv12_Pin */
  GPIO_InitStruct.Pin = FLASH_CS_Pin|EEPROM_CS_Pin|LED_0_Pin|LED_1_Pin
 8001a94:	f246 33ff 	movw	r3, #25599	; 0x63ff
 8001a98:	61fb      	str	r3, [r7, #28]
                          |LED_2_Pin|LED_3_Pin|TC_MUX_EN_Pin|TC_MUX_A3_Pin
                          |ADC1_CS_Pin|en_vlv10_Pin|en_vlv11_Pin|en_vlv12_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a9a:	2301      	movs	r3, #1
 8001a9c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a9e:	2300      	movs	r3, #0
 8001aa0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001aa2:	2300      	movs	r3, #0
 8001aa4:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001aa6:	f107 031c 	add.w	r3, r7, #28
 8001aaa:	4619      	mov	r1, r3
 8001aac:	4828      	ldr	r0, [pc, #160]	; (8001b50 <MX_GPIO_Init+0x1ec>)
 8001aae:	f007 fa1b 	bl	8008ee8 <HAL_GPIO_Init>

  /*Configure GPIO pins : ADC3_EOC_Pin MTR0_BUSY_Pin MTR1_BUSY_Pin */
  GPIO_InitStruct.Pin = ADC3_EOC_Pin|MTR0_BUSY_Pin|MTR1_BUSY_Pin;
 8001ab2:	f640 2302 	movw	r3, #2562	; 0xa02
 8001ab6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001ab8:	2300      	movs	r3, #0
 8001aba:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001abc:	2300      	movs	r3, #0
 8001abe:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ac0:	f107 031c 	add.w	r3, r7, #28
 8001ac4:	4619      	mov	r1, r3
 8001ac6:	4823      	ldr	r0, [pc, #140]	; (8001b54 <MX_GPIO_Init+0x1f0>)
 8001ac8:	f007 fa0e 	bl	8008ee8 <HAL_GPIO_Init>

  /*Configure GPIO pins : ADC3_CS_Pin en_vlv13_Pin MTR0_CS_Pin MTR1_CS_Pin */
  GPIO_InitStruct.Pin = ADC3_CS_Pin|en_vlv13_Pin|MTR0_CS_Pin|MTR1_CS_Pin;
 8001acc:	f241 5304 	movw	r3, #5380	; 0x1504
 8001ad0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ad2:	2301      	movs	r3, #1
 8001ad4:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ad6:	2300      	movs	r3, #0
 8001ad8:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ada:	2300      	movs	r3, #0
 8001adc:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ade:	f107 031c 	add.w	r3, r7, #28
 8001ae2:	4619      	mov	r1, r3
 8001ae4:	481b      	ldr	r0, [pc, #108]	; (8001b54 <MX_GPIO_Init+0x1f0>)
 8001ae6:	f007 f9ff 	bl	8008ee8 <HAL_GPIO_Init>

  /*Configure GPIO pins : TC_MUX_A2_Pin TC_MUX_A1_Pin TC_MUX_A0_Pin en_vlv3_Pin
                           en_vlv4_Pin */
  GPIO_InitStruct.Pin = TC_MUX_A2_Pin|TC_MUX_A1_Pin|TC_MUX_A0_Pin|en_vlv3_Pin
 8001aea:	f241 4307 	movw	r3, #5127	; 0x1407
 8001aee:	61fb      	str	r3, [r7, #28]
                          |en_vlv4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001af0:	2301      	movs	r3, #1
 8001af2:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001af4:	2300      	movs	r3, #0
 8001af6:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001af8:	2300      	movs	r3, #0
 8001afa:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001afc:	f107 031c 	add.w	r3, r7, #28
 8001b00:	4619      	mov	r1, r3
 8001b02:	4815      	ldr	r0, [pc, #84]	; (8001b58 <MX_GPIO_Init+0x1f4>)
 8001b04:	f007 f9f0 	bl	8008ee8 <HAL_GPIO_Init>

  /*Configure GPIO pins : en_vlv5_Pin en_vlv6_Pin en_vlv7_Pin en_vlv8_Pin
                           en_vlv9_Pin ADC0_CS_Pin */
  GPIO_InitStruct.Pin = en_vlv5_Pin|en_vlv6_Pin|en_vlv7_Pin|en_vlv8_Pin
 8001b08:	f44f 43be 	mov.w	r3, #24320	; 0x5f00
 8001b0c:	61fb      	str	r3, [r7, #28]
                          |en_vlv9_Pin|ADC0_CS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b0e:	2301      	movs	r3, #1
 8001b10:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b12:	2300      	movs	r3, #0
 8001b14:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b16:	2300      	movs	r3, #0
 8001b18:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b1a:	f107 031c 	add.w	r3, r7, #28
 8001b1e:	4619      	mov	r1, r3
 8001b20:	480e      	ldr	r0, [pc, #56]	; (8001b5c <MX_GPIO_Init+0x1f8>)
 8001b22:	f007 f9e1 	bl	8008ee8 <HAL_GPIO_Init>

  /*Configure GPIO pins : ADC0_EOC_Pin ADC1_EOC_Pin */
  GPIO_InitStruct.Pin = ADC0_EOC_Pin|ADC1_EOC_Pin;
 8001b26:	f44f 4320 	mov.w	r3, #40960	; 0xa000
 8001b2a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001b2c:	2300      	movs	r3, #0
 8001b2e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b30:	2300      	movs	r3, #0
 8001b32:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b34:	f107 031c 	add.w	r3, r7, #28
 8001b38:	4619      	mov	r1, r3
 8001b3a:	4808      	ldr	r0, [pc, #32]	; (8001b5c <MX_GPIO_Init+0x1f8>)
 8001b3c:	f007 f9d4 	bl	8008ee8 <HAL_GPIO_Init>

}
 8001b40:	bf00      	nop
 8001b42:	3730      	adds	r7, #48	; 0x30
 8001b44:	46bd      	mov	sp, r7
 8001b46:	bd80      	pop	{r7, pc}
 8001b48:	40023800 	.word	0x40023800
 8001b4c:	40021000 	.word	0x40021000
 8001b50:	40020800 	.word	0x40020800
 8001b54:	40020000 	.word	0x40020000
 8001b58:	40020400 	.word	0x40020400
 8001b5c:	40020c00 	.word	0x40020c00

08001b60 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001b60:	b480      	push	{r7}
 8001b62:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001b64:	b672      	cpsid	i
}
 8001b66:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001b68:	e7fe      	b.n	8001b68 <Error_Handler+0x8>
	...

08001b6c <read_nonvolatile_variables>:
extern float init_motor_pos_deg_correction_factor;

uint8_t nonvolatile_memory_buffer[NVM_BUFFER_SZ];


uint8_t read_nonvolatile_variables() {
 8001b6c:	b580      	push	{r7, lr}
 8001b6e:	b082      	sub	sp, #8
 8001b70:	af00      	add	r7, sp, #0
	// Read nonvolatile memory buffer from flash
	read_reserved_flash_page(&flash, NVM_FLASH_PAGE_NUM, nonvolatile_memory_buffer,
 8001b72:	23fe      	movs	r3, #254	; 0xfe
 8001b74:	4a94      	ldr	r2, [pc, #592]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001b76:	2100      	movs	r1, #0
 8001b78:	4894      	ldr	r0, [pc, #592]	; (8001dcc <read_nonvolatile_variables+0x260>)
 8001b7a:	f006 ff52 	bl	8008a22 <read_reserved_flash_page>
			NVM_BUFFER_SZ);

	// save_nonvolatile_variables() always writes a 0 in the first byte
	// because the flash default byte is nonzero. If this function reads
	// a nonzero number, then all other variables are invalid.
	if (nonvolatile_memory_buffer[NVM_PARITY_BIT_ADDR] != 0) {
 8001b7e:	4b92      	ldr	r3, [pc, #584]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001b80:	781b      	ldrb	r3, [r3, #0]
 8001b82:	2b00      	cmp	r3, #0
 8001b84:	d001      	beq.n	8001b8a <read_nonvolatile_variables+0x1e>
		return 0;
 8001b86:	2300      	movs	r3, #0
 8001b88:	e22f      	b.n	8001fea <read_nonvolatile_variables+0x47e>
	}

	// Read in all variables
	// PID gains
	tanks[0].K_p = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 0] << 0) |
 8001b8a:	4b8f      	ldr	r3, [pc, #572]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001b8c:	785b      	ldrb	r3, [r3, #1]
 8001b8e:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 1] << 8)) / 100.0F;
 8001b90:	4b8d      	ldr	r3, [pc, #564]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001b92:	789b      	ldrb	r3, [r3, #2]
 8001b94:	021b      	lsls	r3, r3, #8
	tanks[0].K_p = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 0] << 0) |
 8001b96:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 1] << 8)) / 100.0F;
 8001b98:	ee07 3a90 	vmov	s15, r3
 8001b9c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001ba0:	eddf 6a8b 	vldr	s13, [pc, #556]	; 8001dd0 <read_nonvolatile_variables+0x264>
 8001ba4:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[0].K_p = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 0] << 0) |
 8001ba8:	4b8a      	ldr	r3, [pc, #552]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001baa:	edc3 7a16 	vstr	s15, [r3, #88]	; 0x58
	tanks[0].K_i = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 2] << 0) |
 8001bae:	4b86      	ldr	r3, [pc, #536]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001bb0:	78db      	ldrb	r3, [r3, #3]
 8001bb2:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 3] << 8)) / 100.0F;
 8001bb4:	4b84      	ldr	r3, [pc, #528]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001bb6:	791b      	ldrb	r3, [r3, #4]
 8001bb8:	021b      	lsls	r3, r3, #8
	tanks[0].K_i = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 2] << 0) |
 8001bba:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 3] << 8)) / 100.0F;
 8001bbc:	ee07 3a90 	vmov	s15, r3
 8001bc0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001bc4:	eddf 6a82 	vldr	s13, [pc, #520]	; 8001dd0 <read_nonvolatile_variables+0x264>
 8001bc8:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[0].K_i = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 2] << 0) |
 8001bcc:	4b81      	ldr	r3, [pc, #516]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001bce:	edc3 7a17 	vstr	s15, [r3, #92]	; 0x5c
	tanks[0].K_d = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 4] << 0) |
 8001bd2:	4b7d      	ldr	r3, [pc, #500]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001bd4:	795b      	ldrb	r3, [r3, #5]
 8001bd6:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 5] << 8)) / 100.0F;
 8001bd8:	4b7b      	ldr	r3, [pc, #492]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001bda:	799b      	ldrb	r3, [r3, #6]
 8001bdc:	021b      	lsls	r3, r3, #8
	tanks[0].K_d = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 4] << 0) |
 8001bde:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 5] << 8)) / 100.0F;
 8001be0:	ee07 3a90 	vmov	s15, r3
 8001be4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001be8:	eddf 6a79 	vldr	s13, [pc, #484]	; 8001dd0 <read_nonvolatile_variables+0x264>
 8001bec:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[0].K_d = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 4] << 0) |
 8001bf0:	4b78      	ldr	r3, [pc, #480]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001bf2:	edc3 7a18 	vstr	s15, [r3, #96]	; 0x60
	tanks[1].K_p = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 6] << 0) |
 8001bf6:	4b74      	ldr	r3, [pc, #464]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001bf8:	79db      	ldrb	r3, [r3, #7]
 8001bfa:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 7] << 8)) / 100.0F;
 8001bfc:	4b72      	ldr	r3, [pc, #456]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001bfe:	7a1b      	ldrb	r3, [r3, #8]
 8001c00:	021b      	lsls	r3, r3, #8
	tanks[1].K_p = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 6] << 0) |
 8001c02:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 7] << 8)) / 100.0F;
 8001c04:	ee07 3a90 	vmov	s15, r3
 8001c08:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001c0c:	eddf 6a70 	vldr	s13, [pc, #448]	; 8001dd0 <read_nonvolatile_variables+0x264>
 8001c10:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[1].K_p = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 6] << 0) |
 8001c14:	4b6f      	ldr	r3, [pc, #444]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001c16:	edc3 7a37 	vstr	s15, [r3, #220]	; 0xdc
	tanks[1].K_i = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 8] << 0) |
 8001c1a:	4b6b      	ldr	r3, [pc, #428]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001c1c:	7a5b      	ldrb	r3, [r3, #9]
 8001c1e:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 9] << 8)) / 100.0F;
 8001c20:	4b69      	ldr	r3, [pc, #420]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001c22:	7a9b      	ldrb	r3, [r3, #10]
 8001c24:	021b      	lsls	r3, r3, #8
	tanks[1].K_i = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 8] << 0) |
 8001c26:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 9] << 8)) / 100.0F;
 8001c28:	ee07 3a90 	vmov	s15, r3
 8001c2c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001c30:	eddf 6a67 	vldr	s13, [pc, #412]	; 8001dd0 <read_nonvolatile_variables+0x264>
 8001c34:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[1].K_i = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 8] << 0) |
 8001c38:	4b66      	ldr	r3, [pc, #408]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001c3a:	edc3 7a38 	vstr	s15, [r3, #224]	; 0xe0
	tanks[1].K_d = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 10] << 0) |
 8001c3e:	4b62      	ldr	r3, [pc, #392]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001c40:	7adb      	ldrb	r3, [r3, #11]
 8001c42:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 11] << 8)) / 100.0F;
 8001c44:	4b60      	ldr	r3, [pc, #384]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001c46:	7b1b      	ldrb	r3, [r3, #12]
 8001c48:	021b      	lsls	r3, r3, #8
	tanks[1].K_d = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 10] << 0) |
 8001c4a:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 11] << 8)) / 100.0F;
 8001c4c:	ee07 3a90 	vmov	s15, r3
 8001c50:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001c54:	eddf 6a5e 	vldr	s13, [pc, #376]	; 8001dd0 <read_nonvolatile_variables+0x264>
 8001c58:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[1].K_d = ((nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 10] << 0) |
 8001c5c:	4b5d      	ldr	r3, [pc, #372]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001c5e:	edc3 7a39 	vstr	s15, [r3, #228]	; 0xe4

	// Target pressure setpoints
	tanks[0].target_pres = ((nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 0] << 0) |
 8001c62:	4b59      	ldr	r3, [pc, #356]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001c64:	7b5b      	ldrb	r3, [r3, #13]
 8001c66:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 1] << 8) |
 8001c68:	4b57      	ldr	r3, [pc, #348]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001c6a:	7b9b      	ldrb	r3, [r3, #14]
 8001c6c:	021b      	lsls	r3, r3, #8
	tanks[0].target_pres = ((nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 0] << 0) |
 8001c6e:	431a      	orrs	r2, r3
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 2] << 16) |
 8001c70:	4b55      	ldr	r3, [pc, #340]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001c72:	7bdb      	ldrb	r3, [r3, #15]
 8001c74:	041b      	lsls	r3, r3, #16
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 1] << 8) |
 8001c76:	431a      	orrs	r2, r3
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 3] << 24)) / 100.0F;
 8001c78:	4b53      	ldr	r3, [pc, #332]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001c7a:	7c1b      	ldrb	r3, [r3, #16]
 8001c7c:	061b      	lsls	r3, r3, #24
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 2] << 16) |
 8001c7e:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 3] << 24)) / 100.0F;
 8001c80:	ee07 3a90 	vmov	s15, r3
 8001c84:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001c88:	eddf 6a51 	vldr	s13, [pc, #324]	; 8001dd0 <read_nonvolatile_variables+0x264>
 8001c8c:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[0].target_pres = ((nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 0] << 0) |
 8001c90:	4b50      	ldr	r3, [pc, #320]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001c92:	edc3 7a10 	vstr	s15, [r3, #64]	; 0x40
	tanks[1].target_pres = ((nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 4] << 0) |
 8001c96:	4b4c      	ldr	r3, [pc, #304]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001c98:	7c5b      	ldrb	r3, [r3, #17]
 8001c9a:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 5] << 8) |
 8001c9c:	4b4a      	ldr	r3, [pc, #296]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001c9e:	7c9b      	ldrb	r3, [r3, #18]
 8001ca0:	021b      	lsls	r3, r3, #8
	tanks[1].target_pres = ((nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 4] << 0) |
 8001ca2:	431a      	orrs	r2, r3
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 6] << 16) |
 8001ca4:	4b48      	ldr	r3, [pc, #288]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001ca6:	7cdb      	ldrb	r3, [r3, #19]
 8001ca8:	041b      	lsls	r3, r3, #16
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 5] << 8) |
 8001caa:	431a      	orrs	r2, r3
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 7] << 24)) / 100.0F;
 8001cac:	4b46      	ldr	r3, [pc, #280]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001cae:	7d1b      	ldrb	r3, [r3, #20]
 8001cb0:	061b      	lsls	r3, r3, #24
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 6] << 16) |
 8001cb2:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 7] << 24)) / 100.0F;
 8001cb4:	ee07 3a90 	vmov	s15, r3
 8001cb8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001cbc:	eddf 6a44 	vldr	s13, [pc, #272]	; 8001dd0 <read_nonvolatile_variables+0x264>
 8001cc0:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[1].target_pres = ((nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 4] << 0) |
 8001cc4:	4b43      	ldr	r3, [pc, #268]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001cc6:	edc3 7a31 	vstr	s15, [r3, #196]	; 0xc4

	// Control valve pressure thresholds
	tanks[0].PID_ctrl_vlv_high_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 0] << 0) |
 8001cca:	4b3f      	ldr	r3, [pc, #252]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001ccc:	7d5b      	ldrb	r3, [r3, #21]
 8001cce:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 1] << 8)) / 10.0F;
 8001cd0:	4b3d      	ldr	r3, [pc, #244]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001cd2:	7d9b      	ldrb	r3, [r3, #22]
 8001cd4:	021b      	lsls	r3, r3, #8
	tanks[0].PID_ctrl_vlv_high_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 0] << 0) |
 8001cd6:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 1] << 8)) / 10.0F;
 8001cd8:	ee07 3a90 	vmov	s15, r3
 8001cdc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001ce0:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001ce4:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[0].PID_ctrl_vlv_high_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 0] << 0) |
 8001ce8:	4b3a      	ldr	r3, [pc, #232]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001cea:	edc3 7a14 	vstr	s15, [r3, #80]	; 0x50
	tanks[1].PID_ctrl_vlv_high_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 2] << 0) |
 8001cee:	4b36      	ldr	r3, [pc, #216]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001cf0:	7ddb      	ldrb	r3, [r3, #23]
 8001cf2:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 3] << 8)) / 10.0F;
 8001cf4:	4b34      	ldr	r3, [pc, #208]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001cf6:	7e1b      	ldrb	r3, [r3, #24]
 8001cf8:	021b      	lsls	r3, r3, #8
	tanks[1].PID_ctrl_vlv_high_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 2] << 0) |
 8001cfa:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 3] << 8)) / 10.0F;
 8001cfc:	ee07 3a90 	vmov	s15, r3
 8001d00:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001d04:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001d08:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[1].PID_ctrl_vlv_high_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 2] << 0) |
 8001d0c:	4b31      	ldr	r3, [pc, #196]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001d0e:	edc3 7a35 	vstr	s15, [r3, #212]	; 0xd4

	tanks[0].PID_ctrl_vlv_low_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 0] << 0) |
 8001d12:	4b2d      	ldr	r3, [pc, #180]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001d14:	7f5b      	ldrb	r3, [r3, #29]
 8001d16:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 1] << 8)) / 10.0F;
 8001d18:	4b2b      	ldr	r3, [pc, #172]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001d1a:	7f9b      	ldrb	r3, [r3, #30]
 8001d1c:	021b      	lsls	r3, r3, #8
	tanks[0].PID_ctrl_vlv_low_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 0] << 0) |
 8001d1e:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 1] << 8)) / 10.0F;
 8001d20:	ee07 3a90 	vmov	s15, r3
 8001d24:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001d28:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001d2c:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[0].PID_ctrl_vlv_low_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 0] << 0) |
 8001d30:	4b28      	ldr	r3, [pc, #160]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001d32:	edc3 7a13 	vstr	s15, [r3, #76]	; 0x4c
	tanks[1].PID_ctrl_vlv_low_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 2] << 0) |
 8001d36:	4b24      	ldr	r3, [pc, #144]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001d38:	7fdb      	ldrb	r3, [r3, #31]
 8001d3a:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 3] << 8)) / 10.0F;
 8001d3c:	4b22      	ldr	r3, [pc, #136]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001d3e:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001d42:	021b      	lsls	r3, r3, #8
	tanks[1].PID_ctrl_vlv_low_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 2] << 0) |
 8001d44:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 3] << 8)) / 10.0F;
 8001d46:	ee07 3a90 	vmov	s15, r3
 8001d4a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001d4e:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001d52:	eec7 7a26 	vdiv.f32	s15, s14, s13
	tanks[1].PID_ctrl_vlv_low_pres = ((nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 2] << 0) |
 8001d56:	4b1f      	ldr	r3, [pc, #124]	; (8001dd4 <read_nonvolatile_variables+0x268>)
 8001d58:	edc3 7a34 	vstr	s15, [r3, #208]	; 0xd0

	// Ambient pressures
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 8001d5c:	2300      	movs	r3, #0
 8001d5e:	71fb      	strb	r3, [r7, #7]
 8001d60:	e02c      	b.n	8001dbc <read_nonvolatile_variables+0x250>
		pt_ambients[i] = ((nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 0] << 0) |
 8001d62:	79fb      	ldrb	r3, [r7, #7]
 8001d64:	009b      	lsls	r3, r3, #2
 8001d66:	3325      	adds	r3, #37	; 0x25
 8001d68:	4a17      	ldr	r2, [pc, #92]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001d6a:	5cd3      	ldrb	r3, [r2, r3]
 8001d6c:	4619      	mov	r1, r3
				(nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 1] << 8) |
 8001d6e:	79fb      	ldrb	r3, [r7, #7]
 8001d70:	009b      	lsls	r3, r3, #2
 8001d72:	3326      	adds	r3, #38	; 0x26
 8001d74:	4a14      	ldr	r2, [pc, #80]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001d76:	5cd3      	ldrb	r3, [r2, r3]
 8001d78:	021b      	lsls	r3, r3, #8
		pt_ambients[i] = ((nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 0] << 0) |
 8001d7a:	ea41 0203 	orr.w	r2, r1, r3
				(nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 2] << 16) |
 8001d7e:	79fb      	ldrb	r3, [r7, #7]
 8001d80:	009b      	lsls	r3, r3, #2
 8001d82:	3327      	adds	r3, #39	; 0x27
 8001d84:	4910      	ldr	r1, [pc, #64]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001d86:	5ccb      	ldrb	r3, [r1, r3]
 8001d88:	041b      	lsls	r3, r3, #16
				(nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 1] << 8) |
 8001d8a:	431a      	orrs	r2, r3
				(nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 3] << 24)) / 10.0F;
 8001d8c:	79fb      	ldrb	r3, [r7, #7]
 8001d8e:	330a      	adds	r3, #10
 8001d90:	009b      	lsls	r3, r3, #2
 8001d92:	490d      	ldr	r1, [pc, #52]	; (8001dc8 <read_nonvolatile_variables+0x25c>)
 8001d94:	5ccb      	ldrb	r3, [r1, r3]
 8001d96:	061b      	lsls	r3, r3, #24
				(nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 2] << 16) |
 8001d98:	4313      	orrs	r3, r2
				(nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 3] << 24)) / 10.0F;
 8001d9a:	ee07 3a90 	vmov	s15, r3
 8001d9e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
		pt_ambients[i] = ((nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 0] << 0) |
 8001da2:	79fb      	ldrb	r3, [r7, #7]
				(nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 3] << 24)) / 10.0F;
 8001da4:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001da8:	eec7 7a26 	vdiv.f32	s15, s14, s13
		pt_ambients[i] = ((nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 0] << 0) |
 8001dac:	4a0a      	ldr	r2, [pc, #40]	; (8001dd8 <read_nonvolatile_variables+0x26c>)
 8001dae:	009b      	lsls	r3, r3, #2
 8001db0:	4413      	add	r3, r2
 8001db2:	edc3 7a00 	vstr	s15, [r3]
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 8001db6:	79fb      	ldrb	r3, [r7, #7]
 8001db8:	3301      	adds	r3, #1
 8001dba:	71fb      	strb	r3, [r7, #7]
 8001dbc:	79fb      	ldrb	r3, [r7, #7]
 8001dbe:	2b13      	cmp	r3, #19
 8001dc0:	d9cf      	bls.n	8001d62 <read_nonvolatile_variables+0x1f6>
	}

	// Potentiometer ambients
	for (uint8_t i = 0; i < NUM_POTS; i++) {
 8001dc2:	2300      	movs	r3, #0
 8001dc4:	71bb      	strb	r3, [r7, #6]
 8001dc6:	e036      	b.n	8001e36 <read_nonvolatile_variables+0x2ca>
 8001dc8:	20000dc4 	.word	0x20000dc4
 8001dcc:	20000ec4 	.word	0x20000ec4
 8001dd0:	42c80000 	.word	0x42c80000
 8001dd4:	200004fc 	.word	0x200004fc
 8001dd8:	200002a8 	.word	0x200002a8
		pot_ambients[i] = ((nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 0] << 0) |
 8001ddc:	79bb      	ldrb	r3, [r7, #6]
 8001dde:	009b      	lsls	r3, r3, #2
 8001de0:	3375      	adds	r3, #117	; 0x75
 8001de2:	4a84      	ldr	r2, [pc, #528]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001de4:	5cd3      	ldrb	r3, [r2, r3]
 8001de6:	4619      	mov	r1, r3
				(nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 1] << 8) |
 8001de8:	79bb      	ldrb	r3, [r7, #6]
 8001dea:	009b      	lsls	r3, r3, #2
 8001dec:	3376      	adds	r3, #118	; 0x76
 8001dee:	4a81      	ldr	r2, [pc, #516]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001df0:	5cd3      	ldrb	r3, [r2, r3]
 8001df2:	021b      	lsls	r3, r3, #8
		pot_ambients[i] = ((nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 0] << 0) |
 8001df4:	ea41 0203 	orr.w	r2, r1, r3
				(nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 2] << 16) |
 8001df8:	79bb      	ldrb	r3, [r7, #6]
 8001dfa:	009b      	lsls	r3, r3, #2
 8001dfc:	3377      	adds	r3, #119	; 0x77
 8001dfe:	497d      	ldr	r1, [pc, #500]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e00:	5ccb      	ldrb	r3, [r1, r3]
 8001e02:	041b      	lsls	r3, r3, #16
				(nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 1] << 8) |
 8001e04:	431a      	orrs	r2, r3
				(nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 3] << 24)) / 10.0F;
 8001e06:	79bb      	ldrb	r3, [r7, #6]
 8001e08:	331e      	adds	r3, #30
 8001e0a:	009b      	lsls	r3, r3, #2
 8001e0c:	4979      	ldr	r1, [pc, #484]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e0e:	5ccb      	ldrb	r3, [r1, r3]
 8001e10:	061b      	lsls	r3, r3, #24
				(nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 2] << 16) |
 8001e12:	4313      	orrs	r3, r2
				(nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 3] << 24)) / 10.0F;
 8001e14:	ee07 3a90 	vmov	s15, r3
 8001e18:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
		pot_ambients[i] = ((nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 0] << 0) |
 8001e1c:	79bb      	ldrb	r3, [r7, #6]
				(nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 3] << 24)) / 10.0F;
 8001e1e:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001e22:	eec7 7a26 	vdiv.f32	s15, s14, s13
		pot_ambients[i] = ((nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 0] << 0) |
 8001e26:	4a74      	ldr	r2, [pc, #464]	; (8001ff8 <read_nonvolatile_variables+0x48c>)
 8001e28:	009b      	lsls	r3, r3, #2
 8001e2a:	4413      	add	r3, r2
 8001e2c:	edc3 7a00 	vstr	s15, [r3]
	for (uint8_t i = 0; i < NUM_POTS; i++) {
 8001e30:	79bb      	ldrb	r3, [r7, #6]
 8001e32:	3301      	adds	r3, #1
 8001e34:	71bb      	strb	r3, [r7, #6]
 8001e36:	79bb      	ldrb	r3, [r7, #6]
 8001e38:	2b01      	cmp	r3, #1
 8001e3a:	d9cf      	bls.n	8001ddc <read_nonvolatile_variables+0x270>
	}

	// Tank enable flags
	tanks[0].tank_enable = nonvolatile_memory_buffer[NVM_TANK_ENABLE_ADDR + 0];
 8001e3c:	4b6d      	ldr	r3, [pc, #436]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e3e:	f893 207d 	ldrb.w	r2, [r3, #125]	; 0x7d
 8001e42:	4b6e      	ldr	r3, [pc, #440]	; (8001ffc <read_nonvolatile_variables+0x490>)
 8001e44:	701a      	strb	r2, [r3, #0]
	tanks[1].tank_enable = nonvolatile_memory_buffer[NVM_TANK_ENABLE_ADDR + 1];
 8001e46:	4b6b      	ldr	r3, [pc, #428]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e48:	f893 207e 	ldrb.w	r2, [r3, #126]	; 0x7e
 8001e4c:	4b6b      	ldr	r3, [pc, #428]	; (8001ffc <read_nonvolatile_variables+0x490>)
 8001e4e:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

	// Autosequence timings
	autosequence.hotfire_test_duration_ms = ((nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 0] << 0) |
 8001e52:	4b68      	ldr	r3, [pc, #416]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e54:	f893 307f 	ldrb.w	r3, [r3, #127]	; 0x7f
 8001e58:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 1] << 8) |
 8001e5a:	4b66      	ldr	r3, [pc, #408]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e5c:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8001e60:	021b      	lsls	r3, r3, #8
	autosequence.hotfire_test_duration_ms = ((nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 0] << 0) |
 8001e62:	431a      	orrs	r2, r3
			(nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 2] << 16) |
 8001e64:	4b63      	ldr	r3, [pc, #396]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e66:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8001e6a:	041b      	lsls	r3, r3, #16
			(nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 1] << 8) |
 8001e6c:	431a      	orrs	r2, r3
			(nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 3] << 24));
 8001e6e:	4b61      	ldr	r3, [pc, #388]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e70:	f893 3082 	ldrb.w	r3, [r3, #130]	; 0x82
 8001e74:	061b      	lsls	r3, r3, #24
			(nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 2] << 16) |
 8001e76:	4313      	orrs	r3, r2
 8001e78:	461a      	mov	r2, r3
	autosequence.hotfire_test_duration_ms = ((nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 0] << 0) |
 8001e7a:	4b61      	ldr	r3, [pc, #388]	; (8002000 <read_nonvolatile_variables+0x494>)
 8001e7c:	615a      	str	r2, [r3, #20]

	autosequence.ignition_ignitor_on_delay_ms = ((nonvolatile_memory_buffer[NVM_IGNITOR_ON_DELAY_ADDR + 0] << 0) |
 8001e7e:	4b5d      	ldr	r3, [pc, #372]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e80:	f893 3083 	ldrb.w	r3, [r3, #131]	; 0x83
 8001e84:	b21a      	sxth	r2, r3
			(nonvolatile_memory_buffer[NVM_IGNITOR_ON_DELAY_ADDR + 1] << 8));
 8001e86:	4b5b      	ldr	r3, [pc, #364]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e88:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 8001e8c:	021b      	lsls	r3, r3, #8
	autosequence.ignition_ignitor_on_delay_ms = ((nonvolatile_memory_buffer[NVM_IGNITOR_ON_DELAY_ADDR + 0] << 0) |
 8001e8e:	b21b      	sxth	r3, r3
 8001e90:	4313      	orrs	r3, r2
 8001e92:	b21b      	sxth	r3, r3
 8001e94:	b29a      	uxth	r2, r3
 8001e96:	4b5a      	ldr	r3, [pc, #360]	; (8002000 <read_nonvolatile_variables+0x494>)
 8001e98:	809a      	strh	r2, [r3, #4]

	autosequence.ignition_ignitor_high_duration_ms = ((nonvolatile_memory_buffer[NVM_IGNITOR_HIGH_DURATION_ADDR + 0] << 0) |
 8001e9a:	4b56      	ldr	r3, [pc, #344]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001e9c:	f893 3085 	ldrb.w	r3, [r3, #133]	; 0x85
 8001ea0:	b21a      	sxth	r2, r3
			(nonvolatile_memory_buffer[NVM_IGNITOR_HIGH_DURATION_ADDR + 1] << 8));
 8001ea2:	4b54      	ldr	r3, [pc, #336]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001ea4:	f893 3086 	ldrb.w	r3, [r3, #134]	; 0x86
 8001ea8:	021b      	lsls	r3, r3, #8
	autosequence.ignition_ignitor_high_duration_ms = ((nonvolatile_memory_buffer[NVM_IGNITOR_HIGH_DURATION_ADDR + 0] << 0) |
 8001eaa:	b21b      	sxth	r3, r3
 8001eac:	4313      	orrs	r3, r2
 8001eae:	b21b      	sxth	r3, r3
 8001eb0:	b29a      	uxth	r2, r3
 8001eb2:	4b53      	ldr	r3, [pc, #332]	; (8002000 <read_nonvolatile_variables+0x494>)
 8001eb4:	80da      	strh	r2, [r3, #6]

	autosequence.hotfire_fuel_mpv_delay_ms = nonvolatile_memory_buffer[NVM_FUEL_MPV_OPENING_DELAY_ADDR];
 8001eb6:	4b4f      	ldr	r3, [pc, #316]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001eb8:	f893 2087 	ldrb.w	r2, [r3, #135]	; 0x87
 8001ebc:	4b50      	ldr	r3, [pc, #320]	; (8002000 <read_nonvolatile_variables+0x494>)
 8001ebe:	721a      	strb	r2, [r3, #8]

	autosequence.hotfire_film_cooling_on_time_ms = ((nonvolatile_memory_buffer[NVM_FILM_COOLING_ON_TIME_ADDR + 0] << 0) |
 8001ec0:	4b4c      	ldr	r3, [pc, #304]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001ec2:	f893 3088 	ldrb.w	r3, [r3, #136]	; 0x88
 8001ec6:	b21a      	sxth	r2, r3
			(nonvolatile_memory_buffer[NVM_FILM_COOLING_ON_TIME_ADDR + 1] << 8));
 8001ec8:	4b4a      	ldr	r3, [pc, #296]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001eca:	f893 3089 	ldrb.w	r3, [r3, #137]	; 0x89
 8001ece:	021b      	lsls	r3, r3, #8
	autosequence.hotfire_film_cooling_on_time_ms = ((nonvolatile_memory_buffer[NVM_FILM_COOLING_ON_TIME_ADDR + 0] << 0) |
 8001ed0:	b21b      	sxth	r3, r3
 8001ed2:	4313      	orrs	r3, r2
 8001ed4:	b21b      	sxth	r3, r3
 8001ed6:	b29a      	uxth	r2, r3
 8001ed8:	4b49      	ldr	r3, [pc, #292]	; (8002000 <read_nonvolatile_variables+0x494>)
 8001eda:	815a      	strh	r2, [r3, #10]

	autosequence.hotfire_pid_start_delay_ms = ((nonvolatile_memory_buffer[NVM_PID_DELAY_ADDR + 0] << 0) |
 8001edc:	4b45      	ldr	r3, [pc, #276]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001ede:	f893 308a 	ldrb.w	r3, [r3, #138]	; 0x8a
 8001ee2:	b21a      	sxth	r2, r3
			(nonvolatile_memory_buffer[NVM_PID_DELAY_ADDR + 1] << 8));
 8001ee4:	4b43      	ldr	r3, [pc, #268]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001ee6:	f893 308b 	ldrb.w	r3, [r3, #139]	; 0x8b
 8001eea:	021b      	lsls	r3, r3, #8
	autosequence.hotfire_pid_start_delay_ms = ((nonvolatile_memory_buffer[NVM_PID_DELAY_ADDR + 0] << 0) |
 8001eec:	b21b      	sxth	r3, r3
 8001eee:	4313      	orrs	r3, r2
 8001ef0:	b21b      	sxth	r3, r3
 8001ef2:	b29a      	uxth	r2, r3
 8001ef4:	4b42      	ldr	r3, [pc, #264]	; (8002000 <read_nonvolatile_variables+0x494>)
 8001ef6:	819a      	strh	r2, [r3, #12]

	// Initial motor position factor
	init_motor_pos_deg_correction_factor = ((nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 0] << 0) |
 8001ef8:	4b3e      	ldr	r3, [pc, #248]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001efa:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
 8001efe:	461a      	mov	r2, r3
			(nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 1] << 8) |
 8001f00:	4b3c      	ldr	r3, [pc, #240]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001f02:	f893 308d 	ldrb.w	r3, [r3, #141]	; 0x8d
 8001f06:	021b      	lsls	r3, r3, #8
	init_motor_pos_deg_correction_factor = ((nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 0] << 0) |
 8001f08:	431a      	orrs	r2, r3
			(nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 2] << 16) |
 8001f0a:	4b3a      	ldr	r3, [pc, #232]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001f0c:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8001f10:	041b      	lsls	r3, r3, #16
			(nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 1] << 8) |
 8001f12:	431a      	orrs	r2, r3
			(nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 3] << 24)) / 10000.0F;
 8001f14:	4b37      	ldr	r3, [pc, #220]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001f16:	f893 308f 	ldrb.w	r3, [r3, #143]	; 0x8f
 8001f1a:	061b      	lsls	r3, r3, #24
			(nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 2] << 16) |
 8001f1c:	4313      	orrs	r3, r2
			(nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 3] << 24)) / 10000.0F;
 8001f1e:	ee07 3a90 	vmov	s15, r3
 8001f22:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001f26:	eddf 6a37 	vldr	s13, [pc, #220]	; 8002004 <read_nonvolatile_variables+0x498>
 8001f2a:	eec7 7a26 	vdiv.f32	s15, s14, s13
	init_motor_pos_deg_correction_factor = ((nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 0] << 0) |
 8001f2e:	4b36      	ldr	r3, [pc, #216]	; (8002008 <read_nonvolatile_variables+0x49c>)
 8001f30:	edc3 7a00 	vstr	s15, [r3]

	// Pressure transducer calibrations
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 8001f34:	2300      	movs	r3, #0
 8001f36:	717b      	strb	r3, [r7, #5]
 8001f38:	e053      	b.n	8001fe2 <read_nonvolatile_variables+0x476>
		pt_cal_lower_voltage[i] = ((nonvolatile_memory_buffer[NVM_PT_LOWER_VOLTAGE_ADDR + 2*i + 0] << 0) |
 8001f3a:	797b      	ldrb	r3, [r7, #5]
 8001f3c:	335c      	adds	r3, #92	; 0x5c
 8001f3e:	005b      	lsls	r3, r3, #1
 8001f40:	4a2c      	ldr	r2, [pc, #176]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001f42:	5cd3      	ldrb	r3, [r2, r3]
 8001f44:	4619      	mov	r1, r3
				(nonvolatile_memory_buffer[NVM_PT_LOWER_VOLTAGE_ADDR + 2*i + 1] << 8)) / 10.0F;
 8001f46:	797b      	ldrb	r3, [r7, #5]
 8001f48:	335c      	adds	r3, #92	; 0x5c
 8001f4a:	005b      	lsls	r3, r3, #1
 8001f4c:	3301      	adds	r3, #1
 8001f4e:	4a29      	ldr	r2, [pc, #164]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001f50:	5cd3      	ldrb	r3, [r2, r3]
 8001f52:	021b      	lsls	r3, r3, #8
		pt_cal_lower_voltage[i] = ((nonvolatile_memory_buffer[NVM_PT_LOWER_VOLTAGE_ADDR + 2*i + 0] << 0) |
 8001f54:	430b      	orrs	r3, r1
				(nonvolatile_memory_buffer[NVM_PT_LOWER_VOLTAGE_ADDR + 2*i + 1] << 8)) / 10.0F;
 8001f56:	ee07 3a90 	vmov	s15, r3
 8001f5a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
		pt_cal_lower_voltage[i] = ((nonvolatile_memory_buffer[NVM_PT_LOWER_VOLTAGE_ADDR + 2*i + 0] << 0) |
 8001f5e:	797b      	ldrb	r3, [r7, #5]
				(nonvolatile_memory_buffer[NVM_PT_LOWER_VOLTAGE_ADDR + 2*i + 1] << 8)) / 10.0F;
 8001f60:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001f64:	eec7 7a26 	vdiv.f32	s15, s14, s13
		pt_cal_lower_voltage[i] = ((nonvolatile_memory_buffer[NVM_PT_LOWER_VOLTAGE_ADDR + 2*i + 0] << 0) |
 8001f68:	4a28      	ldr	r2, [pc, #160]	; (800200c <read_nonvolatile_variables+0x4a0>)
 8001f6a:	009b      	lsls	r3, r3, #2
 8001f6c:	4413      	add	r3, r2
 8001f6e:	edc3 7a00 	vstr	s15, [r3]
		pt_cal_upper_voltage[i] = ((nonvolatile_memory_buffer[NVM_PT_UPPER_VOLTAGE_ADDR + 2*i + 0] << 0) |
 8001f72:	797b      	ldrb	r3, [r7, #5]
 8001f74:	3348      	adds	r3, #72	; 0x48
 8001f76:	005b      	lsls	r3, r3, #1
 8001f78:	4a1e      	ldr	r2, [pc, #120]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001f7a:	5cd3      	ldrb	r3, [r2, r3]
 8001f7c:	4619      	mov	r1, r3
				(nonvolatile_memory_buffer[NVM_PT_UPPER_VOLTAGE_ADDR + 2*i + 1] << 8)) / 10.0F;
 8001f7e:	797b      	ldrb	r3, [r7, #5]
 8001f80:	3348      	adds	r3, #72	; 0x48
 8001f82:	005b      	lsls	r3, r3, #1
 8001f84:	3301      	adds	r3, #1
 8001f86:	4a1b      	ldr	r2, [pc, #108]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001f88:	5cd3      	ldrb	r3, [r2, r3]
 8001f8a:	021b      	lsls	r3, r3, #8
		pt_cal_upper_voltage[i] = ((nonvolatile_memory_buffer[NVM_PT_UPPER_VOLTAGE_ADDR + 2*i + 0] << 0) |
 8001f8c:	430b      	orrs	r3, r1
				(nonvolatile_memory_buffer[NVM_PT_UPPER_VOLTAGE_ADDR + 2*i + 1] << 8)) / 10.0F;
 8001f8e:	ee07 3a90 	vmov	s15, r3
 8001f92:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
		pt_cal_upper_voltage[i] = ((nonvolatile_memory_buffer[NVM_PT_UPPER_VOLTAGE_ADDR + 2*i + 0] << 0) |
 8001f96:	797b      	ldrb	r3, [r7, #5]
				(nonvolatile_memory_buffer[NVM_PT_UPPER_VOLTAGE_ADDR + 2*i + 1] << 8)) / 10.0F;
 8001f98:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001f9c:	eec7 7a26 	vdiv.f32	s15, s14, s13
		pt_cal_upper_voltage[i] = ((nonvolatile_memory_buffer[NVM_PT_UPPER_VOLTAGE_ADDR + 2*i + 0] << 0) |
 8001fa0:	4a1b      	ldr	r2, [pc, #108]	; (8002010 <read_nonvolatile_variables+0x4a4>)
 8001fa2:	009b      	lsls	r3, r3, #2
 8001fa4:	4413      	add	r3, r2
 8001fa6:	edc3 7a00 	vstr	s15, [r3]
		pt_cal_upper_pressure[i] = ((nonvolatile_memory_buffer[NVM_PT_PRESSURE_RANGE_ADDR + 2*i + 0] << 0) |
 8001faa:	797b      	ldrb	r3, [r7, #5]
 8001fac:	3370      	adds	r3, #112	; 0x70
 8001fae:	005b      	lsls	r3, r3, #1
 8001fb0:	4a10      	ldr	r2, [pc, #64]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001fb2:	5cd3      	ldrb	r3, [r2, r3]
 8001fb4:	4619      	mov	r1, r3
				(nonvolatile_memory_buffer[NVM_PT_PRESSURE_RANGE_ADDR + 2*i + 1] << 8));
 8001fb6:	797b      	ldrb	r3, [r7, #5]
 8001fb8:	3370      	adds	r3, #112	; 0x70
 8001fba:	005b      	lsls	r3, r3, #1
 8001fbc:	3301      	adds	r3, #1
 8001fbe:	4a0d      	ldr	r2, [pc, #52]	; (8001ff4 <read_nonvolatile_variables+0x488>)
 8001fc0:	5cd3      	ldrb	r3, [r2, r3]
 8001fc2:	021b      	lsls	r3, r3, #8
		pt_cal_upper_pressure[i] = ((nonvolatile_memory_buffer[NVM_PT_PRESSURE_RANGE_ADDR + 2*i + 0] << 0) |
 8001fc4:	ea41 0203 	orr.w	r2, r1, r3
 8001fc8:	797b      	ldrb	r3, [r7, #5]
 8001fca:	ee07 2a90 	vmov	s15, r2
 8001fce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001fd2:	4a10      	ldr	r2, [pc, #64]	; (8002014 <read_nonvolatile_variables+0x4a8>)
 8001fd4:	009b      	lsls	r3, r3, #2
 8001fd6:	4413      	add	r3, r2
 8001fd8:	edc3 7a00 	vstr	s15, [r3]
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 8001fdc:	797b      	ldrb	r3, [r7, #5]
 8001fde:	3301      	adds	r3, #1
 8001fe0:	717b      	strb	r3, [r7, #5]
 8001fe2:	797b      	ldrb	r3, [r7, #5]
 8001fe4:	2b13      	cmp	r3, #19
 8001fe6:	d9a8      	bls.n	8001f3a <read_nonvolatile_variables+0x3ce>
	}

	// Successful read
	return 1;
 8001fe8:	2301      	movs	r3, #1
}
 8001fea:	4618      	mov	r0, r3
 8001fec:	3708      	adds	r7, #8
 8001fee:	46bd      	mov	sp, r7
 8001ff0:	bd80      	pop	{r7, pc}
 8001ff2:	bf00      	nop
 8001ff4:	20000dc4 	.word	0x20000dc4
 8001ff8:	200002f8 	.word	0x200002f8
 8001ffc:	200004fc 	.word	0x200004fc
 8002000:	20000604 	.word	0x20000604
 8002004:	461c4000 	.word	0x461c4000
 8002008:	20000420 	.word	0x20000420
 800200c:	20000300 	.word	0x20000300
 8002010:	20000350 	.word	0x20000350
 8002014:	200003a0 	.word	0x200003a0

08002018 <save_nonvolatile_variables>:


uint8_t save_nonvolatile_variables() {
 8002018:	b580      	push	{r7, lr}
 800201a:	b084      	sub	sp, #16
 800201c:	af00      	add	r7, sp, #0

	// First byte should always be 0; see read_nonvolatile_variables();
	nonvolatile_memory_buffer[NVM_PARITY_BIT_ADDR] = 0;
 800201e:	4bcb      	ldr	r3, [pc, #812]	; (800234c <save_nonvolatile_variables+0x334>)
 8002020:	2200      	movs	r2, #0
 8002022:	701a      	strb	r2, [r3, #0]

	// PID gains
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 0] = ((uint16_t) (tanks[0].K_p * 100.0F)) >> 0;
 8002024:	4bca      	ldr	r3, [pc, #808]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002026:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800202a:	ed9f 7aca 	vldr	s14, [pc, #808]	; 8002354 <save_nonvolatile_variables+0x33c>
 800202e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002032:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002036:	ee17 3a90 	vmov	r3, s15
 800203a:	b29b      	uxth	r3, r3
 800203c:	b2da      	uxtb	r2, r3
 800203e:	4bc3      	ldr	r3, [pc, #780]	; (800234c <save_nonvolatile_variables+0x334>)
 8002040:	705a      	strb	r2, [r3, #1]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 1] = ((uint16_t) (tanks[0].K_p * 100.0F)) >> 8;
 8002042:	4bc3      	ldr	r3, [pc, #780]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002044:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 8002048:	ed9f 7ac2 	vldr	s14, [pc, #776]	; 8002354 <save_nonvolatile_variables+0x33c>
 800204c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002050:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002054:	ee17 3a90 	vmov	r3, s15
 8002058:	b29b      	uxth	r3, r3
 800205a:	0a1b      	lsrs	r3, r3, #8
 800205c:	b29b      	uxth	r3, r3
 800205e:	b2da      	uxtb	r2, r3
 8002060:	4bba      	ldr	r3, [pc, #744]	; (800234c <save_nonvolatile_variables+0x334>)
 8002062:	709a      	strb	r2, [r3, #2]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 2] = ((uint16_t) (tanks[0].K_i * 100.0F)) >> 0;
 8002064:	4bba      	ldr	r3, [pc, #744]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002066:	edd3 7a17 	vldr	s15, [r3, #92]	; 0x5c
 800206a:	ed9f 7aba 	vldr	s14, [pc, #744]	; 8002354 <save_nonvolatile_variables+0x33c>
 800206e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002072:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002076:	ee17 3a90 	vmov	r3, s15
 800207a:	b29b      	uxth	r3, r3
 800207c:	b2da      	uxtb	r2, r3
 800207e:	4bb3      	ldr	r3, [pc, #716]	; (800234c <save_nonvolatile_variables+0x334>)
 8002080:	70da      	strb	r2, [r3, #3]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 3] = ((uint16_t) (tanks[0].K_i * 100.0F)) >> 8;
 8002082:	4bb3      	ldr	r3, [pc, #716]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002084:	edd3 7a17 	vldr	s15, [r3, #92]	; 0x5c
 8002088:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8002354 <save_nonvolatile_variables+0x33c>
 800208c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002090:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002094:	ee17 3a90 	vmov	r3, s15
 8002098:	b29b      	uxth	r3, r3
 800209a:	0a1b      	lsrs	r3, r3, #8
 800209c:	b29b      	uxth	r3, r3
 800209e:	b2da      	uxtb	r2, r3
 80020a0:	4baa      	ldr	r3, [pc, #680]	; (800234c <save_nonvolatile_variables+0x334>)
 80020a2:	711a      	strb	r2, [r3, #4]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 4] = ((uint16_t) (tanks[0].K_d * 100.0F)) >> 0;
 80020a4:	4baa      	ldr	r3, [pc, #680]	; (8002350 <save_nonvolatile_variables+0x338>)
 80020a6:	edd3 7a18 	vldr	s15, [r3, #96]	; 0x60
 80020aa:	ed9f 7aaa 	vldr	s14, [pc, #680]	; 8002354 <save_nonvolatile_variables+0x33c>
 80020ae:	ee67 7a87 	vmul.f32	s15, s15, s14
 80020b2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80020b6:	ee17 3a90 	vmov	r3, s15
 80020ba:	b29b      	uxth	r3, r3
 80020bc:	b2da      	uxtb	r2, r3
 80020be:	4ba3      	ldr	r3, [pc, #652]	; (800234c <save_nonvolatile_variables+0x334>)
 80020c0:	715a      	strb	r2, [r3, #5]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 5] = ((uint16_t) (tanks[0].K_d * 100.0F)) >> 8;
 80020c2:	4ba3      	ldr	r3, [pc, #652]	; (8002350 <save_nonvolatile_variables+0x338>)
 80020c4:	edd3 7a18 	vldr	s15, [r3, #96]	; 0x60
 80020c8:	ed9f 7aa2 	vldr	s14, [pc, #648]	; 8002354 <save_nonvolatile_variables+0x33c>
 80020cc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80020d0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80020d4:	ee17 3a90 	vmov	r3, s15
 80020d8:	b29b      	uxth	r3, r3
 80020da:	0a1b      	lsrs	r3, r3, #8
 80020dc:	b29b      	uxth	r3, r3
 80020de:	b2da      	uxtb	r2, r3
 80020e0:	4b9a      	ldr	r3, [pc, #616]	; (800234c <save_nonvolatile_variables+0x334>)
 80020e2:	719a      	strb	r2, [r3, #6]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 6] = ((uint16_t) (tanks[1].K_p * 100.0F)) >> 0;
 80020e4:	4b9a      	ldr	r3, [pc, #616]	; (8002350 <save_nonvolatile_variables+0x338>)
 80020e6:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 80020ea:	ed9f 7a9a 	vldr	s14, [pc, #616]	; 8002354 <save_nonvolatile_variables+0x33c>
 80020ee:	ee67 7a87 	vmul.f32	s15, s15, s14
 80020f2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80020f6:	ee17 3a90 	vmov	r3, s15
 80020fa:	b29b      	uxth	r3, r3
 80020fc:	b2da      	uxtb	r2, r3
 80020fe:	4b93      	ldr	r3, [pc, #588]	; (800234c <save_nonvolatile_variables+0x334>)
 8002100:	71da      	strb	r2, [r3, #7]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 7] = ((uint16_t) (tanks[1].K_p * 100.0F)) >> 8;
 8002102:	4b93      	ldr	r3, [pc, #588]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002104:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 8002108:	ed9f 7a92 	vldr	s14, [pc, #584]	; 8002354 <save_nonvolatile_variables+0x33c>
 800210c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002110:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002114:	ee17 3a90 	vmov	r3, s15
 8002118:	b29b      	uxth	r3, r3
 800211a:	0a1b      	lsrs	r3, r3, #8
 800211c:	b29b      	uxth	r3, r3
 800211e:	b2da      	uxtb	r2, r3
 8002120:	4b8a      	ldr	r3, [pc, #552]	; (800234c <save_nonvolatile_variables+0x334>)
 8002122:	721a      	strb	r2, [r3, #8]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 8] = ((uint16_t) (tanks[1].K_i * 100.0F)) >> 0;
 8002124:	4b8a      	ldr	r3, [pc, #552]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002126:	edd3 7a38 	vldr	s15, [r3, #224]	; 0xe0
 800212a:	ed9f 7a8a 	vldr	s14, [pc, #552]	; 8002354 <save_nonvolatile_variables+0x33c>
 800212e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002132:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002136:	ee17 3a90 	vmov	r3, s15
 800213a:	b29b      	uxth	r3, r3
 800213c:	b2da      	uxtb	r2, r3
 800213e:	4b83      	ldr	r3, [pc, #524]	; (800234c <save_nonvolatile_variables+0x334>)
 8002140:	725a      	strb	r2, [r3, #9]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 9] = ((uint16_t) (tanks[1].K_i * 100.0F)) >> 8;
 8002142:	4b83      	ldr	r3, [pc, #524]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002144:	edd3 7a38 	vldr	s15, [r3, #224]	; 0xe0
 8002148:	ed9f 7a82 	vldr	s14, [pc, #520]	; 8002354 <save_nonvolatile_variables+0x33c>
 800214c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002150:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002154:	ee17 3a90 	vmov	r3, s15
 8002158:	b29b      	uxth	r3, r3
 800215a:	0a1b      	lsrs	r3, r3, #8
 800215c:	b29b      	uxth	r3, r3
 800215e:	b2da      	uxtb	r2, r3
 8002160:	4b7a      	ldr	r3, [pc, #488]	; (800234c <save_nonvolatile_variables+0x334>)
 8002162:	729a      	strb	r2, [r3, #10]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 10] = ((uint16_t) (tanks[1].K_d * 100.0F)) >> 0;
 8002164:	4b7a      	ldr	r3, [pc, #488]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002166:	edd3 7a39 	vldr	s15, [r3, #228]	; 0xe4
 800216a:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 8002354 <save_nonvolatile_variables+0x33c>
 800216e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002172:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002176:	ee17 3a90 	vmov	r3, s15
 800217a:	b29b      	uxth	r3, r3
 800217c:	b2da      	uxtb	r2, r3
 800217e:	4b73      	ldr	r3, [pc, #460]	; (800234c <save_nonvolatile_variables+0x334>)
 8002180:	72da      	strb	r2, [r3, #11]
	nonvolatile_memory_buffer[NVM_PID_GAINS_ADDR + 11] = ((uint16_t) (tanks[1].K_d * 100.0F)) >> 8;
 8002182:	4b73      	ldr	r3, [pc, #460]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002184:	edd3 7a39 	vldr	s15, [r3, #228]	; 0xe4
 8002188:	ed9f 7a72 	vldr	s14, [pc, #456]	; 8002354 <save_nonvolatile_variables+0x33c>
 800218c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002190:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002194:	ee17 3a90 	vmov	r3, s15
 8002198:	b29b      	uxth	r3, r3
 800219a:	0a1b      	lsrs	r3, r3, #8
 800219c:	b29b      	uxth	r3, r3
 800219e:	b2da      	uxtb	r2, r3
 80021a0:	4b6a      	ldr	r3, [pc, #424]	; (800234c <save_nonvolatile_variables+0x334>)
 80021a2:	731a      	strb	r2, [r3, #12]

	// Target pressure setpoints
	nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 0] = ((int32_t) (tanks[0].target_pres * 100.0F)) >> 0;
 80021a4:	4b6a      	ldr	r3, [pc, #424]	; (8002350 <save_nonvolatile_variables+0x338>)
 80021a6:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 80021aa:	ed9f 7a6a 	vldr	s14, [pc, #424]	; 8002354 <save_nonvolatile_variables+0x33c>
 80021ae:	ee67 7a87 	vmul.f32	s15, s15, s14
 80021b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80021b6:	edc7 7a01 	vstr	s15, [r7, #4]
 80021ba:	793a      	ldrb	r2, [r7, #4]
 80021bc:	4b63      	ldr	r3, [pc, #396]	; (800234c <save_nonvolatile_variables+0x334>)
 80021be:	735a      	strb	r2, [r3, #13]
	nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 1] = ((int32_t) (tanks[0].target_pres * 100.0F)) >> 8;
 80021c0:	4b63      	ldr	r3, [pc, #396]	; (8002350 <save_nonvolatile_variables+0x338>)
 80021c2:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 80021c6:	ed9f 7a63 	vldr	s14, [pc, #396]	; 8002354 <save_nonvolatile_variables+0x33c>
 80021ca:	ee67 7a87 	vmul.f32	s15, s15, s14
 80021ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80021d2:	ee17 3a90 	vmov	r3, s15
 80021d6:	121b      	asrs	r3, r3, #8
 80021d8:	b2da      	uxtb	r2, r3
 80021da:	4b5c      	ldr	r3, [pc, #368]	; (800234c <save_nonvolatile_variables+0x334>)
 80021dc:	739a      	strb	r2, [r3, #14]
	nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 2] = ((int32_t) (tanks[0].target_pres * 100.0F)) >> 16;
 80021de:	4b5c      	ldr	r3, [pc, #368]	; (8002350 <save_nonvolatile_variables+0x338>)
 80021e0:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 80021e4:	ed9f 7a5b 	vldr	s14, [pc, #364]	; 8002354 <save_nonvolatile_variables+0x33c>
 80021e8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80021ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80021f0:	ee17 3a90 	vmov	r3, s15
 80021f4:	141b      	asrs	r3, r3, #16
 80021f6:	b2da      	uxtb	r2, r3
 80021f8:	4b54      	ldr	r3, [pc, #336]	; (800234c <save_nonvolatile_variables+0x334>)
 80021fa:	73da      	strb	r2, [r3, #15]
	nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 3] = ((int32_t) (tanks[0].target_pres * 100.0F)) >> 24;
 80021fc:	4b54      	ldr	r3, [pc, #336]	; (8002350 <save_nonvolatile_variables+0x338>)
 80021fe:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8002202:	ed9f 7a54 	vldr	s14, [pc, #336]	; 8002354 <save_nonvolatile_variables+0x33c>
 8002206:	ee67 7a87 	vmul.f32	s15, s15, s14
 800220a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800220e:	ee17 3a90 	vmov	r3, s15
 8002212:	161b      	asrs	r3, r3, #24
 8002214:	b2da      	uxtb	r2, r3
 8002216:	4b4d      	ldr	r3, [pc, #308]	; (800234c <save_nonvolatile_variables+0x334>)
 8002218:	741a      	strb	r2, [r3, #16]
	nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 4] = ((int32_t) (tanks[1].target_pres * 100.0F)) >> 0;
 800221a:	4b4d      	ldr	r3, [pc, #308]	; (8002350 <save_nonvolatile_variables+0x338>)
 800221c:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 8002220:	ed9f 7a4c 	vldr	s14, [pc, #304]	; 8002354 <save_nonvolatile_variables+0x33c>
 8002224:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002228:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800222c:	edc7 7a01 	vstr	s15, [r7, #4]
 8002230:	793a      	ldrb	r2, [r7, #4]
 8002232:	4b46      	ldr	r3, [pc, #280]	; (800234c <save_nonvolatile_variables+0x334>)
 8002234:	745a      	strb	r2, [r3, #17]
	nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 5] = ((int32_t) (tanks[1].target_pres * 100.0F)) >> 8;
 8002236:	4b46      	ldr	r3, [pc, #280]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002238:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 800223c:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8002354 <save_nonvolatile_variables+0x33c>
 8002240:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002244:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002248:	ee17 3a90 	vmov	r3, s15
 800224c:	121b      	asrs	r3, r3, #8
 800224e:	b2da      	uxtb	r2, r3
 8002250:	4b3e      	ldr	r3, [pc, #248]	; (800234c <save_nonvolatile_variables+0x334>)
 8002252:	749a      	strb	r2, [r3, #18]
	nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 6] = ((int32_t) (tanks[1].target_pres * 100.0F)) >> 16;
 8002254:	4b3e      	ldr	r3, [pc, #248]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002256:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 800225a:	ed9f 7a3e 	vldr	s14, [pc, #248]	; 8002354 <save_nonvolatile_variables+0x33c>
 800225e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002262:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002266:	ee17 3a90 	vmov	r3, s15
 800226a:	141b      	asrs	r3, r3, #16
 800226c:	b2da      	uxtb	r2, r3
 800226e:	4b37      	ldr	r3, [pc, #220]	; (800234c <save_nonvolatile_variables+0x334>)
 8002270:	74da      	strb	r2, [r3, #19]
	nonvolatile_memory_buffer[NVM_TPC_TARGET_PRES_ADDR + 7] = ((int32_t) (tanks[1].target_pres * 100.0F)) >> 24;
 8002272:	4b37      	ldr	r3, [pc, #220]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002274:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 8002278:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8002354 <save_nonvolatile_variables+0x33c>
 800227c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002280:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002284:	ee17 3a90 	vmov	r3, s15
 8002288:	161b      	asrs	r3, r3, #24
 800228a:	b2da      	uxtb	r2, r3
 800228c:	4b2f      	ldr	r3, [pc, #188]	; (800234c <save_nonvolatile_variables+0x334>)
 800228e:	751a      	strb	r2, [r3, #20]

	// Control valve threshold pressures
	nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 0] = ((int16_t) (tanks[0].PID_ctrl_vlv_high_pres * 10.0F)) >> 0;
 8002290:	4b2f      	ldr	r3, [pc, #188]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002292:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 8002296:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800229a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800229e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80022a2:	ee17 3a90 	vmov	r3, s15
 80022a6:	b21b      	sxth	r3, r3
 80022a8:	b2da      	uxtb	r2, r3
 80022aa:	4b28      	ldr	r3, [pc, #160]	; (800234c <save_nonvolatile_variables+0x334>)
 80022ac:	755a      	strb	r2, [r3, #21]
	nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 1] = ((int16_t) (tanks[0].PID_ctrl_vlv_high_pres * 10.0F)) >> 8;
 80022ae:	4b28      	ldr	r3, [pc, #160]	; (8002350 <save_nonvolatile_variables+0x338>)
 80022b0:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 80022b4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80022b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80022bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80022c0:	ee17 3a90 	vmov	r3, s15
 80022c4:	b21b      	sxth	r3, r3
 80022c6:	121b      	asrs	r3, r3, #8
 80022c8:	b21b      	sxth	r3, r3
 80022ca:	b2da      	uxtb	r2, r3
 80022cc:	4b1f      	ldr	r3, [pc, #124]	; (800234c <save_nonvolatile_variables+0x334>)
 80022ce:	759a      	strb	r2, [r3, #22]
	nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 2] = ((int16_t) (tanks[1].PID_ctrl_vlv_high_pres * 10.0F)) >> 0;
 80022d0:	4b1f      	ldr	r3, [pc, #124]	; (8002350 <save_nonvolatile_variables+0x338>)
 80022d2:	edd3 7a35 	vldr	s15, [r3, #212]	; 0xd4
 80022d6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80022da:	ee67 7a87 	vmul.f32	s15, s15, s14
 80022de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80022e2:	ee17 3a90 	vmov	r3, s15
 80022e6:	b21b      	sxth	r3, r3
 80022e8:	b2da      	uxtb	r2, r3
 80022ea:	4b18      	ldr	r3, [pc, #96]	; (800234c <save_nonvolatile_variables+0x334>)
 80022ec:	75da      	strb	r2, [r3, #23]
	nonvolatile_memory_buffer[NVM_CTRL_VLV_HIGH_PRES_ADDR + 3] = ((int16_t) (tanks[1].PID_ctrl_vlv_high_pres * 10.0F)) >> 8;
 80022ee:	4b18      	ldr	r3, [pc, #96]	; (8002350 <save_nonvolatile_variables+0x338>)
 80022f0:	edd3 7a35 	vldr	s15, [r3, #212]	; 0xd4
 80022f4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80022f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80022fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002300:	ee17 3a90 	vmov	r3, s15
 8002304:	b21b      	sxth	r3, r3
 8002306:	121b      	asrs	r3, r3, #8
 8002308:	b21b      	sxth	r3, r3
 800230a:	b2da      	uxtb	r2, r3
 800230c:	4b0f      	ldr	r3, [pc, #60]	; (800234c <save_nonvolatile_variables+0x334>)
 800230e:	761a      	strb	r2, [r3, #24]

	nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 0] = ((int16_t) (tanks[0].PID_ctrl_vlv_low_pres * 10.0F)) >> 0;
 8002310:	4b0f      	ldr	r3, [pc, #60]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002312:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8002316:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800231a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800231e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002322:	ee17 3a90 	vmov	r3, s15
 8002326:	b21b      	sxth	r3, r3
 8002328:	b2da      	uxtb	r2, r3
 800232a:	4b08      	ldr	r3, [pc, #32]	; (800234c <save_nonvolatile_variables+0x334>)
 800232c:	775a      	strb	r2, [r3, #29]
	nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 1] = ((int16_t) (tanks[0].PID_ctrl_vlv_low_pres * 10.0F)) >> 8;
 800232e:	4b08      	ldr	r3, [pc, #32]	; (8002350 <save_nonvolatile_variables+0x338>)
 8002330:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8002334:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002338:	ee67 7a87 	vmul.f32	s15, s15, s14
 800233c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002340:	ee17 3a90 	vmov	r3, s15
 8002344:	b21b      	sxth	r3, r3
 8002346:	121b      	asrs	r3, r3, #8
 8002348:	e006      	b.n	8002358 <save_nonvolatile_variables+0x340>
 800234a:	bf00      	nop
 800234c:	20000dc4 	.word	0x20000dc4
 8002350:	200004fc 	.word	0x200004fc
 8002354:	42c80000 	.word	0x42c80000
 8002358:	b21b      	sxth	r3, r3
 800235a:	b2da      	uxtb	r2, r3
 800235c:	4b40      	ldr	r3, [pc, #256]	; (8002460 <save_nonvolatile_variables+0x448>)
 800235e:	779a      	strb	r2, [r3, #30]
	nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 2] = ((int16_t) (tanks[1].PID_ctrl_vlv_low_pres * 10.0F)) >> 0;
 8002360:	4b40      	ldr	r3, [pc, #256]	; (8002464 <save_nonvolatile_variables+0x44c>)
 8002362:	edd3 7a34 	vldr	s15, [r3, #208]	; 0xd0
 8002366:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800236a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800236e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002372:	ee17 3a90 	vmov	r3, s15
 8002376:	b21b      	sxth	r3, r3
 8002378:	b2da      	uxtb	r2, r3
 800237a:	4b39      	ldr	r3, [pc, #228]	; (8002460 <save_nonvolatile_variables+0x448>)
 800237c:	77da      	strb	r2, [r3, #31]
	nonvolatile_memory_buffer[NVM_CTRL_VLV_LOW_PRES_ADDR + 3] = ((int16_t) (tanks[1].PID_ctrl_vlv_low_pres * 10.0F)) >> 8;
 800237e:	4b39      	ldr	r3, [pc, #228]	; (8002464 <save_nonvolatile_variables+0x44c>)
 8002380:	edd3 7a34 	vldr	s15, [r3, #208]	; 0xd0
 8002384:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002388:	ee67 7a87 	vmul.f32	s15, s15, s14
 800238c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002390:	ee17 3a90 	vmov	r3, s15
 8002394:	b21b      	sxth	r3, r3
 8002396:	121b      	asrs	r3, r3, #8
 8002398:	b21b      	sxth	r3, r3
 800239a:	b2da      	uxtb	r2, r3
 800239c:	4b30      	ldr	r3, [pc, #192]	; (8002460 <save_nonvolatile_variables+0x448>)
 800239e:	f883 2020 	strb.w	r2, [r3, #32]

	// Pressure ambients
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 80023a2:	2300      	movs	r3, #0
 80023a4:	73fb      	strb	r3, [r7, #15]
 80023a6:	e055      	b.n	8002454 <save_nonvolatile_variables+0x43c>
		nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 0] = ((int32_t) (pt_ambients[i] * 10.0F)) >> 0;
 80023a8:	7bfb      	ldrb	r3, [r7, #15]
 80023aa:	4a2f      	ldr	r2, [pc, #188]	; (8002468 <save_nonvolatile_variables+0x450>)
 80023ac:	009b      	lsls	r3, r3, #2
 80023ae:	4413      	add	r3, r2
 80023b0:	edd3 7a00 	vldr	s15, [r3]
 80023b4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80023b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80023bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80023c0:	edc7 7a01 	vstr	s15, [r7, #4]
 80023c4:	7bfb      	ldrb	r3, [r7, #15]
 80023c6:	009b      	lsls	r3, r3, #2
 80023c8:	3325      	adds	r3, #37	; 0x25
 80023ca:	7939      	ldrb	r1, [r7, #4]
 80023cc:	4a24      	ldr	r2, [pc, #144]	; (8002460 <save_nonvolatile_variables+0x448>)
 80023ce:	54d1      	strb	r1, [r2, r3]
		nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 1] = ((int32_t) (pt_ambients[i] * 10.0F)) >> 8;
 80023d0:	7bfb      	ldrb	r3, [r7, #15]
 80023d2:	4a25      	ldr	r2, [pc, #148]	; (8002468 <save_nonvolatile_variables+0x450>)
 80023d4:	009b      	lsls	r3, r3, #2
 80023d6:	4413      	add	r3, r2
 80023d8:	edd3 7a00 	vldr	s15, [r3]
 80023dc:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80023e0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80023e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80023e8:	ee17 3a90 	vmov	r3, s15
 80023ec:	121a      	asrs	r2, r3, #8
 80023ee:	7bfb      	ldrb	r3, [r7, #15]
 80023f0:	009b      	lsls	r3, r3, #2
 80023f2:	3326      	adds	r3, #38	; 0x26
 80023f4:	b2d1      	uxtb	r1, r2
 80023f6:	4a1a      	ldr	r2, [pc, #104]	; (8002460 <save_nonvolatile_variables+0x448>)
 80023f8:	54d1      	strb	r1, [r2, r3]
		nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 2] = ((int32_t) (pt_ambients[i] * 10.0F)) >> 16;
 80023fa:	7bfb      	ldrb	r3, [r7, #15]
 80023fc:	4a1a      	ldr	r2, [pc, #104]	; (8002468 <save_nonvolatile_variables+0x450>)
 80023fe:	009b      	lsls	r3, r3, #2
 8002400:	4413      	add	r3, r2
 8002402:	edd3 7a00 	vldr	s15, [r3]
 8002406:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800240a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800240e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002412:	ee17 3a90 	vmov	r3, s15
 8002416:	141a      	asrs	r2, r3, #16
 8002418:	7bfb      	ldrb	r3, [r7, #15]
 800241a:	009b      	lsls	r3, r3, #2
 800241c:	3327      	adds	r3, #39	; 0x27
 800241e:	b2d1      	uxtb	r1, r2
 8002420:	4a0f      	ldr	r2, [pc, #60]	; (8002460 <save_nonvolatile_variables+0x448>)
 8002422:	54d1      	strb	r1, [r2, r3]
		nonvolatile_memory_buffer[NVM_PT_AMBIENTS_ADDR + 4*i + 3] = ((int32_t) (pt_ambients[i] * 10.0F)) >> 24;
 8002424:	7bfb      	ldrb	r3, [r7, #15]
 8002426:	4a10      	ldr	r2, [pc, #64]	; (8002468 <save_nonvolatile_variables+0x450>)
 8002428:	009b      	lsls	r3, r3, #2
 800242a:	4413      	add	r3, r2
 800242c:	edd3 7a00 	vldr	s15, [r3]
 8002430:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002434:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002438:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800243c:	ee17 3a90 	vmov	r3, s15
 8002440:	161a      	asrs	r2, r3, #24
 8002442:	7bfb      	ldrb	r3, [r7, #15]
 8002444:	330a      	adds	r3, #10
 8002446:	009b      	lsls	r3, r3, #2
 8002448:	b2d1      	uxtb	r1, r2
 800244a:	4a05      	ldr	r2, [pc, #20]	; (8002460 <save_nonvolatile_variables+0x448>)
 800244c:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 800244e:	7bfb      	ldrb	r3, [r7, #15]
 8002450:	3301      	adds	r3, #1
 8002452:	73fb      	strb	r3, [r7, #15]
 8002454:	7bfb      	ldrb	r3, [r7, #15]
 8002456:	2b13      	cmp	r3, #19
 8002458:	d9a6      	bls.n	80023a8 <save_nonvolatile_variables+0x390>
	}

	// Potentiometer ambients
	for (uint8_t i = 0; i < NUM_POTS; i++) {
 800245a:	2300      	movs	r3, #0
 800245c:	73bb      	strb	r3, [r7, #14]
 800245e:	e05b      	b.n	8002518 <save_nonvolatile_variables+0x500>
 8002460:	20000dc4 	.word	0x20000dc4
 8002464:	200004fc 	.word	0x200004fc
 8002468:	200002a8 	.word	0x200002a8
		nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 0] = ((int32_t) (pot_ambients[i] * 10.0F)) >> 0;
 800246c:	7bbb      	ldrb	r3, [r7, #14]
 800246e:	4a84      	ldr	r2, [pc, #528]	; (8002680 <save_nonvolatile_variables+0x668>)
 8002470:	009b      	lsls	r3, r3, #2
 8002472:	4413      	add	r3, r2
 8002474:	edd3 7a00 	vldr	s15, [r3]
 8002478:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800247c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002480:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002484:	edc7 7a01 	vstr	s15, [r7, #4]
 8002488:	7bbb      	ldrb	r3, [r7, #14]
 800248a:	009b      	lsls	r3, r3, #2
 800248c:	3375      	adds	r3, #117	; 0x75
 800248e:	7939      	ldrb	r1, [r7, #4]
 8002490:	4a7c      	ldr	r2, [pc, #496]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002492:	54d1      	strb	r1, [r2, r3]
		nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 1] = ((int32_t) (pot_ambients[i] * 10.0F)) >> 8;
 8002494:	7bbb      	ldrb	r3, [r7, #14]
 8002496:	4a7a      	ldr	r2, [pc, #488]	; (8002680 <save_nonvolatile_variables+0x668>)
 8002498:	009b      	lsls	r3, r3, #2
 800249a:	4413      	add	r3, r2
 800249c:	edd3 7a00 	vldr	s15, [r3]
 80024a0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80024a4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80024a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80024ac:	ee17 3a90 	vmov	r3, s15
 80024b0:	121a      	asrs	r2, r3, #8
 80024b2:	7bbb      	ldrb	r3, [r7, #14]
 80024b4:	009b      	lsls	r3, r3, #2
 80024b6:	3376      	adds	r3, #118	; 0x76
 80024b8:	b2d1      	uxtb	r1, r2
 80024ba:	4a72      	ldr	r2, [pc, #456]	; (8002684 <save_nonvolatile_variables+0x66c>)
 80024bc:	54d1      	strb	r1, [r2, r3]
		nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 2] = ((int32_t) (pot_ambients[i] * 10.0F)) >> 16;
 80024be:	7bbb      	ldrb	r3, [r7, #14]
 80024c0:	4a6f      	ldr	r2, [pc, #444]	; (8002680 <save_nonvolatile_variables+0x668>)
 80024c2:	009b      	lsls	r3, r3, #2
 80024c4:	4413      	add	r3, r2
 80024c6:	edd3 7a00 	vldr	s15, [r3]
 80024ca:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80024ce:	ee67 7a87 	vmul.f32	s15, s15, s14
 80024d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80024d6:	ee17 3a90 	vmov	r3, s15
 80024da:	141a      	asrs	r2, r3, #16
 80024dc:	7bbb      	ldrb	r3, [r7, #14]
 80024de:	009b      	lsls	r3, r3, #2
 80024e0:	3377      	adds	r3, #119	; 0x77
 80024e2:	b2d1      	uxtb	r1, r2
 80024e4:	4a67      	ldr	r2, [pc, #412]	; (8002684 <save_nonvolatile_variables+0x66c>)
 80024e6:	54d1      	strb	r1, [r2, r3]
		nonvolatile_memory_buffer[NVM_POT_AMBIENTS_ADDR + 4*i + 3] = ((int32_t) (pot_ambients[i] * 10.0F)) >> 24;
 80024e8:	7bbb      	ldrb	r3, [r7, #14]
 80024ea:	4a65      	ldr	r2, [pc, #404]	; (8002680 <save_nonvolatile_variables+0x668>)
 80024ec:	009b      	lsls	r3, r3, #2
 80024ee:	4413      	add	r3, r2
 80024f0:	edd3 7a00 	vldr	s15, [r3]
 80024f4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80024f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80024fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002500:	ee17 3a90 	vmov	r3, s15
 8002504:	161a      	asrs	r2, r3, #24
 8002506:	7bbb      	ldrb	r3, [r7, #14]
 8002508:	331e      	adds	r3, #30
 800250a:	009b      	lsls	r3, r3, #2
 800250c:	b2d1      	uxtb	r1, r2
 800250e:	4a5d      	ldr	r2, [pc, #372]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002510:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < NUM_POTS; i++) {
 8002512:	7bbb      	ldrb	r3, [r7, #14]
 8002514:	3301      	adds	r3, #1
 8002516:	73bb      	strb	r3, [r7, #14]
 8002518:	7bbb      	ldrb	r3, [r7, #14]
 800251a:	2b01      	cmp	r3, #1
 800251c:	d9a6      	bls.n	800246c <save_nonvolatile_variables+0x454>
	}

	// Tank enable flags
	nonvolatile_memory_buffer[NVM_TANK_ENABLE_ADDR + 0] = tanks[0].tank_enable;
 800251e:	4b5a      	ldr	r3, [pc, #360]	; (8002688 <save_nonvolatile_variables+0x670>)
 8002520:	781b      	ldrb	r3, [r3, #0]
 8002522:	b2da      	uxtb	r2, r3
 8002524:	4b57      	ldr	r3, [pc, #348]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002526:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d
	nonvolatile_memory_buffer[NVM_TANK_ENABLE_ADDR + 1] = tanks[1].tank_enable;
 800252a:	4b57      	ldr	r3, [pc, #348]	; (8002688 <save_nonvolatile_variables+0x670>)
 800252c:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 8002530:	b2da      	uxtb	r2, r3
 8002532:	4b54      	ldr	r3, [pc, #336]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002534:	f883 207e 	strb.w	r2, [r3, #126]	; 0x7e

	// Autosequence timings
	// Hotfire duration
	nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 0] = ((uint32_t) (autosequence.hotfire_test_duration_ms)) >> 0;
 8002538:	4b54      	ldr	r3, [pc, #336]	; (800268c <save_nonvolatile_variables+0x674>)
 800253a:	695b      	ldr	r3, [r3, #20]
 800253c:	b2da      	uxtb	r2, r3
 800253e:	4b51      	ldr	r3, [pc, #324]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002540:	f883 207f 	strb.w	r2, [r3, #127]	; 0x7f
	nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 1] = ((uint32_t) (autosequence.hotfire_test_duration_ms)) >> 8;
 8002544:	4b51      	ldr	r3, [pc, #324]	; (800268c <save_nonvolatile_variables+0x674>)
 8002546:	695b      	ldr	r3, [r3, #20]
 8002548:	0a1b      	lsrs	r3, r3, #8
 800254a:	b2da      	uxtb	r2, r3
 800254c:	4b4d      	ldr	r3, [pc, #308]	; (8002684 <save_nonvolatile_variables+0x66c>)
 800254e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
	nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 2] = ((uint32_t) (autosequence.hotfire_test_duration_ms)) >> 16;
 8002552:	4b4e      	ldr	r3, [pc, #312]	; (800268c <save_nonvolatile_variables+0x674>)
 8002554:	695b      	ldr	r3, [r3, #20]
 8002556:	0c1b      	lsrs	r3, r3, #16
 8002558:	b2da      	uxtb	r2, r3
 800255a:	4b4a      	ldr	r3, [pc, #296]	; (8002684 <save_nonvolatile_variables+0x66c>)
 800255c:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
	nonvolatile_memory_buffer[NVM_TEST_DURATION_ADDR + 3] = ((uint32_t) (autosequence.hotfire_test_duration_ms)) >> 24;
 8002560:	4b4a      	ldr	r3, [pc, #296]	; (800268c <save_nonvolatile_variables+0x674>)
 8002562:	695b      	ldr	r3, [r3, #20]
 8002564:	0e1b      	lsrs	r3, r3, #24
 8002566:	b2da      	uxtb	r2, r3
 8002568:	4b46      	ldr	r3, [pc, #280]	; (8002684 <save_nonvolatile_variables+0x66c>)
 800256a:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82

	// Ignitor on delay
	nonvolatile_memory_buffer[NVM_IGNITOR_ON_DELAY_ADDR + 0] = ((uint16_t) (autosequence.ignition_ignitor_on_delay_ms)) >> 0;
 800256e:	4b47      	ldr	r3, [pc, #284]	; (800268c <save_nonvolatile_variables+0x674>)
 8002570:	889b      	ldrh	r3, [r3, #4]
 8002572:	b29b      	uxth	r3, r3
 8002574:	b2da      	uxtb	r2, r3
 8002576:	4b43      	ldr	r3, [pc, #268]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002578:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
	nonvolatile_memory_buffer[NVM_IGNITOR_ON_DELAY_ADDR + 1] = ((uint16_t) (autosequence.ignition_ignitor_on_delay_ms)) >> 8;
 800257c:	4b43      	ldr	r3, [pc, #268]	; (800268c <save_nonvolatile_variables+0x674>)
 800257e:	889b      	ldrh	r3, [r3, #4]
 8002580:	b29b      	uxth	r3, r3
 8002582:	0a1b      	lsrs	r3, r3, #8
 8002584:	b29b      	uxth	r3, r3
 8002586:	b2da      	uxtb	r2, r3
 8002588:	4b3e      	ldr	r3, [pc, #248]	; (8002684 <save_nonvolatile_variables+0x66c>)
 800258a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

	// Ignitor high duration
	nonvolatile_memory_buffer[NVM_IGNITOR_HIGH_DURATION_ADDR + 0] = ((uint16_t) (autosequence.ignition_ignitor_high_duration_ms)) >> 0;
 800258e:	4b3f      	ldr	r3, [pc, #252]	; (800268c <save_nonvolatile_variables+0x674>)
 8002590:	88db      	ldrh	r3, [r3, #6]
 8002592:	b29b      	uxth	r3, r3
 8002594:	b2da      	uxtb	r2, r3
 8002596:	4b3b      	ldr	r3, [pc, #236]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002598:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
	nonvolatile_memory_buffer[NVM_IGNITOR_HIGH_DURATION_ADDR + 1] = ((uint16_t) (autosequence.ignition_ignitor_high_duration_ms)) >> 8;
 800259c:	4b3b      	ldr	r3, [pc, #236]	; (800268c <save_nonvolatile_variables+0x674>)
 800259e:	88db      	ldrh	r3, [r3, #6]
 80025a0:	b29b      	uxth	r3, r3
 80025a2:	0a1b      	lsrs	r3, r3, #8
 80025a4:	b29b      	uxth	r3, r3
 80025a6:	b2da      	uxtb	r2, r3
 80025a8:	4b36      	ldr	r3, [pc, #216]	; (8002684 <save_nonvolatile_variables+0x66c>)
 80025aa:	f883 2086 	strb.w	r2, [r3, #134]	; 0x86

	// Fuel MPV on delay
	nonvolatile_memory_buffer[NVM_FUEL_MPV_OPENING_DELAY_ADDR + 0] = autosequence.hotfire_fuel_mpv_delay_ms;
 80025ae:	4b37      	ldr	r3, [pc, #220]	; (800268c <save_nonvolatile_variables+0x674>)
 80025b0:	7a1b      	ldrb	r3, [r3, #8]
 80025b2:	b2da      	uxtb	r2, r3
 80025b4:	4b33      	ldr	r3, [pc, #204]	; (8002684 <save_nonvolatile_variables+0x66c>)
 80025b6:	f883 2087 	strb.w	r2, [r3, #135]	; 0x87

	// Film cooling on time
	nonvolatile_memory_buffer[NVM_FILM_COOLING_ON_TIME_ADDR + 0] = ((uint16_t) (autosequence.hotfire_film_cooling_on_time_ms)) >> 0;
 80025ba:	4b34      	ldr	r3, [pc, #208]	; (800268c <save_nonvolatile_variables+0x674>)
 80025bc:	895b      	ldrh	r3, [r3, #10]
 80025be:	b29b      	uxth	r3, r3
 80025c0:	b2da      	uxtb	r2, r3
 80025c2:	4b30      	ldr	r3, [pc, #192]	; (8002684 <save_nonvolatile_variables+0x66c>)
 80025c4:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
	nonvolatile_memory_buffer[NVM_FILM_COOLING_ON_TIME_ADDR + 1] = ((uint16_t) (autosequence.hotfire_film_cooling_on_time_ms)) >> 8;
 80025c8:	4b30      	ldr	r3, [pc, #192]	; (800268c <save_nonvolatile_variables+0x674>)
 80025ca:	895b      	ldrh	r3, [r3, #10]
 80025cc:	b29b      	uxth	r3, r3
 80025ce:	0a1b      	lsrs	r3, r3, #8
 80025d0:	b29b      	uxth	r3, r3
 80025d2:	b2da      	uxtb	r2, r3
 80025d4:	4b2b      	ldr	r3, [pc, #172]	; (8002684 <save_nonvolatile_variables+0x66c>)
 80025d6:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89

	// PID start delay
	nonvolatile_memory_buffer[NVM_PID_DELAY_ADDR + 0] = ((uint16_t) (autosequence.hotfire_pid_start_delay_ms)) >> 0;
 80025da:	4b2c      	ldr	r3, [pc, #176]	; (800268c <save_nonvolatile_variables+0x674>)
 80025dc:	899b      	ldrh	r3, [r3, #12]
 80025de:	b29b      	uxth	r3, r3
 80025e0:	b2da      	uxtb	r2, r3
 80025e2:	4b28      	ldr	r3, [pc, #160]	; (8002684 <save_nonvolatile_variables+0x66c>)
 80025e4:	f883 208a 	strb.w	r2, [r3, #138]	; 0x8a
	nonvolatile_memory_buffer[NVM_PID_DELAY_ADDR + 1] = ((uint16_t) (autosequence.hotfire_pid_start_delay_ms)) >> 8;
 80025e8:	4b28      	ldr	r3, [pc, #160]	; (800268c <save_nonvolatile_variables+0x674>)
 80025ea:	899b      	ldrh	r3, [r3, #12]
 80025ec:	b29b      	uxth	r3, r3
 80025ee:	0a1b      	lsrs	r3, r3, #8
 80025f0:	b29b      	uxth	r3, r3
 80025f2:	b2da      	uxtb	r2, r3
 80025f4:	4b23      	ldr	r3, [pc, #140]	; (8002684 <save_nonvolatile_variables+0x66c>)
 80025f6:	f883 208b 	strb.w	r2, [r3, #139]	; 0x8b

	// Initial motor position correction factor
	nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 0] = ((uint32_t) (init_motor_pos_deg_correction_factor * 10000.0F)) >> 0;
 80025fa:	4b25      	ldr	r3, [pc, #148]	; (8002690 <save_nonvolatile_variables+0x678>)
 80025fc:	edd3 7a00 	vldr	s15, [r3]
 8002600:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8002694 <save_nonvolatile_variables+0x67c>
 8002604:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002608:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800260c:	edc7 7a01 	vstr	s15, [r7, #4]
 8002610:	793a      	ldrb	r2, [r7, #4]
 8002612:	4b1c      	ldr	r3, [pc, #112]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002614:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
	nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 1] = ((uint32_t) (init_motor_pos_deg_correction_factor * 10000.0F)) >> 8;
 8002618:	4b1d      	ldr	r3, [pc, #116]	; (8002690 <save_nonvolatile_variables+0x678>)
 800261a:	edd3 7a00 	vldr	s15, [r3]
 800261e:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8002694 <save_nonvolatile_variables+0x67c>
 8002622:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002626:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800262a:	ee17 3a90 	vmov	r3, s15
 800262e:	0a1b      	lsrs	r3, r3, #8
 8002630:	b2da      	uxtb	r2, r3
 8002632:	4b14      	ldr	r3, [pc, #80]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002634:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
	nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 2] = ((uint32_t) (init_motor_pos_deg_correction_factor * 10000.0F)) >> 16;
 8002638:	4b15      	ldr	r3, [pc, #84]	; (8002690 <save_nonvolatile_variables+0x678>)
 800263a:	edd3 7a00 	vldr	s15, [r3]
 800263e:	ed9f 7a15 	vldr	s14, [pc, #84]	; 8002694 <save_nonvolatile_variables+0x67c>
 8002642:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002646:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800264a:	ee17 3a90 	vmov	r3, s15
 800264e:	0c1b      	lsrs	r3, r3, #16
 8002650:	b2da      	uxtb	r2, r3
 8002652:	4b0c      	ldr	r3, [pc, #48]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002654:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
	nonvolatile_memory_buffer[NVM_INIT_POS_DEG_CORR_FAC_ADDR + 3] = ((uint32_t) (init_motor_pos_deg_correction_factor * 10000.0F)) >> 24;
 8002658:	4b0d      	ldr	r3, [pc, #52]	; (8002690 <save_nonvolatile_variables+0x678>)
 800265a:	edd3 7a00 	vldr	s15, [r3]
 800265e:	ed9f 7a0d 	vldr	s14, [pc, #52]	; 8002694 <save_nonvolatile_variables+0x67c>
 8002662:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002666:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800266a:	ee17 3a90 	vmov	r3, s15
 800266e:	0e1b      	lsrs	r3, r3, #24
 8002670:	b2da      	uxtb	r2, r3
 8002672:	4b04      	ldr	r3, [pc, #16]	; (8002684 <save_nonvolatile_variables+0x66c>)
 8002674:	f883 208f 	strb.w	r2, [r3, #143]	; 0x8f

	// Pressure transducer calibrations
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 8002678:	2300      	movs	r3, #0
 800267a:	737b      	strb	r3, [r7, #13]
 800267c:	e08e      	b.n	800279c <save_nonvolatile_variables+0x784>
 800267e:	bf00      	nop
 8002680:	200002f8 	.word	0x200002f8
 8002684:	20000dc4 	.word	0x20000dc4
 8002688:	200004fc 	.word	0x200004fc
 800268c:	20000604 	.word	0x20000604
 8002690:	20000420 	.word	0x20000420
 8002694:	461c4000 	.word	0x461c4000
		// Lower output voltage
		nonvolatile_memory_buffer[NVM_PT_LOWER_VOLTAGE_ADDR + 2*i + 0] = ((uint16_t) (pt_cal_lower_voltage[i] * 10.0F)) >> 0;
 8002698:	7b7b      	ldrb	r3, [r7, #13]
 800269a:	4a4a      	ldr	r2, [pc, #296]	; (80027c4 <save_nonvolatile_variables+0x7ac>)
 800269c:	009b      	lsls	r3, r3, #2
 800269e:	4413      	add	r3, r2
 80026a0:	edd3 7a00 	vldr	s15, [r3]
 80026a4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80026a8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80026ac:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80026b0:	ee17 3a90 	vmov	r3, s15
 80026b4:	b29a      	uxth	r2, r3
 80026b6:	7b7b      	ldrb	r3, [r7, #13]
 80026b8:	335c      	adds	r3, #92	; 0x5c
 80026ba:	005b      	lsls	r3, r3, #1
 80026bc:	b2d1      	uxtb	r1, r2
 80026be:	4a42      	ldr	r2, [pc, #264]	; (80027c8 <save_nonvolatile_variables+0x7b0>)
 80026c0:	54d1      	strb	r1, [r2, r3]
		nonvolatile_memory_buffer[NVM_PT_LOWER_VOLTAGE_ADDR + 2*i + 1] = ((uint16_t) (pt_cal_lower_voltage[i] * 10.0F)) >> 8;
 80026c2:	7b7b      	ldrb	r3, [r7, #13]
 80026c4:	4a3f      	ldr	r2, [pc, #252]	; (80027c4 <save_nonvolatile_variables+0x7ac>)
 80026c6:	009b      	lsls	r3, r3, #2
 80026c8:	4413      	add	r3, r2
 80026ca:	edd3 7a00 	vldr	s15, [r3]
 80026ce:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80026d2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80026d6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80026da:	ee17 3a90 	vmov	r3, s15
 80026de:	b29b      	uxth	r3, r3
 80026e0:	0a1b      	lsrs	r3, r3, #8
 80026e2:	b29a      	uxth	r2, r3
 80026e4:	7b7b      	ldrb	r3, [r7, #13]
 80026e6:	335c      	adds	r3, #92	; 0x5c
 80026e8:	005b      	lsls	r3, r3, #1
 80026ea:	3301      	adds	r3, #1
 80026ec:	b2d1      	uxtb	r1, r2
 80026ee:	4a36      	ldr	r2, [pc, #216]	; (80027c8 <save_nonvolatile_variables+0x7b0>)
 80026f0:	54d1      	strb	r1, [r2, r3]

		// Upper output voltage
		nonvolatile_memory_buffer[NVM_PT_UPPER_VOLTAGE_ADDR + 2*i + 0] = ((uint16_t) (pt_cal_upper_voltage[i] * 10.0F)) >> 0;
 80026f2:	7b7b      	ldrb	r3, [r7, #13]
 80026f4:	4a35      	ldr	r2, [pc, #212]	; (80027cc <save_nonvolatile_variables+0x7b4>)
 80026f6:	009b      	lsls	r3, r3, #2
 80026f8:	4413      	add	r3, r2
 80026fa:	edd3 7a00 	vldr	s15, [r3]
 80026fe:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002702:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002706:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800270a:	ee17 3a90 	vmov	r3, s15
 800270e:	b29a      	uxth	r2, r3
 8002710:	7b7b      	ldrb	r3, [r7, #13]
 8002712:	3348      	adds	r3, #72	; 0x48
 8002714:	005b      	lsls	r3, r3, #1
 8002716:	b2d1      	uxtb	r1, r2
 8002718:	4a2b      	ldr	r2, [pc, #172]	; (80027c8 <save_nonvolatile_variables+0x7b0>)
 800271a:	54d1      	strb	r1, [r2, r3]
		nonvolatile_memory_buffer[NVM_PT_UPPER_VOLTAGE_ADDR + 2*i + 1] = ((uint16_t) (pt_cal_upper_voltage[i] * 10.0F)) >> 8;
 800271c:	7b7b      	ldrb	r3, [r7, #13]
 800271e:	4a2b      	ldr	r2, [pc, #172]	; (80027cc <save_nonvolatile_variables+0x7b4>)
 8002720:	009b      	lsls	r3, r3, #2
 8002722:	4413      	add	r3, r2
 8002724:	edd3 7a00 	vldr	s15, [r3]
 8002728:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800272c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002730:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002734:	ee17 3a90 	vmov	r3, s15
 8002738:	b29b      	uxth	r3, r3
 800273a:	0a1b      	lsrs	r3, r3, #8
 800273c:	b29a      	uxth	r2, r3
 800273e:	7b7b      	ldrb	r3, [r7, #13]
 8002740:	3348      	adds	r3, #72	; 0x48
 8002742:	005b      	lsls	r3, r3, #1
 8002744:	3301      	adds	r3, #1
 8002746:	b2d1      	uxtb	r1, r2
 8002748:	4a1f      	ldr	r2, [pc, #124]	; (80027c8 <save_nonvolatile_variables+0x7b0>)
 800274a:	54d1      	strb	r1, [r2, r3]

		// Pressure range
		nonvolatile_memory_buffer[NVM_PT_PRESSURE_RANGE_ADDR + 2*i + 0] = ((uint16_t) (pt_cal_upper_pressure[i])) >> 0;
 800274c:	7b7b      	ldrb	r3, [r7, #13]
 800274e:	4a20      	ldr	r2, [pc, #128]	; (80027d0 <save_nonvolatile_variables+0x7b8>)
 8002750:	009b      	lsls	r3, r3, #2
 8002752:	4413      	add	r3, r2
 8002754:	edd3 7a00 	vldr	s15, [r3]
 8002758:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800275c:	ee17 3a90 	vmov	r3, s15
 8002760:	b29a      	uxth	r2, r3
 8002762:	7b7b      	ldrb	r3, [r7, #13]
 8002764:	3370      	adds	r3, #112	; 0x70
 8002766:	005b      	lsls	r3, r3, #1
 8002768:	b2d1      	uxtb	r1, r2
 800276a:	4a17      	ldr	r2, [pc, #92]	; (80027c8 <save_nonvolatile_variables+0x7b0>)
 800276c:	54d1      	strb	r1, [r2, r3]
		nonvolatile_memory_buffer[NVM_PT_PRESSURE_RANGE_ADDR + 2*i + 1] = ((uint16_t) (pt_cal_upper_pressure[i])) >> 8;
 800276e:	7b7b      	ldrb	r3, [r7, #13]
 8002770:	4a17      	ldr	r2, [pc, #92]	; (80027d0 <save_nonvolatile_variables+0x7b8>)
 8002772:	009b      	lsls	r3, r3, #2
 8002774:	4413      	add	r3, r2
 8002776:	edd3 7a00 	vldr	s15, [r3]
 800277a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800277e:	ee17 3a90 	vmov	r3, s15
 8002782:	b29b      	uxth	r3, r3
 8002784:	0a1b      	lsrs	r3, r3, #8
 8002786:	b29a      	uxth	r2, r3
 8002788:	7b7b      	ldrb	r3, [r7, #13]
 800278a:	3370      	adds	r3, #112	; 0x70
 800278c:	005b      	lsls	r3, r3, #1
 800278e:	3301      	adds	r3, #1
 8002790:	b2d1      	uxtb	r1, r2
 8002792:	4a0d      	ldr	r2, [pc, #52]	; (80027c8 <save_nonvolatile_variables+0x7b0>)
 8002794:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 8002796:	7b7b      	ldrb	r3, [r7, #13]
 8002798:	3301      	adds	r3, #1
 800279a:	737b      	strb	r3, [r7, #13]
 800279c:	7b7b      	ldrb	r3, [r7, #13]
 800279e:	2b13      	cmp	r3, #19
 80027a0:	f67f af7a 	bls.w	8002698 <save_nonvolatile_variables+0x680>
	}

	// Overwrite previous values in flash
	erase_reserved_flash_pages(&flash);
 80027a4:	480b      	ldr	r0, [pc, #44]	; (80027d4 <save_nonvolatile_variables+0x7bc>)
 80027a6:	f006 f955 	bl	8008a54 <erase_reserved_flash_pages>
	write_reserved_flash_page(&flash, NVM_FLASH_PAGE_NUM, nonvolatile_memory_buffer,
 80027aa:	23fe      	movs	r3, #254	; 0xfe
 80027ac:	4a06      	ldr	r2, [pc, #24]	; (80027c8 <save_nonvolatile_variables+0x7b0>)
 80027ae:	2100      	movs	r1, #0
 80027b0:	4808      	ldr	r0, [pc, #32]	; (80027d4 <save_nonvolatile_variables+0x7bc>)
 80027b2:	f006 f914 	bl	80089de <write_reserved_flash_page>
			NVM_BUFFER_SZ);

	// Ensure they got saved
	read_nonvolatile_variables();
 80027b6:	f7ff f9d9 	bl	8001b6c <read_nonvolatile_variables>

	return 1;
 80027ba:	2301      	movs	r3, #1
}
 80027bc:	4618      	mov	r0, r3
 80027be:	3710      	adds	r7, #16
 80027c0:	46bd      	mov	sp, r7
 80027c2:	bd80      	pop	{r7, pc}
 80027c4:	20000300 	.word	0x20000300
 80027c8:	20000dc4 	.word	0x20000dc4
 80027cc:	20000350 	.word	0x20000350
 80027d0:	200003a0 	.word	0x200003a0
 80027d4:	20000ec4 	.word	0x20000ec4

080027d8 <pack_calibration_data>:
 80027d8:	b480      	push	{r7}
 80027da:	b083      	sub	sp, #12
 80027dc:	af00      	add	r7, sp, #0
 80027de:	6078      	str	r0, [r7, #4]
 80027e0:	4bc9      	ldr	r3, [pc, #804]	; (8002b08 <pack_calibration_data+0x330>)
 80027e2:	edd3 7a00 	vldr	s15, [r3]
 80027e6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80027ea:	ee67 7a87 	vmul.f32	s15, s15, s14
 80027ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80027f2:	ee17 3a90 	vmov	r3, s15
 80027f6:	b21b      	sxth	r3, r3
 80027f8:	b2da      	uxtb	r2, r3
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	701a      	strb	r2, [r3, #0]
 80027fe:	4bc2      	ldr	r3, [pc, #776]	; (8002b08 <pack_calibration_data+0x330>)
 8002800:	edd3 7a00 	vldr	s15, [r3]
 8002804:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002808:	ee67 7a87 	vmul.f32	s15, s15, s14
 800280c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002810:	ee17 3a90 	vmov	r3, s15
 8002814:	b21b      	sxth	r3, r3
 8002816:	121b      	asrs	r3, r3, #8
 8002818:	b21a      	sxth	r2, r3
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	3301      	adds	r3, #1
 800281e:	b2d2      	uxtb	r2, r2
 8002820:	701a      	strb	r2, [r3, #0]
 8002822:	4bb9      	ldr	r3, [pc, #740]	; (8002b08 <pack_calibration_data+0x330>)
 8002824:	edd3 7a01 	vldr	s15, [r3, #4]
 8002828:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800282c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002830:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002834:	ee17 3a90 	vmov	r3, s15
 8002838:	b21a      	sxth	r2, r3
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	3302      	adds	r3, #2
 800283e:	b2d2      	uxtb	r2, r2
 8002840:	701a      	strb	r2, [r3, #0]
 8002842:	4bb1      	ldr	r3, [pc, #708]	; (8002b08 <pack_calibration_data+0x330>)
 8002844:	edd3 7a01 	vldr	s15, [r3, #4]
 8002848:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800284c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002850:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002854:	ee17 3a90 	vmov	r3, s15
 8002858:	b21b      	sxth	r3, r3
 800285a:	121b      	asrs	r3, r3, #8
 800285c:	b21a      	sxth	r2, r3
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	3303      	adds	r3, #3
 8002862:	b2d2      	uxtb	r2, r2
 8002864:	701a      	strb	r2, [r3, #0]
 8002866:	4ba8      	ldr	r3, [pc, #672]	; (8002b08 <pack_calibration_data+0x330>)
 8002868:	edd3 7a02 	vldr	s15, [r3, #8]
 800286c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002870:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002874:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002878:	ee17 3a90 	vmov	r3, s15
 800287c:	b21a      	sxth	r2, r3
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	3304      	adds	r3, #4
 8002882:	b2d2      	uxtb	r2, r2
 8002884:	701a      	strb	r2, [r3, #0]
 8002886:	4ba0      	ldr	r3, [pc, #640]	; (8002b08 <pack_calibration_data+0x330>)
 8002888:	edd3 7a02 	vldr	s15, [r3, #8]
 800288c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002890:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002894:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002898:	ee17 3a90 	vmov	r3, s15
 800289c:	b21b      	sxth	r3, r3
 800289e:	121b      	asrs	r3, r3, #8
 80028a0:	b21a      	sxth	r2, r3
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	3305      	adds	r3, #5
 80028a6:	b2d2      	uxtb	r2, r2
 80028a8:	701a      	strb	r2, [r3, #0]
 80028aa:	4b97      	ldr	r3, [pc, #604]	; (8002b08 <pack_calibration_data+0x330>)
 80028ac:	edd3 7a03 	vldr	s15, [r3, #12]
 80028b0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80028b4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80028b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80028bc:	ee17 3a90 	vmov	r3, s15
 80028c0:	b21a      	sxth	r2, r3
 80028c2:	687b      	ldr	r3, [r7, #4]
 80028c4:	3306      	adds	r3, #6
 80028c6:	b2d2      	uxtb	r2, r2
 80028c8:	701a      	strb	r2, [r3, #0]
 80028ca:	4b8f      	ldr	r3, [pc, #572]	; (8002b08 <pack_calibration_data+0x330>)
 80028cc:	edd3 7a03 	vldr	s15, [r3, #12]
 80028d0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80028d4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80028d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80028dc:	ee17 3a90 	vmov	r3, s15
 80028e0:	b21b      	sxth	r3, r3
 80028e2:	121b      	asrs	r3, r3, #8
 80028e4:	b21a      	sxth	r2, r3
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	3307      	adds	r3, #7
 80028ea:	b2d2      	uxtb	r2, r2
 80028ec:	701a      	strb	r2, [r3, #0]
 80028ee:	4b86      	ldr	r3, [pc, #536]	; (8002b08 <pack_calibration_data+0x330>)
 80028f0:	edd3 7a04 	vldr	s15, [r3, #16]
 80028f4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80028f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80028fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002900:	ee17 3a90 	vmov	r3, s15
 8002904:	b21a      	sxth	r2, r3
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	3308      	adds	r3, #8
 800290a:	b2d2      	uxtb	r2, r2
 800290c:	701a      	strb	r2, [r3, #0]
 800290e:	4b7e      	ldr	r3, [pc, #504]	; (8002b08 <pack_calibration_data+0x330>)
 8002910:	edd3 7a04 	vldr	s15, [r3, #16]
 8002914:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002918:	ee67 7a87 	vmul.f32	s15, s15, s14
 800291c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002920:	ee17 3a90 	vmov	r3, s15
 8002924:	b21b      	sxth	r3, r3
 8002926:	121b      	asrs	r3, r3, #8
 8002928:	b21a      	sxth	r2, r3
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	3309      	adds	r3, #9
 800292e:	b2d2      	uxtb	r2, r2
 8002930:	701a      	strb	r2, [r3, #0]
 8002932:	4b75      	ldr	r3, [pc, #468]	; (8002b08 <pack_calibration_data+0x330>)
 8002934:	edd3 7a05 	vldr	s15, [r3, #20]
 8002938:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800293c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002940:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002944:	ee17 3a90 	vmov	r3, s15
 8002948:	b21a      	sxth	r2, r3
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	330a      	adds	r3, #10
 800294e:	b2d2      	uxtb	r2, r2
 8002950:	701a      	strb	r2, [r3, #0]
 8002952:	4b6d      	ldr	r3, [pc, #436]	; (8002b08 <pack_calibration_data+0x330>)
 8002954:	edd3 7a05 	vldr	s15, [r3, #20]
 8002958:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800295c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002960:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002964:	ee17 3a90 	vmov	r3, s15
 8002968:	b21b      	sxth	r3, r3
 800296a:	121b      	asrs	r3, r3, #8
 800296c:	b21a      	sxth	r2, r3
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	330b      	adds	r3, #11
 8002972:	b2d2      	uxtb	r2, r2
 8002974:	701a      	strb	r2, [r3, #0]
 8002976:	4b64      	ldr	r3, [pc, #400]	; (8002b08 <pack_calibration_data+0x330>)
 8002978:	edd3 7a06 	vldr	s15, [r3, #24]
 800297c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002980:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002984:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002988:	ee17 3a90 	vmov	r3, s15
 800298c:	b21a      	sxth	r2, r3
 800298e:	687b      	ldr	r3, [r7, #4]
 8002990:	330c      	adds	r3, #12
 8002992:	b2d2      	uxtb	r2, r2
 8002994:	701a      	strb	r2, [r3, #0]
 8002996:	4b5c      	ldr	r3, [pc, #368]	; (8002b08 <pack_calibration_data+0x330>)
 8002998:	edd3 7a06 	vldr	s15, [r3, #24]
 800299c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80029a0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80029a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80029a8:	ee17 3a90 	vmov	r3, s15
 80029ac:	b21b      	sxth	r3, r3
 80029ae:	121b      	asrs	r3, r3, #8
 80029b0:	b21a      	sxth	r2, r3
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	330d      	adds	r3, #13
 80029b6:	b2d2      	uxtb	r2, r2
 80029b8:	701a      	strb	r2, [r3, #0]
 80029ba:	4b53      	ldr	r3, [pc, #332]	; (8002b08 <pack_calibration_data+0x330>)
 80029bc:	edd3 7a07 	vldr	s15, [r3, #28]
 80029c0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80029c4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80029c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80029cc:	ee17 3a90 	vmov	r3, s15
 80029d0:	b21a      	sxth	r2, r3
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	330e      	adds	r3, #14
 80029d6:	b2d2      	uxtb	r2, r2
 80029d8:	701a      	strb	r2, [r3, #0]
 80029da:	4b4b      	ldr	r3, [pc, #300]	; (8002b08 <pack_calibration_data+0x330>)
 80029dc:	edd3 7a07 	vldr	s15, [r3, #28]
 80029e0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80029e4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80029e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80029ec:	ee17 3a90 	vmov	r3, s15
 80029f0:	b21b      	sxth	r3, r3
 80029f2:	121b      	asrs	r3, r3, #8
 80029f4:	b21a      	sxth	r2, r3
 80029f6:	687b      	ldr	r3, [r7, #4]
 80029f8:	330f      	adds	r3, #15
 80029fa:	b2d2      	uxtb	r2, r2
 80029fc:	701a      	strb	r2, [r3, #0]
 80029fe:	4b42      	ldr	r3, [pc, #264]	; (8002b08 <pack_calibration_data+0x330>)
 8002a00:	edd3 7a08 	vldr	s15, [r3, #32]
 8002a04:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002a08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002a10:	ee17 3a90 	vmov	r3, s15
 8002a14:	b21a      	sxth	r2, r3
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	3310      	adds	r3, #16
 8002a1a:	b2d2      	uxtb	r2, r2
 8002a1c:	701a      	strb	r2, [r3, #0]
 8002a1e:	4b3a      	ldr	r3, [pc, #232]	; (8002b08 <pack_calibration_data+0x330>)
 8002a20:	edd3 7a08 	vldr	s15, [r3, #32]
 8002a24:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002a28:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002a30:	ee17 3a90 	vmov	r3, s15
 8002a34:	b21b      	sxth	r3, r3
 8002a36:	121b      	asrs	r3, r3, #8
 8002a38:	b21a      	sxth	r2, r3
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	3311      	adds	r3, #17
 8002a3e:	b2d2      	uxtb	r2, r2
 8002a40:	701a      	strb	r2, [r3, #0]
 8002a42:	4b31      	ldr	r3, [pc, #196]	; (8002b08 <pack_calibration_data+0x330>)
 8002a44:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8002a48:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002a4c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002a54:	ee17 3a90 	vmov	r3, s15
 8002a58:	b21a      	sxth	r2, r3
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	3312      	adds	r3, #18
 8002a5e:	b2d2      	uxtb	r2, r2
 8002a60:	701a      	strb	r2, [r3, #0]
 8002a62:	4b29      	ldr	r3, [pc, #164]	; (8002b08 <pack_calibration_data+0x330>)
 8002a64:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8002a68:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002a6c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002a74:	ee17 3a90 	vmov	r3, s15
 8002a78:	b21b      	sxth	r3, r3
 8002a7a:	121b      	asrs	r3, r3, #8
 8002a7c:	b21a      	sxth	r2, r3
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	3313      	adds	r3, #19
 8002a82:	b2d2      	uxtb	r2, r2
 8002a84:	701a      	strb	r2, [r3, #0]
 8002a86:	4b20      	ldr	r3, [pc, #128]	; (8002b08 <pack_calibration_data+0x330>)
 8002a88:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8002a8c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002a90:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002a98:	ee17 3a90 	vmov	r3, s15
 8002a9c:	b21a      	sxth	r2, r3
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	3314      	adds	r3, #20
 8002aa2:	b2d2      	uxtb	r2, r2
 8002aa4:	701a      	strb	r2, [r3, #0]
 8002aa6:	4b18      	ldr	r3, [pc, #96]	; (8002b08 <pack_calibration_data+0x330>)
 8002aa8:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8002aac:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002ab0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002ab4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002ab8:	ee17 3a90 	vmov	r3, s15
 8002abc:	b21b      	sxth	r3, r3
 8002abe:	121b      	asrs	r3, r3, #8
 8002ac0:	b21a      	sxth	r2, r3
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	3315      	adds	r3, #21
 8002ac6:	b2d2      	uxtb	r2, r2
 8002ac8:	701a      	strb	r2, [r3, #0]
 8002aca:	4b0f      	ldr	r3, [pc, #60]	; (8002b08 <pack_calibration_data+0x330>)
 8002acc:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 8002ad0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002ad4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002ad8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002adc:	ee17 3a90 	vmov	r3, s15
 8002ae0:	b21a      	sxth	r2, r3
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	3316      	adds	r3, #22
 8002ae6:	b2d2      	uxtb	r2, r2
 8002ae8:	701a      	strb	r2, [r3, #0]
 8002aea:	4b07      	ldr	r3, [pc, #28]	; (8002b08 <pack_calibration_data+0x330>)
 8002aec:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 8002af0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002af4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002af8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002afc:	ee17 3a90 	vmov	r3, s15
 8002b00:	b21b      	sxth	r3, r3
 8002b02:	121b      	asrs	r3, r3, #8
 8002b04:	e002      	b.n	8002b0c <pack_calibration_data+0x334>
 8002b06:	bf00      	nop
 8002b08:	20000300 	.word	0x20000300
 8002b0c:	b21a      	sxth	r2, r3
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	3317      	adds	r3, #23
 8002b12:	b2d2      	uxtb	r2, r2
 8002b14:	701a      	strb	r2, [r3, #0]
 8002b16:	4bca      	ldr	r3, [pc, #808]	; (8002e40 <pack_calibration_data+0x668>)
 8002b18:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8002b1c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002b20:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002b28:	ee17 3a90 	vmov	r3, s15
 8002b2c:	b21a      	sxth	r2, r3
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	3318      	adds	r3, #24
 8002b32:	b2d2      	uxtb	r2, r2
 8002b34:	701a      	strb	r2, [r3, #0]
 8002b36:	4bc2      	ldr	r3, [pc, #776]	; (8002e40 <pack_calibration_data+0x668>)
 8002b38:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8002b3c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002b40:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002b48:	ee17 3a90 	vmov	r3, s15
 8002b4c:	b21b      	sxth	r3, r3
 8002b4e:	121b      	asrs	r3, r3, #8
 8002b50:	b21a      	sxth	r2, r3
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	3319      	adds	r3, #25
 8002b56:	b2d2      	uxtb	r2, r2
 8002b58:	701a      	strb	r2, [r3, #0]
 8002b5a:	4bb9      	ldr	r3, [pc, #740]	; (8002e40 <pack_calibration_data+0x668>)
 8002b5c:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8002b60:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002b64:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002b6c:	ee17 3a90 	vmov	r3, s15
 8002b70:	b21a      	sxth	r2, r3
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	331a      	adds	r3, #26
 8002b76:	b2d2      	uxtb	r2, r2
 8002b78:	701a      	strb	r2, [r3, #0]
 8002b7a:	4bb1      	ldr	r3, [pc, #708]	; (8002e40 <pack_calibration_data+0x668>)
 8002b7c:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8002b80:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002b84:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002b8c:	ee17 3a90 	vmov	r3, s15
 8002b90:	b21b      	sxth	r3, r3
 8002b92:	121b      	asrs	r3, r3, #8
 8002b94:	b21a      	sxth	r2, r3
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	331b      	adds	r3, #27
 8002b9a:	b2d2      	uxtb	r2, r2
 8002b9c:	701a      	strb	r2, [r3, #0]
 8002b9e:	4ba8      	ldr	r3, [pc, #672]	; (8002e40 <pack_calibration_data+0x668>)
 8002ba0:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 8002ba4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002ba8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002bac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002bb0:	ee17 3a90 	vmov	r3, s15
 8002bb4:	b21a      	sxth	r2, r3
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	331c      	adds	r3, #28
 8002bba:	b2d2      	uxtb	r2, r2
 8002bbc:	701a      	strb	r2, [r3, #0]
 8002bbe:	4ba0      	ldr	r3, [pc, #640]	; (8002e40 <pack_calibration_data+0x668>)
 8002bc0:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 8002bc4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002bc8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002bcc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002bd0:	ee17 3a90 	vmov	r3, s15
 8002bd4:	b21b      	sxth	r3, r3
 8002bd6:	121b      	asrs	r3, r3, #8
 8002bd8:	b21a      	sxth	r2, r3
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	331d      	adds	r3, #29
 8002bde:	b2d2      	uxtb	r2, r2
 8002be0:	701a      	strb	r2, [r3, #0]
 8002be2:	4b97      	ldr	r3, [pc, #604]	; (8002e40 <pack_calibration_data+0x668>)
 8002be4:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 8002be8:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002bec:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002bf0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002bf4:	ee17 3a90 	vmov	r3, s15
 8002bf8:	b21a      	sxth	r2, r3
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	331e      	adds	r3, #30
 8002bfe:	b2d2      	uxtb	r2, r2
 8002c00:	701a      	strb	r2, [r3, #0]
 8002c02:	4b8f      	ldr	r3, [pc, #572]	; (8002e40 <pack_calibration_data+0x668>)
 8002c04:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 8002c08:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002c0c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002c10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002c14:	ee17 3a90 	vmov	r3, s15
 8002c18:	b21b      	sxth	r3, r3
 8002c1a:	121b      	asrs	r3, r3, #8
 8002c1c:	b21a      	sxth	r2, r3
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	331f      	adds	r3, #31
 8002c22:	b2d2      	uxtb	r2, r2
 8002c24:	701a      	strb	r2, [r3, #0]
 8002c26:	4b86      	ldr	r3, [pc, #536]	; (8002e40 <pack_calibration_data+0x668>)
 8002c28:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8002c2c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002c30:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002c34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002c38:	ee17 3a90 	vmov	r3, s15
 8002c3c:	b21a      	sxth	r2, r3
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	3320      	adds	r3, #32
 8002c42:	b2d2      	uxtb	r2, r2
 8002c44:	701a      	strb	r2, [r3, #0]
 8002c46:	4b7e      	ldr	r3, [pc, #504]	; (8002e40 <pack_calibration_data+0x668>)
 8002c48:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8002c4c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002c50:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002c54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002c58:	ee17 3a90 	vmov	r3, s15
 8002c5c:	b21b      	sxth	r3, r3
 8002c5e:	121b      	asrs	r3, r3, #8
 8002c60:	b21a      	sxth	r2, r3
 8002c62:	687b      	ldr	r3, [r7, #4]
 8002c64:	3321      	adds	r3, #33	; 0x21
 8002c66:	b2d2      	uxtb	r2, r2
 8002c68:	701a      	strb	r2, [r3, #0]
 8002c6a:	4b75      	ldr	r3, [pc, #468]	; (8002e40 <pack_calibration_data+0x668>)
 8002c6c:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 8002c70:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002c74:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002c78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002c7c:	ee17 3a90 	vmov	r3, s15
 8002c80:	b21a      	sxth	r2, r3
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	3322      	adds	r3, #34	; 0x22
 8002c86:	b2d2      	uxtb	r2, r2
 8002c88:	701a      	strb	r2, [r3, #0]
 8002c8a:	4b6d      	ldr	r3, [pc, #436]	; (8002e40 <pack_calibration_data+0x668>)
 8002c8c:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 8002c90:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002c94:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002c98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002c9c:	ee17 3a90 	vmov	r3, s15
 8002ca0:	b21b      	sxth	r3, r3
 8002ca2:	121b      	asrs	r3, r3, #8
 8002ca4:	b21a      	sxth	r2, r3
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	3323      	adds	r3, #35	; 0x23
 8002caa:	b2d2      	uxtb	r2, r2
 8002cac:	701a      	strb	r2, [r3, #0]
 8002cae:	4b64      	ldr	r3, [pc, #400]	; (8002e40 <pack_calibration_data+0x668>)
 8002cb0:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 8002cb4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002cb8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002cbc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002cc0:	ee17 3a90 	vmov	r3, s15
 8002cc4:	b21a      	sxth	r2, r3
 8002cc6:	687b      	ldr	r3, [r7, #4]
 8002cc8:	3324      	adds	r3, #36	; 0x24
 8002cca:	b2d2      	uxtb	r2, r2
 8002ccc:	701a      	strb	r2, [r3, #0]
 8002cce:	4b5c      	ldr	r3, [pc, #368]	; (8002e40 <pack_calibration_data+0x668>)
 8002cd0:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 8002cd4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002cd8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002cdc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002ce0:	ee17 3a90 	vmov	r3, s15
 8002ce4:	b21b      	sxth	r3, r3
 8002ce6:	121b      	asrs	r3, r3, #8
 8002ce8:	b21a      	sxth	r2, r3
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	3325      	adds	r3, #37	; 0x25
 8002cee:	b2d2      	uxtb	r2, r2
 8002cf0:	701a      	strb	r2, [r3, #0]
 8002cf2:	4b53      	ldr	r3, [pc, #332]	; (8002e40 <pack_calibration_data+0x668>)
 8002cf4:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8002cf8:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002cfc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002d00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002d04:	ee17 3a90 	vmov	r3, s15
 8002d08:	b21a      	sxth	r2, r3
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	3326      	adds	r3, #38	; 0x26
 8002d0e:	b2d2      	uxtb	r2, r2
 8002d10:	701a      	strb	r2, [r3, #0]
 8002d12:	4b4b      	ldr	r3, [pc, #300]	; (8002e40 <pack_calibration_data+0x668>)
 8002d14:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8002d18:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002d1c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002d20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002d24:	ee17 3a90 	vmov	r3, s15
 8002d28:	b21b      	sxth	r3, r3
 8002d2a:	121b      	asrs	r3, r3, #8
 8002d2c:	b21a      	sxth	r2, r3
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	3327      	adds	r3, #39	; 0x27
 8002d32:	b2d2      	uxtb	r2, r2
 8002d34:	701a      	strb	r2, [r3, #0]
 8002d36:	4b42      	ldr	r3, [pc, #264]	; (8002e40 <pack_calibration_data+0x668>)
 8002d38:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 8002d3c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002d40:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002d44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002d48:	ee17 3a90 	vmov	r3, s15
 8002d4c:	b21a      	sxth	r2, r3
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	3328      	adds	r3, #40	; 0x28
 8002d52:	b2d2      	uxtb	r2, r2
 8002d54:	701a      	strb	r2, [r3, #0]
 8002d56:	4b3a      	ldr	r3, [pc, #232]	; (8002e40 <pack_calibration_data+0x668>)
 8002d58:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 8002d5c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002d60:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002d64:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002d68:	ee17 3a90 	vmov	r3, s15
 8002d6c:	b21b      	sxth	r3, r3
 8002d6e:	121b      	asrs	r3, r3, #8
 8002d70:	b21a      	sxth	r2, r3
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	3329      	adds	r3, #41	; 0x29
 8002d76:	b2d2      	uxtb	r2, r2
 8002d78:	701a      	strb	r2, [r3, #0]
 8002d7a:	4b31      	ldr	r3, [pc, #196]	; (8002e40 <pack_calibration_data+0x668>)
 8002d7c:	edd3 7a15 	vldr	s15, [r3, #84]	; 0x54
 8002d80:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002d84:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002d88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002d8c:	ee17 3a90 	vmov	r3, s15
 8002d90:	b21a      	sxth	r2, r3
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	332a      	adds	r3, #42	; 0x2a
 8002d96:	b2d2      	uxtb	r2, r2
 8002d98:	701a      	strb	r2, [r3, #0]
 8002d9a:	4b29      	ldr	r3, [pc, #164]	; (8002e40 <pack_calibration_data+0x668>)
 8002d9c:	edd3 7a15 	vldr	s15, [r3, #84]	; 0x54
 8002da0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002da4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002da8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002dac:	ee17 3a90 	vmov	r3, s15
 8002db0:	b21b      	sxth	r3, r3
 8002db2:	121b      	asrs	r3, r3, #8
 8002db4:	b21a      	sxth	r2, r3
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	332b      	adds	r3, #43	; 0x2b
 8002dba:	b2d2      	uxtb	r2, r2
 8002dbc:	701a      	strb	r2, [r3, #0]
 8002dbe:	4b21      	ldr	r3, [pc, #132]	; (8002e44 <pack_calibration_data+0x66c>)
 8002dc0:	edd3 7a00 	vldr	s15, [r3]
 8002dc4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002dc8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002dcc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002dd0:	ee17 3a90 	vmov	r3, s15
 8002dd4:	b21a      	sxth	r2, r3
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	332c      	adds	r3, #44	; 0x2c
 8002dda:	b2d2      	uxtb	r2, r2
 8002ddc:	701a      	strb	r2, [r3, #0]
 8002dde:	4b19      	ldr	r3, [pc, #100]	; (8002e44 <pack_calibration_data+0x66c>)
 8002de0:	edd3 7a00 	vldr	s15, [r3]
 8002de4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002de8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002dec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002df0:	ee17 3a90 	vmov	r3, s15
 8002df4:	b21b      	sxth	r3, r3
 8002df6:	121b      	asrs	r3, r3, #8
 8002df8:	b21a      	sxth	r2, r3
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	332d      	adds	r3, #45	; 0x2d
 8002dfe:	b2d2      	uxtb	r2, r2
 8002e00:	701a      	strb	r2, [r3, #0]
 8002e02:	4b10      	ldr	r3, [pc, #64]	; (8002e44 <pack_calibration_data+0x66c>)
 8002e04:	edd3 7a01 	vldr	s15, [r3, #4]
 8002e08:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002e0c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002e10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002e14:	ee17 3a90 	vmov	r3, s15
 8002e18:	b21a      	sxth	r2, r3
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	332e      	adds	r3, #46	; 0x2e
 8002e1e:	b2d2      	uxtb	r2, r2
 8002e20:	701a      	strb	r2, [r3, #0]
 8002e22:	4b08      	ldr	r3, [pc, #32]	; (8002e44 <pack_calibration_data+0x66c>)
 8002e24:	edd3 7a01 	vldr	s15, [r3, #4]
 8002e28:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002e2c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002e30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002e34:	ee17 3a90 	vmov	r3, s15
 8002e38:	b21b      	sxth	r3, r3
 8002e3a:	121b      	asrs	r3, r3, #8
 8002e3c:	e004      	b.n	8002e48 <pack_calibration_data+0x670>
 8002e3e:	bf00      	nop
 8002e40:	20000300 	.word	0x20000300
 8002e44:	20000350 	.word	0x20000350
 8002e48:	b21a      	sxth	r2, r3
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	332f      	adds	r3, #47	; 0x2f
 8002e4e:	b2d2      	uxtb	r2, r2
 8002e50:	701a      	strb	r2, [r3, #0]
 8002e52:	4bca      	ldr	r3, [pc, #808]	; (800317c <pack_calibration_data+0x9a4>)
 8002e54:	edd3 7a02 	vldr	s15, [r3, #8]
 8002e58:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002e5c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002e60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002e64:	ee17 3a90 	vmov	r3, s15
 8002e68:	b21a      	sxth	r2, r3
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	3330      	adds	r3, #48	; 0x30
 8002e6e:	b2d2      	uxtb	r2, r2
 8002e70:	701a      	strb	r2, [r3, #0]
 8002e72:	4bc2      	ldr	r3, [pc, #776]	; (800317c <pack_calibration_data+0x9a4>)
 8002e74:	edd3 7a02 	vldr	s15, [r3, #8]
 8002e78:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002e7c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002e80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002e84:	ee17 3a90 	vmov	r3, s15
 8002e88:	b21b      	sxth	r3, r3
 8002e8a:	121b      	asrs	r3, r3, #8
 8002e8c:	b21a      	sxth	r2, r3
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	3331      	adds	r3, #49	; 0x31
 8002e92:	b2d2      	uxtb	r2, r2
 8002e94:	701a      	strb	r2, [r3, #0]
 8002e96:	4bb9      	ldr	r3, [pc, #740]	; (800317c <pack_calibration_data+0x9a4>)
 8002e98:	edd3 7a03 	vldr	s15, [r3, #12]
 8002e9c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002ea0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002ea4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002ea8:	ee17 3a90 	vmov	r3, s15
 8002eac:	b21a      	sxth	r2, r3
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	3332      	adds	r3, #50	; 0x32
 8002eb2:	b2d2      	uxtb	r2, r2
 8002eb4:	701a      	strb	r2, [r3, #0]
 8002eb6:	4bb1      	ldr	r3, [pc, #708]	; (800317c <pack_calibration_data+0x9a4>)
 8002eb8:	edd3 7a03 	vldr	s15, [r3, #12]
 8002ebc:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002ec0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002ec4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002ec8:	ee17 3a90 	vmov	r3, s15
 8002ecc:	b21b      	sxth	r3, r3
 8002ece:	121b      	asrs	r3, r3, #8
 8002ed0:	b21a      	sxth	r2, r3
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	3333      	adds	r3, #51	; 0x33
 8002ed6:	b2d2      	uxtb	r2, r2
 8002ed8:	701a      	strb	r2, [r3, #0]
 8002eda:	4ba8      	ldr	r3, [pc, #672]	; (800317c <pack_calibration_data+0x9a4>)
 8002edc:	edd3 7a04 	vldr	s15, [r3, #16]
 8002ee0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002ee4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002ee8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002eec:	ee17 3a90 	vmov	r3, s15
 8002ef0:	b21a      	sxth	r2, r3
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	3334      	adds	r3, #52	; 0x34
 8002ef6:	b2d2      	uxtb	r2, r2
 8002ef8:	701a      	strb	r2, [r3, #0]
 8002efa:	4ba0      	ldr	r3, [pc, #640]	; (800317c <pack_calibration_data+0x9a4>)
 8002efc:	edd3 7a04 	vldr	s15, [r3, #16]
 8002f00:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002f04:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002f08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002f0c:	ee17 3a90 	vmov	r3, s15
 8002f10:	b21b      	sxth	r3, r3
 8002f12:	121b      	asrs	r3, r3, #8
 8002f14:	b21a      	sxth	r2, r3
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	3335      	adds	r3, #53	; 0x35
 8002f1a:	b2d2      	uxtb	r2, r2
 8002f1c:	701a      	strb	r2, [r3, #0]
 8002f1e:	4b97      	ldr	r3, [pc, #604]	; (800317c <pack_calibration_data+0x9a4>)
 8002f20:	edd3 7a05 	vldr	s15, [r3, #20]
 8002f24:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002f28:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002f2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002f30:	ee17 3a90 	vmov	r3, s15
 8002f34:	b21a      	sxth	r2, r3
 8002f36:	687b      	ldr	r3, [r7, #4]
 8002f38:	3336      	adds	r3, #54	; 0x36
 8002f3a:	b2d2      	uxtb	r2, r2
 8002f3c:	701a      	strb	r2, [r3, #0]
 8002f3e:	4b8f      	ldr	r3, [pc, #572]	; (800317c <pack_calibration_data+0x9a4>)
 8002f40:	edd3 7a05 	vldr	s15, [r3, #20]
 8002f44:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002f48:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002f4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002f50:	ee17 3a90 	vmov	r3, s15
 8002f54:	b21b      	sxth	r3, r3
 8002f56:	121b      	asrs	r3, r3, #8
 8002f58:	b21a      	sxth	r2, r3
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	3337      	adds	r3, #55	; 0x37
 8002f5e:	b2d2      	uxtb	r2, r2
 8002f60:	701a      	strb	r2, [r3, #0]
 8002f62:	4b86      	ldr	r3, [pc, #536]	; (800317c <pack_calibration_data+0x9a4>)
 8002f64:	edd3 7a06 	vldr	s15, [r3, #24]
 8002f68:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002f6c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002f70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002f74:	ee17 3a90 	vmov	r3, s15
 8002f78:	b21a      	sxth	r2, r3
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	3338      	adds	r3, #56	; 0x38
 8002f7e:	b2d2      	uxtb	r2, r2
 8002f80:	701a      	strb	r2, [r3, #0]
 8002f82:	4b7e      	ldr	r3, [pc, #504]	; (800317c <pack_calibration_data+0x9a4>)
 8002f84:	edd3 7a06 	vldr	s15, [r3, #24]
 8002f88:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002f8c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002f90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002f94:	ee17 3a90 	vmov	r3, s15
 8002f98:	b21b      	sxth	r3, r3
 8002f9a:	121b      	asrs	r3, r3, #8
 8002f9c:	b21a      	sxth	r2, r3
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	3339      	adds	r3, #57	; 0x39
 8002fa2:	b2d2      	uxtb	r2, r2
 8002fa4:	701a      	strb	r2, [r3, #0]
 8002fa6:	4b75      	ldr	r3, [pc, #468]	; (800317c <pack_calibration_data+0x9a4>)
 8002fa8:	edd3 7a07 	vldr	s15, [r3, #28]
 8002fac:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002fb0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002fb4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002fb8:	ee17 3a90 	vmov	r3, s15
 8002fbc:	b21a      	sxth	r2, r3
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	333a      	adds	r3, #58	; 0x3a
 8002fc2:	b2d2      	uxtb	r2, r2
 8002fc4:	701a      	strb	r2, [r3, #0]
 8002fc6:	4b6d      	ldr	r3, [pc, #436]	; (800317c <pack_calibration_data+0x9a4>)
 8002fc8:	edd3 7a07 	vldr	s15, [r3, #28]
 8002fcc:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002fd0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002fd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002fd8:	ee17 3a90 	vmov	r3, s15
 8002fdc:	b21b      	sxth	r3, r3
 8002fde:	121b      	asrs	r3, r3, #8
 8002fe0:	b21a      	sxth	r2, r3
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	333b      	adds	r3, #59	; 0x3b
 8002fe6:	b2d2      	uxtb	r2, r2
 8002fe8:	701a      	strb	r2, [r3, #0]
 8002fea:	4b64      	ldr	r3, [pc, #400]	; (800317c <pack_calibration_data+0x9a4>)
 8002fec:	edd3 7a08 	vldr	s15, [r3, #32]
 8002ff0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002ff4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002ff8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002ffc:	ee17 3a90 	vmov	r3, s15
 8003000:	b21a      	sxth	r2, r3
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	333c      	adds	r3, #60	; 0x3c
 8003006:	b2d2      	uxtb	r2, r2
 8003008:	701a      	strb	r2, [r3, #0]
 800300a:	4b5c      	ldr	r3, [pc, #368]	; (800317c <pack_calibration_data+0x9a4>)
 800300c:	edd3 7a08 	vldr	s15, [r3, #32]
 8003010:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003014:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003018:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800301c:	ee17 3a90 	vmov	r3, s15
 8003020:	b21b      	sxth	r3, r3
 8003022:	121b      	asrs	r3, r3, #8
 8003024:	b21a      	sxth	r2, r3
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	333d      	adds	r3, #61	; 0x3d
 800302a:	b2d2      	uxtb	r2, r2
 800302c:	701a      	strb	r2, [r3, #0]
 800302e:	4b53      	ldr	r3, [pc, #332]	; (800317c <pack_calibration_data+0x9a4>)
 8003030:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8003034:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003038:	ee67 7a87 	vmul.f32	s15, s15, s14
 800303c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003040:	ee17 3a90 	vmov	r3, s15
 8003044:	b21a      	sxth	r2, r3
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	333e      	adds	r3, #62	; 0x3e
 800304a:	b2d2      	uxtb	r2, r2
 800304c:	701a      	strb	r2, [r3, #0]
 800304e:	4b4b      	ldr	r3, [pc, #300]	; (800317c <pack_calibration_data+0x9a4>)
 8003050:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8003054:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003058:	ee67 7a87 	vmul.f32	s15, s15, s14
 800305c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003060:	ee17 3a90 	vmov	r3, s15
 8003064:	b21b      	sxth	r3, r3
 8003066:	121b      	asrs	r3, r3, #8
 8003068:	b21a      	sxth	r2, r3
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	333f      	adds	r3, #63	; 0x3f
 800306e:	b2d2      	uxtb	r2, r2
 8003070:	701a      	strb	r2, [r3, #0]
 8003072:	4b42      	ldr	r3, [pc, #264]	; (800317c <pack_calibration_data+0x9a4>)
 8003074:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8003078:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800307c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003080:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003084:	ee17 3a90 	vmov	r3, s15
 8003088:	b21a      	sxth	r2, r3
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	3340      	adds	r3, #64	; 0x40
 800308e:	b2d2      	uxtb	r2, r2
 8003090:	701a      	strb	r2, [r3, #0]
 8003092:	4b3a      	ldr	r3, [pc, #232]	; (800317c <pack_calibration_data+0x9a4>)
 8003094:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8003098:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800309c:	ee67 7a87 	vmul.f32	s15, s15, s14
 80030a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80030a4:	ee17 3a90 	vmov	r3, s15
 80030a8:	b21b      	sxth	r3, r3
 80030aa:	121b      	asrs	r3, r3, #8
 80030ac:	b21a      	sxth	r2, r3
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	3341      	adds	r3, #65	; 0x41
 80030b2:	b2d2      	uxtb	r2, r2
 80030b4:	701a      	strb	r2, [r3, #0]
 80030b6:	4b31      	ldr	r3, [pc, #196]	; (800317c <pack_calibration_data+0x9a4>)
 80030b8:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 80030bc:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80030c0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80030c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80030c8:	ee17 3a90 	vmov	r3, s15
 80030cc:	b21a      	sxth	r2, r3
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	3342      	adds	r3, #66	; 0x42
 80030d2:	b2d2      	uxtb	r2, r2
 80030d4:	701a      	strb	r2, [r3, #0]
 80030d6:	4b29      	ldr	r3, [pc, #164]	; (800317c <pack_calibration_data+0x9a4>)
 80030d8:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 80030dc:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80030e0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80030e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80030e8:	ee17 3a90 	vmov	r3, s15
 80030ec:	b21b      	sxth	r3, r3
 80030ee:	121b      	asrs	r3, r3, #8
 80030f0:	b21a      	sxth	r2, r3
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	3343      	adds	r3, #67	; 0x43
 80030f6:	b2d2      	uxtb	r2, r2
 80030f8:	701a      	strb	r2, [r3, #0]
 80030fa:	4b20      	ldr	r3, [pc, #128]	; (800317c <pack_calibration_data+0x9a4>)
 80030fc:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8003100:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003104:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003108:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800310c:	ee17 3a90 	vmov	r3, s15
 8003110:	b21a      	sxth	r2, r3
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	3344      	adds	r3, #68	; 0x44
 8003116:	b2d2      	uxtb	r2, r2
 8003118:	701a      	strb	r2, [r3, #0]
 800311a:	4b18      	ldr	r3, [pc, #96]	; (800317c <pack_calibration_data+0x9a4>)
 800311c:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8003120:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003124:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003128:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800312c:	ee17 3a90 	vmov	r3, s15
 8003130:	b21b      	sxth	r3, r3
 8003132:	121b      	asrs	r3, r3, #8
 8003134:	b21a      	sxth	r2, r3
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	3345      	adds	r3, #69	; 0x45
 800313a:	b2d2      	uxtb	r2, r2
 800313c:	701a      	strb	r2, [r3, #0]
 800313e:	4b0f      	ldr	r3, [pc, #60]	; (800317c <pack_calibration_data+0x9a4>)
 8003140:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8003144:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003148:	ee67 7a87 	vmul.f32	s15, s15, s14
 800314c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003150:	ee17 3a90 	vmov	r3, s15
 8003154:	b21a      	sxth	r2, r3
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	3346      	adds	r3, #70	; 0x46
 800315a:	b2d2      	uxtb	r2, r2
 800315c:	701a      	strb	r2, [r3, #0]
 800315e:	4b07      	ldr	r3, [pc, #28]	; (800317c <pack_calibration_data+0x9a4>)
 8003160:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8003164:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003168:	ee67 7a87 	vmul.f32	s15, s15, s14
 800316c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003170:	ee17 3a90 	vmov	r3, s15
 8003174:	b21b      	sxth	r3, r3
 8003176:	121b      	asrs	r3, r3, #8
 8003178:	e002      	b.n	8003180 <pack_calibration_data+0x9a8>
 800317a:	bf00      	nop
 800317c:	20000350 	.word	0x20000350
 8003180:	b21a      	sxth	r2, r3
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	3347      	adds	r3, #71	; 0x47
 8003186:	b2d2      	uxtb	r2, r2
 8003188:	701a      	strb	r2, [r3, #0]
 800318a:	4bc6      	ldr	r3, [pc, #792]	; (80034a4 <pack_calibration_data+0xccc>)
 800318c:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 8003190:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003194:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003198:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800319c:	ee17 3a90 	vmov	r3, s15
 80031a0:	b21a      	sxth	r2, r3
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	3348      	adds	r3, #72	; 0x48
 80031a6:	b2d2      	uxtb	r2, r2
 80031a8:	701a      	strb	r2, [r3, #0]
 80031aa:	4bbe      	ldr	r3, [pc, #760]	; (80034a4 <pack_calibration_data+0xccc>)
 80031ac:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 80031b0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80031b4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80031b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80031bc:	ee17 3a90 	vmov	r3, s15
 80031c0:	b21b      	sxth	r3, r3
 80031c2:	121b      	asrs	r3, r3, #8
 80031c4:	b21a      	sxth	r2, r3
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	3349      	adds	r3, #73	; 0x49
 80031ca:	b2d2      	uxtb	r2, r2
 80031cc:	701a      	strb	r2, [r3, #0]
 80031ce:	4bb5      	ldr	r3, [pc, #724]	; (80034a4 <pack_calibration_data+0xccc>)
 80031d0:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 80031d4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80031d8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80031dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80031e0:	ee17 3a90 	vmov	r3, s15
 80031e4:	b21a      	sxth	r2, r3
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	334a      	adds	r3, #74	; 0x4a
 80031ea:	b2d2      	uxtb	r2, r2
 80031ec:	701a      	strb	r2, [r3, #0]
 80031ee:	4bad      	ldr	r3, [pc, #692]	; (80034a4 <pack_calibration_data+0xccc>)
 80031f0:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 80031f4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80031f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80031fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003200:	ee17 3a90 	vmov	r3, s15
 8003204:	b21b      	sxth	r3, r3
 8003206:	121b      	asrs	r3, r3, #8
 8003208:	b21a      	sxth	r2, r3
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	334b      	adds	r3, #75	; 0x4b
 800320e:	b2d2      	uxtb	r2, r2
 8003210:	701a      	strb	r2, [r3, #0]
 8003212:	4ba4      	ldr	r3, [pc, #656]	; (80034a4 <pack_calibration_data+0xccc>)
 8003214:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8003218:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800321c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003220:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003224:	ee17 3a90 	vmov	r3, s15
 8003228:	b21a      	sxth	r2, r3
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	334c      	adds	r3, #76	; 0x4c
 800322e:	b2d2      	uxtb	r2, r2
 8003230:	701a      	strb	r2, [r3, #0]
 8003232:	4b9c      	ldr	r3, [pc, #624]	; (80034a4 <pack_calibration_data+0xccc>)
 8003234:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8003238:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800323c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003240:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003244:	ee17 3a90 	vmov	r3, s15
 8003248:	b21b      	sxth	r3, r3
 800324a:	121b      	asrs	r3, r3, #8
 800324c:	b21a      	sxth	r2, r3
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	334d      	adds	r3, #77	; 0x4d
 8003252:	b2d2      	uxtb	r2, r2
 8003254:	701a      	strb	r2, [r3, #0]
 8003256:	4b93      	ldr	r3, [pc, #588]	; (80034a4 <pack_calibration_data+0xccc>)
 8003258:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 800325c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003260:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003264:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003268:	ee17 3a90 	vmov	r3, s15
 800326c:	b21a      	sxth	r2, r3
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	334e      	adds	r3, #78	; 0x4e
 8003272:	b2d2      	uxtb	r2, r2
 8003274:	701a      	strb	r2, [r3, #0]
 8003276:	4b8b      	ldr	r3, [pc, #556]	; (80034a4 <pack_calibration_data+0xccc>)
 8003278:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 800327c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003280:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003284:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003288:	ee17 3a90 	vmov	r3, s15
 800328c:	b21b      	sxth	r3, r3
 800328e:	121b      	asrs	r3, r3, #8
 8003290:	b21a      	sxth	r2, r3
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	334f      	adds	r3, #79	; 0x4f
 8003296:	b2d2      	uxtb	r2, r2
 8003298:	701a      	strb	r2, [r3, #0]
 800329a:	4b82      	ldr	r3, [pc, #520]	; (80034a4 <pack_calibration_data+0xccc>)
 800329c:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 80032a0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80032a4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80032a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80032ac:	ee17 3a90 	vmov	r3, s15
 80032b0:	b21a      	sxth	r2, r3
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	3350      	adds	r3, #80	; 0x50
 80032b6:	b2d2      	uxtb	r2, r2
 80032b8:	701a      	strb	r2, [r3, #0]
 80032ba:	4b7a      	ldr	r3, [pc, #488]	; (80034a4 <pack_calibration_data+0xccc>)
 80032bc:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 80032c0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80032c4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80032c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80032cc:	ee17 3a90 	vmov	r3, s15
 80032d0:	b21b      	sxth	r3, r3
 80032d2:	121b      	asrs	r3, r3, #8
 80032d4:	b21a      	sxth	r2, r3
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	3351      	adds	r3, #81	; 0x51
 80032da:	b2d2      	uxtb	r2, r2
 80032dc:	701a      	strb	r2, [r3, #0]
 80032de:	4b71      	ldr	r3, [pc, #452]	; (80034a4 <pack_calibration_data+0xccc>)
 80032e0:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 80032e4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80032e8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80032ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80032f0:	ee17 3a90 	vmov	r3, s15
 80032f4:	b21a      	sxth	r2, r3
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	3352      	adds	r3, #82	; 0x52
 80032fa:	b2d2      	uxtb	r2, r2
 80032fc:	701a      	strb	r2, [r3, #0]
 80032fe:	4b69      	ldr	r3, [pc, #420]	; (80034a4 <pack_calibration_data+0xccc>)
 8003300:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8003304:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003308:	ee67 7a87 	vmul.f32	s15, s15, s14
 800330c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003310:	ee17 3a90 	vmov	r3, s15
 8003314:	b21b      	sxth	r3, r3
 8003316:	121b      	asrs	r3, r3, #8
 8003318:	b21a      	sxth	r2, r3
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	3353      	adds	r3, #83	; 0x53
 800331e:	b2d2      	uxtb	r2, r2
 8003320:	701a      	strb	r2, [r3, #0]
 8003322:	4b60      	ldr	r3, [pc, #384]	; (80034a4 <pack_calibration_data+0xccc>)
 8003324:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 8003328:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800332c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003330:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003334:	ee17 3a90 	vmov	r3, s15
 8003338:	b21a      	sxth	r2, r3
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	3354      	adds	r3, #84	; 0x54
 800333e:	b2d2      	uxtb	r2, r2
 8003340:	701a      	strb	r2, [r3, #0]
 8003342:	4b58      	ldr	r3, [pc, #352]	; (80034a4 <pack_calibration_data+0xccc>)
 8003344:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 8003348:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800334c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003350:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003354:	ee17 3a90 	vmov	r3, s15
 8003358:	b21b      	sxth	r3, r3
 800335a:	121b      	asrs	r3, r3, #8
 800335c:	b21a      	sxth	r2, r3
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	3355      	adds	r3, #85	; 0x55
 8003362:	b2d2      	uxtb	r2, r2
 8003364:	701a      	strb	r2, [r3, #0]
 8003366:	4b4f      	ldr	r3, [pc, #316]	; (80034a4 <pack_calibration_data+0xccc>)
 8003368:	edd3 7a15 	vldr	s15, [r3, #84]	; 0x54
 800336c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003370:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003374:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003378:	ee17 3a90 	vmov	r3, s15
 800337c:	b21a      	sxth	r2, r3
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	3356      	adds	r3, #86	; 0x56
 8003382:	b2d2      	uxtb	r2, r2
 8003384:	701a      	strb	r2, [r3, #0]
 8003386:	4b47      	ldr	r3, [pc, #284]	; (80034a4 <pack_calibration_data+0xccc>)
 8003388:	edd3 7a15 	vldr	s15, [r3, #84]	; 0x54
 800338c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003390:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003394:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003398:	ee17 3a90 	vmov	r3, s15
 800339c:	b21b      	sxth	r3, r3
 800339e:	121b      	asrs	r3, r3, #8
 80033a0:	b21a      	sxth	r2, r3
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	3357      	adds	r3, #87	; 0x57
 80033a6:	b2d2      	uxtb	r2, r2
 80033a8:	701a      	strb	r2, [r3, #0]
 80033aa:	4b3f      	ldr	r3, [pc, #252]	; (80034a8 <pack_calibration_data+0xcd0>)
 80033ac:	edd3 7a00 	vldr	s15, [r3]
 80033b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80033b4:	ee17 3a90 	vmov	r3, s15
 80033b8:	b21a      	sxth	r2, r3
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	3358      	adds	r3, #88	; 0x58
 80033be:	b2d2      	uxtb	r2, r2
 80033c0:	701a      	strb	r2, [r3, #0]
 80033c2:	4b39      	ldr	r3, [pc, #228]	; (80034a8 <pack_calibration_data+0xcd0>)
 80033c4:	edd3 7a00 	vldr	s15, [r3]
 80033c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80033cc:	ee17 3a90 	vmov	r3, s15
 80033d0:	b21b      	sxth	r3, r3
 80033d2:	121b      	asrs	r3, r3, #8
 80033d4:	b21a      	sxth	r2, r3
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	3359      	adds	r3, #89	; 0x59
 80033da:	b2d2      	uxtb	r2, r2
 80033dc:	701a      	strb	r2, [r3, #0]
 80033de:	4b32      	ldr	r3, [pc, #200]	; (80034a8 <pack_calibration_data+0xcd0>)
 80033e0:	edd3 7a01 	vldr	s15, [r3, #4]
 80033e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80033e8:	ee17 3a90 	vmov	r3, s15
 80033ec:	b21a      	sxth	r2, r3
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	335a      	adds	r3, #90	; 0x5a
 80033f2:	b2d2      	uxtb	r2, r2
 80033f4:	701a      	strb	r2, [r3, #0]
 80033f6:	4b2c      	ldr	r3, [pc, #176]	; (80034a8 <pack_calibration_data+0xcd0>)
 80033f8:	edd3 7a01 	vldr	s15, [r3, #4]
 80033fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003400:	ee17 3a90 	vmov	r3, s15
 8003404:	b21b      	sxth	r3, r3
 8003406:	121b      	asrs	r3, r3, #8
 8003408:	b21a      	sxth	r2, r3
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	335b      	adds	r3, #91	; 0x5b
 800340e:	b2d2      	uxtb	r2, r2
 8003410:	701a      	strb	r2, [r3, #0]
 8003412:	4b25      	ldr	r3, [pc, #148]	; (80034a8 <pack_calibration_data+0xcd0>)
 8003414:	edd3 7a02 	vldr	s15, [r3, #8]
 8003418:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800341c:	ee17 3a90 	vmov	r3, s15
 8003420:	b21a      	sxth	r2, r3
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	335c      	adds	r3, #92	; 0x5c
 8003426:	b2d2      	uxtb	r2, r2
 8003428:	701a      	strb	r2, [r3, #0]
 800342a:	4b1f      	ldr	r3, [pc, #124]	; (80034a8 <pack_calibration_data+0xcd0>)
 800342c:	edd3 7a02 	vldr	s15, [r3, #8]
 8003430:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003434:	ee17 3a90 	vmov	r3, s15
 8003438:	b21b      	sxth	r3, r3
 800343a:	121b      	asrs	r3, r3, #8
 800343c:	b21a      	sxth	r2, r3
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	335d      	adds	r3, #93	; 0x5d
 8003442:	b2d2      	uxtb	r2, r2
 8003444:	701a      	strb	r2, [r3, #0]
 8003446:	4b18      	ldr	r3, [pc, #96]	; (80034a8 <pack_calibration_data+0xcd0>)
 8003448:	edd3 7a03 	vldr	s15, [r3, #12]
 800344c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003450:	ee17 3a90 	vmov	r3, s15
 8003454:	b21a      	sxth	r2, r3
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	335e      	adds	r3, #94	; 0x5e
 800345a:	b2d2      	uxtb	r2, r2
 800345c:	701a      	strb	r2, [r3, #0]
 800345e:	4b12      	ldr	r3, [pc, #72]	; (80034a8 <pack_calibration_data+0xcd0>)
 8003460:	edd3 7a03 	vldr	s15, [r3, #12]
 8003464:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003468:	ee17 3a90 	vmov	r3, s15
 800346c:	b21b      	sxth	r3, r3
 800346e:	121b      	asrs	r3, r3, #8
 8003470:	b21a      	sxth	r2, r3
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	335f      	adds	r3, #95	; 0x5f
 8003476:	b2d2      	uxtb	r2, r2
 8003478:	701a      	strb	r2, [r3, #0]
 800347a:	4b0b      	ldr	r3, [pc, #44]	; (80034a8 <pack_calibration_data+0xcd0>)
 800347c:	edd3 7a04 	vldr	s15, [r3, #16]
 8003480:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003484:	ee17 3a90 	vmov	r3, s15
 8003488:	b21a      	sxth	r2, r3
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	3360      	adds	r3, #96	; 0x60
 800348e:	b2d2      	uxtb	r2, r2
 8003490:	701a      	strb	r2, [r3, #0]
 8003492:	4b05      	ldr	r3, [pc, #20]	; (80034a8 <pack_calibration_data+0xcd0>)
 8003494:	edd3 7a04 	vldr	s15, [r3, #16]
 8003498:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800349c:	ee17 3a90 	vmov	r3, s15
 80034a0:	e004      	b.n	80034ac <pack_calibration_data+0xcd4>
 80034a2:	bf00      	nop
 80034a4:	20000350 	.word	0x20000350
 80034a8:	200003a0 	.word	0x200003a0
 80034ac:	b21b      	sxth	r3, r3
 80034ae:	121b      	asrs	r3, r3, #8
 80034b0:	b21a      	sxth	r2, r3
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	3361      	adds	r3, #97	; 0x61
 80034b6:	b2d2      	uxtb	r2, r2
 80034b8:	701a      	strb	r2, [r3, #0]
 80034ba:	4bbc      	ldr	r3, [pc, #752]	; (80037ac <pack_calibration_data+0xfd4>)
 80034bc:	edd3 7a05 	vldr	s15, [r3, #20]
 80034c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80034c4:	ee17 3a90 	vmov	r3, s15
 80034c8:	b21a      	sxth	r2, r3
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	3362      	adds	r3, #98	; 0x62
 80034ce:	b2d2      	uxtb	r2, r2
 80034d0:	701a      	strb	r2, [r3, #0]
 80034d2:	4bb6      	ldr	r3, [pc, #728]	; (80037ac <pack_calibration_data+0xfd4>)
 80034d4:	edd3 7a05 	vldr	s15, [r3, #20]
 80034d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80034dc:	ee17 3a90 	vmov	r3, s15
 80034e0:	b21b      	sxth	r3, r3
 80034e2:	121b      	asrs	r3, r3, #8
 80034e4:	b21a      	sxth	r2, r3
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	3363      	adds	r3, #99	; 0x63
 80034ea:	b2d2      	uxtb	r2, r2
 80034ec:	701a      	strb	r2, [r3, #0]
 80034ee:	4baf      	ldr	r3, [pc, #700]	; (80037ac <pack_calibration_data+0xfd4>)
 80034f0:	edd3 7a06 	vldr	s15, [r3, #24]
 80034f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80034f8:	ee17 3a90 	vmov	r3, s15
 80034fc:	b21a      	sxth	r2, r3
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	3364      	adds	r3, #100	; 0x64
 8003502:	b2d2      	uxtb	r2, r2
 8003504:	701a      	strb	r2, [r3, #0]
 8003506:	4ba9      	ldr	r3, [pc, #676]	; (80037ac <pack_calibration_data+0xfd4>)
 8003508:	edd3 7a06 	vldr	s15, [r3, #24]
 800350c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003510:	ee17 3a90 	vmov	r3, s15
 8003514:	b21b      	sxth	r3, r3
 8003516:	121b      	asrs	r3, r3, #8
 8003518:	b21a      	sxth	r2, r3
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	3365      	adds	r3, #101	; 0x65
 800351e:	b2d2      	uxtb	r2, r2
 8003520:	701a      	strb	r2, [r3, #0]
 8003522:	4ba2      	ldr	r3, [pc, #648]	; (80037ac <pack_calibration_data+0xfd4>)
 8003524:	edd3 7a07 	vldr	s15, [r3, #28]
 8003528:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800352c:	ee17 3a90 	vmov	r3, s15
 8003530:	b21a      	sxth	r2, r3
 8003532:	687b      	ldr	r3, [r7, #4]
 8003534:	3366      	adds	r3, #102	; 0x66
 8003536:	b2d2      	uxtb	r2, r2
 8003538:	701a      	strb	r2, [r3, #0]
 800353a:	4b9c      	ldr	r3, [pc, #624]	; (80037ac <pack_calibration_data+0xfd4>)
 800353c:	edd3 7a07 	vldr	s15, [r3, #28]
 8003540:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003544:	ee17 3a90 	vmov	r3, s15
 8003548:	b21b      	sxth	r3, r3
 800354a:	121b      	asrs	r3, r3, #8
 800354c:	b21a      	sxth	r2, r3
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	3367      	adds	r3, #103	; 0x67
 8003552:	b2d2      	uxtb	r2, r2
 8003554:	701a      	strb	r2, [r3, #0]
 8003556:	4b95      	ldr	r3, [pc, #596]	; (80037ac <pack_calibration_data+0xfd4>)
 8003558:	edd3 7a08 	vldr	s15, [r3, #32]
 800355c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003560:	ee17 3a90 	vmov	r3, s15
 8003564:	b21a      	sxth	r2, r3
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	3368      	adds	r3, #104	; 0x68
 800356a:	b2d2      	uxtb	r2, r2
 800356c:	701a      	strb	r2, [r3, #0]
 800356e:	4b8f      	ldr	r3, [pc, #572]	; (80037ac <pack_calibration_data+0xfd4>)
 8003570:	edd3 7a08 	vldr	s15, [r3, #32]
 8003574:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003578:	ee17 3a90 	vmov	r3, s15
 800357c:	b21b      	sxth	r3, r3
 800357e:	121b      	asrs	r3, r3, #8
 8003580:	b21a      	sxth	r2, r3
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	3369      	adds	r3, #105	; 0x69
 8003586:	b2d2      	uxtb	r2, r2
 8003588:	701a      	strb	r2, [r3, #0]
 800358a:	4b88      	ldr	r3, [pc, #544]	; (80037ac <pack_calibration_data+0xfd4>)
 800358c:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8003590:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003594:	ee17 3a90 	vmov	r3, s15
 8003598:	b21a      	sxth	r2, r3
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	336a      	adds	r3, #106	; 0x6a
 800359e:	b2d2      	uxtb	r2, r2
 80035a0:	701a      	strb	r2, [r3, #0]
 80035a2:	4b82      	ldr	r3, [pc, #520]	; (80037ac <pack_calibration_data+0xfd4>)
 80035a4:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 80035a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80035ac:	ee17 3a90 	vmov	r3, s15
 80035b0:	b21b      	sxth	r3, r3
 80035b2:	121b      	asrs	r3, r3, #8
 80035b4:	b21a      	sxth	r2, r3
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	336b      	adds	r3, #107	; 0x6b
 80035ba:	b2d2      	uxtb	r2, r2
 80035bc:	701a      	strb	r2, [r3, #0]
 80035be:	4b7b      	ldr	r3, [pc, #492]	; (80037ac <pack_calibration_data+0xfd4>)
 80035c0:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 80035c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80035c8:	ee17 3a90 	vmov	r3, s15
 80035cc:	b21a      	sxth	r2, r3
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	336c      	adds	r3, #108	; 0x6c
 80035d2:	b2d2      	uxtb	r2, r2
 80035d4:	701a      	strb	r2, [r3, #0]
 80035d6:	4b75      	ldr	r3, [pc, #468]	; (80037ac <pack_calibration_data+0xfd4>)
 80035d8:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 80035dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80035e0:	ee17 3a90 	vmov	r3, s15
 80035e4:	b21b      	sxth	r3, r3
 80035e6:	121b      	asrs	r3, r3, #8
 80035e8:	b21a      	sxth	r2, r3
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	336d      	adds	r3, #109	; 0x6d
 80035ee:	b2d2      	uxtb	r2, r2
 80035f0:	701a      	strb	r2, [r3, #0]
 80035f2:	4b6e      	ldr	r3, [pc, #440]	; (80037ac <pack_calibration_data+0xfd4>)
 80035f4:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 80035f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80035fc:	ee17 3a90 	vmov	r3, s15
 8003600:	b21a      	sxth	r2, r3
 8003602:	687b      	ldr	r3, [r7, #4]
 8003604:	336e      	adds	r3, #110	; 0x6e
 8003606:	b2d2      	uxtb	r2, r2
 8003608:	701a      	strb	r2, [r3, #0]
 800360a:	4b68      	ldr	r3, [pc, #416]	; (80037ac <pack_calibration_data+0xfd4>)
 800360c:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 8003610:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003614:	ee17 3a90 	vmov	r3, s15
 8003618:	b21b      	sxth	r3, r3
 800361a:	121b      	asrs	r3, r3, #8
 800361c:	b21a      	sxth	r2, r3
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	336f      	adds	r3, #111	; 0x6f
 8003622:	b2d2      	uxtb	r2, r2
 8003624:	701a      	strb	r2, [r3, #0]
 8003626:	4b61      	ldr	r3, [pc, #388]	; (80037ac <pack_calibration_data+0xfd4>)
 8003628:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 800362c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003630:	ee17 3a90 	vmov	r3, s15
 8003634:	b21a      	sxth	r2, r3
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	3370      	adds	r3, #112	; 0x70
 800363a:	b2d2      	uxtb	r2, r2
 800363c:	701a      	strb	r2, [r3, #0]
 800363e:	4b5b      	ldr	r3, [pc, #364]	; (80037ac <pack_calibration_data+0xfd4>)
 8003640:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8003644:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003648:	ee17 3a90 	vmov	r3, s15
 800364c:	b21b      	sxth	r3, r3
 800364e:	121b      	asrs	r3, r3, #8
 8003650:	b21a      	sxth	r2, r3
 8003652:	687b      	ldr	r3, [r7, #4]
 8003654:	3371      	adds	r3, #113	; 0x71
 8003656:	b2d2      	uxtb	r2, r2
 8003658:	701a      	strb	r2, [r3, #0]
 800365a:	4b54      	ldr	r3, [pc, #336]	; (80037ac <pack_calibration_data+0xfd4>)
 800365c:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8003660:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003664:	ee17 3a90 	vmov	r3, s15
 8003668:	b21a      	sxth	r2, r3
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	3372      	adds	r3, #114	; 0x72
 800366e:	b2d2      	uxtb	r2, r2
 8003670:	701a      	strb	r2, [r3, #0]
 8003672:	4b4e      	ldr	r3, [pc, #312]	; (80037ac <pack_calibration_data+0xfd4>)
 8003674:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8003678:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800367c:	ee17 3a90 	vmov	r3, s15
 8003680:	b21b      	sxth	r3, r3
 8003682:	121b      	asrs	r3, r3, #8
 8003684:	b21a      	sxth	r2, r3
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	3373      	adds	r3, #115	; 0x73
 800368a:	b2d2      	uxtb	r2, r2
 800368c:	701a      	strb	r2, [r3, #0]
 800368e:	4b47      	ldr	r3, [pc, #284]	; (80037ac <pack_calibration_data+0xfd4>)
 8003690:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 8003694:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003698:	ee17 3a90 	vmov	r3, s15
 800369c:	b21a      	sxth	r2, r3
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	3374      	adds	r3, #116	; 0x74
 80036a2:	b2d2      	uxtb	r2, r2
 80036a4:	701a      	strb	r2, [r3, #0]
 80036a6:	4b41      	ldr	r3, [pc, #260]	; (80037ac <pack_calibration_data+0xfd4>)
 80036a8:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 80036ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80036b0:	ee17 3a90 	vmov	r3, s15
 80036b4:	b21b      	sxth	r3, r3
 80036b6:	121b      	asrs	r3, r3, #8
 80036b8:	b21a      	sxth	r2, r3
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	3375      	adds	r3, #117	; 0x75
 80036be:	b2d2      	uxtb	r2, r2
 80036c0:	701a      	strb	r2, [r3, #0]
 80036c2:	4b3a      	ldr	r3, [pc, #232]	; (80037ac <pack_calibration_data+0xfd4>)
 80036c4:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 80036c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80036cc:	ee17 3a90 	vmov	r3, s15
 80036d0:	b21a      	sxth	r2, r3
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	3376      	adds	r3, #118	; 0x76
 80036d6:	b2d2      	uxtb	r2, r2
 80036d8:	701a      	strb	r2, [r3, #0]
 80036da:	4b34      	ldr	r3, [pc, #208]	; (80037ac <pack_calibration_data+0xfd4>)
 80036dc:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 80036e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80036e4:	ee17 3a90 	vmov	r3, s15
 80036e8:	b21b      	sxth	r3, r3
 80036ea:	121b      	asrs	r3, r3, #8
 80036ec:	b21a      	sxth	r2, r3
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	3377      	adds	r3, #119	; 0x77
 80036f2:	b2d2      	uxtb	r2, r2
 80036f4:	701a      	strb	r2, [r3, #0]
 80036f6:	4b2d      	ldr	r3, [pc, #180]	; (80037ac <pack_calibration_data+0xfd4>)
 80036f8:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 80036fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003700:	ee17 3a90 	vmov	r3, s15
 8003704:	b21a      	sxth	r2, r3
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	3378      	adds	r3, #120	; 0x78
 800370a:	b2d2      	uxtb	r2, r2
 800370c:	701a      	strb	r2, [r3, #0]
 800370e:	4b27      	ldr	r3, [pc, #156]	; (80037ac <pack_calibration_data+0xfd4>)
 8003710:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8003714:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003718:	ee17 3a90 	vmov	r3, s15
 800371c:	b21b      	sxth	r3, r3
 800371e:	121b      	asrs	r3, r3, #8
 8003720:	b21a      	sxth	r2, r3
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	3379      	adds	r3, #121	; 0x79
 8003726:	b2d2      	uxtb	r2, r2
 8003728:	701a      	strb	r2, [r3, #0]
 800372a:	4b20      	ldr	r3, [pc, #128]	; (80037ac <pack_calibration_data+0xfd4>)
 800372c:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 8003730:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003734:	ee17 3a90 	vmov	r3, s15
 8003738:	b21a      	sxth	r2, r3
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	337a      	adds	r3, #122	; 0x7a
 800373e:	b2d2      	uxtb	r2, r2
 8003740:	701a      	strb	r2, [r3, #0]
 8003742:	4b1a      	ldr	r3, [pc, #104]	; (80037ac <pack_calibration_data+0xfd4>)
 8003744:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 8003748:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800374c:	ee17 3a90 	vmov	r3, s15
 8003750:	b21b      	sxth	r3, r3
 8003752:	121b      	asrs	r3, r3, #8
 8003754:	b21a      	sxth	r2, r3
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	337b      	adds	r3, #123	; 0x7b
 800375a:	b2d2      	uxtb	r2, r2
 800375c:	701a      	strb	r2, [r3, #0]
 800375e:	4b13      	ldr	r3, [pc, #76]	; (80037ac <pack_calibration_data+0xfd4>)
 8003760:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 8003764:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003768:	ee17 3a90 	vmov	r3, s15
 800376c:	b21a      	sxth	r2, r3
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	337c      	adds	r3, #124	; 0x7c
 8003772:	b2d2      	uxtb	r2, r2
 8003774:	701a      	strb	r2, [r3, #0]
 8003776:	4b0d      	ldr	r3, [pc, #52]	; (80037ac <pack_calibration_data+0xfd4>)
 8003778:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 800377c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003780:	ee17 3a90 	vmov	r3, s15
 8003784:	b21b      	sxth	r3, r3
 8003786:	121b      	asrs	r3, r3, #8
 8003788:	b21a      	sxth	r2, r3
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	337d      	adds	r3, #125	; 0x7d
 800378e:	b2d2      	uxtb	r2, r2
 8003790:	701a      	strb	r2, [r3, #0]
 8003792:	4b06      	ldr	r3, [pc, #24]	; (80037ac <pack_calibration_data+0xfd4>)
 8003794:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8003798:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800379c:	ee17 3a90 	vmov	r3, s15
 80037a0:	b21a      	sxth	r2, r3
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	337e      	adds	r3, #126	; 0x7e
 80037a6:	b2d2      	uxtb	r2, r2
 80037a8:	701a      	strb	r2, [r3, #0]
 80037aa:	e001      	b.n	80037b0 <pack_calibration_data+0xfd8>
 80037ac:	200003a0 	.word	0x200003a0
 80037b0:	4b23      	ldr	r3, [pc, #140]	; (8003840 <pack_calibration_data+0x1068>)
 80037b2:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 80037b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80037ba:	ee17 3a90 	vmov	r3, s15
 80037be:	b21b      	sxth	r3, r3
 80037c0:	121b      	asrs	r3, r3, #8
 80037c2:	b21a      	sxth	r2, r3
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	337f      	adds	r3, #127	; 0x7f
 80037c8:	b2d2      	uxtb	r2, r2
 80037ca:	701a      	strb	r2, [r3, #0]
 80037cc:	4b1c      	ldr	r3, [pc, #112]	; (8003840 <pack_calibration_data+0x1068>)
 80037ce:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 80037d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80037d6:	ee17 3a90 	vmov	r3, s15
 80037da:	b21a      	sxth	r2, r3
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	3380      	adds	r3, #128	; 0x80
 80037e0:	b2d2      	uxtb	r2, r2
 80037e2:	701a      	strb	r2, [r3, #0]
 80037e4:	4b16      	ldr	r3, [pc, #88]	; (8003840 <pack_calibration_data+0x1068>)
 80037e6:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 80037ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80037ee:	ee17 3a90 	vmov	r3, s15
 80037f2:	b21b      	sxth	r3, r3
 80037f4:	121b      	asrs	r3, r3, #8
 80037f6:	b21a      	sxth	r2, r3
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	3381      	adds	r3, #129	; 0x81
 80037fc:	b2d2      	uxtb	r2, r2
 80037fe:	701a      	strb	r2, [r3, #0]
 8003800:	4b0f      	ldr	r3, [pc, #60]	; (8003840 <pack_calibration_data+0x1068>)
 8003802:	edd3 7a15 	vldr	s15, [r3, #84]	; 0x54
 8003806:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800380a:	ee17 3a90 	vmov	r3, s15
 800380e:	b21a      	sxth	r2, r3
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	3382      	adds	r3, #130	; 0x82
 8003814:	b2d2      	uxtb	r2, r2
 8003816:	701a      	strb	r2, [r3, #0]
 8003818:	4b09      	ldr	r3, [pc, #36]	; (8003840 <pack_calibration_data+0x1068>)
 800381a:	edd3 7a15 	vldr	s15, [r3, #84]	; 0x54
 800381e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003822:	ee17 3a90 	vmov	r3, s15
 8003826:	b21b      	sxth	r3, r3
 8003828:	121b      	asrs	r3, r3, #8
 800382a:	b21a      	sxth	r2, r3
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	3383      	adds	r3, #131	; 0x83
 8003830:	b2d2      	uxtb	r2, r2
 8003832:	701a      	strb	r2, [r3, #0]
 8003834:	bf00      	nop
 8003836:	370c      	adds	r7, #12
 8003838:	46bd      	mov	sp, r7
 800383a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800383e:	4770      	bx	lr
 8003840:	200003a0 	.word	0x200003a0

08003844 <pack_telem_data>:
/// pack_telem_defines.c
/// Autogenerated by firmware-libraries/SerialComms/python/telem_file_generator.py on Fri Aug  6 01:55:37 2021

#include "pack_telem_defines.h"

void pack_telem_data(uint8_t* dst){
 8003844:	b480      	push	{r7}
 8003846:	b083      	sub	sp, #12
 8003848:	af00      	add	r7, sp, #0
 800384a:	6078      	str	r0, [r7, #4]
	*(dst + 0) = TELEM_ITEM_0;
 800384c:	4bc5      	ldr	r3, [pc, #788]	; (8003b64 <pack_telem_data+0x320>)
 800384e:	781a      	ldrb	r2, [r3, #0]
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	701a      	strb	r2, [r3, #0]
	*(dst + 1) = TELEM_ITEM_1;
 8003854:	4bc4      	ldr	r3, [pc, #784]	; (8003b68 <pack_telem_data+0x324>)
 8003856:	edd3 7a00 	vldr	s15, [r3]
 800385a:	ed9f 7ac4 	vldr	s14, [pc, #784]	; 8003b6c <pack_telem_data+0x328>
 800385e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003862:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003866:	ee17 3a90 	vmov	r3, s15
 800386a:	b21a      	sxth	r2, r3
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	3301      	adds	r3, #1
 8003870:	b2d2      	uxtb	r2, r2
 8003872:	701a      	strb	r2, [r3, #0]
	*(dst + 2) = TELEM_ITEM_2;
 8003874:	4bbc      	ldr	r3, [pc, #752]	; (8003b68 <pack_telem_data+0x324>)
 8003876:	edd3 7a00 	vldr	s15, [r3]
 800387a:	ed9f 7abc 	vldr	s14, [pc, #752]	; 8003b6c <pack_telem_data+0x328>
 800387e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003882:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003886:	ee17 3a90 	vmov	r3, s15
 800388a:	b21b      	sxth	r3, r3
 800388c:	121b      	asrs	r3, r3, #8
 800388e:	b21a      	sxth	r2, r3
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	3302      	adds	r3, #2
 8003894:	b2d2      	uxtb	r2, r2
 8003896:	701a      	strb	r2, [r3, #0]
	*(dst + 3) = TELEM_ITEM_3;
 8003898:	4bb5      	ldr	r3, [pc, #724]	; (8003b70 <pack_telem_data+0x32c>)
 800389a:	edd3 7a00 	vldr	s15, [r3]
 800389e:	ed9f 7ab3 	vldr	s14, [pc, #716]	; 8003b6c <pack_telem_data+0x328>
 80038a2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80038a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80038aa:	ee17 3a90 	vmov	r3, s15
 80038ae:	b21a      	sxth	r2, r3
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	3303      	adds	r3, #3
 80038b4:	b2d2      	uxtb	r2, r2
 80038b6:	701a      	strb	r2, [r3, #0]
	*(dst + 4) = TELEM_ITEM_4;
 80038b8:	4bad      	ldr	r3, [pc, #692]	; (8003b70 <pack_telem_data+0x32c>)
 80038ba:	edd3 7a00 	vldr	s15, [r3]
 80038be:	ed9f 7aab 	vldr	s14, [pc, #684]	; 8003b6c <pack_telem_data+0x328>
 80038c2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80038c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80038ca:	ee17 3a90 	vmov	r3, s15
 80038ce:	b21b      	sxth	r3, r3
 80038d0:	121b      	asrs	r3, r3, #8
 80038d2:	b21a      	sxth	r2, r3
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	3304      	adds	r3, #4
 80038d8:	b2d2      	uxtb	r2, r2
 80038da:	701a      	strb	r2, [r3, #0]
	*(dst + 5) = TELEM_ITEM_5;
 80038dc:	4ba5      	ldr	r3, [pc, #660]	; (8003b74 <pack_telem_data+0x330>)
 80038de:	681a      	ldr	r2, [r3, #0]
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	3305      	adds	r3, #5
 80038e4:	b2d2      	uxtb	r2, r2
 80038e6:	701a      	strb	r2, [r3, #0]
	*(dst + 6) = TELEM_ITEM_6;
 80038e8:	4ba2      	ldr	r3, [pc, #648]	; (8003b74 <pack_telem_data+0x330>)
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	0a1a      	lsrs	r2, r3, #8
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	3306      	adds	r3, #6
 80038f2:	b2d2      	uxtb	r2, r2
 80038f4:	701a      	strb	r2, [r3, #0]
	*(dst + 7) = TELEM_ITEM_7;
 80038f6:	4b9f      	ldr	r3, [pc, #636]	; (8003b74 <pack_telem_data+0x330>)
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	0c1a      	lsrs	r2, r3, #16
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	3307      	adds	r3, #7
 8003900:	b2d2      	uxtb	r2, r2
 8003902:	701a      	strb	r2, [r3, #0]
	*(dst + 8) = TELEM_ITEM_8;
 8003904:	4b9b      	ldr	r3, [pc, #620]	; (8003b74 <pack_telem_data+0x330>)
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	0e1a      	lsrs	r2, r3, #24
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	3308      	adds	r3, #8
 800390e:	b2d2      	uxtb	r2, r2
 8003910:	701a      	strb	r2, [r3, #0]
	*(dst + 9) = TELEM_ITEM_9;
 8003912:	4b99      	ldr	r3, [pc, #612]	; (8003b78 <pack_telem_data+0x334>)
 8003914:	edd3 7a00 	vldr	s15, [r3]
 8003918:	ed9f 7a94 	vldr	s14, [pc, #592]	; 8003b6c <pack_telem_data+0x328>
 800391c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003920:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003924:	ee17 3a90 	vmov	r3, s15
 8003928:	b21a      	sxth	r2, r3
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	3309      	adds	r3, #9
 800392e:	b2d2      	uxtb	r2, r2
 8003930:	701a      	strb	r2, [r3, #0]
	*(dst + 10) = TELEM_ITEM_10;
 8003932:	4b91      	ldr	r3, [pc, #580]	; (8003b78 <pack_telem_data+0x334>)
 8003934:	edd3 7a00 	vldr	s15, [r3]
 8003938:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8003b6c <pack_telem_data+0x328>
 800393c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003940:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003944:	ee17 3a90 	vmov	r3, s15
 8003948:	b21b      	sxth	r3, r3
 800394a:	121b      	asrs	r3, r3, #8
 800394c:	b21a      	sxth	r2, r3
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	330a      	adds	r3, #10
 8003952:	b2d2      	uxtb	r2, r2
 8003954:	701a      	strb	r2, [r3, #0]
	*(dst + 11) = TELEM_ITEM_11;
 8003956:	4b89      	ldr	r3, [pc, #548]	; (8003b7c <pack_telem_data+0x338>)
 8003958:	edd3 7a00 	vldr	s15, [r3]
 800395c:	ed9f 7a83 	vldr	s14, [pc, #524]	; 8003b6c <pack_telem_data+0x328>
 8003960:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003964:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003968:	ee17 3a90 	vmov	r3, s15
 800396c:	b21a      	sxth	r2, r3
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	330b      	adds	r3, #11
 8003972:	b2d2      	uxtb	r2, r2
 8003974:	701a      	strb	r2, [r3, #0]
	*(dst + 12) = TELEM_ITEM_12;
 8003976:	4b81      	ldr	r3, [pc, #516]	; (8003b7c <pack_telem_data+0x338>)
 8003978:	edd3 7a00 	vldr	s15, [r3]
 800397c:	ed9f 7a7b 	vldr	s14, [pc, #492]	; 8003b6c <pack_telem_data+0x328>
 8003980:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003984:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003988:	ee17 3a90 	vmov	r3, s15
 800398c:	b21b      	sxth	r3, r3
 800398e:	121b      	asrs	r3, r3, #8
 8003990:	b21a      	sxth	r2, r3
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	330c      	adds	r3, #12
 8003996:	b2d2      	uxtb	r2, r2
 8003998:	701a      	strb	r2, [r3, #0]
	*(dst + 13) = TELEM_ITEM_13;
 800399a:	4b79      	ldr	r3, [pc, #484]	; (8003b80 <pack_telem_data+0x33c>)
 800399c:	edd3 7a00 	vldr	s15, [r3]
 80039a0:	ed9f 7a72 	vldr	s14, [pc, #456]	; 8003b6c <pack_telem_data+0x328>
 80039a4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	330d      	adds	r3, #13
 80039ac:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80039b0:	edc7 7a00 	vstr	s15, [r7]
 80039b4:	683a      	ldr	r2, [r7, #0]
 80039b6:	b2d2      	uxtb	r2, r2
 80039b8:	701a      	strb	r2, [r3, #0]
	*(dst + 14) = TELEM_ITEM_14;
 80039ba:	4b72      	ldr	r3, [pc, #456]	; (8003b84 <pack_telem_data+0x340>)
 80039bc:	edd3 7a00 	vldr	s15, [r3]
 80039c0:	ed9f 7a6a 	vldr	s14, [pc, #424]	; 8003b6c <pack_telem_data+0x328>
 80039c4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	330e      	adds	r3, #14
 80039cc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80039d0:	edc7 7a00 	vstr	s15, [r7]
 80039d4:	683a      	ldr	r2, [r7, #0]
 80039d6:	b2d2      	uxtb	r2, r2
 80039d8:	701a      	strb	r2, [r3, #0]
	*(dst + 15) = TELEM_ITEM_15;
 80039da:	4b6b      	ldr	r3, [pc, #428]	; (8003b88 <pack_telem_data+0x344>)
 80039dc:	681a      	ldr	r2, [r3, #0]
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	330f      	adds	r3, #15
 80039e2:	b2d2      	uxtb	r2, r2
 80039e4:	701a      	strb	r2, [r3, #0]
	*(dst + 16) = TELEM_ITEM_16;
 80039e6:	4b68      	ldr	r3, [pc, #416]	; (8003b88 <pack_telem_data+0x344>)
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	0a1a      	lsrs	r2, r3, #8
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	3310      	adds	r3, #16
 80039f0:	b2d2      	uxtb	r2, r2
 80039f2:	701a      	strb	r2, [r3, #0]
	*(dst + 17) = TELEM_ITEM_17;
 80039f4:	4b64      	ldr	r3, [pc, #400]	; (8003b88 <pack_telem_data+0x344>)
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	0c1a      	lsrs	r2, r3, #16
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	3311      	adds	r3, #17
 80039fe:	b2d2      	uxtb	r2, r2
 8003a00:	701a      	strb	r2, [r3, #0]
	*(dst + 18) = TELEM_ITEM_18;
 8003a02:	4b61      	ldr	r3, [pc, #388]	; (8003b88 <pack_telem_data+0x344>)
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	0e1a      	lsrs	r2, r3, #24
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	3312      	adds	r3, #18
 8003a0c:	b2d2      	uxtb	r2, r2
 8003a0e:	701a      	strb	r2, [r3, #0]
	*(dst + 19) = TELEM_ITEM_19;
 8003a10:	4b5e      	ldr	r3, [pc, #376]	; (8003b8c <pack_telem_data+0x348>)
 8003a12:	edd3 7a00 	vldr	s15, [r3]
 8003a16:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003a1a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003a22:	edc7 7a00 	vstr	s15, [r7]
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	3313      	adds	r3, #19
 8003a2a:	683a      	ldr	r2, [r7, #0]
 8003a2c:	b2d2      	uxtb	r2, r2
 8003a2e:	701a      	strb	r2, [r3, #0]
	*(dst + 20) = TELEM_ITEM_20;
 8003a30:	4b56      	ldr	r3, [pc, #344]	; (8003b8c <pack_telem_data+0x348>)
 8003a32:	edd3 7a00 	vldr	s15, [r3]
 8003a36:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003a3a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003a42:	ee17 3a90 	vmov	r3, s15
 8003a46:	121a      	asrs	r2, r3, #8
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	3314      	adds	r3, #20
 8003a4c:	b2d2      	uxtb	r2, r2
 8003a4e:	701a      	strb	r2, [r3, #0]
	*(dst + 21) = TELEM_ITEM_21;
 8003a50:	4b4e      	ldr	r3, [pc, #312]	; (8003b8c <pack_telem_data+0x348>)
 8003a52:	edd3 7a00 	vldr	s15, [r3]
 8003a56:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003a5a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003a62:	ee17 3a90 	vmov	r3, s15
 8003a66:	141a      	asrs	r2, r3, #16
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	3315      	adds	r3, #21
 8003a6c:	b2d2      	uxtb	r2, r2
 8003a6e:	701a      	strb	r2, [r3, #0]
	*(dst + 22) = TELEM_ITEM_22;
 8003a70:	4b46      	ldr	r3, [pc, #280]	; (8003b8c <pack_telem_data+0x348>)
 8003a72:	edd3 7a00 	vldr	s15, [r3]
 8003a76:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003a7a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003a82:	ee17 3a90 	vmov	r3, s15
 8003a86:	161a      	asrs	r2, r3, #24
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	3316      	adds	r3, #22
 8003a8c:	b2d2      	uxtb	r2, r2
 8003a8e:	701a      	strb	r2, [r3, #0]
	*(dst + 23) = TELEM_ITEM_23;
 8003a90:	4b3e      	ldr	r3, [pc, #248]	; (8003b8c <pack_telem_data+0x348>)
 8003a92:	edd3 7a01 	vldr	s15, [r3, #4]
 8003a96:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003a9a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003aa2:	edc7 7a00 	vstr	s15, [r7]
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	3317      	adds	r3, #23
 8003aaa:	683a      	ldr	r2, [r7, #0]
 8003aac:	b2d2      	uxtb	r2, r2
 8003aae:	701a      	strb	r2, [r3, #0]
	*(dst + 24) = TELEM_ITEM_24;
 8003ab0:	4b36      	ldr	r3, [pc, #216]	; (8003b8c <pack_telem_data+0x348>)
 8003ab2:	edd3 7a01 	vldr	s15, [r3, #4]
 8003ab6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003aba:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003abe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003ac2:	ee17 3a90 	vmov	r3, s15
 8003ac6:	121a      	asrs	r2, r3, #8
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	3318      	adds	r3, #24
 8003acc:	b2d2      	uxtb	r2, r2
 8003ace:	701a      	strb	r2, [r3, #0]
	*(dst + 25) = TELEM_ITEM_25;
 8003ad0:	4b2e      	ldr	r3, [pc, #184]	; (8003b8c <pack_telem_data+0x348>)
 8003ad2:	edd3 7a01 	vldr	s15, [r3, #4]
 8003ad6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003ada:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ade:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003ae2:	ee17 3a90 	vmov	r3, s15
 8003ae6:	141a      	asrs	r2, r3, #16
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	3319      	adds	r3, #25
 8003aec:	b2d2      	uxtb	r2, r2
 8003aee:	701a      	strb	r2, [r3, #0]
	*(dst + 26) = TELEM_ITEM_26;
 8003af0:	4b26      	ldr	r3, [pc, #152]	; (8003b8c <pack_telem_data+0x348>)
 8003af2:	edd3 7a01 	vldr	s15, [r3, #4]
 8003af6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003afa:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003afe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003b02:	ee17 3a90 	vmov	r3, s15
 8003b06:	161a      	asrs	r2, r3, #24
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	331a      	adds	r3, #26
 8003b0c:	b2d2      	uxtb	r2, r2
 8003b0e:	701a      	strb	r2, [r3, #0]
	*(dst + 27) = TELEM_ITEM_27;
 8003b10:	4b1e      	ldr	r3, [pc, #120]	; (8003b8c <pack_telem_data+0x348>)
 8003b12:	edd3 7a02 	vldr	s15, [r3, #8]
 8003b16:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003b1a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003b22:	edc7 7a00 	vstr	s15, [r7]
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	331b      	adds	r3, #27
 8003b2a:	683a      	ldr	r2, [r7, #0]
 8003b2c:	b2d2      	uxtb	r2, r2
 8003b2e:	701a      	strb	r2, [r3, #0]
	*(dst + 28) = TELEM_ITEM_28;
 8003b30:	4b16      	ldr	r3, [pc, #88]	; (8003b8c <pack_telem_data+0x348>)
 8003b32:	edd3 7a02 	vldr	s15, [r3, #8]
 8003b36:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003b3a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003b42:	ee17 3a90 	vmov	r3, s15
 8003b46:	121a      	asrs	r2, r3, #8
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	331c      	adds	r3, #28
 8003b4c:	b2d2      	uxtb	r2, r2
 8003b4e:	701a      	strb	r2, [r3, #0]
	*(dst + 29) = TELEM_ITEM_29;
 8003b50:	4b0e      	ldr	r3, [pc, #56]	; (8003b8c <pack_telem_data+0x348>)
 8003b52:	edd3 7a02 	vldr	s15, [r3, #8]
 8003b56:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003b5a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003b62:	e015      	b.n	8003b90 <pack_telem_data+0x34c>
 8003b64:	200003f0 	.word	0x200003f0
 8003b68:	200003f4 	.word	0x200003f4
 8003b6c:	42c80000 	.word	0x42c80000
 8003b70:	200003f8 	.word	0x200003f8
 8003b74:	200003fc 	.word	0x200003fc
 8003b78:	20000400 	.word	0x20000400
 8003b7c:	20000404 	.word	0x20000404
 8003b80:	20000408 	.word	0x20000408
 8003b84:	2000040c 	.word	0x2000040c
 8003b88:	20000410 	.word	0x20000410
 8003b8c:	20000434 	.word	0x20000434
 8003b90:	ee17 3a90 	vmov	r3, s15
 8003b94:	141a      	asrs	r2, r3, #16
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	331d      	adds	r3, #29
 8003b9a:	b2d2      	uxtb	r2, r2
 8003b9c:	701a      	strb	r2, [r3, #0]
	*(dst + 30) = TELEM_ITEM_30;
 8003b9e:	4bd3      	ldr	r3, [pc, #844]	; (8003eec <pack_telem_data+0x6a8>)
 8003ba0:	edd3 7a02 	vldr	s15, [r3, #8]
 8003ba4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003ba8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003bac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003bb0:	ee17 3a90 	vmov	r3, s15
 8003bb4:	161a      	asrs	r2, r3, #24
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	331e      	adds	r3, #30
 8003bba:	b2d2      	uxtb	r2, r2
 8003bbc:	701a      	strb	r2, [r3, #0]
	*(dst + 31) = TELEM_ITEM_31;
 8003bbe:	4bcb      	ldr	r3, [pc, #812]	; (8003eec <pack_telem_data+0x6a8>)
 8003bc0:	edd3 7a03 	vldr	s15, [r3, #12]
 8003bc4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003bc8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003bcc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003bd0:	edc7 7a00 	vstr	s15, [r7]
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	331f      	adds	r3, #31
 8003bd8:	683a      	ldr	r2, [r7, #0]
 8003bda:	b2d2      	uxtb	r2, r2
 8003bdc:	701a      	strb	r2, [r3, #0]
	*(dst + 32) = TELEM_ITEM_32;
 8003bde:	4bc3      	ldr	r3, [pc, #780]	; (8003eec <pack_telem_data+0x6a8>)
 8003be0:	edd3 7a03 	vldr	s15, [r3, #12]
 8003be4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003be8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003bec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003bf0:	ee17 3a90 	vmov	r3, s15
 8003bf4:	121a      	asrs	r2, r3, #8
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	3320      	adds	r3, #32
 8003bfa:	b2d2      	uxtb	r2, r2
 8003bfc:	701a      	strb	r2, [r3, #0]
	*(dst + 33) = TELEM_ITEM_33;
 8003bfe:	4bbb      	ldr	r3, [pc, #748]	; (8003eec <pack_telem_data+0x6a8>)
 8003c00:	edd3 7a03 	vldr	s15, [r3, #12]
 8003c04:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003c08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003c10:	ee17 3a90 	vmov	r3, s15
 8003c14:	141a      	asrs	r2, r3, #16
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	3321      	adds	r3, #33	; 0x21
 8003c1a:	b2d2      	uxtb	r2, r2
 8003c1c:	701a      	strb	r2, [r3, #0]
	*(dst + 34) = TELEM_ITEM_34;
 8003c1e:	4bb3      	ldr	r3, [pc, #716]	; (8003eec <pack_telem_data+0x6a8>)
 8003c20:	edd3 7a03 	vldr	s15, [r3, #12]
 8003c24:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003c28:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003c30:	ee17 3a90 	vmov	r3, s15
 8003c34:	161a      	asrs	r2, r3, #24
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	3322      	adds	r3, #34	; 0x22
 8003c3a:	b2d2      	uxtb	r2, r2
 8003c3c:	701a      	strb	r2, [r3, #0]
	*(dst + 35) = TELEM_ITEM_35;
 8003c3e:	4bab      	ldr	r3, [pc, #684]	; (8003eec <pack_telem_data+0x6a8>)
 8003c40:	edd3 7a04 	vldr	s15, [r3, #16]
 8003c44:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003c48:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003c50:	edc7 7a00 	vstr	s15, [r7]
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	3323      	adds	r3, #35	; 0x23
 8003c58:	683a      	ldr	r2, [r7, #0]
 8003c5a:	b2d2      	uxtb	r2, r2
 8003c5c:	701a      	strb	r2, [r3, #0]
	*(dst + 36) = TELEM_ITEM_36;
 8003c5e:	4ba3      	ldr	r3, [pc, #652]	; (8003eec <pack_telem_data+0x6a8>)
 8003c60:	edd3 7a04 	vldr	s15, [r3, #16]
 8003c64:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003c68:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003c70:	ee17 3a90 	vmov	r3, s15
 8003c74:	121a      	asrs	r2, r3, #8
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	3324      	adds	r3, #36	; 0x24
 8003c7a:	b2d2      	uxtb	r2, r2
 8003c7c:	701a      	strb	r2, [r3, #0]
	*(dst + 37) = TELEM_ITEM_37;
 8003c7e:	4b9b      	ldr	r3, [pc, #620]	; (8003eec <pack_telem_data+0x6a8>)
 8003c80:	edd3 7a04 	vldr	s15, [r3, #16]
 8003c84:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003c88:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c8c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003c90:	ee17 3a90 	vmov	r3, s15
 8003c94:	141a      	asrs	r2, r3, #16
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	3325      	adds	r3, #37	; 0x25
 8003c9a:	b2d2      	uxtb	r2, r2
 8003c9c:	701a      	strb	r2, [r3, #0]
	*(dst + 38) = TELEM_ITEM_38;
 8003c9e:	4b93      	ldr	r3, [pc, #588]	; (8003eec <pack_telem_data+0x6a8>)
 8003ca0:	edd3 7a04 	vldr	s15, [r3, #16]
 8003ca4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003ca8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003cac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003cb0:	ee17 3a90 	vmov	r3, s15
 8003cb4:	161a      	asrs	r2, r3, #24
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	3326      	adds	r3, #38	; 0x26
 8003cba:	b2d2      	uxtb	r2, r2
 8003cbc:	701a      	strb	r2, [r3, #0]
	*(dst + 39) = TELEM_ITEM_39;
 8003cbe:	4b8b      	ldr	r3, [pc, #556]	; (8003eec <pack_telem_data+0x6a8>)
 8003cc0:	edd3 7a05 	vldr	s15, [r3, #20]
 8003cc4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003cc8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ccc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003cd0:	edc7 7a00 	vstr	s15, [r7]
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	3327      	adds	r3, #39	; 0x27
 8003cd8:	683a      	ldr	r2, [r7, #0]
 8003cda:	b2d2      	uxtb	r2, r2
 8003cdc:	701a      	strb	r2, [r3, #0]
	*(dst + 40) = TELEM_ITEM_40;
 8003cde:	4b83      	ldr	r3, [pc, #524]	; (8003eec <pack_telem_data+0x6a8>)
 8003ce0:	edd3 7a05 	vldr	s15, [r3, #20]
 8003ce4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003ce8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003cec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003cf0:	ee17 3a90 	vmov	r3, s15
 8003cf4:	121a      	asrs	r2, r3, #8
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	3328      	adds	r3, #40	; 0x28
 8003cfa:	b2d2      	uxtb	r2, r2
 8003cfc:	701a      	strb	r2, [r3, #0]
	*(dst + 41) = TELEM_ITEM_41;
 8003cfe:	4b7b      	ldr	r3, [pc, #492]	; (8003eec <pack_telem_data+0x6a8>)
 8003d00:	edd3 7a05 	vldr	s15, [r3, #20]
 8003d04:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003d08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003d0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003d10:	ee17 3a90 	vmov	r3, s15
 8003d14:	141a      	asrs	r2, r3, #16
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	3329      	adds	r3, #41	; 0x29
 8003d1a:	b2d2      	uxtb	r2, r2
 8003d1c:	701a      	strb	r2, [r3, #0]
	*(dst + 42) = TELEM_ITEM_42;
 8003d1e:	4b73      	ldr	r3, [pc, #460]	; (8003eec <pack_telem_data+0x6a8>)
 8003d20:	edd3 7a05 	vldr	s15, [r3, #20]
 8003d24:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003d28:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003d2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003d30:	ee17 3a90 	vmov	r3, s15
 8003d34:	161a      	asrs	r2, r3, #24
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	332a      	adds	r3, #42	; 0x2a
 8003d3a:	b2d2      	uxtb	r2, r2
 8003d3c:	701a      	strb	r2, [r3, #0]
	*(dst + 43) = TELEM_ITEM_43;
 8003d3e:	4b6b      	ldr	r3, [pc, #428]	; (8003eec <pack_telem_data+0x6a8>)
 8003d40:	edd3 7a06 	vldr	s15, [r3, #24]
 8003d44:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003d48:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003d4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003d50:	edc7 7a00 	vstr	s15, [r7]
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	332b      	adds	r3, #43	; 0x2b
 8003d58:	683a      	ldr	r2, [r7, #0]
 8003d5a:	b2d2      	uxtb	r2, r2
 8003d5c:	701a      	strb	r2, [r3, #0]
	*(dst + 44) = TELEM_ITEM_44;
 8003d5e:	4b63      	ldr	r3, [pc, #396]	; (8003eec <pack_telem_data+0x6a8>)
 8003d60:	edd3 7a06 	vldr	s15, [r3, #24]
 8003d64:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003d68:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003d6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003d70:	ee17 3a90 	vmov	r3, s15
 8003d74:	121a      	asrs	r2, r3, #8
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	332c      	adds	r3, #44	; 0x2c
 8003d7a:	b2d2      	uxtb	r2, r2
 8003d7c:	701a      	strb	r2, [r3, #0]
	*(dst + 45) = TELEM_ITEM_45;
 8003d7e:	4b5b      	ldr	r3, [pc, #364]	; (8003eec <pack_telem_data+0x6a8>)
 8003d80:	edd3 7a06 	vldr	s15, [r3, #24]
 8003d84:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003d88:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003d8c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003d90:	ee17 3a90 	vmov	r3, s15
 8003d94:	141a      	asrs	r2, r3, #16
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	332d      	adds	r3, #45	; 0x2d
 8003d9a:	b2d2      	uxtb	r2, r2
 8003d9c:	701a      	strb	r2, [r3, #0]
	*(dst + 46) = TELEM_ITEM_46;
 8003d9e:	4b53      	ldr	r3, [pc, #332]	; (8003eec <pack_telem_data+0x6a8>)
 8003da0:	edd3 7a06 	vldr	s15, [r3, #24]
 8003da4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003da8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003dac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003db0:	ee17 3a90 	vmov	r3, s15
 8003db4:	161a      	asrs	r2, r3, #24
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	332e      	adds	r3, #46	; 0x2e
 8003dba:	b2d2      	uxtb	r2, r2
 8003dbc:	701a      	strb	r2, [r3, #0]
	*(dst + 47) = TELEM_ITEM_47;
 8003dbe:	4b4b      	ldr	r3, [pc, #300]	; (8003eec <pack_telem_data+0x6a8>)
 8003dc0:	edd3 7a07 	vldr	s15, [r3, #28]
 8003dc4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003dc8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003dcc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003dd0:	edc7 7a00 	vstr	s15, [r7]
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	332f      	adds	r3, #47	; 0x2f
 8003dd8:	683a      	ldr	r2, [r7, #0]
 8003dda:	b2d2      	uxtb	r2, r2
 8003ddc:	701a      	strb	r2, [r3, #0]
	*(dst + 48) = TELEM_ITEM_48;
 8003dde:	4b43      	ldr	r3, [pc, #268]	; (8003eec <pack_telem_data+0x6a8>)
 8003de0:	edd3 7a07 	vldr	s15, [r3, #28]
 8003de4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003de8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003dec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003df0:	ee17 3a90 	vmov	r3, s15
 8003df4:	121a      	asrs	r2, r3, #8
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	3330      	adds	r3, #48	; 0x30
 8003dfa:	b2d2      	uxtb	r2, r2
 8003dfc:	701a      	strb	r2, [r3, #0]
	*(dst + 49) = TELEM_ITEM_49;
 8003dfe:	4b3b      	ldr	r3, [pc, #236]	; (8003eec <pack_telem_data+0x6a8>)
 8003e00:	edd3 7a07 	vldr	s15, [r3, #28]
 8003e04:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003e08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003e0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003e10:	ee17 3a90 	vmov	r3, s15
 8003e14:	141a      	asrs	r2, r3, #16
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	3331      	adds	r3, #49	; 0x31
 8003e1a:	b2d2      	uxtb	r2, r2
 8003e1c:	701a      	strb	r2, [r3, #0]
	*(dst + 50) = TELEM_ITEM_50;
 8003e1e:	4b33      	ldr	r3, [pc, #204]	; (8003eec <pack_telem_data+0x6a8>)
 8003e20:	edd3 7a07 	vldr	s15, [r3, #28]
 8003e24:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003e28:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003e2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003e30:	ee17 3a90 	vmov	r3, s15
 8003e34:	161a      	asrs	r2, r3, #24
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	3332      	adds	r3, #50	; 0x32
 8003e3a:	b2d2      	uxtb	r2, r2
 8003e3c:	701a      	strb	r2, [r3, #0]
	*(dst + 51) = TELEM_ITEM_51;
 8003e3e:	4b2b      	ldr	r3, [pc, #172]	; (8003eec <pack_telem_data+0x6a8>)
 8003e40:	edd3 7a08 	vldr	s15, [r3, #32]
 8003e44:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003e48:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003e4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003e50:	edc7 7a00 	vstr	s15, [r7]
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	3333      	adds	r3, #51	; 0x33
 8003e58:	683a      	ldr	r2, [r7, #0]
 8003e5a:	b2d2      	uxtb	r2, r2
 8003e5c:	701a      	strb	r2, [r3, #0]
	*(dst + 52) = TELEM_ITEM_52;
 8003e5e:	4b23      	ldr	r3, [pc, #140]	; (8003eec <pack_telem_data+0x6a8>)
 8003e60:	edd3 7a08 	vldr	s15, [r3, #32]
 8003e64:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003e68:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003e6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003e70:	ee17 3a90 	vmov	r3, s15
 8003e74:	121a      	asrs	r2, r3, #8
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	3334      	adds	r3, #52	; 0x34
 8003e7a:	b2d2      	uxtb	r2, r2
 8003e7c:	701a      	strb	r2, [r3, #0]
	*(dst + 53) = TELEM_ITEM_53;
 8003e7e:	4b1b      	ldr	r3, [pc, #108]	; (8003eec <pack_telem_data+0x6a8>)
 8003e80:	edd3 7a08 	vldr	s15, [r3, #32]
 8003e84:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003e88:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003e8c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003e90:	ee17 3a90 	vmov	r3, s15
 8003e94:	141a      	asrs	r2, r3, #16
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	3335      	adds	r3, #53	; 0x35
 8003e9a:	b2d2      	uxtb	r2, r2
 8003e9c:	701a      	strb	r2, [r3, #0]
	*(dst + 54) = TELEM_ITEM_54;
 8003e9e:	4b13      	ldr	r3, [pc, #76]	; (8003eec <pack_telem_data+0x6a8>)
 8003ea0:	edd3 7a08 	vldr	s15, [r3, #32]
 8003ea4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003ea8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003eac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003eb0:	ee17 3a90 	vmov	r3, s15
 8003eb4:	161a      	asrs	r2, r3, #24
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	3336      	adds	r3, #54	; 0x36
 8003eba:	b2d2      	uxtb	r2, r2
 8003ebc:	701a      	strb	r2, [r3, #0]
	*(dst + 55) = TELEM_ITEM_55;
 8003ebe:	4b0b      	ldr	r3, [pc, #44]	; (8003eec <pack_telem_data+0x6a8>)
 8003ec0:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8003ec4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003ec8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ecc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003ed0:	edc7 7a00 	vstr	s15, [r7]
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	3337      	adds	r3, #55	; 0x37
 8003ed8:	683a      	ldr	r2, [r7, #0]
 8003eda:	b2d2      	uxtb	r2, r2
 8003edc:	701a      	strb	r2, [r3, #0]
	*(dst + 56) = TELEM_ITEM_56;
 8003ede:	4b03      	ldr	r3, [pc, #12]	; (8003eec <pack_telem_data+0x6a8>)
 8003ee0:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8003ee4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003ee8:	e002      	b.n	8003ef0 <pack_telem_data+0x6ac>
 8003eea:	bf00      	nop
 8003eec:	20000434 	.word	0x20000434
 8003ef0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ef4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003ef8:	ee17 3a90 	vmov	r3, s15
 8003efc:	121a      	asrs	r2, r3, #8
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	3338      	adds	r3, #56	; 0x38
 8003f02:	b2d2      	uxtb	r2, r2
 8003f04:	701a      	strb	r2, [r3, #0]
	*(dst + 57) = TELEM_ITEM_57;
 8003f06:	4bd4      	ldr	r3, [pc, #848]	; (8004258 <pack_telem_data+0xa14>)
 8003f08:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8003f0c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003f10:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003f18:	ee17 3a90 	vmov	r3, s15
 8003f1c:	141a      	asrs	r2, r3, #16
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	3339      	adds	r3, #57	; 0x39
 8003f22:	b2d2      	uxtb	r2, r2
 8003f24:	701a      	strb	r2, [r3, #0]
	*(dst + 58) = TELEM_ITEM_58;
 8003f26:	4bcc      	ldr	r3, [pc, #816]	; (8004258 <pack_telem_data+0xa14>)
 8003f28:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8003f2c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003f30:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003f38:	ee17 3a90 	vmov	r3, s15
 8003f3c:	161a      	asrs	r2, r3, #24
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	333a      	adds	r3, #58	; 0x3a
 8003f42:	b2d2      	uxtb	r2, r2
 8003f44:	701a      	strb	r2, [r3, #0]
	*(dst + 59) = TELEM_ITEM_59;
 8003f46:	4bc4      	ldr	r3, [pc, #784]	; (8004258 <pack_telem_data+0xa14>)
 8003f48:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8003f4c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003f50:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003f58:	edc7 7a00 	vstr	s15, [r7]
 8003f5c:	687b      	ldr	r3, [r7, #4]
 8003f5e:	333b      	adds	r3, #59	; 0x3b
 8003f60:	683a      	ldr	r2, [r7, #0]
 8003f62:	b2d2      	uxtb	r2, r2
 8003f64:	701a      	strb	r2, [r3, #0]
	*(dst + 60) = TELEM_ITEM_60;
 8003f66:	4bbc      	ldr	r3, [pc, #752]	; (8004258 <pack_telem_data+0xa14>)
 8003f68:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8003f6c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003f70:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003f78:	ee17 3a90 	vmov	r3, s15
 8003f7c:	121a      	asrs	r2, r3, #8
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	333c      	adds	r3, #60	; 0x3c
 8003f82:	b2d2      	uxtb	r2, r2
 8003f84:	701a      	strb	r2, [r3, #0]
	*(dst + 61) = TELEM_ITEM_61;
 8003f86:	4bb4      	ldr	r3, [pc, #720]	; (8004258 <pack_telem_data+0xa14>)
 8003f88:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8003f8c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003f90:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003f98:	ee17 3a90 	vmov	r3, s15
 8003f9c:	141a      	asrs	r2, r3, #16
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	333d      	adds	r3, #61	; 0x3d
 8003fa2:	b2d2      	uxtb	r2, r2
 8003fa4:	701a      	strb	r2, [r3, #0]
	*(dst + 62) = TELEM_ITEM_62;
 8003fa6:	4bac      	ldr	r3, [pc, #688]	; (8004258 <pack_telem_data+0xa14>)
 8003fa8:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8003fac:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003fb0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003fb4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003fb8:	ee17 3a90 	vmov	r3, s15
 8003fbc:	161a      	asrs	r2, r3, #24
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	333e      	adds	r3, #62	; 0x3e
 8003fc2:	b2d2      	uxtb	r2, r2
 8003fc4:	701a      	strb	r2, [r3, #0]
	*(dst + 63) = TELEM_ITEM_63;
 8003fc6:	4ba4      	ldr	r3, [pc, #656]	; (8004258 <pack_telem_data+0xa14>)
 8003fc8:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 8003fcc:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003fd0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003fd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003fd8:	edc7 7a00 	vstr	s15, [r7]
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	333f      	adds	r3, #63	; 0x3f
 8003fe0:	683a      	ldr	r2, [r7, #0]
 8003fe2:	b2d2      	uxtb	r2, r2
 8003fe4:	701a      	strb	r2, [r3, #0]
	*(dst + 64) = TELEM_ITEM_64;
 8003fe6:	4b9c      	ldr	r3, [pc, #624]	; (8004258 <pack_telem_data+0xa14>)
 8003fe8:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 8003fec:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003ff0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ff4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003ff8:	ee17 3a90 	vmov	r3, s15
 8003ffc:	121a      	asrs	r2, r3, #8
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	3340      	adds	r3, #64	; 0x40
 8004002:	b2d2      	uxtb	r2, r2
 8004004:	701a      	strb	r2, [r3, #0]
	*(dst + 65) = TELEM_ITEM_65;
 8004006:	4b94      	ldr	r3, [pc, #592]	; (8004258 <pack_telem_data+0xa14>)
 8004008:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 800400c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004010:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004014:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004018:	ee17 3a90 	vmov	r3, s15
 800401c:	141a      	asrs	r2, r3, #16
 800401e:	687b      	ldr	r3, [r7, #4]
 8004020:	3341      	adds	r3, #65	; 0x41
 8004022:	b2d2      	uxtb	r2, r2
 8004024:	701a      	strb	r2, [r3, #0]
	*(dst + 66) = TELEM_ITEM_66;
 8004026:	4b8c      	ldr	r3, [pc, #560]	; (8004258 <pack_telem_data+0xa14>)
 8004028:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 800402c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004030:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004034:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004038:	ee17 3a90 	vmov	r3, s15
 800403c:	161a      	asrs	r2, r3, #24
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	3342      	adds	r3, #66	; 0x42
 8004042:	b2d2      	uxtb	r2, r2
 8004044:	701a      	strb	r2, [r3, #0]
	*(dst + 67) = TELEM_ITEM_67;
 8004046:	4b84      	ldr	r3, [pc, #528]	; (8004258 <pack_telem_data+0xa14>)
 8004048:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 800404c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004050:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004054:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004058:	edc7 7a00 	vstr	s15, [r7]
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	3343      	adds	r3, #67	; 0x43
 8004060:	683a      	ldr	r2, [r7, #0]
 8004062:	b2d2      	uxtb	r2, r2
 8004064:	701a      	strb	r2, [r3, #0]
	*(dst + 68) = TELEM_ITEM_68;
 8004066:	4b7c      	ldr	r3, [pc, #496]	; (8004258 <pack_telem_data+0xa14>)
 8004068:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 800406c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004070:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004074:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004078:	ee17 3a90 	vmov	r3, s15
 800407c:	121a      	asrs	r2, r3, #8
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	3344      	adds	r3, #68	; 0x44
 8004082:	b2d2      	uxtb	r2, r2
 8004084:	701a      	strb	r2, [r3, #0]
	*(dst + 69) = TELEM_ITEM_69;
 8004086:	4b74      	ldr	r3, [pc, #464]	; (8004258 <pack_telem_data+0xa14>)
 8004088:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 800408c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004090:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004094:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004098:	ee17 3a90 	vmov	r3, s15
 800409c:	141a      	asrs	r2, r3, #16
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	3345      	adds	r3, #69	; 0x45
 80040a2:	b2d2      	uxtb	r2, r2
 80040a4:	701a      	strb	r2, [r3, #0]
	*(dst + 70) = TELEM_ITEM_70;
 80040a6:	4b6c      	ldr	r3, [pc, #432]	; (8004258 <pack_telem_data+0xa14>)
 80040a8:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 80040ac:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80040b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80040b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80040b8:	ee17 3a90 	vmov	r3, s15
 80040bc:	161a      	asrs	r2, r3, #24
 80040be:	687b      	ldr	r3, [r7, #4]
 80040c0:	3346      	adds	r3, #70	; 0x46
 80040c2:	b2d2      	uxtb	r2, r2
 80040c4:	701a      	strb	r2, [r3, #0]
	*(dst + 71) = TELEM_ITEM_71;
 80040c6:	4b64      	ldr	r3, [pc, #400]	; (8004258 <pack_telem_data+0xa14>)
 80040c8:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80040cc:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80040d0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80040d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80040d8:	edc7 7a00 	vstr	s15, [r7]
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	3347      	adds	r3, #71	; 0x47
 80040e0:	683a      	ldr	r2, [r7, #0]
 80040e2:	b2d2      	uxtb	r2, r2
 80040e4:	701a      	strb	r2, [r3, #0]
	*(dst + 72) = TELEM_ITEM_72;
 80040e6:	4b5c      	ldr	r3, [pc, #368]	; (8004258 <pack_telem_data+0xa14>)
 80040e8:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80040ec:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80040f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80040f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80040f8:	ee17 3a90 	vmov	r3, s15
 80040fc:	121a      	asrs	r2, r3, #8
 80040fe:	687b      	ldr	r3, [r7, #4]
 8004100:	3348      	adds	r3, #72	; 0x48
 8004102:	b2d2      	uxtb	r2, r2
 8004104:	701a      	strb	r2, [r3, #0]
	*(dst + 73) = TELEM_ITEM_73;
 8004106:	4b54      	ldr	r3, [pc, #336]	; (8004258 <pack_telem_data+0xa14>)
 8004108:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 800410c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004110:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004114:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004118:	ee17 3a90 	vmov	r3, s15
 800411c:	141a      	asrs	r2, r3, #16
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	3349      	adds	r3, #73	; 0x49
 8004122:	b2d2      	uxtb	r2, r2
 8004124:	701a      	strb	r2, [r3, #0]
	*(dst + 74) = TELEM_ITEM_74;
 8004126:	4b4c      	ldr	r3, [pc, #304]	; (8004258 <pack_telem_data+0xa14>)
 8004128:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 800412c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004130:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004134:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004138:	ee17 3a90 	vmov	r3, s15
 800413c:	161a      	asrs	r2, r3, #24
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	334a      	adds	r3, #74	; 0x4a
 8004142:	b2d2      	uxtb	r2, r2
 8004144:	701a      	strb	r2, [r3, #0]
	*(dst + 75) = TELEM_ITEM_75;
 8004146:	4b44      	ldr	r3, [pc, #272]	; (8004258 <pack_telem_data+0xa14>)
 8004148:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 800414c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004150:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004154:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004158:	edc7 7a00 	vstr	s15, [r7]
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	334b      	adds	r3, #75	; 0x4b
 8004160:	683a      	ldr	r2, [r7, #0]
 8004162:	b2d2      	uxtb	r2, r2
 8004164:	701a      	strb	r2, [r3, #0]
	*(dst + 76) = TELEM_ITEM_76;
 8004166:	4b3c      	ldr	r3, [pc, #240]	; (8004258 <pack_telem_data+0xa14>)
 8004168:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 800416c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004170:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004174:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004178:	ee17 3a90 	vmov	r3, s15
 800417c:	121a      	asrs	r2, r3, #8
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	334c      	adds	r3, #76	; 0x4c
 8004182:	b2d2      	uxtb	r2, r2
 8004184:	701a      	strb	r2, [r3, #0]
	*(dst + 77) = TELEM_ITEM_77;
 8004186:	4b34      	ldr	r3, [pc, #208]	; (8004258 <pack_telem_data+0xa14>)
 8004188:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 800418c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004190:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004194:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004198:	ee17 3a90 	vmov	r3, s15
 800419c:	141a      	asrs	r2, r3, #16
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	334d      	adds	r3, #77	; 0x4d
 80041a2:	b2d2      	uxtb	r2, r2
 80041a4:	701a      	strb	r2, [r3, #0]
	*(dst + 78) = TELEM_ITEM_78;
 80041a6:	4b2c      	ldr	r3, [pc, #176]	; (8004258 <pack_telem_data+0xa14>)
 80041a8:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 80041ac:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80041b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80041b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80041b8:	ee17 3a90 	vmov	r3, s15
 80041bc:	161a      	asrs	r2, r3, #24
 80041be:	687b      	ldr	r3, [r7, #4]
 80041c0:	334e      	adds	r3, #78	; 0x4e
 80041c2:	b2d2      	uxtb	r2, r2
 80041c4:	701a      	strb	r2, [r3, #0]
	*(dst + 79) = TELEM_ITEM_79;
 80041c6:	4b24      	ldr	r3, [pc, #144]	; (8004258 <pack_telem_data+0xa14>)
 80041c8:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 80041cc:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80041d0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80041d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80041d8:	edc7 7a00 	vstr	s15, [r7]
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	334f      	adds	r3, #79	; 0x4f
 80041e0:	683a      	ldr	r2, [r7, #0]
 80041e2:	b2d2      	uxtb	r2, r2
 80041e4:	701a      	strb	r2, [r3, #0]
	*(dst + 80) = TELEM_ITEM_80;
 80041e6:	4b1c      	ldr	r3, [pc, #112]	; (8004258 <pack_telem_data+0xa14>)
 80041e8:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 80041ec:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80041f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80041f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80041f8:	ee17 3a90 	vmov	r3, s15
 80041fc:	121a      	asrs	r2, r3, #8
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	3350      	adds	r3, #80	; 0x50
 8004202:	b2d2      	uxtb	r2, r2
 8004204:	701a      	strb	r2, [r3, #0]
	*(dst + 81) = TELEM_ITEM_81;
 8004206:	4b14      	ldr	r3, [pc, #80]	; (8004258 <pack_telem_data+0xa14>)
 8004208:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 800420c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004210:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004214:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004218:	ee17 3a90 	vmov	r3, s15
 800421c:	141a      	asrs	r2, r3, #16
 800421e:	687b      	ldr	r3, [r7, #4]
 8004220:	3351      	adds	r3, #81	; 0x51
 8004222:	b2d2      	uxtb	r2, r2
 8004224:	701a      	strb	r2, [r3, #0]
	*(dst + 82) = TELEM_ITEM_82;
 8004226:	4b0c      	ldr	r3, [pc, #48]	; (8004258 <pack_telem_data+0xa14>)
 8004228:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 800422c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004230:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004234:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004238:	ee17 3a90 	vmov	r3, s15
 800423c:	161a      	asrs	r2, r3, #24
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	3352      	adds	r3, #82	; 0x52
 8004242:	b2d2      	uxtb	r2, r2
 8004244:	701a      	strb	r2, [r3, #0]
	*(dst + 83) = TELEM_ITEM_83;
 8004246:	4b04      	ldr	r3, [pc, #16]	; (8004258 <pack_telem_data+0xa14>)
 8004248:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 800424c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004250:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004254:	e002      	b.n	800425c <pack_telem_data+0xa18>
 8004256:	bf00      	nop
 8004258:	20000434 	.word	0x20000434
 800425c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004260:	edc7 7a00 	vstr	s15, [r7]
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	3353      	adds	r3, #83	; 0x53
 8004268:	683a      	ldr	r2, [r7, #0]
 800426a:	b2d2      	uxtb	r2, r2
 800426c:	701a      	strb	r2, [r3, #0]
	*(dst + 84) = TELEM_ITEM_84;
 800426e:	4bd0      	ldr	r3, [pc, #832]	; (80045b0 <pack_telem_data+0xd6c>)
 8004270:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8004274:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004278:	ee67 7a87 	vmul.f32	s15, s15, s14
 800427c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004280:	ee17 3a90 	vmov	r3, s15
 8004284:	121a      	asrs	r2, r3, #8
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	3354      	adds	r3, #84	; 0x54
 800428a:	b2d2      	uxtb	r2, r2
 800428c:	701a      	strb	r2, [r3, #0]
	*(dst + 85) = TELEM_ITEM_85;
 800428e:	4bc8      	ldr	r3, [pc, #800]	; (80045b0 <pack_telem_data+0xd6c>)
 8004290:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8004294:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004298:	ee67 7a87 	vmul.f32	s15, s15, s14
 800429c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042a0:	ee17 3a90 	vmov	r3, s15
 80042a4:	141a      	asrs	r2, r3, #16
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	3355      	adds	r3, #85	; 0x55
 80042aa:	b2d2      	uxtb	r2, r2
 80042ac:	701a      	strb	r2, [r3, #0]
	*(dst + 86) = TELEM_ITEM_86;
 80042ae:	4bc0      	ldr	r3, [pc, #768]	; (80045b0 <pack_telem_data+0xd6c>)
 80042b0:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 80042b4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80042b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80042bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042c0:	ee17 3a90 	vmov	r3, s15
 80042c4:	161a      	asrs	r2, r3, #24
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	3356      	adds	r3, #86	; 0x56
 80042ca:	b2d2      	uxtb	r2, r2
 80042cc:	701a      	strb	r2, [r3, #0]
	*(dst + 87) = TELEM_ITEM_87;
 80042ce:	4bb8      	ldr	r3, [pc, #736]	; (80045b0 <pack_telem_data+0xd6c>)
 80042d0:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 80042d4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80042d8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80042dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042e0:	edc7 7a00 	vstr	s15, [r7]
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	3357      	adds	r3, #87	; 0x57
 80042e8:	683a      	ldr	r2, [r7, #0]
 80042ea:	b2d2      	uxtb	r2, r2
 80042ec:	701a      	strb	r2, [r3, #0]
	*(dst + 88) = TELEM_ITEM_88;
 80042ee:	4bb0      	ldr	r3, [pc, #704]	; (80045b0 <pack_telem_data+0xd6c>)
 80042f0:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 80042f4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80042f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80042fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004300:	ee17 3a90 	vmov	r3, s15
 8004304:	121a      	asrs	r2, r3, #8
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	3358      	adds	r3, #88	; 0x58
 800430a:	b2d2      	uxtb	r2, r2
 800430c:	701a      	strb	r2, [r3, #0]
	*(dst + 89) = TELEM_ITEM_89;
 800430e:	4ba8      	ldr	r3, [pc, #672]	; (80045b0 <pack_telem_data+0xd6c>)
 8004310:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 8004314:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004318:	ee67 7a87 	vmul.f32	s15, s15, s14
 800431c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004320:	ee17 3a90 	vmov	r3, s15
 8004324:	141a      	asrs	r2, r3, #16
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	3359      	adds	r3, #89	; 0x59
 800432a:	b2d2      	uxtb	r2, r2
 800432c:	701a      	strb	r2, [r3, #0]
	*(dst + 90) = TELEM_ITEM_90;
 800432e:	4ba0      	ldr	r3, [pc, #640]	; (80045b0 <pack_telem_data+0xd6c>)
 8004330:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 8004334:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004338:	ee67 7a87 	vmul.f32	s15, s15, s14
 800433c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004340:	ee17 3a90 	vmov	r3, s15
 8004344:	161a      	asrs	r2, r3, #24
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	335a      	adds	r3, #90	; 0x5a
 800434a:	b2d2      	uxtb	r2, r2
 800434c:	701a      	strb	r2, [r3, #0]
	*(dst + 91) = TELEM_ITEM_91;
 800434e:	4b98      	ldr	r3, [pc, #608]	; (80045b0 <pack_telem_data+0xd6c>)
 8004350:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 8004354:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004358:	ee67 7a87 	vmul.f32	s15, s15, s14
 800435c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004360:	edc7 7a00 	vstr	s15, [r7]
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	335b      	adds	r3, #91	; 0x5b
 8004368:	683a      	ldr	r2, [r7, #0]
 800436a:	b2d2      	uxtb	r2, r2
 800436c:	701a      	strb	r2, [r3, #0]
	*(dst + 92) = TELEM_ITEM_92;
 800436e:	4b90      	ldr	r3, [pc, #576]	; (80045b0 <pack_telem_data+0xd6c>)
 8004370:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 8004374:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004378:	ee67 7a87 	vmul.f32	s15, s15, s14
 800437c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004380:	ee17 3a90 	vmov	r3, s15
 8004384:	121a      	asrs	r2, r3, #8
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	335c      	adds	r3, #92	; 0x5c
 800438a:	b2d2      	uxtb	r2, r2
 800438c:	701a      	strb	r2, [r3, #0]
	*(dst + 93) = TELEM_ITEM_93;
 800438e:	4b88      	ldr	r3, [pc, #544]	; (80045b0 <pack_telem_data+0xd6c>)
 8004390:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 8004394:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004398:	ee67 7a87 	vmul.f32	s15, s15, s14
 800439c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043a0:	ee17 3a90 	vmov	r3, s15
 80043a4:	141a      	asrs	r2, r3, #16
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	335d      	adds	r3, #93	; 0x5d
 80043aa:	b2d2      	uxtb	r2, r2
 80043ac:	701a      	strb	r2, [r3, #0]
	*(dst + 94) = TELEM_ITEM_94;
 80043ae:	4b80      	ldr	r3, [pc, #512]	; (80045b0 <pack_telem_data+0xd6c>)
 80043b0:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 80043b4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80043b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80043bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043c0:	ee17 3a90 	vmov	r3, s15
 80043c4:	161a      	asrs	r2, r3, #24
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	335e      	adds	r3, #94	; 0x5e
 80043ca:	b2d2      	uxtb	r2, r2
 80043cc:	701a      	strb	r2, [r3, #0]
	*(dst + 95) = TELEM_ITEM_95;
 80043ce:	4b78      	ldr	r3, [pc, #480]	; (80045b0 <pack_telem_data+0xd6c>)
 80043d0:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 80043d4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80043d8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80043dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043e0:	edc7 7a00 	vstr	s15, [r7]
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	335f      	adds	r3, #95	; 0x5f
 80043e8:	683a      	ldr	r2, [r7, #0]
 80043ea:	b2d2      	uxtb	r2, r2
 80043ec:	701a      	strb	r2, [r3, #0]
	*(dst + 96) = TELEM_ITEM_96;
 80043ee:	4b70      	ldr	r3, [pc, #448]	; (80045b0 <pack_telem_data+0xd6c>)
 80043f0:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 80043f4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80043f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80043fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004400:	ee17 3a90 	vmov	r3, s15
 8004404:	121a      	asrs	r2, r3, #8
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	3360      	adds	r3, #96	; 0x60
 800440a:	b2d2      	uxtb	r2, r2
 800440c:	701a      	strb	r2, [r3, #0]
	*(dst + 97) = TELEM_ITEM_97;
 800440e:	4b68      	ldr	r3, [pc, #416]	; (80045b0 <pack_telem_data+0xd6c>)
 8004410:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8004414:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004418:	ee67 7a87 	vmul.f32	s15, s15, s14
 800441c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004420:	ee17 3a90 	vmov	r3, s15
 8004424:	141a      	asrs	r2, r3, #16
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	3361      	adds	r3, #97	; 0x61
 800442a:	b2d2      	uxtb	r2, r2
 800442c:	701a      	strb	r2, [r3, #0]
	*(dst + 98) = TELEM_ITEM_98;
 800442e:	4b60      	ldr	r3, [pc, #384]	; (80045b0 <pack_telem_data+0xd6c>)
 8004430:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8004434:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004438:	ee67 7a87 	vmul.f32	s15, s15, s14
 800443c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004440:	ee17 3a90 	vmov	r3, s15
 8004444:	161a      	asrs	r2, r3, #24
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	3362      	adds	r3, #98	; 0x62
 800444a:	b2d2      	uxtb	r2, r2
 800444c:	701a      	strb	r2, [r3, #0]
	*(dst + 99) = TELEM_ITEM_99;
 800444e:	4b59      	ldr	r3, [pc, #356]	; (80045b4 <pack_telem_data+0xd70>)
 8004450:	edd3 7a00 	vldr	s15, [r3]
 8004454:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004458:	ee67 7a87 	vmul.f32	s15, s15, s14
 800445c:	687b      	ldr	r3, [r7, #4]
 800445e:	3363      	adds	r3, #99	; 0x63
 8004460:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004464:	edc7 7a00 	vstr	s15, [r7]
 8004468:	683a      	ldr	r2, [r7, #0]
 800446a:	b2d2      	uxtb	r2, r2
 800446c:	701a      	strb	r2, [r3, #0]
	*(dst + 100) = TELEM_ITEM_100;
 800446e:	4b51      	ldr	r3, [pc, #324]	; (80045b4 <pack_telem_data+0xd70>)
 8004470:	edd3 7a01 	vldr	s15, [r3, #4]
 8004474:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004478:	ee67 7a87 	vmul.f32	s15, s15, s14
 800447c:	687b      	ldr	r3, [r7, #4]
 800447e:	3364      	adds	r3, #100	; 0x64
 8004480:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004484:	edc7 7a00 	vstr	s15, [r7]
 8004488:	683a      	ldr	r2, [r7, #0]
 800448a:	b2d2      	uxtb	r2, r2
 800448c:	701a      	strb	r2, [r3, #0]
	*(dst + 101) = TELEM_ITEM_101;
 800448e:	4b49      	ldr	r3, [pc, #292]	; (80045b4 <pack_telem_data+0xd70>)
 8004490:	edd3 7a02 	vldr	s15, [r3, #8]
 8004494:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004498:	ee67 7a87 	vmul.f32	s15, s15, s14
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	3365      	adds	r3, #101	; 0x65
 80044a0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80044a4:	edc7 7a00 	vstr	s15, [r7]
 80044a8:	683a      	ldr	r2, [r7, #0]
 80044aa:	b2d2      	uxtb	r2, r2
 80044ac:	701a      	strb	r2, [r3, #0]
	*(dst + 102) = TELEM_ITEM_102;
 80044ae:	4b41      	ldr	r3, [pc, #260]	; (80045b4 <pack_telem_data+0xd70>)
 80044b0:	edd3 7a03 	vldr	s15, [r3, #12]
 80044b4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80044b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	3366      	adds	r3, #102	; 0x66
 80044c0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80044c4:	edc7 7a00 	vstr	s15, [r7]
 80044c8:	683a      	ldr	r2, [r7, #0]
 80044ca:	b2d2      	uxtb	r2, r2
 80044cc:	701a      	strb	r2, [r3, #0]
	*(dst + 103) = TELEM_ITEM_103;
 80044ce:	4b39      	ldr	r3, [pc, #228]	; (80045b4 <pack_telem_data+0xd70>)
 80044d0:	edd3 7a04 	vldr	s15, [r3, #16]
 80044d4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80044d8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	3367      	adds	r3, #103	; 0x67
 80044e0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80044e4:	edc7 7a00 	vstr	s15, [r7]
 80044e8:	683a      	ldr	r2, [r7, #0]
 80044ea:	b2d2      	uxtb	r2, r2
 80044ec:	701a      	strb	r2, [r3, #0]
	*(dst + 104) = TELEM_ITEM_104;
 80044ee:	4b31      	ldr	r3, [pc, #196]	; (80045b4 <pack_telem_data+0xd70>)
 80044f0:	edd3 7a05 	vldr	s15, [r3, #20]
 80044f4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80044f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	3368      	adds	r3, #104	; 0x68
 8004500:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004504:	edc7 7a00 	vstr	s15, [r7]
 8004508:	683a      	ldr	r2, [r7, #0]
 800450a:	b2d2      	uxtb	r2, r2
 800450c:	701a      	strb	r2, [r3, #0]
	*(dst + 105) = TELEM_ITEM_105;
 800450e:	4b29      	ldr	r3, [pc, #164]	; (80045b4 <pack_telem_data+0xd70>)
 8004510:	edd3 7a06 	vldr	s15, [r3, #24]
 8004514:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004518:	ee67 7a87 	vmul.f32	s15, s15, s14
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	3369      	adds	r3, #105	; 0x69
 8004520:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004524:	edc7 7a00 	vstr	s15, [r7]
 8004528:	683a      	ldr	r2, [r7, #0]
 800452a:	b2d2      	uxtb	r2, r2
 800452c:	701a      	strb	r2, [r3, #0]
	*(dst + 106) = TELEM_ITEM_106;
 800452e:	4b21      	ldr	r3, [pc, #132]	; (80045b4 <pack_telem_data+0xd70>)
 8004530:	edd3 7a07 	vldr	s15, [r3, #28]
 8004534:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004538:	ee67 7a87 	vmul.f32	s15, s15, s14
 800453c:	687b      	ldr	r3, [r7, #4]
 800453e:	336a      	adds	r3, #106	; 0x6a
 8004540:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004544:	edc7 7a00 	vstr	s15, [r7]
 8004548:	683a      	ldr	r2, [r7, #0]
 800454a:	b2d2      	uxtb	r2, r2
 800454c:	701a      	strb	r2, [r3, #0]
	*(dst + 107) = TELEM_ITEM_107;
 800454e:	4b19      	ldr	r3, [pc, #100]	; (80045b4 <pack_telem_data+0xd70>)
 8004550:	edd3 7a08 	vldr	s15, [r3, #32]
 8004554:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004558:	ee67 7a87 	vmul.f32	s15, s15, s14
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	336b      	adds	r3, #107	; 0x6b
 8004560:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004564:	edc7 7a00 	vstr	s15, [r7]
 8004568:	683a      	ldr	r2, [r7, #0]
 800456a:	b2d2      	uxtb	r2, r2
 800456c:	701a      	strb	r2, [r3, #0]
	*(dst + 108) = TELEM_ITEM_108;
 800456e:	4b11      	ldr	r3, [pc, #68]	; (80045b4 <pack_telem_data+0xd70>)
 8004570:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8004574:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004578:	ee67 7a87 	vmul.f32	s15, s15, s14
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	336c      	adds	r3, #108	; 0x6c
 8004580:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004584:	edc7 7a00 	vstr	s15, [r7]
 8004588:	683a      	ldr	r2, [r7, #0]
 800458a:	b2d2      	uxtb	r2, r2
 800458c:	701a      	strb	r2, [r3, #0]
	*(dst + 109) = TELEM_ITEM_109;
 800458e:	4b09      	ldr	r3, [pc, #36]	; (80045b4 <pack_telem_data+0xd70>)
 8004590:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8004594:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004598:	ee67 7a87 	vmul.f32	s15, s15, s14
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	336d      	adds	r3, #109	; 0x6d
 80045a0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80045a4:	edc7 7a00 	vstr	s15, [r7]
 80045a8:	683a      	ldr	r2, [r7, #0]
 80045aa:	b2d2      	uxtb	r2, r2
 80045ac:	701a      	strb	r2, [r3, #0]
 80045ae:	e003      	b.n	80045b8 <pack_telem_data+0xd74>
 80045b0:	20000434 	.word	0x20000434
 80045b4:	20000484 	.word	0x20000484
	*(dst + 110) = TELEM_ITEM_110;
 80045b8:	4bc9      	ldr	r3, [pc, #804]	; (80048e0 <pack_telem_data+0x109c>)
 80045ba:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 80045be:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80045c2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	336e      	adds	r3, #110	; 0x6e
 80045ca:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80045ce:	edc7 7a00 	vstr	s15, [r7]
 80045d2:	683a      	ldr	r2, [r7, #0]
 80045d4:	b2d2      	uxtb	r2, r2
 80045d6:	701a      	strb	r2, [r3, #0]
	*(dst + 111) = TELEM_ITEM_111;
 80045d8:	4bc1      	ldr	r3, [pc, #772]	; (80048e0 <pack_telem_data+0x109c>)
 80045da:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 80045de:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80045e2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	336f      	adds	r3, #111	; 0x6f
 80045ea:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80045ee:	edc7 7a00 	vstr	s15, [r7]
 80045f2:	683a      	ldr	r2, [r7, #0]
 80045f4:	b2d2      	uxtb	r2, r2
 80045f6:	701a      	strb	r2, [r3, #0]
	*(dst + 112) = TELEM_ITEM_112;
 80045f8:	4bb9      	ldr	r3, [pc, #740]	; (80048e0 <pack_telem_data+0x109c>)
 80045fa:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80045fe:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004602:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	3370      	adds	r3, #112	; 0x70
 800460a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800460e:	edc7 7a00 	vstr	s15, [r7]
 8004612:	683a      	ldr	r2, [r7, #0]
 8004614:	b2d2      	uxtb	r2, r2
 8004616:	701a      	strb	r2, [r3, #0]
	*(dst + 113) = TELEM_ITEM_113;
 8004618:	4bb2      	ldr	r3, [pc, #712]	; (80048e4 <pack_telem_data+0x10a0>)
 800461a:	edd3 7a00 	vldr	s15, [r3]
 800461e:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 80048e8 <pack_telem_data+0x10a4>
 8004622:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004626:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800462a:	ee17 3a90 	vmov	r3, s15
 800462e:	b29a      	uxth	r2, r3
 8004630:	687b      	ldr	r3, [r7, #4]
 8004632:	3371      	adds	r3, #113	; 0x71
 8004634:	b2d2      	uxtb	r2, r2
 8004636:	701a      	strb	r2, [r3, #0]
	*(dst + 114) = TELEM_ITEM_114;
 8004638:	4baa      	ldr	r3, [pc, #680]	; (80048e4 <pack_telem_data+0x10a0>)
 800463a:	edd3 7a00 	vldr	s15, [r3]
 800463e:	ed9f 7aaa 	vldr	s14, [pc, #680]	; 80048e8 <pack_telem_data+0x10a4>
 8004642:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004646:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800464a:	ee17 3a90 	vmov	r3, s15
 800464e:	b29b      	uxth	r3, r3
 8004650:	0a1b      	lsrs	r3, r3, #8
 8004652:	b29a      	uxth	r2, r3
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	3372      	adds	r3, #114	; 0x72
 8004658:	b2d2      	uxtb	r2, r2
 800465a:	701a      	strb	r2, [r3, #0]
	*(dst + 115) = TELEM_ITEM_115;
 800465c:	4ba1      	ldr	r3, [pc, #644]	; (80048e4 <pack_telem_data+0x10a0>)
 800465e:	edd3 7a01 	vldr	s15, [r3, #4]
 8004662:	ed9f 7aa1 	vldr	s14, [pc, #644]	; 80048e8 <pack_telem_data+0x10a4>
 8004666:	ee67 7a87 	vmul.f32	s15, s15, s14
 800466a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800466e:	ee17 3a90 	vmov	r3, s15
 8004672:	b29a      	uxth	r2, r3
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	3373      	adds	r3, #115	; 0x73
 8004678:	b2d2      	uxtb	r2, r2
 800467a:	701a      	strb	r2, [r3, #0]
	*(dst + 116) = TELEM_ITEM_116;
 800467c:	4b99      	ldr	r3, [pc, #612]	; (80048e4 <pack_telem_data+0x10a0>)
 800467e:	edd3 7a01 	vldr	s15, [r3, #4]
 8004682:	ed9f 7a99 	vldr	s14, [pc, #612]	; 80048e8 <pack_telem_data+0x10a4>
 8004686:	ee67 7a87 	vmul.f32	s15, s15, s14
 800468a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800468e:	ee17 3a90 	vmov	r3, s15
 8004692:	b29b      	uxth	r3, r3
 8004694:	0a1b      	lsrs	r3, r3, #8
 8004696:	b29a      	uxth	r2, r3
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	3374      	adds	r3, #116	; 0x74
 800469c:	b2d2      	uxtb	r2, r2
 800469e:	701a      	strb	r2, [r3, #0]
	*(dst + 117) = TELEM_ITEM_117;
 80046a0:	4b90      	ldr	r3, [pc, #576]	; (80048e4 <pack_telem_data+0x10a0>)
 80046a2:	edd3 7a02 	vldr	s15, [r3, #8]
 80046a6:	ed9f 7a90 	vldr	s14, [pc, #576]	; 80048e8 <pack_telem_data+0x10a4>
 80046aa:	ee67 7a87 	vmul.f32	s15, s15, s14
 80046ae:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80046b2:	ee17 3a90 	vmov	r3, s15
 80046b6:	b29a      	uxth	r2, r3
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	3375      	adds	r3, #117	; 0x75
 80046bc:	b2d2      	uxtb	r2, r2
 80046be:	701a      	strb	r2, [r3, #0]
	*(dst + 118) = TELEM_ITEM_118;
 80046c0:	4b88      	ldr	r3, [pc, #544]	; (80048e4 <pack_telem_data+0x10a0>)
 80046c2:	edd3 7a02 	vldr	s15, [r3, #8]
 80046c6:	ed9f 7a88 	vldr	s14, [pc, #544]	; 80048e8 <pack_telem_data+0x10a4>
 80046ca:	ee67 7a87 	vmul.f32	s15, s15, s14
 80046ce:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80046d2:	ee17 3a90 	vmov	r3, s15
 80046d6:	b29b      	uxth	r3, r3
 80046d8:	0a1b      	lsrs	r3, r3, #8
 80046da:	b29a      	uxth	r2, r3
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	3376      	adds	r3, #118	; 0x76
 80046e0:	b2d2      	uxtb	r2, r2
 80046e2:	701a      	strb	r2, [r3, #0]
	*(dst + 119) = TELEM_ITEM_119;
 80046e4:	4b7f      	ldr	r3, [pc, #508]	; (80048e4 <pack_telem_data+0x10a0>)
 80046e6:	edd3 7a03 	vldr	s15, [r3, #12]
 80046ea:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 80048e8 <pack_telem_data+0x10a4>
 80046ee:	ee67 7a87 	vmul.f32	s15, s15, s14
 80046f2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80046f6:	ee17 3a90 	vmov	r3, s15
 80046fa:	b29a      	uxth	r2, r3
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	3377      	adds	r3, #119	; 0x77
 8004700:	b2d2      	uxtb	r2, r2
 8004702:	701a      	strb	r2, [r3, #0]
	*(dst + 120) = TELEM_ITEM_120;
 8004704:	4b77      	ldr	r3, [pc, #476]	; (80048e4 <pack_telem_data+0x10a0>)
 8004706:	edd3 7a03 	vldr	s15, [r3, #12]
 800470a:	ed9f 7a77 	vldr	s14, [pc, #476]	; 80048e8 <pack_telem_data+0x10a4>
 800470e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004712:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004716:	ee17 3a90 	vmov	r3, s15
 800471a:	b29b      	uxth	r3, r3
 800471c:	0a1b      	lsrs	r3, r3, #8
 800471e:	b29a      	uxth	r2, r3
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	3378      	adds	r3, #120	; 0x78
 8004724:	b2d2      	uxtb	r2, r2
 8004726:	701a      	strb	r2, [r3, #0]
	*(dst + 121) = TELEM_ITEM_121;
 8004728:	4b6e      	ldr	r3, [pc, #440]	; (80048e4 <pack_telem_data+0x10a0>)
 800472a:	edd3 7a04 	vldr	s15, [r3, #16]
 800472e:	ed9f 7a6e 	vldr	s14, [pc, #440]	; 80048e8 <pack_telem_data+0x10a4>
 8004732:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004736:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800473a:	ee17 3a90 	vmov	r3, s15
 800473e:	b29a      	uxth	r2, r3
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	3379      	adds	r3, #121	; 0x79
 8004744:	b2d2      	uxtb	r2, r2
 8004746:	701a      	strb	r2, [r3, #0]
	*(dst + 122) = TELEM_ITEM_122;
 8004748:	4b66      	ldr	r3, [pc, #408]	; (80048e4 <pack_telem_data+0x10a0>)
 800474a:	edd3 7a04 	vldr	s15, [r3, #16]
 800474e:	ed9f 7a66 	vldr	s14, [pc, #408]	; 80048e8 <pack_telem_data+0x10a4>
 8004752:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004756:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800475a:	ee17 3a90 	vmov	r3, s15
 800475e:	b29b      	uxth	r3, r3
 8004760:	0a1b      	lsrs	r3, r3, #8
 8004762:	b29a      	uxth	r2, r3
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	337a      	adds	r3, #122	; 0x7a
 8004768:	b2d2      	uxtb	r2, r2
 800476a:	701a      	strb	r2, [r3, #0]
	*(dst + 123) = TELEM_ITEM_123;
 800476c:	4b5d      	ldr	r3, [pc, #372]	; (80048e4 <pack_telem_data+0x10a0>)
 800476e:	edd3 7a05 	vldr	s15, [r3, #20]
 8004772:	ed9f 7a5d 	vldr	s14, [pc, #372]	; 80048e8 <pack_telem_data+0x10a4>
 8004776:	ee67 7a87 	vmul.f32	s15, s15, s14
 800477a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800477e:	ee17 3a90 	vmov	r3, s15
 8004782:	b29a      	uxth	r2, r3
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	337b      	adds	r3, #123	; 0x7b
 8004788:	b2d2      	uxtb	r2, r2
 800478a:	701a      	strb	r2, [r3, #0]
	*(dst + 124) = TELEM_ITEM_124;
 800478c:	4b55      	ldr	r3, [pc, #340]	; (80048e4 <pack_telem_data+0x10a0>)
 800478e:	edd3 7a05 	vldr	s15, [r3, #20]
 8004792:	ed9f 7a55 	vldr	s14, [pc, #340]	; 80048e8 <pack_telem_data+0x10a4>
 8004796:	ee67 7a87 	vmul.f32	s15, s15, s14
 800479a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800479e:	ee17 3a90 	vmov	r3, s15
 80047a2:	b29b      	uxth	r3, r3
 80047a4:	0a1b      	lsrs	r3, r3, #8
 80047a6:	b29a      	uxth	r2, r3
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	337c      	adds	r3, #124	; 0x7c
 80047ac:	b2d2      	uxtb	r2, r2
 80047ae:	701a      	strb	r2, [r3, #0]
	*(dst + 125) = TELEM_ITEM_125;
 80047b0:	4b4c      	ldr	r3, [pc, #304]	; (80048e4 <pack_telem_data+0x10a0>)
 80047b2:	edd3 7a06 	vldr	s15, [r3, #24]
 80047b6:	ed9f 7a4c 	vldr	s14, [pc, #304]	; 80048e8 <pack_telem_data+0x10a4>
 80047ba:	ee67 7a87 	vmul.f32	s15, s15, s14
 80047be:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80047c2:	ee17 3a90 	vmov	r3, s15
 80047c6:	b29a      	uxth	r2, r3
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	337d      	adds	r3, #125	; 0x7d
 80047cc:	b2d2      	uxtb	r2, r2
 80047ce:	701a      	strb	r2, [r3, #0]
	*(dst + 126) = TELEM_ITEM_126;
 80047d0:	4b44      	ldr	r3, [pc, #272]	; (80048e4 <pack_telem_data+0x10a0>)
 80047d2:	edd3 7a06 	vldr	s15, [r3, #24]
 80047d6:	ed9f 7a44 	vldr	s14, [pc, #272]	; 80048e8 <pack_telem_data+0x10a4>
 80047da:	ee67 7a87 	vmul.f32	s15, s15, s14
 80047de:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80047e2:	ee17 3a90 	vmov	r3, s15
 80047e6:	b29b      	uxth	r3, r3
 80047e8:	0a1b      	lsrs	r3, r3, #8
 80047ea:	b29a      	uxth	r2, r3
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	337e      	adds	r3, #126	; 0x7e
 80047f0:	b2d2      	uxtb	r2, r2
 80047f2:	701a      	strb	r2, [r3, #0]
	*(dst + 127) = TELEM_ITEM_127;
 80047f4:	4b3b      	ldr	r3, [pc, #236]	; (80048e4 <pack_telem_data+0x10a0>)
 80047f6:	edd3 7a07 	vldr	s15, [r3, #28]
 80047fa:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 80048e8 <pack_telem_data+0x10a4>
 80047fe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004802:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004806:	ee17 3a90 	vmov	r3, s15
 800480a:	b29a      	uxth	r2, r3
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	337f      	adds	r3, #127	; 0x7f
 8004810:	b2d2      	uxtb	r2, r2
 8004812:	701a      	strb	r2, [r3, #0]
	*(dst + 128) = TELEM_ITEM_128;
 8004814:	4b33      	ldr	r3, [pc, #204]	; (80048e4 <pack_telem_data+0x10a0>)
 8004816:	edd3 7a07 	vldr	s15, [r3, #28]
 800481a:	ed9f 7a33 	vldr	s14, [pc, #204]	; 80048e8 <pack_telem_data+0x10a4>
 800481e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004822:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004826:	ee17 3a90 	vmov	r3, s15
 800482a:	b29b      	uxth	r3, r3
 800482c:	0a1b      	lsrs	r3, r3, #8
 800482e:	b29a      	uxth	r2, r3
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	3380      	adds	r3, #128	; 0x80
 8004834:	b2d2      	uxtb	r2, r2
 8004836:	701a      	strb	r2, [r3, #0]
	*(dst + 129) = TELEM_ITEM_129;
 8004838:	4b2a      	ldr	r3, [pc, #168]	; (80048e4 <pack_telem_data+0x10a0>)
 800483a:	edd3 7a08 	vldr	s15, [r3, #32]
 800483e:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 80048e8 <pack_telem_data+0x10a4>
 8004842:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004846:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800484a:	ee17 3a90 	vmov	r3, s15
 800484e:	b29a      	uxth	r2, r3
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	3381      	adds	r3, #129	; 0x81
 8004854:	b2d2      	uxtb	r2, r2
 8004856:	701a      	strb	r2, [r3, #0]
	*(dst + 130) = TELEM_ITEM_130;
 8004858:	4b22      	ldr	r3, [pc, #136]	; (80048e4 <pack_telem_data+0x10a0>)
 800485a:	edd3 7a08 	vldr	s15, [r3, #32]
 800485e:	ed9f 7a22 	vldr	s14, [pc, #136]	; 80048e8 <pack_telem_data+0x10a4>
 8004862:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004866:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800486a:	ee17 3a90 	vmov	r3, s15
 800486e:	b29b      	uxth	r3, r3
 8004870:	0a1b      	lsrs	r3, r3, #8
 8004872:	b29a      	uxth	r2, r3
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	3382      	adds	r3, #130	; 0x82
 8004878:	b2d2      	uxtb	r2, r2
 800487a:	701a      	strb	r2, [r3, #0]
	*(dst + 131) = TELEM_ITEM_131;
 800487c:	4b19      	ldr	r3, [pc, #100]	; (80048e4 <pack_telem_data+0x10a0>)
 800487e:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8004882:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80048e8 <pack_telem_data+0x10a4>
 8004886:	ee67 7a87 	vmul.f32	s15, s15, s14
 800488a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800488e:	ee17 3a90 	vmov	r3, s15
 8004892:	b29a      	uxth	r2, r3
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	3383      	adds	r3, #131	; 0x83
 8004898:	b2d2      	uxtb	r2, r2
 800489a:	701a      	strb	r2, [r3, #0]
	*(dst + 132) = TELEM_ITEM_132;
 800489c:	4b11      	ldr	r3, [pc, #68]	; (80048e4 <pack_telem_data+0x10a0>)
 800489e:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 80048a2:	ed9f 7a11 	vldr	s14, [pc, #68]	; 80048e8 <pack_telem_data+0x10a4>
 80048a6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80048aa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80048ae:	ee17 3a90 	vmov	r3, s15
 80048b2:	b29b      	uxth	r3, r3
 80048b4:	0a1b      	lsrs	r3, r3, #8
 80048b6:	b29a      	uxth	r2, r3
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	3384      	adds	r3, #132	; 0x84
 80048bc:	b2d2      	uxtb	r2, r2
 80048be:	701a      	strb	r2, [r3, #0]
	*(dst + 133) = TELEM_ITEM_133;
 80048c0:	4b08      	ldr	r3, [pc, #32]	; (80048e4 <pack_telem_data+0x10a0>)
 80048c2:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 80048c6:	ed9f 7a08 	vldr	s14, [pc, #32]	; 80048e8 <pack_telem_data+0x10a4>
 80048ca:	ee67 7a87 	vmul.f32	s15, s15, s14
 80048ce:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80048d2:	ee17 3a90 	vmov	r3, s15
 80048d6:	b29a      	uxth	r2, r3
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	3385      	adds	r3, #133	; 0x85
 80048dc:	e006      	b.n	80048ec <pack_telem_data+0x10a8>
 80048de:	bf00      	nop
 80048e0:	20000484 	.word	0x20000484
 80048e4:	200004bc 	.word	0x200004bc
 80048e8:	42c80000 	.word	0x42c80000
 80048ec:	b2d2      	uxtb	r2, r2
 80048ee:	701a      	strb	r2, [r3, #0]
	*(dst + 134) = TELEM_ITEM_134;
 80048f0:	4bc7      	ldr	r3, [pc, #796]	; (8004c10 <pack_telem_data+0x13cc>)
 80048f2:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 80048f6:	ed9f 7ac7 	vldr	s14, [pc, #796]	; 8004c14 <pack_telem_data+0x13d0>
 80048fa:	ee67 7a87 	vmul.f32	s15, s15, s14
 80048fe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004902:	ee17 3a90 	vmov	r3, s15
 8004906:	b29b      	uxth	r3, r3
 8004908:	0a1b      	lsrs	r3, r3, #8
 800490a:	b29a      	uxth	r2, r3
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	3386      	adds	r3, #134	; 0x86
 8004910:	b2d2      	uxtb	r2, r2
 8004912:	701a      	strb	r2, [r3, #0]
	*(dst + 135) = TELEM_ITEM_135;
 8004914:	4bbe      	ldr	r3, [pc, #760]	; (8004c10 <pack_telem_data+0x13cc>)
 8004916:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 800491a:	ed9f 7abe 	vldr	s14, [pc, #760]	; 8004c14 <pack_telem_data+0x13d0>
 800491e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004922:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004926:	ee17 3a90 	vmov	r3, s15
 800492a:	b29a      	uxth	r2, r3
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	3387      	adds	r3, #135	; 0x87
 8004930:	b2d2      	uxtb	r2, r2
 8004932:	701a      	strb	r2, [r3, #0]
	*(dst + 136) = TELEM_ITEM_136;
 8004934:	4bb6      	ldr	r3, [pc, #728]	; (8004c10 <pack_telem_data+0x13cc>)
 8004936:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 800493a:	ed9f 7ab6 	vldr	s14, [pc, #728]	; 8004c14 <pack_telem_data+0x13d0>
 800493e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004942:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004946:	ee17 3a90 	vmov	r3, s15
 800494a:	b29b      	uxth	r3, r3
 800494c:	0a1b      	lsrs	r3, r3, #8
 800494e:	b29a      	uxth	r2, r3
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	3388      	adds	r3, #136	; 0x88
 8004954:	b2d2      	uxtb	r2, r2
 8004956:	701a      	strb	r2, [r3, #0]
	*(dst + 137) = TELEM_ITEM_137;
 8004958:	4bad      	ldr	r3, [pc, #692]	; (8004c10 <pack_telem_data+0x13cc>)
 800495a:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 800495e:	ed9f 7aad 	vldr	s14, [pc, #692]	; 8004c14 <pack_telem_data+0x13d0>
 8004962:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004966:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800496a:	ee17 3a90 	vmov	r3, s15
 800496e:	b29a      	uxth	r2, r3
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	3389      	adds	r3, #137	; 0x89
 8004974:	b2d2      	uxtb	r2, r2
 8004976:	701a      	strb	r2, [r3, #0]
	*(dst + 138) = TELEM_ITEM_138;
 8004978:	4ba5      	ldr	r3, [pc, #660]	; (8004c10 <pack_telem_data+0x13cc>)
 800497a:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 800497e:	ed9f 7aa5 	vldr	s14, [pc, #660]	; 8004c14 <pack_telem_data+0x13d0>
 8004982:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004986:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800498a:	ee17 3a90 	vmov	r3, s15
 800498e:	b29b      	uxth	r3, r3
 8004990:	0a1b      	lsrs	r3, r3, #8
 8004992:	b29a      	uxth	r2, r3
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	338a      	adds	r3, #138	; 0x8a
 8004998:	b2d2      	uxtb	r2, r2
 800499a:	701a      	strb	r2, [r3, #0]
	*(dst + 139) = TELEM_ITEM_139;
 800499c:	4b9e      	ldr	r3, [pc, #632]	; (8004c18 <pack_telem_data+0x13d4>)
 800499e:	edd3 7a1f 	vldr	s15, [r3, #124]	; 0x7c
 80049a2:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80049a6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80049aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80049ae:	ee17 3a90 	vmov	r3, s15
 80049b2:	b21a      	sxth	r2, r3
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	338b      	adds	r3, #139	; 0x8b
 80049b8:	b2d2      	uxtb	r2, r2
 80049ba:	701a      	strb	r2, [r3, #0]
	*(dst + 140) = TELEM_ITEM_140;
 80049bc:	4b96      	ldr	r3, [pc, #600]	; (8004c18 <pack_telem_data+0x13d4>)
 80049be:	edd3 7a1f 	vldr	s15, [r3, #124]	; 0x7c
 80049c2:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80049c6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80049ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80049ce:	ee17 3a90 	vmov	r3, s15
 80049d2:	b21b      	sxth	r3, r3
 80049d4:	121b      	asrs	r3, r3, #8
 80049d6:	b21a      	sxth	r2, r3
 80049d8:	687b      	ldr	r3, [r7, #4]
 80049da:	338c      	adds	r3, #140	; 0x8c
 80049dc:	b2d2      	uxtb	r2, r2
 80049de:	701a      	strb	r2, [r3, #0]
	*(dst + 141) = TELEM_ITEM_141;
 80049e0:	4b8d      	ldr	r3, [pc, #564]	; (8004c18 <pack_telem_data+0x13d4>)
 80049e2:	edd3 7a40 	vldr	s15, [r3, #256]	; 0x100
 80049e6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80049ea:	ee67 7a87 	vmul.f32	s15, s15, s14
 80049ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80049f2:	ee17 3a90 	vmov	r3, s15
 80049f6:	b21a      	sxth	r2, r3
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	338d      	adds	r3, #141	; 0x8d
 80049fc:	b2d2      	uxtb	r2, r2
 80049fe:	701a      	strb	r2, [r3, #0]
	*(dst + 142) = TELEM_ITEM_142;
 8004a00:	4b85      	ldr	r3, [pc, #532]	; (8004c18 <pack_telem_data+0x13d4>)
 8004a02:	edd3 7a40 	vldr	s15, [r3, #256]	; 0x100
 8004a06:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004a0a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004a0e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a12:	ee17 3a90 	vmov	r3, s15
 8004a16:	b21b      	sxth	r3, r3
 8004a18:	121b      	asrs	r3, r3, #8
 8004a1a:	b21a      	sxth	r2, r3
 8004a1c:	687b      	ldr	r3, [r7, #4]
 8004a1e:	338e      	adds	r3, #142	; 0x8e
 8004a20:	b2d2      	uxtb	r2, r2
 8004a22:	701a      	strb	r2, [r3, #0]
	*(dst + 143) = TELEM_ITEM_143;
 8004a24:	4b7c      	ldr	r3, [pc, #496]	; (8004c18 <pack_telem_data+0x13d4>)
 8004a26:	edd3 7a20 	vldr	s15, [r3, #128]	; 0x80
 8004a2a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a2e:	ee17 3a90 	vmov	r3, s15
 8004a32:	b21a      	sxth	r2, r3
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	338f      	adds	r3, #143	; 0x8f
 8004a38:	b2d2      	uxtb	r2, r2
 8004a3a:	701a      	strb	r2, [r3, #0]
	*(dst + 144) = TELEM_ITEM_144;
 8004a3c:	4b76      	ldr	r3, [pc, #472]	; (8004c18 <pack_telem_data+0x13d4>)
 8004a3e:	edd3 7a20 	vldr	s15, [r3, #128]	; 0x80
 8004a42:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a46:	ee17 3a90 	vmov	r3, s15
 8004a4a:	b21b      	sxth	r3, r3
 8004a4c:	121b      	asrs	r3, r3, #8
 8004a4e:	b21a      	sxth	r2, r3
 8004a50:	687b      	ldr	r3, [r7, #4]
 8004a52:	3390      	adds	r3, #144	; 0x90
 8004a54:	b2d2      	uxtb	r2, r2
 8004a56:	701a      	strb	r2, [r3, #0]
	*(dst + 145) = TELEM_ITEM_145;
 8004a58:	4b6f      	ldr	r3, [pc, #444]	; (8004c18 <pack_telem_data+0x13d4>)
 8004a5a:	edd3 7a41 	vldr	s15, [r3, #260]	; 0x104
 8004a5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a62:	ee17 3a90 	vmov	r3, s15
 8004a66:	b21a      	sxth	r2, r3
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	3391      	adds	r3, #145	; 0x91
 8004a6c:	b2d2      	uxtb	r2, r2
 8004a6e:	701a      	strb	r2, [r3, #0]
	*(dst + 146) = TELEM_ITEM_146;
 8004a70:	4b69      	ldr	r3, [pc, #420]	; (8004c18 <pack_telem_data+0x13d4>)
 8004a72:	edd3 7a41 	vldr	s15, [r3, #260]	; 0x104
 8004a76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a7a:	ee17 3a90 	vmov	r3, s15
 8004a7e:	b21b      	sxth	r3, r3
 8004a80:	121b      	asrs	r3, r3, #8
 8004a82:	b21a      	sxth	r2, r3
 8004a84:	687b      	ldr	r3, [r7, #4]
 8004a86:	3392      	adds	r3, #146	; 0x92
 8004a88:	b2d2      	uxtb	r2, r2
 8004a8a:	701a      	strb	r2, [r3, #0]
	*(dst + 147) = TELEM_ITEM_147;
 8004a8c:	4b62      	ldr	r3, [pc, #392]	; (8004c18 <pack_telem_data+0x13d4>)
 8004a8e:	edd3 7a1e 	vldr	s15, [r3, #120]	; 0x78
 8004a92:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004a96:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004a9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a9e:	ee17 3a90 	vmov	r3, s15
 8004aa2:	b21a      	sxth	r2, r3
 8004aa4:	687b      	ldr	r3, [r7, #4]
 8004aa6:	3393      	adds	r3, #147	; 0x93
 8004aa8:	b2d2      	uxtb	r2, r2
 8004aaa:	701a      	strb	r2, [r3, #0]
	*(dst + 148) = TELEM_ITEM_148;
 8004aac:	4b5a      	ldr	r3, [pc, #360]	; (8004c18 <pack_telem_data+0x13d4>)
 8004aae:	edd3 7a1e 	vldr	s15, [r3, #120]	; 0x78
 8004ab2:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004ab6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004aba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004abe:	ee17 3a90 	vmov	r3, s15
 8004ac2:	b21b      	sxth	r3, r3
 8004ac4:	121b      	asrs	r3, r3, #8
 8004ac6:	b21a      	sxth	r2, r3
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	3394      	adds	r3, #148	; 0x94
 8004acc:	b2d2      	uxtb	r2, r2
 8004ace:	701a      	strb	r2, [r3, #0]
	*(dst + 149) = TELEM_ITEM_149;
 8004ad0:	4b51      	ldr	r3, [pc, #324]	; (8004c18 <pack_telem_data+0x13d4>)
 8004ad2:	edd3 7a3f 	vldr	s15, [r3, #252]	; 0xfc
 8004ad6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004ada:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ade:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ae2:	ee17 3a90 	vmov	r3, s15
 8004ae6:	b21a      	sxth	r2, r3
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	3395      	adds	r3, #149	; 0x95
 8004aec:	b2d2      	uxtb	r2, r2
 8004aee:	701a      	strb	r2, [r3, #0]
	*(dst + 150) = TELEM_ITEM_150;
 8004af0:	4b49      	ldr	r3, [pc, #292]	; (8004c18 <pack_telem_data+0x13d4>)
 8004af2:	edd3 7a3f 	vldr	s15, [r3, #252]	; 0xfc
 8004af6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004afa:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004afe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b02:	ee17 3a90 	vmov	r3, s15
 8004b06:	b21b      	sxth	r3, r3
 8004b08:	121b      	asrs	r3, r3, #8
 8004b0a:	b21a      	sxth	r2, r3
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	3396      	adds	r3, #150	; 0x96
 8004b10:	b2d2      	uxtb	r2, r2
 8004b12:	701a      	strb	r2, [r3, #0]
	*(dst + 151) = TELEM_ITEM_151;
 8004b14:	4b40      	ldr	r3, [pc, #256]	; (8004c18 <pack_telem_data+0x13d4>)
 8004b16:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 8004b1a:	ed9f 7a3e 	vldr	s14, [pc, #248]	; 8004c14 <pack_telem_data+0x13d0>
 8004b1e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b22:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004b26:	ee17 3a90 	vmov	r3, s15
 8004b2a:	b29a      	uxth	r2, r3
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	3397      	adds	r3, #151	; 0x97
 8004b30:	b2d2      	uxtb	r2, r2
 8004b32:	701a      	strb	r2, [r3, #0]
	*(dst + 152) = TELEM_ITEM_152;
 8004b34:	4b38      	ldr	r3, [pc, #224]	; (8004c18 <pack_telem_data+0x13d4>)
 8004b36:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 8004b3a:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8004c14 <pack_telem_data+0x13d0>
 8004b3e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b42:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004b46:	ee17 3a90 	vmov	r3, s15
 8004b4a:	b29b      	uxth	r3, r3
 8004b4c:	0a1b      	lsrs	r3, r3, #8
 8004b4e:	b29a      	uxth	r2, r3
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	3398      	adds	r3, #152	; 0x98
 8004b54:	b2d2      	uxtb	r2, r2
 8004b56:	701a      	strb	r2, [r3, #0]
	*(dst + 153) = TELEM_ITEM_153;
 8004b58:	4b2f      	ldr	r3, [pc, #188]	; (8004c18 <pack_telem_data+0x13d4>)
 8004b5a:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 8004b5e:	ed9f 7a2d 	vldr	s14, [pc, #180]	; 8004c14 <pack_telem_data+0x13d0>
 8004b62:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b66:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004b6a:	ee17 3a90 	vmov	r3, s15
 8004b6e:	b29a      	uxth	r2, r3
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	3399      	adds	r3, #153	; 0x99
 8004b74:	b2d2      	uxtb	r2, r2
 8004b76:	701a      	strb	r2, [r3, #0]
	*(dst + 154) = TELEM_ITEM_154;
 8004b78:	4b27      	ldr	r3, [pc, #156]	; (8004c18 <pack_telem_data+0x13d4>)
 8004b7a:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 8004b7e:	ed9f 7a25 	vldr	s14, [pc, #148]	; 8004c14 <pack_telem_data+0x13d0>
 8004b82:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b86:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004b8a:	ee17 3a90 	vmov	r3, s15
 8004b8e:	b29b      	uxth	r3, r3
 8004b90:	0a1b      	lsrs	r3, r3, #8
 8004b92:	b29a      	uxth	r2, r3
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	339a      	adds	r3, #154	; 0x9a
 8004b98:	b2d2      	uxtb	r2, r2
 8004b9a:	701a      	strb	r2, [r3, #0]
	*(dst + 155) = TELEM_ITEM_155;
 8004b9c:	4b1e      	ldr	r3, [pc, #120]	; (8004c18 <pack_telem_data+0x13d4>)
 8004b9e:	edd3 7a17 	vldr	s15, [r3, #92]	; 0x5c
 8004ba2:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8004c14 <pack_telem_data+0x13d0>
 8004ba6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004baa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004bae:	ee17 3a90 	vmov	r3, s15
 8004bb2:	b29a      	uxth	r2, r3
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	339b      	adds	r3, #155	; 0x9b
 8004bb8:	b2d2      	uxtb	r2, r2
 8004bba:	701a      	strb	r2, [r3, #0]
	*(dst + 156) = TELEM_ITEM_156;
 8004bbc:	4b16      	ldr	r3, [pc, #88]	; (8004c18 <pack_telem_data+0x13d4>)
 8004bbe:	edd3 7a17 	vldr	s15, [r3, #92]	; 0x5c
 8004bc2:	ed9f 7a14 	vldr	s14, [pc, #80]	; 8004c14 <pack_telem_data+0x13d0>
 8004bc6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004bca:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004bce:	ee17 3a90 	vmov	r3, s15
 8004bd2:	b29b      	uxth	r3, r3
 8004bd4:	0a1b      	lsrs	r3, r3, #8
 8004bd6:	b29a      	uxth	r2, r3
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	339c      	adds	r3, #156	; 0x9c
 8004bdc:	b2d2      	uxtb	r2, r2
 8004bde:	701a      	strb	r2, [r3, #0]
	*(dst + 157) = TELEM_ITEM_157;
 8004be0:	4b0d      	ldr	r3, [pc, #52]	; (8004c18 <pack_telem_data+0x13d4>)
 8004be2:	edd3 7a38 	vldr	s15, [r3, #224]	; 0xe0
 8004be6:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8004c14 <pack_telem_data+0x13d0>
 8004bea:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004bee:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004bf2:	ee17 3a90 	vmov	r3, s15
 8004bf6:	b29a      	uxth	r2, r3
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	339d      	adds	r3, #157	; 0x9d
 8004bfc:	b2d2      	uxtb	r2, r2
 8004bfe:	701a      	strb	r2, [r3, #0]
	*(dst + 158) = TELEM_ITEM_158;
 8004c00:	4b05      	ldr	r3, [pc, #20]	; (8004c18 <pack_telem_data+0x13d4>)
 8004c02:	edd3 7a38 	vldr	s15, [r3, #224]	; 0xe0
 8004c06:	ed9f 7a03 	vldr	s14, [pc, #12]	; 8004c14 <pack_telem_data+0x13d0>
 8004c0a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004c0e:	e005      	b.n	8004c1c <pack_telem_data+0x13d8>
 8004c10:	200004bc 	.word	0x200004bc
 8004c14:	42c80000 	.word	0x42c80000
 8004c18:	200004fc 	.word	0x200004fc
 8004c1c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004c20:	ee17 3a90 	vmov	r3, s15
 8004c24:	b29b      	uxth	r3, r3
 8004c26:	0a1b      	lsrs	r3, r3, #8
 8004c28:	b29a      	uxth	r2, r3
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	339e      	adds	r3, #158	; 0x9e
 8004c2e:	b2d2      	uxtb	r2, r2
 8004c30:	701a      	strb	r2, [r3, #0]
	*(dst + 159) = TELEM_ITEM_159;
 8004c32:	4bcd      	ldr	r3, [pc, #820]	; (8004f68 <pack_telem_data+0x1724>)
 8004c34:	edd3 7a18 	vldr	s15, [r3, #96]	; 0x60
 8004c38:	ed9f 7acc 	vldr	s14, [pc, #816]	; 8004f6c <pack_telem_data+0x1728>
 8004c3c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004c40:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004c44:	ee17 3a90 	vmov	r3, s15
 8004c48:	b29a      	uxth	r2, r3
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	339f      	adds	r3, #159	; 0x9f
 8004c4e:	b2d2      	uxtb	r2, r2
 8004c50:	701a      	strb	r2, [r3, #0]
	*(dst + 160) = TELEM_ITEM_160;
 8004c52:	4bc5      	ldr	r3, [pc, #788]	; (8004f68 <pack_telem_data+0x1724>)
 8004c54:	edd3 7a18 	vldr	s15, [r3, #96]	; 0x60
 8004c58:	ed9f 7ac4 	vldr	s14, [pc, #784]	; 8004f6c <pack_telem_data+0x1728>
 8004c5c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004c60:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004c64:	ee17 3a90 	vmov	r3, s15
 8004c68:	b29b      	uxth	r3, r3
 8004c6a:	0a1b      	lsrs	r3, r3, #8
 8004c6c:	b29a      	uxth	r2, r3
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	33a0      	adds	r3, #160	; 0xa0
 8004c72:	b2d2      	uxtb	r2, r2
 8004c74:	701a      	strb	r2, [r3, #0]
	*(dst + 161) = TELEM_ITEM_161;
 8004c76:	4bbc      	ldr	r3, [pc, #752]	; (8004f68 <pack_telem_data+0x1724>)
 8004c78:	edd3 7a39 	vldr	s15, [r3, #228]	; 0xe4
 8004c7c:	ed9f 7abb 	vldr	s14, [pc, #748]	; 8004f6c <pack_telem_data+0x1728>
 8004c80:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004c84:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004c88:	ee17 3a90 	vmov	r3, s15
 8004c8c:	b29a      	uxth	r2, r3
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	33a1      	adds	r3, #161	; 0xa1
 8004c92:	b2d2      	uxtb	r2, r2
 8004c94:	701a      	strb	r2, [r3, #0]
	*(dst + 162) = TELEM_ITEM_162;
 8004c96:	4bb4      	ldr	r3, [pc, #720]	; (8004f68 <pack_telem_data+0x1724>)
 8004c98:	edd3 7a39 	vldr	s15, [r3, #228]	; 0xe4
 8004c9c:	ed9f 7ab3 	vldr	s14, [pc, #716]	; 8004f6c <pack_telem_data+0x1728>
 8004ca0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ca4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004ca8:	ee17 3a90 	vmov	r3, s15
 8004cac:	b29b      	uxth	r3, r3
 8004cae:	0a1b      	lsrs	r3, r3, #8
 8004cb0:	b29a      	uxth	r2, r3
 8004cb2:	687b      	ldr	r3, [r7, #4]
 8004cb4:	33a2      	adds	r3, #162	; 0xa2
 8004cb6:	b2d2      	uxtb	r2, r2
 8004cb8:	701a      	strb	r2, [r3, #0]
	*(dst + 163) = TELEM_ITEM_163;
 8004cba:	4bab      	ldr	r3, [pc, #684]	; (8004f68 <pack_telem_data+0x1724>)
 8004cbc:	edd3 7a19 	vldr	s15, [r3, #100]	; 0x64
 8004cc0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004cc4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004cc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ccc:	ee17 3a90 	vmov	r3, s15
 8004cd0:	b21a      	sxth	r2, r3
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	33a3      	adds	r3, #163	; 0xa3
 8004cd6:	b2d2      	uxtb	r2, r2
 8004cd8:	701a      	strb	r2, [r3, #0]
	*(dst + 164) = TELEM_ITEM_164;
 8004cda:	4ba3      	ldr	r3, [pc, #652]	; (8004f68 <pack_telem_data+0x1724>)
 8004cdc:	edd3 7a19 	vldr	s15, [r3, #100]	; 0x64
 8004ce0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004ce4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ce8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004cec:	ee17 3a90 	vmov	r3, s15
 8004cf0:	b21b      	sxth	r3, r3
 8004cf2:	121b      	asrs	r3, r3, #8
 8004cf4:	b21a      	sxth	r2, r3
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	33a4      	adds	r3, #164	; 0xa4
 8004cfa:	b2d2      	uxtb	r2, r2
 8004cfc:	701a      	strb	r2, [r3, #0]
	*(dst + 165) = TELEM_ITEM_165;
 8004cfe:	4b9a      	ldr	r3, [pc, #616]	; (8004f68 <pack_telem_data+0x1724>)
 8004d00:	edd3 7a3a 	vldr	s15, [r3, #232]	; 0xe8
 8004d04:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004d08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004d0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d10:	ee17 3a90 	vmov	r3, s15
 8004d14:	b21a      	sxth	r2, r3
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	33a5      	adds	r3, #165	; 0xa5
 8004d1a:	b2d2      	uxtb	r2, r2
 8004d1c:	701a      	strb	r2, [r3, #0]
	*(dst + 166) = TELEM_ITEM_166;
 8004d1e:	4b92      	ldr	r3, [pc, #584]	; (8004f68 <pack_telem_data+0x1724>)
 8004d20:	edd3 7a3a 	vldr	s15, [r3, #232]	; 0xe8
 8004d24:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004d28:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004d2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d30:	ee17 3a90 	vmov	r3, s15
 8004d34:	b21b      	sxth	r3, r3
 8004d36:	121b      	asrs	r3, r3, #8
 8004d38:	b21a      	sxth	r2, r3
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	33a6      	adds	r3, #166	; 0xa6
 8004d3e:	b2d2      	uxtb	r2, r2
 8004d40:	701a      	strb	r2, [r3, #0]
	*(dst + 167) = TELEM_ITEM_167;
 8004d42:	4b89      	ldr	r3, [pc, #548]	; (8004f68 <pack_telem_data+0x1724>)
 8004d44:	edd3 7a1a 	vldr	s15, [r3, #104]	; 0x68
 8004d48:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004d4c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004d50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d54:	ee17 3a90 	vmov	r3, s15
 8004d58:	b21a      	sxth	r2, r3
 8004d5a:	687b      	ldr	r3, [r7, #4]
 8004d5c:	33a7      	adds	r3, #167	; 0xa7
 8004d5e:	b2d2      	uxtb	r2, r2
 8004d60:	701a      	strb	r2, [r3, #0]
	*(dst + 168) = TELEM_ITEM_168;
 8004d62:	4b81      	ldr	r3, [pc, #516]	; (8004f68 <pack_telem_data+0x1724>)
 8004d64:	edd3 7a1a 	vldr	s15, [r3, #104]	; 0x68
 8004d68:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004d6c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004d70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d74:	ee17 3a90 	vmov	r3, s15
 8004d78:	b21b      	sxth	r3, r3
 8004d7a:	121b      	asrs	r3, r3, #8
 8004d7c:	b21a      	sxth	r2, r3
 8004d7e:	687b      	ldr	r3, [r7, #4]
 8004d80:	33a8      	adds	r3, #168	; 0xa8
 8004d82:	b2d2      	uxtb	r2, r2
 8004d84:	701a      	strb	r2, [r3, #0]
	*(dst + 169) = TELEM_ITEM_169;
 8004d86:	4b78      	ldr	r3, [pc, #480]	; (8004f68 <pack_telem_data+0x1724>)
 8004d88:	edd3 7a3b 	vldr	s15, [r3, #236]	; 0xec
 8004d8c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004d90:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004d94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d98:	ee17 3a90 	vmov	r3, s15
 8004d9c:	b21a      	sxth	r2, r3
 8004d9e:	687b      	ldr	r3, [r7, #4]
 8004da0:	33a9      	adds	r3, #169	; 0xa9
 8004da2:	b2d2      	uxtb	r2, r2
 8004da4:	701a      	strb	r2, [r3, #0]
	*(dst + 170) = TELEM_ITEM_170;
 8004da6:	4b70      	ldr	r3, [pc, #448]	; (8004f68 <pack_telem_data+0x1724>)
 8004da8:	edd3 7a3b 	vldr	s15, [r3, #236]	; 0xec
 8004dac:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004db0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004db4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004db8:	ee17 3a90 	vmov	r3, s15
 8004dbc:	b21b      	sxth	r3, r3
 8004dbe:	121b      	asrs	r3, r3, #8
 8004dc0:	b21a      	sxth	r2, r3
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	33aa      	adds	r3, #170	; 0xaa
 8004dc6:	b2d2      	uxtb	r2, r2
 8004dc8:	701a      	strb	r2, [r3, #0]
	*(dst + 171) = TELEM_ITEM_171;
 8004dca:	4b67      	ldr	r3, [pc, #412]	; (8004f68 <pack_telem_data+0x1724>)
 8004dcc:	edd3 7a1b 	vldr	s15, [r3, #108]	; 0x6c
 8004dd0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004dd4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004dd8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ddc:	ee17 3a90 	vmov	r3, s15
 8004de0:	b21a      	sxth	r2, r3
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	33ab      	adds	r3, #171	; 0xab
 8004de6:	b2d2      	uxtb	r2, r2
 8004de8:	701a      	strb	r2, [r3, #0]
	*(dst + 172) = TELEM_ITEM_172;
 8004dea:	4b5f      	ldr	r3, [pc, #380]	; (8004f68 <pack_telem_data+0x1724>)
 8004dec:	edd3 7a1b 	vldr	s15, [r3, #108]	; 0x6c
 8004df0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004df4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004df8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004dfc:	ee17 3a90 	vmov	r3, s15
 8004e00:	b21b      	sxth	r3, r3
 8004e02:	121b      	asrs	r3, r3, #8
 8004e04:	b21a      	sxth	r2, r3
 8004e06:	687b      	ldr	r3, [r7, #4]
 8004e08:	33ac      	adds	r3, #172	; 0xac
 8004e0a:	b2d2      	uxtb	r2, r2
 8004e0c:	701a      	strb	r2, [r3, #0]
	*(dst + 173) = TELEM_ITEM_173;
 8004e0e:	4b56      	ldr	r3, [pc, #344]	; (8004f68 <pack_telem_data+0x1724>)
 8004e10:	edd3 7a3c 	vldr	s15, [r3, #240]	; 0xf0
 8004e14:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004e18:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004e1c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e20:	ee17 3a90 	vmov	r3, s15
 8004e24:	b21a      	sxth	r2, r3
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	33ad      	adds	r3, #173	; 0xad
 8004e2a:	b2d2      	uxtb	r2, r2
 8004e2c:	701a      	strb	r2, [r3, #0]
	*(dst + 174) = TELEM_ITEM_174;
 8004e2e:	4b4e      	ldr	r3, [pc, #312]	; (8004f68 <pack_telem_data+0x1724>)
 8004e30:	edd3 7a3c 	vldr	s15, [r3, #240]	; 0xf0
 8004e34:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004e38:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004e3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e40:	ee17 3a90 	vmov	r3, s15
 8004e44:	b21b      	sxth	r3, r3
 8004e46:	121b      	asrs	r3, r3, #8
 8004e48:	b21a      	sxth	r2, r3
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	33ae      	adds	r3, #174	; 0xae
 8004e4e:	b2d2      	uxtb	r2, r2
 8004e50:	701a      	strb	r2, [r3, #0]
	*(dst + 175) = TELEM_ITEM_175;
 8004e52:	4b45      	ldr	r3, [pc, #276]	; (8004f68 <pack_telem_data+0x1724>)
 8004e54:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8004e58:	ed9f 7a44 	vldr	s14, [pc, #272]	; 8004f6c <pack_telem_data+0x1728>
 8004e5c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004e60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e64:	edc7 7a00 	vstr	s15, [r7]
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	33af      	adds	r3, #175	; 0xaf
 8004e6c:	683a      	ldr	r2, [r7, #0]
 8004e6e:	b2d2      	uxtb	r2, r2
 8004e70:	701a      	strb	r2, [r3, #0]
	*(dst + 176) = TELEM_ITEM_176;
 8004e72:	4b3d      	ldr	r3, [pc, #244]	; (8004f68 <pack_telem_data+0x1724>)
 8004e74:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8004e78:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 8004f6c <pack_telem_data+0x1728>
 8004e7c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004e80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e84:	ee17 3a90 	vmov	r3, s15
 8004e88:	121a      	asrs	r2, r3, #8
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	33b0      	adds	r3, #176	; 0xb0
 8004e8e:	b2d2      	uxtb	r2, r2
 8004e90:	701a      	strb	r2, [r3, #0]
	*(dst + 177) = TELEM_ITEM_177;
 8004e92:	4b35      	ldr	r3, [pc, #212]	; (8004f68 <pack_telem_data+0x1724>)
 8004e94:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8004e98:	ed9f 7a34 	vldr	s14, [pc, #208]	; 8004f6c <pack_telem_data+0x1728>
 8004e9c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ea0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ea4:	ee17 3a90 	vmov	r3, s15
 8004ea8:	141a      	asrs	r2, r3, #16
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	33b1      	adds	r3, #177	; 0xb1
 8004eae:	b2d2      	uxtb	r2, r2
 8004eb0:	701a      	strb	r2, [r3, #0]
	*(dst + 178) = TELEM_ITEM_178;
 8004eb2:	4b2d      	ldr	r3, [pc, #180]	; (8004f68 <pack_telem_data+0x1724>)
 8004eb4:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 8004eb8:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8004f6c <pack_telem_data+0x1728>
 8004ebc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ec0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ec4:	ee17 3a90 	vmov	r3, s15
 8004ec8:	161a      	asrs	r2, r3, #24
 8004eca:	687b      	ldr	r3, [r7, #4]
 8004ecc:	33b2      	adds	r3, #178	; 0xb2
 8004ece:	b2d2      	uxtb	r2, r2
 8004ed0:	701a      	strb	r2, [r3, #0]
	*(dst + 179) = TELEM_ITEM_179;
 8004ed2:	4b25      	ldr	r3, [pc, #148]	; (8004f68 <pack_telem_data+0x1724>)
 8004ed4:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 8004ed8:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8004f6c <pack_telem_data+0x1728>
 8004edc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ee0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ee4:	edc7 7a00 	vstr	s15, [r7]
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	33b3      	adds	r3, #179	; 0xb3
 8004eec:	683a      	ldr	r2, [r7, #0]
 8004eee:	b2d2      	uxtb	r2, r2
 8004ef0:	701a      	strb	r2, [r3, #0]
	*(dst + 180) = TELEM_ITEM_180;
 8004ef2:	4b1d      	ldr	r3, [pc, #116]	; (8004f68 <pack_telem_data+0x1724>)
 8004ef4:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 8004ef8:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8004f6c <pack_telem_data+0x1728>
 8004efc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004f00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f04:	ee17 3a90 	vmov	r3, s15
 8004f08:	121a      	asrs	r2, r3, #8
 8004f0a:	687b      	ldr	r3, [r7, #4]
 8004f0c:	33b4      	adds	r3, #180	; 0xb4
 8004f0e:	b2d2      	uxtb	r2, r2
 8004f10:	701a      	strb	r2, [r3, #0]
	*(dst + 181) = TELEM_ITEM_181;
 8004f12:	4b15      	ldr	r3, [pc, #84]	; (8004f68 <pack_telem_data+0x1724>)
 8004f14:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 8004f18:	ed9f 7a14 	vldr	s14, [pc, #80]	; 8004f6c <pack_telem_data+0x1728>
 8004f1c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004f20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f24:	ee17 3a90 	vmov	r3, s15
 8004f28:	141a      	asrs	r2, r3, #16
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	33b5      	adds	r3, #181	; 0xb5
 8004f2e:	b2d2      	uxtb	r2, r2
 8004f30:	701a      	strb	r2, [r3, #0]
	*(dst + 182) = TELEM_ITEM_182;
 8004f32:	4b0d      	ldr	r3, [pc, #52]	; (8004f68 <pack_telem_data+0x1724>)
 8004f34:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 8004f38:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 8004f6c <pack_telem_data+0x1728>
 8004f3c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004f40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f44:	ee17 3a90 	vmov	r3, s15
 8004f48:	161a      	asrs	r2, r3, #24
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	33b6      	adds	r3, #182	; 0xb6
 8004f4e:	b2d2      	uxtb	r2, r2
 8004f50:	701a      	strb	r2, [r3, #0]
	*(dst + 183) = TELEM_ITEM_183;
 8004f52:	4b05      	ldr	r3, [pc, #20]	; (8004f68 <pack_telem_data+0x1724>)
 8004f54:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 8004f58:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004f5c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004f60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f64:	e004      	b.n	8004f70 <pack_telem_data+0x172c>
 8004f66:	bf00      	nop
 8004f68:	200004fc 	.word	0x200004fc
 8004f6c:	42c80000 	.word	0x42c80000
 8004f70:	ee17 3a90 	vmov	r3, s15
 8004f74:	b21a      	sxth	r2, r3
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	33b7      	adds	r3, #183	; 0xb7
 8004f7a:	b2d2      	uxtb	r2, r2
 8004f7c:	701a      	strb	r2, [r3, #0]
	*(dst + 184) = TELEM_ITEM_184;
 8004f7e:	4bd0      	ldr	r3, [pc, #832]	; (80052c0 <pack_telem_data+0x1a7c>)
 8004f80:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 8004f84:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004f88:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004f8c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f90:	ee17 3a90 	vmov	r3, s15
 8004f94:	b21b      	sxth	r3, r3
 8004f96:	121b      	asrs	r3, r3, #8
 8004f98:	b21a      	sxth	r2, r3
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	33b8      	adds	r3, #184	; 0xb8
 8004f9e:	b2d2      	uxtb	r2, r2
 8004fa0:	701a      	strb	r2, [r3, #0]
	*(dst + 185) = TELEM_ITEM_185;
 8004fa2:	4bc7      	ldr	r3, [pc, #796]	; (80052c0 <pack_telem_data+0x1a7c>)
 8004fa4:	edd3 7a35 	vldr	s15, [r3, #212]	; 0xd4
 8004fa8:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004fac:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004fb0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004fb4:	ee17 3a90 	vmov	r3, s15
 8004fb8:	b21a      	sxth	r2, r3
 8004fba:	687b      	ldr	r3, [r7, #4]
 8004fbc:	33b9      	adds	r3, #185	; 0xb9
 8004fbe:	b2d2      	uxtb	r2, r2
 8004fc0:	701a      	strb	r2, [r3, #0]
	*(dst + 186) = TELEM_ITEM_186;
 8004fc2:	4bbf      	ldr	r3, [pc, #764]	; (80052c0 <pack_telem_data+0x1a7c>)
 8004fc4:	edd3 7a35 	vldr	s15, [r3, #212]	; 0xd4
 8004fc8:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004fcc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004fd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004fd4:	ee17 3a90 	vmov	r3, s15
 8004fd8:	b21b      	sxth	r3, r3
 8004fda:	121b      	asrs	r3, r3, #8
 8004fdc:	b21a      	sxth	r2, r3
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	33ba      	adds	r3, #186	; 0xba
 8004fe2:	b2d2      	uxtb	r2, r2
 8004fe4:	701a      	strb	r2, [r3, #0]
	*(dst + 187) = TELEM_ITEM_187;
 8004fe6:	4bb6      	ldr	r3, [pc, #728]	; (80052c0 <pack_telem_data+0x1a7c>)
 8004fe8:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8004fec:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8004ff0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ff4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ff8:	ee17 3a90 	vmov	r3, s15
 8004ffc:	b21a      	sxth	r2, r3
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	33bb      	adds	r3, #187	; 0xbb
 8005002:	b2d2      	uxtb	r2, r2
 8005004:	701a      	strb	r2, [r3, #0]
	*(dst + 188) = TELEM_ITEM_188;
 8005006:	4bae      	ldr	r3, [pc, #696]	; (80052c0 <pack_telem_data+0x1a7c>)
 8005008:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 800500c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005010:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005014:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005018:	ee17 3a90 	vmov	r3, s15
 800501c:	b21b      	sxth	r3, r3
 800501e:	121b      	asrs	r3, r3, #8
 8005020:	b21a      	sxth	r2, r3
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	33bc      	adds	r3, #188	; 0xbc
 8005026:	b2d2      	uxtb	r2, r2
 8005028:	701a      	strb	r2, [r3, #0]
	*(dst + 189) = TELEM_ITEM_189;
 800502a:	4ba5      	ldr	r3, [pc, #660]	; (80052c0 <pack_telem_data+0x1a7c>)
 800502c:	edd3 7a34 	vldr	s15, [r3, #208]	; 0xd0
 8005030:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005034:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005038:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800503c:	ee17 3a90 	vmov	r3, s15
 8005040:	b21a      	sxth	r2, r3
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	33bd      	adds	r3, #189	; 0xbd
 8005046:	b2d2      	uxtb	r2, r2
 8005048:	701a      	strb	r2, [r3, #0]
	*(dst + 190) = TELEM_ITEM_190;
 800504a:	4b9d      	ldr	r3, [pc, #628]	; (80052c0 <pack_telem_data+0x1a7c>)
 800504c:	edd3 7a34 	vldr	s15, [r3, #208]	; 0xd0
 8005050:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005054:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005058:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800505c:	ee17 3a90 	vmov	r3, s15
 8005060:	b21b      	sxth	r3, r3
 8005062:	121b      	asrs	r3, r3, #8
 8005064:	b21a      	sxth	r2, r3
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	33be      	adds	r3, #190	; 0xbe
 800506a:	b2d2      	uxtb	r2, r2
 800506c:	701a      	strb	r2, [r3, #0]
	*(dst + 191) = TELEM_ITEM_191;
 800506e:	4b95      	ldr	r3, [pc, #596]	; (80052c4 <pack_telem_data+0x1a80>)
 8005070:	edd3 7a00 	vldr	s15, [r3]
 8005074:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005078:	ee67 7a87 	vmul.f32	s15, s15, s14
 800507c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005080:	edc7 7a00 	vstr	s15, [r7]
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	33bf      	adds	r3, #191	; 0xbf
 8005088:	683a      	ldr	r2, [r7, #0]
 800508a:	b2d2      	uxtb	r2, r2
 800508c:	701a      	strb	r2, [r3, #0]
	*(dst + 192) = TELEM_ITEM_192;
 800508e:	4b8d      	ldr	r3, [pc, #564]	; (80052c4 <pack_telem_data+0x1a80>)
 8005090:	edd3 7a00 	vldr	s15, [r3]
 8005094:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005098:	ee67 7a87 	vmul.f32	s15, s15, s14
 800509c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050a0:	ee17 3a90 	vmov	r3, s15
 80050a4:	121a      	asrs	r2, r3, #8
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	33c0      	adds	r3, #192	; 0xc0
 80050aa:	b2d2      	uxtb	r2, r2
 80050ac:	701a      	strb	r2, [r3, #0]
	*(dst + 193) = TELEM_ITEM_193;
 80050ae:	4b85      	ldr	r3, [pc, #532]	; (80052c4 <pack_telem_data+0x1a80>)
 80050b0:	edd3 7a00 	vldr	s15, [r3]
 80050b4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80050b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80050bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050c0:	ee17 3a90 	vmov	r3, s15
 80050c4:	141a      	asrs	r2, r3, #16
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	33c1      	adds	r3, #193	; 0xc1
 80050ca:	b2d2      	uxtb	r2, r2
 80050cc:	701a      	strb	r2, [r3, #0]
	*(dst + 194) = TELEM_ITEM_194;
 80050ce:	4b7d      	ldr	r3, [pc, #500]	; (80052c4 <pack_telem_data+0x1a80>)
 80050d0:	edd3 7a00 	vldr	s15, [r3]
 80050d4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80050d8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80050dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050e0:	ee17 3a90 	vmov	r3, s15
 80050e4:	161a      	asrs	r2, r3, #24
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	33c2      	adds	r3, #194	; 0xc2
 80050ea:	b2d2      	uxtb	r2, r2
 80050ec:	701a      	strb	r2, [r3, #0]
	*(dst + 195) = TELEM_ITEM_195;
 80050ee:	4b75      	ldr	r3, [pc, #468]	; (80052c4 <pack_telem_data+0x1a80>)
 80050f0:	edd3 7a01 	vldr	s15, [r3, #4]
 80050f4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80050f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80050fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005100:	edc7 7a00 	vstr	s15, [r7]
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	33c3      	adds	r3, #195	; 0xc3
 8005108:	683a      	ldr	r2, [r7, #0]
 800510a:	b2d2      	uxtb	r2, r2
 800510c:	701a      	strb	r2, [r3, #0]
	*(dst + 196) = TELEM_ITEM_196;
 800510e:	4b6d      	ldr	r3, [pc, #436]	; (80052c4 <pack_telem_data+0x1a80>)
 8005110:	edd3 7a01 	vldr	s15, [r3, #4]
 8005114:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005118:	ee67 7a87 	vmul.f32	s15, s15, s14
 800511c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005120:	ee17 3a90 	vmov	r3, s15
 8005124:	121a      	asrs	r2, r3, #8
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	33c4      	adds	r3, #196	; 0xc4
 800512a:	b2d2      	uxtb	r2, r2
 800512c:	701a      	strb	r2, [r3, #0]
	*(dst + 197) = TELEM_ITEM_197;
 800512e:	4b65      	ldr	r3, [pc, #404]	; (80052c4 <pack_telem_data+0x1a80>)
 8005130:	edd3 7a01 	vldr	s15, [r3, #4]
 8005134:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005138:	ee67 7a87 	vmul.f32	s15, s15, s14
 800513c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005140:	ee17 3a90 	vmov	r3, s15
 8005144:	141a      	asrs	r2, r3, #16
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	33c5      	adds	r3, #197	; 0xc5
 800514a:	b2d2      	uxtb	r2, r2
 800514c:	701a      	strb	r2, [r3, #0]
	*(dst + 198) = TELEM_ITEM_198;
 800514e:	4b5d      	ldr	r3, [pc, #372]	; (80052c4 <pack_telem_data+0x1a80>)
 8005150:	edd3 7a01 	vldr	s15, [r3, #4]
 8005154:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005158:	ee67 7a87 	vmul.f32	s15, s15, s14
 800515c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005160:	ee17 3a90 	vmov	r3, s15
 8005164:	161a      	asrs	r2, r3, #24
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	33c6      	adds	r3, #198	; 0xc6
 800516a:	b2d2      	uxtb	r2, r2
 800516c:	701a      	strb	r2, [r3, #0]
	*(dst + 199) = TELEM_ITEM_199;
 800516e:	4b56      	ldr	r3, [pc, #344]	; (80052c8 <pack_telem_data+0x1a84>)
 8005170:	edd3 7a00 	vldr	s15, [r3]
 8005174:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005178:	ee67 7a87 	vmul.f32	s15, s15, s14
 800517c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005180:	edc7 7a00 	vstr	s15, [r7]
 8005184:	687b      	ldr	r3, [r7, #4]
 8005186:	33c7      	adds	r3, #199	; 0xc7
 8005188:	683a      	ldr	r2, [r7, #0]
 800518a:	b2d2      	uxtb	r2, r2
 800518c:	701a      	strb	r2, [r3, #0]
	*(dst + 200) = TELEM_ITEM_200;
 800518e:	4b4e      	ldr	r3, [pc, #312]	; (80052c8 <pack_telem_data+0x1a84>)
 8005190:	edd3 7a00 	vldr	s15, [r3]
 8005194:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005198:	ee67 7a87 	vmul.f32	s15, s15, s14
 800519c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051a0:	ee17 3a90 	vmov	r3, s15
 80051a4:	121a      	asrs	r2, r3, #8
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	33c8      	adds	r3, #200	; 0xc8
 80051aa:	b2d2      	uxtb	r2, r2
 80051ac:	701a      	strb	r2, [r3, #0]
	*(dst + 201) = TELEM_ITEM_201;
 80051ae:	4b46      	ldr	r3, [pc, #280]	; (80052c8 <pack_telem_data+0x1a84>)
 80051b0:	edd3 7a00 	vldr	s15, [r3]
 80051b4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80051b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80051bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051c0:	ee17 3a90 	vmov	r3, s15
 80051c4:	141a      	asrs	r2, r3, #16
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	33c9      	adds	r3, #201	; 0xc9
 80051ca:	b2d2      	uxtb	r2, r2
 80051cc:	701a      	strb	r2, [r3, #0]
	*(dst + 202) = TELEM_ITEM_202;
 80051ce:	4b3e      	ldr	r3, [pc, #248]	; (80052c8 <pack_telem_data+0x1a84>)
 80051d0:	edd3 7a00 	vldr	s15, [r3]
 80051d4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80051d8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80051dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051e0:	ee17 3a90 	vmov	r3, s15
 80051e4:	161a      	asrs	r2, r3, #24
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	33ca      	adds	r3, #202	; 0xca
 80051ea:	b2d2      	uxtb	r2, r2
 80051ec:	701a      	strb	r2, [r3, #0]
	*(dst + 203) = TELEM_ITEM_203;
 80051ee:	4b37      	ldr	r3, [pc, #220]	; (80052cc <pack_telem_data+0x1a88>)
 80051f0:	edd3 7a00 	vldr	s15, [r3]
 80051f4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80051f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80051fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005200:	edc7 7a00 	vstr	s15, [r7]
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	33cb      	adds	r3, #203	; 0xcb
 8005208:	683a      	ldr	r2, [r7, #0]
 800520a:	b2d2      	uxtb	r2, r2
 800520c:	701a      	strb	r2, [r3, #0]
	*(dst + 204) = TELEM_ITEM_204;
 800520e:	4b2f      	ldr	r3, [pc, #188]	; (80052cc <pack_telem_data+0x1a88>)
 8005210:	edd3 7a00 	vldr	s15, [r3]
 8005214:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005218:	ee67 7a87 	vmul.f32	s15, s15, s14
 800521c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005220:	ee17 3a90 	vmov	r3, s15
 8005224:	121a      	asrs	r2, r3, #8
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	33cc      	adds	r3, #204	; 0xcc
 800522a:	b2d2      	uxtb	r2, r2
 800522c:	701a      	strb	r2, [r3, #0]
	*(dst + 205) = TELEM_ITEM_205;
 800522e:	4b27      	ldr	r3, [pc, #156]	; (80052cc <pack_telem_data+0x1a88>)
 8005230:	edd3 7a00 	vldr	s15, [r3]
 8005234:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005238:	ee67 7a87 	vmul.f32	s15, s15, s14
 800523c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005240:	ee17 3a90 	vmov	r3, s15
 8005244:	141a      	asrs	r2, r3, #16
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	33cd      	adds	r3, #205	; 0xcd
 800524a:	b2d2      	uxtb	r2, r2
 800524c:	701a      	strb	r2, [r3, #0]
	*(dst + 206) = TELEM_ITEM_206;
 800524e:	4b1f      	ldr	r3, [pc, #124]	; (80052cc <pack_telem_data+0x1a88>)
 8005250:	edd3 7a00 	vldr	s15, [r3]
 8005254:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005258:	ee67 7a87 	vmul.f32	s15, s15, s14
 800525c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005260:	ee17 3a90 	vmov	r3, s15
 8005264:	161a      	asrs	r2, r3, #24
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	33ce      	adds	r3, #206	; 0xce
 800526a:	b2d2      	uxtb	r2, r2
 800526c:	701a      	strb	r2, [r3, #0]
	*(dst + 207) = TELEM_ITEM_207;
 800526e:	4b18      	ldr	r3, [pc, #96]	; (80052d0 <pack_telem_data+0x1a8c>)
 8005270:	edd3 7a00 	vldr	s15, [r3]
 8005274:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005278:	ee67 7a87 	vmul.f32	s15, s15, s14
 800527c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005280:	edc7 7a00 	vstr	s15, [r7]
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	33cf      	adds	r3, #207	; 0xcf
 8005288:	683a      	ldr	r2, [r7, #0]
 800528a:	b2d2      	uxtb	r2, r2
 800528c:	701a      	strb	r2, [r3, #0]
	*(dst + 208) = TELEM_ITEM_208;
 800528e:	4b10      	ldr	r3, [pc, #64]	; (80052d0 <pack_telem_data+0x1a8c>)
 8005290:	edd3 7a00 	vldr	s15, [r3]
 8005294:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8005298:	ee67 7a87 	vmul.f32	s15, s15, s14
 800529c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052a0:	ee17 3a90 	vmov	r3, s15
 80052a4:	121a      	asrs	r2, r3, #8
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	33d0      	adds	r3, #208	; 0xd0
 80052aa:	b2d2      	uxtb	r2, r2
 80052ac:	701a      	strb	r2, [r3, #0]
	*(dst + 209) = TELEM_ITEM_209;
 80052ae:	4b08      	ldr	r3, [pc, #32]	; (80052d0 <pack_telem_data+0x1a8c>)
 80052b0:	edd3 7a00 	vldr	s15, [r3]
 80052b4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80052b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80052bc:	e00a      	b.n	80052d4 <pack_telem_data+0x1a90>
 80052be:	bf00      	nop
 80052c0:	200004fc 	.word	0x200004fc
 80052c4:	200004f0 	.word	0x200004f0
 80052c8:	20000414 	.word	0x20000414
 80052cc:	20000418 	.word	0x20000418
 80052d0:	2000041c 	.word	0x2000041c
 80052d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052d8:	ee17 3a90 	vmov	r3, s15
 80052dc:	141a      	asrs	r2, r3, #16
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	33d1      	adds	r3, #209	; 0xd1
 80052e2:	b2d2      	uxtb	r2, r2
 80052e4:	701a      	strb	r2, [r3, #0]
	*(dst + 210) = TELEM_ITEM_210;
 80052e6:	4b84      	ldr	r3, [pc, #528]	; (80054f8 <pack_telem_data+0x1cb4>)
 80052e8:	edd3 7a00 	vldr	s15, [r3]
 80052ec:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80052f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80052f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052f8:	ee17 3a90 	vmov	r3, s15
 80052fc:	161a      	asrs	r2, r3, #24
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	33d2      	adds	r3, #210	; 0xd2
 8005302:	b2d2      	uxtb	r2, r2
 8005304:	701a      	strb	r2, [r3, #0]
	*(dst + 211) = TELEM_ITEM_211;
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	33d3      	adds	r3, #211	; 0xd3
 800530a:	4a7c      	ldr	r2, [pc, #496]	; (80054fc <pack_telem_data+0x1cb8>)
 800530c:	7812      	ldrb	r2, [r2, #0]
 800530e:	b2d2      	uxtb	r2, r2
 8005310:	701a      	strb	r2, [r3, #0]
	*(dst + 212) = TELEM_ITEM_212;
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	33d4      	adds	r3, #212	; 0xd4
 8005316:	4a79      	ldr	r2, [pc, #484]	; (80054fc <pack_telem_data+0x1cb8>)
 8005318:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 800531c:	b2d2      	uxtb	r2, r2
 800531e:	701a      	strb	r2, [r3, #0]
	*(dst + 213) = TELEM_ITEM_213;
 8005320:	4b77      	ldr	r3, [pc, #476]	; (8005500 <pack_telem_data+0x1cbc>)
 8005322:	695a      	ldr	r2, [r3, #20]
 8005324:	687b      	ldr	r3, [r7, #4]
 8005326:	33d5      	adds	r3, #213	; 0xd5
 8005328:	b2d2      	uxtb	r2, r2
 800532a:	701a      	strb	r2, [r3, #0]
	*(dst + 214) = TELEM_ITEM_214;
 800532c:	4b74      	ldr	r3, [pc, #464]	; (8005500 <pack_telem_data+0x1cbc>)
 800532e:	695b      	ldr	r3, [r3, #20]
 8005330:	0a1a      	lsrs	r2, r3, #8
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	33d6      	adds	r3, #214	; 0xd6
 8005336:	b2d2      	uxtb	r2, r2
 8005338:	701a      	strb	r2, [r3, #0]
	*(dst + 215) = TELEM_ITEM_215;
 800533a:	4b71      	ldr	r3, [pc, #452]	; (8005500 <pack_telem_data+0x1cbc>)
 800533c:	695b      	ldr	r3, [r3, #20]
 800533e:	0c1a      	lsrs	r2, r3, #16
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	33d7      	adds	r3, #215	; 0xd7
 8005344:	b2d2      	uxtb	r2, r2
 8005346:	701a      	strb	r2, [r3, #0]
	*(dst + 216) = TELEM_ITEM_216;
 8005348:	4b6d      	ldr	r3, [pc, #436]	; (8005500 <pack_telem_data+0x1cbc>)
 800534a:	695b      	ldr	r3, [r3, #20]
 800534c:	0e1a      	lsrs	r2, r3, #24
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	33d8      	adds	r3, #216	; 0xd8
 8005352:	b2d2      	uxtb	r2, r2
 8005354:	701a      	strb	r2, [r3, #0]
	*(dst + 217) = TELEM_ITEM_217;
 8005356:	4b6a      	ldr	r3, [pc, #424]	; (8005500 <pack_telem_data+0x1cbc>)
 8005358:	889b      	ldrh	r3, [r3, #4]
 800535a:	b29a      	uxth	r2, r3
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	33d9      	adds	r3, #217	; 0xd9
 8005360:	b2d2      	uxtb	r2, r2
 8005362:	701a      	strb	r2, [r3, #0]
	*(dst + 218) = TELEM_ITEM_218;
 8005364:	4b66      	ldr	r3, [pc, #408]	; (8005500 <pack_telem_data+0x1cbc>)
 8005366:	889b      	ldrh	r3, [r3, #4]
 8005368:	b29b      	uxth	r3, r3
 800536a:	0a1b      	lsrs	r3, r3, #8
 800536c:	b29a      	uxth	r2, r3
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	33da      	adds	r3, #218	; 0xda
 8005372:	b2d2      	uxtb	r2, r2
 8005374:	701a      	strb	r2, [r3, #0]
	*(dst + 219) = TELEM_ITEM_219;
 8005376:	4b62      	ldr	r3, [pc, #392]	; (8005500 <pack_telem_data+0x1cbc>)
 8005378:	88db      	ldrh	r3, [r3, #6]
 800537a:	b29a      	uxth	r2, r3
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	33db      	adds	r3, #219	; 0xdb
 8005380:	b2d2      	uxtb	r2, r2
 8005382:	701a      	strb	r2, [r3, #0]
	*(dst + 220) = TELEM_ITEM_220;
 8005384:	4b5e      	ldr	r3, [pc, #376]	; (8005500 <pack_telem_data+0x1cbc>)
 8005386:	88db      	ldrh	r3, [r3, #6]
 8005388:	b29b      	uxth	r3, r3
 800538a:	0a1b      	lsrs	r3, r3, #8
 800538c:	b29a      	uxth	r2, r3
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	33dc      	adds	r3, #220	; 0xdc
 8005392:	b2d2      	uxtb	r2, r2
 8005394:	701a      	strb	r2, [r3, #0]
	*(dst + 221) = TELEM_ITEM_221;
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	33dd      	adds	r3, #221	; 0xdd
 800539a:	4a59      	ldr	r2, [pc, #356]	; (8005500 <pack_telem_data+0x1cbc>)
 800539c:	7a12      	ldrb	r2, [r2, #8]
 800539e:	b2d2      	uxtb	r2, r2
 80053a0:	701a      	strb	r2, [r3, #0]
	*(dst + 222) = TELEM_ITEM_222;
 80053a2:	4b57      	ldr	r3, [pc, #348]	; (8005500 <pack_telem_data+0x1cbc>)
 80053a4:	895b      	ldrh	r3, [r3, #10]
 80053a6:	b29a      	uxth	r2, r3
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	33de      	adds	r3, #222	; 0xde
 80053ac:	b2d2      	uxtb	r2, r2
 80053ae:	701a      	strb	r2, [r3, #0]
	*(dst + 223) = TELEM_ITEM_223;
 80053b0:	4b53      	ldr	r3, [pc, #332]	; (8005500 <pack_telem_data+0x1cbc>)
 80053b2:	895b      	ldrh	r3, [r3, #10]
 80053b4:	b29b      	uxth	r3, r3
 80053b6:	0a1b      	lsrs	r3, r3, #8
 80053b8:	b29a      	uxth	r2, r3
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	33df      	adds	r3, #223	; 0xdf
 80053be:	b2d2      	uxtb	r2, r2
 80053c0:	701a      	strb	r2, [r3, #0]
	*(dst + 224) = TELEM_ITEM_224;
 80053c2:	4b4f      	ldr	r3, [pc, #316]	; (8005500 <pack_telem_data+0x1cbc>)
 80053c4:	899b      	ldrh	r3, [r3, #12]
 80053c6:	b29a      	uxth	r2, r3
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	33e0      	adds	r3, #224	; 0xe0
 80053cc:	b2d2      	uxtb	r2, r2
 80053ce:	701a      	strb	r2, [r3, #0]
	*(dst + 225) = TELEM_ITEM_225;
 80053d0:	4b4b      	ldr	r3, [pc, #300]	; (8005500 <pack_telem_data+0x1cbc>)
 80053d2:	899b      	ldrh	r3, [r3, #12]
 80053d4:	b29b      	uxth	r3, r3
 80053d6:	0a1b      	lsrs	r3, r3, #8
 80053d8:	b29a      	uxth	r2, r3
 80053da:	687b      	ldr	r3, [r7, #4]
 80053dc:	33e1      	adds	r3, #225	; 0xe1
 80053de:	b2d2      	uxtb	r2, r2
 80053e0:	701a      	strb	r2, [r3, #0]
	*(dst + 226) = TELEM_ITEM_226;
 80053e2:	4b48      	ldr	r3, [pc, #288]	; (8005504 <pack_telem_data+0x1cc0>)
 80053e4:	edd3 7a00 	vldr	s15, [r3]
 80053e8:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8005508 <pack_telem_data+0x1cc4>
 80053ec:	ee67 7a87 	vmul.f32	s15, s15, s14
 80053f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053f4:	edc7 7a00 	vstr	s15, [r7]
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	33e2      	adds	r3, #226	; 0xe2
 80053fc:	683a      	ldr	r2, [r7, #0]
 80053fe:	b2d2      	uxtb	r2, r2
 8005400:	701a      	strb	r2, [r3, #0]
	*(dst + 227) = TELEM_ITEM_227;
 8005402:	4b40      	ldr	r3, [pc, #256]	; (8005504 <pack_telem_data+0x1cc0>)
 8005404:	edd3 7a00 	vldr	s15, [r3]
 8005408:	ed9f 7a3f 	vldr	s14, [pc, #252]	; 8005508 <pack_telem_data+0x1cc4>
 800540c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005410:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005414:	ee17 3a90 	vmov	r3, s15
 8005418:	121a      	asrs	r2, r3, #8
 800541a:	687b      	ldr	r3, [r7, #4]
 800541c:	33e3      	adds	r3, #227	; 0xe3
 800541e:	b2d2      	uxtb	r2, r2
 8005420:	701a      	strb	r2, [r3, #0]
	*(dst + 228) = TELEM_ITEM_228;
 8005422:	4b38      	ldr	r3, [pc, #224]	; (8005504 <pack_telem_data+0x1cc0>)
 8005424:	edd3 7a00 	vldr	s15, [r3]
 8005428:	ed9f 7a37 	vldr	s14, [pc, #220]	; 8005508 <pack_telem_data+0x1cc4>
 800542c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005430:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005434:	ee17 3a90 	vmov	r3, s15
 8005438:	141a      	asrs	r2, r3, #16
 800543a:	687b      	ldr	r3, [r7, #4]
 800543c:	33e4      	adds	r3, #228	; 0xe4
 800543e:	b2d2      	uxtb	r2, r2
 8005440:	701a      	strb	r2, [r3, #0]
	*(dst + 229) = TELEM_ITEM_229;
 8005442:	4b30      	ldr	r3, [pc, #192]	; (8005504 <pack_telem_data+0x1cc0>)
 8005444:	edd3 7a00 	vldr	s15, [r3]
 8005448:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 8005508 <pack_telem_data+0x1cc4>
 800544c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005450:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005454:	ee17 3a90 	vmov	r3, s15
 8005458:	161a      	asrs	r2, r3, #24
 800545a:	687b      	ldr	r3, [r7, #4]
 800545c:	33e5      	adds	r3, #229	; 0xe5
 800545e:	b2d2      	uxtb	r2, r2
 8005460:	701a      	strb	r2, [r3, #0]
	*(dst + 230) = TELEM_ITEM_230;
 8005462:	4b2a      	ldr	r3, [pc, #168]	; (800550c <pack_telem_data+0x1cc8>)
 8005464:	681a      	ldr	r2, [r3, #0]
 8005466:	687b      	ldr	r3, [r7, #4]
 8005468:	33e6      	adds	r3, #230	; 0xe6
 800546a:	b2d2      	uxtb	r2, r2
 800546c:	701a      	strb	r2, [r3, #0]
	*(dst + 231) = TELEM_ITEM_231;
 800546e:	4b27      	ldr	r3, [pc, #156]	; (800550c <pack_telem_data+0x1cc8>)
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	121a      	asrs	r2, r3, #8
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	33e7      	adds	r3, #231	; 0xe7
 8005478:	b2d2      	uxtb	r2, r2
 800547a:	701a      	strb	r2, [r3, #0]
	*(dst + 232) = TELEM_ITEM_232;
 800547c:	4b23      	ldr	r3, [pc, #140]	; (800550c <pack_telem_data+0x1cc8>)
 800547e:	681b      	ldr	r3, [r3, #0]
 8005480:	141a      	asrs	r2, r3, #16
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	33e8      	adds	r3, #232	; 0xe8
 8005486:	b2d2      	uxtb	r2, r2
 8005488:	701a      	strb	r2, [r3, #0]
	*(dst + 233) = TELEM_ITEM_233;
 800548a:	4b20      	ldr	r3, [pc, #128]	; (800550c <pack_telem_data+0x1cc8>)
 800548c:	681b      	ldr	r3, [r3, #0]
 800548e:	161a      	asrs	r2, r3, #24
 8005490:	687b      	ldr	r3, [r7, #4]
 8005492:	33e9      	adds	r3, #233	; 0xe9
 8005494:	b2d2      	uxtb	r2, r2
 8005496:	701a      	strb	r2, [r3, #0]
	*(dst + 234) = TELEM_ITEM_234;
 8005498:	687b      	ldr	r3, [r7, #4]
 800549a:	33ea      	adds	r3, #234	; 0xea
 800549c:	4a1c      	ldr	r2, [pc, #112]	; (8005510 <pack_telem_data+0x1ccc>)
 800549e:	7812      	ldrb	r2, [r2, #0]
 80054a0:	701a      	strb	r2, [r3, #0]
	*(dst + 235) = TELEM_ITEM_235;
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	33eb      	adds	r3, #235	; 0xeb
 80054a6:	4a1b      	ldr	r2, [pc, #108]	; (8005514 <pack_telem_data+0x1cd0>)
 80054a8:	7812      	ldrb	r2, [r2, #0]
 80054aa:	701a      	strb	r2, [r3, #0]
	*(dst + 236) = TELEM_ITEM_236;
 80054ac:	4b1a      	ldr	r3, [pc, #104]	; (8005518 <pack_telem_data+0x1cd4>)
 80054ae:	681a      	ldr	r2, [r3, #0]
 80054b0:	687b      	ldr	r3, [r7, #4]
 80054b2:	33ec      	adds	r3, #236	; 0xec
 80054b4:	b2d2      	uxtb	r2, r2
 80054b6:	701a      	strb	r2, [r3, #0]
	*(dst + 237) = TELEM_ITEM_237;
 80054b8:	4b17      	ldr	r3, [pc, #92]	; (8005518 <pack_telem_data+0x1cd4>)
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	0a1a      	lsrs	r2, r3, #8
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	33ed      	adds	r3, #237	; 0xed
 80054c2:	b2d2      	uxtb	r2, r2
 80054c4:	701a      	strb	r2, [r3, #0]
	*(dst + 238) = TELEM_ITEM_238;
 80054c6:	4b14      	ldr	r3, [pc, #80]	; (8005518 <pack_telem_data+0x1cd4>)
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	0c1a      	lsrs	r2, r3, #16
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	33ee      	adds	r3, #238	; 0xee
 80054d0:	b2d2      	uxtb	r2, r2
 80054d2:	701a      	strb	r2, [r3, #0]
	*(dst + 239) = TELEM_ITEM_239;
 80054d4:	4b10      	ldr	r3, [pc, #64]	; (8005518 <pack_telem_data+0x1cd4>)
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	0e1a      	lsrs	r2, r3, #24
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	33ef      	adds	r3, #239	; 0xef
 80054de:	b2d2      	uxtb	r2, r2
 80054e0:	701a      	strb	r2, [r3, #0]
	*(dst + 240) = TELEM_ITEM_240;
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	33f0      	adds	r3, #240	; 0xf0
 80054e6:	4a0d      	ldr	r2, [pc, #52]	; (800551c <pack_telem_data+0x1cd8>)
 80054e8:	7812      	ldrb	r2, [r2, #0]
 80054ea:	701a      	strb	r2, [r3, #0]
 80054ec:	bf00      	nop
 80054ee:	370c      	adds	r7, #12
 80054f0:	46bd      	mov	sp, r7
 80054f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054f6:	4770      	bx	lr
 80054f8:	2000041c 	.word	0x2000041c
 80054fc:	200004fc 	.word	0x200004fc
 8005500:	20000604 	.word	0x20000604
 8005504:	20000420 	.word	0x20000420
 8005508:	461c4000 	.word	0x461c4000
 800550c:	20000424 	.word	0x20000424
 8005510:	20000428 	.word	0x20000428
 8005514:	20000429 	.word	0x20000429
 8005518:	2000042c 	.word	0x2000042c
 800551c:	20000430 	.word	0x20000430

08005520 <init_serial_data>:

/**
 * Initialize the flash struct and chip.
 * Initialize all the DMA rx buffers.
 */
void init_serial_data(DmaBufferInfo* buffer_info) {
 8005520:	b580      	push	{r7, lr}
 8005522:	b084      	sub	sp, #16
 8005524:	af00      	add	r7, sp, #0
 8005526:	6078      	str	r0, [r7, #4]
	// Flash
	init_flash(&flash, &SPI_MEM, FLASH_CS_GPIO_Port, FLASH_CS_Pin);
 8005528:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800552c:	4a1c      	ldr	r2, [pc, #112]	; (80055a0 <init_serial_data+0x80>)
 800552e:	491d      	ldr	r1, [pc, #116]	; (80055a4 <init_serial_data+0x84>)
 8005530:	481d      	ldr	r0, [pc, #116]	; (80055a8 <init_serial_data+0x88>)
 8005532:	f002 ffda 	bl	80084ea <init_flash>

	// DMA RX
	buffer_info->curr_circular_buffer_pos = 0;
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	2200      	movs	r2, #0
 800553a:	f8a3 29f6 	strh.w	r2, [r3, #2550]	; 0x9f6
	buffer_info->last_telem_packet_pos = 0;
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	2200      	movs	r2, #0
 8005542:	f8a3 2a20 	strh.w	r2, [r3, #2592]	; 0xa20

	for (uint8_t i = 0; i < NUM_BUFFER_PACKETS; i++) {
 8005546:	2300      	movs	r3, #0
 8005548:	73fb      	strb	r3, [r7, #15]
 800554a:	e011      	b.n	8005570 <init_serial_data+0x50>
		buffer_info->curr_telem_start[i] = 0;
 800554c:	7bfa      	ldrb	r2, [r7, #15]
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	f202 42fc 	addw	r2, r2, #1276	; 0x4fc
 8005554:	2100      	movs	r1, #0
 8005556:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
		buffer_info->curr_telem_len[i] = 0;
 800555a:	7bfb      	ldrb	r3, [r7, #15]
 800555c:	687a      	ldr	r2, [r7, #4]
 800555e:	f203 5304 	addw	r3, r3, #1284	; 0x504
 8005562:	005b      	lsls	r3, r3, #1
 8005564:	4413      	add	r3, r2
 8005566:	2200      	movs	r2, #0
 8005568:	809a      	strh	r2, [r3, #4]
	for (uint8_t i = 0; i < NUM_BUFFER_PACKETS; i++) {
 800556a:	7bfb      	ldrb	r3, [r7, #15]
 800556c:	3301      	adds	r3, #1
 800556e:	73fb      	strb	r3, [r7, #15]
 8005570:	7bfb      	ldrb	r3, [r7, #15]
 8005572:	2b09      	cmp	r3, #9
 8005574:	d9ea      	bls.n	800554c <init_serial_data+0x2c>
	}

	for (uint16_t i = 0; i < PONG_MAX_PACKET_SIZE; i++) {
 8005576:	2300      	movs	r3, #0
 8005578:	81bb      	strh	r3, [r7, #12]
 800557a:	e008      	b.n	800558e <init_serial_data+0x6e>
		buffer_info->telem_buffer[i] = 0;
 800557c:	89bb      	ldrh	r3, [r7, #12]
 800557e:	687a      	ldr	r2, [r7, #4]
 8005580:	4413      	add	r3, r2
 8005582:	2200      	movs	r2, #0
 8005584:	f883 2a22 	strb.w	r2, [r3, #2594]	; 0xa22
	for (uint16_t i = 0; i < PONG_MAX_PACKET_SIZE; i++) {
 8005588:	89bb      	ldrh	r3, [r7, #12]
 800558a:	3301      	adds	r3, #1
 800558c:	81bb      	strh	r3, [r7, #12]
 800558e:	89bb      	ldrh	r3, [r7, #12]
 8005590:	2bfe      	cmp	r3, #254	; 0xfe
 8005592:	d9f3      	bls.n	800557c <init_serial_data+0x5c>
	}
}
 8005594:	bf00      	nop
 8005596:	bf00      	nop
 8005598:	3710      	adds	r7, #16
 800559a:	46bd      	mov	sp, r7
 800559c:	bd80      	pop	{r7, pc}
 800559e:	bf00      	nop
 80055a0:	40020800 	.word	0x40020800
 80055a4:	20000be4 	.word	0x20000be4
 80055a8:	20000ec4 	.word	0x20000ec4

080055ac <init_packet_header>:


/**
 * Some info doesn't change between telem and flash packet headers
 */
void init_packet_header(CLB_Packet_Header* header, uint8_t target_addr) {
 80055ac:	b480      	push	{r7}
 80055ae:	b083      	sub	sp, #12
 80055b0:	af00      	add	r7, sp, #0
 80055b2:	6078      	str	r0, [r7, #4]
 80055b4:	460b      	mov	r3, r1
 80055b6:	70fb      	strb	r3, [r7, #3]
	header->packet_type = 0; // default packet
 80055b8:	687b      	ldr	r3, [r7, #4]
 80055ba:	2200      	movs	r2, #0
 80055bc:	701a      	strb	r2, [r3, #0]
	header->origin_addr = FLIGHT_EC_ADDR;
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	2202      	movs	r2, #2
 80055c2:	705a      	strb	r2, [r3, #1]
	header->target_addr = target_addr;
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	78fa      	ldrb	r2, [r7, #3]
 80055c8:	709a      	strb	r2, [r3, #2]
	header->priority = 1; // medium
 80055ca:	687b      	ldr	r3, [r7, #4]
 80055cc:	2201      	movs	r2, #1
 80055ce:	70da      	strb	r2, [r3, #3]
	header->do_cobbs = 1; // enable COBS
 80055d0:	687b      	ldr	r3, [r7, #4]
 80055d2:	2201      	movs	r2, #1
 80055d4:	715a      	strb	r2, [r3, #5]
	header->timestamp = SYS_MICROS;
 80055d6:	4b05      	ldr	r3, [pc, #20]	; (80055ec <init_packet_header+0x40>)
 80055d8:	681b      	ldr	r3, [r3, #0]
 80055da:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	609a      	str	r2, [r3, #8]
}
 80055e0:	bf00      	nop
 80055e2:	370c      	adds	r7, #12
 80055e4:	46bd      	mov	sp, r7
 80055e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055ea:	4770      	bx	lr
 80055ec:	20000a70 	.word	0x20000a70

080055f0 <send_telem_packet>:

void send_telem_packet(uint8_t target_addr) {
 80055f0:	b580      	push	{r7, lr}
 80055f2:	b088      	sub	sp, #32
 80055f4:	af00      	add	r7, sp, #0
 80055f6:	4603      	mov	r3, r0
 80055f8:	71fb      	strb	r3, [r7, #7]
	CLB_Packet_Header telem_header;
	init_packet_header(&telem_header, target_addr);
 80055fa:	79fa      	ldrb	r2, [r7, #7]
 80055fc:	f107 0314 	add.w	r3, r7, #20
 8005600:	4611      	mov	r1, r2
 8005602:	4618      	mov	r0, r3
 8005604:	f7ff ffd2 	bl	80055ac <init_packet_header>
    init_data(NULL, -1, &telem_header);  // Comms library (tx, so no buffer)
 8005608:	f107 0314 	add.w	r3, r7, #20
 800560c:	461a      	mov	r2, r3
 800560e:	f04f 31ff 	mov.w	r1, #4294967295
 8005612:	2000      	movs	r0, #0
 8005614:	f001 ff8a 	bl	800752c <init_data>

    CLB_send_data_info info;
    info.uartx = &COM_UART;
 8005618:	4b05      	ldr	r3, [pc, #20]	; (8005630 <send_telem_packet+0x40>)
 800561a:	60bb      	str	r3, [r7, #8]
    send_data(&info, CLB_Telem);
 800561c:	f107 0308 	add.w	r3, r7, #8
 8005620:	2100      	movs	r1, #0
 8005622:	4618      	mov	r0, r3
 8005624:	f001 ffc2 	bl	80075ac <send_data>
}
 8005628:	bf00      	nop
 800562a:	3720      	adds	r7, #32
 800562c:	46bd      	mov	sp, r7
 800562e:	bd80      	pop	{r7, pc}
 8005630:	20000b58 	.word	0x20000b58

08005634 <save_flash_packet>:

void save_flash_packet() {
 8005634:	b580      	push	{r7, lr}
 8005636:	b0c8      	sub	sp, #288	; 0x120
 8005638:	af00      	add	r7, sp, #0

	CLB_Packet_Header flash_header;
	init_packet_header(&flash_header, SERVER_ADDR);
 800563a:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800563e:	2107      	movs	r1, #7
 8005640:	4618      	mov	r0, r3
 8005642:	f7ff ffb3 	bl	80055ac <init_packet_header>
    init_data(NULL, -1, &flash_header);   // Comms library (tx, so no buffer)
 8005646:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800564a:	461a      	mov	r2, r3
 800564c:	f04f 31ff 	mov.w	r1, #4294967295
 8005650:	2000      	movs	r0, #0
 8005652:	f001 ff6b 	bl	800752c <init_data>

    // packs data to flash
    uint8_t buffer[253] = {0};
 8005656:	f107 0310 	add.w	r3, r7, #16
 800565a:	2200      	movs	r2, #0
 800565c:	601a      	str	r2, [r3, #0]
 800565e:	3304      	adds	r3, #4
 8005660:	22f9      	movs	r2, #249	; 0xf9
 8005662:	2100      	movs	r1, #0
 8005664:	4618      	mov	r0, r3
 8005666:	f006 fc3b 	bl	800bee0 <memset>
    CLB_send_data_info info;
    info.flash_arr_used = 0;
 800566a:	1d3b      	adds	r3, r7, #4
 800566c:	2200      	movs	r2, #0
 800566e:	80da      	strh	r2, [r3, #6]
    info.flash_arr_sz = 253; // arbitrary
 8005670:	1d3b      	adds	r3, r7, #4
 8005672:	22fd      	movs	r2, #253	; 0xfd
 8005674:	809a      	strh	r2, [r3, #4]
    info.flash_arr = buffer;
 8005676:	1d3b      	adds	r3, r7, #4
 8005678:	f107 0210 	add.w	r2, r7, #16
 800567c:	609a      	str	r2, [r3, #8]
    send_data(&info, CLB_Flash);
 800567e:	1d3b      	adds	r3, r7, #4
 8005680:	2101      	movs	r1, #1
 8005682:	4618      	mov	r0, r3
 8005684:	f001 ff92 	bl	80075ac <send_data>

    uint8_t buffer_sz = info.flash_arr_used;
 8005688:	1d3b      	adds	r3, r7, #4
 800568a:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800568e:	f887 311f 	strb.w	r3, [r7, #287]	; 0x11f

    // Write to Flash
    write_to_flash(&flash, buffer, buffer_sz);
 8005692:	f897 211f 	ldrb.w	r2, [r7, #287]	; 0x11f
 8005696:	f107 0310 	add.w	r3, r7, #16
 800569a:	4619      	mov	r1, r3
 800569c:	4803      	ldr	r0, [pc, #12]	; (80056ac <save_flash_packet+0x78>)
 800569e:	f003 f814 	bl	80086ca <write_to_flash>
}
 80056a2:	bf00      	nop
 80056a4:	f507 7790 	add.w	r7, r7, #288	; 0x120
 80056a8:	46bd      	mov	sp, r7
 80056aa:	bd80      	pop	{r7, pc}
 80056ac:	20000ec4 	.word	0x20000ec4

080056b0 <transmit_flash_data>:

// Mostly copied from press board
void transmit_flash_data() {
 80056b0:	b580      	push	{r7, lr}
 80056b2:	f6ad 0d08 	subw	sp, sp, #2056	; 0x808
 80056b6:	af00      	add	r7, sp, #0

	// Ensure flash is flushed
	finish_flash_write(&flash);
 80056b8:	481c      	ldr	r0, [pc, #112]	; (800572c <transmit_flash_data+0x7c>)
 80056ba:	f003 f8d1 	bl	8008860 <finish_flash_write>

	uint32_t page = 0;
 80056be:	2300      	movs	r3, #0
 80056c0:	f8c7 3804 	str.w	r3, [r7, #2052]	; 0x804
	uint32_t end_page = flash.current_page+1;
 80056c4:	4b19      	ldr	r3, [pc, #100]	; (800572c <transmit_flash_data+0x7c>)
 80056c6:	f8b3 3210 	ldrh.w	r3, [r3, #528]	; 0x210
 80056ca:	3301      	adds	r3, #1
 80056cc:	f8c7 3800 	str.w	r3, [r7, #2048]	; 0x800
	if (flash.next_free_column == 0) // if the last page is completely empty, ignore it
 80056d0:	4b16      	ldr	r3, [pc, #88]	; (800572c <transmit_flash_data+0x7c>)
 80056d2:	f8b3 3212 	ldrh.w	r3, [r3, #530]	; 0x212
 80056d6:	2b00      	cmp	r3, #0
 80056d8:	d104      	bne.n	80056e4 <transmit_flash_data+0x34>
		end_page--;
 80056da:	f8d7 3800 	ldr.w	r3, [r7, #2048]	; 0x800
 80056de:	3b01      	subs	r3, #1
 80056e0:	f8c7 3800 	str.w	r3, [r7, #2048]	; 0x800
	uint8_t read_buffer[W25N01GV_BYTES_PER_PAGE];  // W25N01GV_BYTES_PER_PAGE == 2048 == 2KB
	reset_flash_read_pointer(&flash);
 80056e4:	4811      	ldr	r0, [pc, #68]	; (800572c <transmit_flash_data+0x7c>)
 80056e6:	f003 f901 	bl	80088ec <reset_flash_read_pointer>
	while (page < end_page) {
 80056ea:	e011      	b.n	8005710 <transmit_flash_data+0x60>
	    read_next_2KB_from_flash(&flash, read_buffer);
 80056ec:	463b      	mov	r3, r7
 80056ee:	4619      	mov	r1, r3
 80056f0:	480e      	ldr	r0, [pc, #56]	; (800572c <transmit_flash_data+0x7c>)
 80056f2:	f003 f909 	bl	8008908 <read_next_2KB_from_flash>
	    HAL_UART_Transmit(&COM_UART, read_buffer, W25N01GV_BYTES_PER_PAGE, HAL_MAX_DELAY);
 80056f6:	4639      	mov	r1, r7
 80056f8:	f04f 33ff 	mov.w	r3, #4294967295
 80056fc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8005700:	480b      	ldr	r0, [pc, #44]	; (8005730 <transmit_flash_data+0x80>)
 8005702:	f005 fda8 	bl	800b256 <HAL_UART_Transmit>
	    ++page;
 8005706:	f8d7 3804 	ldr.w	r3, [r7, #2052]	; 0x804
 800570a:	3301      	adds	r3, #1
 800570c:	f8c7 3804 	str.w	r3, [r7, #2052]	; 0x804
	while (page < end_page) {
 8005710:	f8d7 2804 	ldr.w	r2, [r7, #2052]	; 0x804
 8005714:	f8d7 3800 	ldr.w	r3, [r7, #2048]	; 0x800
 8005718:	429a      	cmp	r2, r3
 800571a:	d3e7      	bcc.n	80056ec <transmit_flash_data+0x3c>
		//HAL_IWDG_Refresh(&hiwdg);  TODO: re enable this
	}
	reset_flash_read_pointer(&flash);
 800571c:	4803      	ldr	r0, [pc, #12]	; (800572c <transmit_flash_data+0x7c>)
 800571e:	f003 f8e5 	bl	80088ec <reset_flash_read_pointer>
}
 8005722:	bf00      	nop
 8005724:	f607 0708 	addw	r7, r7, #2056	; 0x808
 8005728:	46bd      	mov	sp, r7
 800572a:	bd80      	pop	{r7, pc}
 800572c:	20000ec4 	.word	0x20000ec4
 8005730:	20000b58 	.word	0x20000b58

08005734 <send_calibration_data>:
        // no idle flag? --> DMA rollover occurred
        RxRollover++;       // increment Rollover Counter
    }
}

void send_calibration_data() {
 8005734:	b580      	push	{r7, lr}
 8005736:	b086      	sub	sp, #24
 8005738:	af00      	add	r7, sp, #0
	CLB_Packet_Header cal_header;

	cal_header.packet_type = 2; // calibration packet
 800573a:	2302      	movs	r3, #2
 800573c:	733b      	strb	r3, [r7, #12]
	cal_header.origin_addr = FLIGHT_EC_ADDR;
 800573e:	2302      	movs	r3, #2
 8005740:	737b      	strb	r3, [r7, #13]
	cal_header.target_addr = SERVER_ADDR;
 8005742:	2307      	movs	r3, #7
 8005744:	73bb      	strb	r3, [r7, #14]
	cal_header.priority = 1; // medium
 8005746:	2301      	movs	r3, #1
 8005748:	73fb      	strb	r3, [r7, #15]
	cal_header.do_cobbs = 1; // enable COBS
 800574a:	2301      	movs	r3, #1
 800574c:	747b      	strb	r3, [r7, #17]
	cal_header.timestamp = SYS_MICROS;
 800574e:	4b0b      	ldr	r3, [pc, #44]	; (800577c <send_calibration_data+0x48>)
 8005750:	681b      	ldr	r3, [r3, #0]
 8005752:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005754:	617b      	str	r3, [r7, #20]

    init_data(NULL, -1, &cal_header);  // Comms library (tx, so no buffer)
 8005756:	f107 030c 	add.w	r3, r7, #12
 800575a:	461a      	mov	r2, r3
 800575c:	f04f 31ff 	mov.w	r1, #4294967295
 8005760:	2000      	movs	r0, #0
 8005762:	f001 fee3 	bl	800752c <init_data>

    CLB_send_data_info info;
    info.uartx = &COM_UART;
 8005766:	4b06      	ldr	r3, [pc, #24]	; (8005780 <send_calibration_data+0x4c>)
 8005768:	603b      	str	r3, [r7, #0]
    send_data(&info, CLB_Telem);
 800576a:	463b      	mov	r3, r7
 800576c:	2100      	movs	r1, #0
 800576e:	4618      	mov	r0, r3
 8005770:	f001 ff1c 	bl	80075ac <send_data>
}
 8005774:	bf00      	nop
 8005776:	3718      	adds	r7, #24
 8005778:	46bd      	mov	sp, r7
 800577a:	bd80      	pop	{r7, pc}
 800577c:	20000a70 	.word	0x20000a70
 8005780:	20000b58 	.word	0x20000b58

08005784 <set_status_flag>:
 8005784:	b480      	push	{r7}
 8005786:	b083      	sub	sp, #12
 8005788:	af00      	add	r7, sp, #0
 800578a:	6078      	str	r0, [r7, #4]
 800578c:	2201      	movs	r2, #1
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	fa02 f303 	lsl.w	r3, r2, r3
 8005794:	461a      	mov	r2, r3
 8005796:	4b05      	ldr	r3, [pc, #20]	; (80057ac <set_status_flag+0x28>)
 8005798:	681b      	ldr	r3, [r3, #0]
 800579a:	4313      	orrs	r3, r2
 800579c:	4a03      	ldr	r2, [pc, #12]	; (80057ac <set_status_flag+0x28>)
 800579e:	6013      	str	r3, [r2, #0]
 80057a0:	bf00      	nop
 80057a2:	370c      	adds	r7, #12
 80057a4:	46bd      	mov	sp, r7
 80057a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057aa:	4770      	bx	lr
 80057ac:	20000410 	.word	0x20000410

080057b0 <HAL_MspInit>:
 80057b0:	b480      	push	{r7}
 80057b2:	b083      	sub	sp, #12
 80057b4:	af00      	add	r7, sp, #0
 80057b6:	2300      	movs	r3, #0
 80057b8:	607b      	str	r3, [r7, #4]
 80057ba:	4b10      	ldr	r3, [pc, #64]	; (80057fc <HAL_MspInit+0x4c>)
 80057bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80057be:	4a0f      	ldr	r2, [pc, #60]	; (80057fc <HAL_MspInit+0x4c>)
 80057c0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80057c4:	6453      	str	r3, [r2, #68]	; 0x44
 80057c6:	4b0d      	ldr	r3, [pc, #52]	; (80057fc <HAL_MspInit+0x4c>)
 80057c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80057ca:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80057ce:	607b      	str	r3, [r7, #4]
 80057d0:	687b      	ldr	r3, [r7, #4]
 80057d2:	2300      	movs	r3, #0
 80057d4:	603b      	str	r3, [r7, #0]
 80057d6:	4b09      	ldr	r3, [pc, #36]	; (80057fc <HAL_MspInit+0x4c>)
 80057d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80057da:	4a08      	ldr	r2, [pc, #32]	; (80057fc <HAL_MspInit+0x4c>)
 80057dc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80057e0:	6413      	str	r3, [r2, #64]	; 0x40
 80057e2:	4b06      	ldr	r3, [pc, #24]	; (80057fc <HAL_MspInit+0x4c>)
 80057e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80057e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80057ea:	603b      	str	r3, [r7, #0]
 80057ec:	683b      	ldr	r3, [r7, #0]
 80057ee:	bf00      	nop
 80057f0:	370c      	adds	r7, #12
 80057f2:	46bd      	mov	sp, r7
 80057f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057f8:	4770      	bx	lr
 80057fa:	bf00      	nop
 80057fc:	40023800 	.word	0x40023800

08005800 <HAL_SPI_MspInit>:
 8005800:	b580      	push	{r7, lr}
 8005802:	b090      	sub	sp, #64	; 0x40
 8005804:	af00      	add	r7, sp, #0
 8005806:	6078      	str	r0, [r7, #4]
 8005808:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800580c:	2200      	movs	r2, #0
 800580e:	601a      	str	r2, [r3, #0]
 8005810:	605a      	str	r2, [r3, #4]
 8005812:	609a      	str	r2, [r3, #8]
 8005814:	60da      	str	r2, [r3, #12]
 8005816:	611a      	str	r2, [r3, #16]
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	4a65      	ldr	r2, [pc, #404]	; (80059b4 <HAL_SPI_MspInit+0x1b4>)
 800581e:	4293      	cmp	r3, r2
 8005820:	d12c      	bne.n	800587c <HAL_SPI_MspInit+0x7c>
 8005822:	2300      	movs	r3, #0
 8005824:	62bb      	str	r3, [r7, #40]	; 0x28
 8005826:	4b64      	ldr	r3, [pc, #400]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005828:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800582a:	4a63      	ldr	r2, [pc, #396]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 800582c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8005830:	6453      	str	r3, [r2, #68]	; 0x44
 8005832:	4b61      	ldr	r3, [pc, #388]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005834:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005836:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800583a:	62bb      	str	r3, [r7, #40]	; 0x28
 800583c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800583e:	2300      	movs	r3, #0
 8005840:	627b      	str	r3, [r7, #36]	; 0x24
 8005842:	4b5d      	ldr	r3, [pc, #372]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005844:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005846:	4a5c      	ldr	r2, [pc, #368]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005848:	f043 0301 	orr.w	r3, r3, #1
 800584c:	6313      	str	r3, [r2, #48]	; 0x30
 800584e:	4b5a      	ldr	r3, [pc, #360]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005850:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005852:	f003 0301 	and.w	r3, r3, #1
 8005856:	627b      	str	r3, [r7, #36]	; 0x24
 8005858:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800585a:	23e0      	movs	r3, #224	; 0xe0
 800585c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800585e:	2302      	movs	r3, #2
 8005860:	633b      	str	r3, [r7, #48]	; 0x30
 8005862:	2300      	movs	r3, #0
 8005864:	637b      	str	r3, [r7, #52]	; 0x34
 8005866:	2303      	movs	r3, #3
 8005868:	63bb      	str	r3, [r7, #56]	; 0x38
 800586a:	2305      	movs	r3, #5
 800586c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800586e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8005872:	4619      	mov	r1, r3
 8005874:	4851      	ldr	r0, [pc, #324]	; (80059bc <HAL_SPI_MspInit+0x1bc>)
 8005876:	f003 fb37 	bl	8008ee8 <HAL_GPIO_Init>
 800587a:	e096      	b.n	80059aa <HAL_SPI_MspInit+0x1aa>
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	681b      	ldr	r3, [r3, #0]
 8005880:	4a4f      	ldr	r2, [pc, #316]	; (80059c0 <HAL_SPI_MspInit+0x1c0>)
 8005882:	4293      	cmp	r3, r2
 8005884:	d12d      	bne.n	80058e2 <HAL_SPI_MspInit+0xe2>
 8005886:	2300      	movs	r3, #0
 8005888:	623b      	str	r3, [r7, #32]
 800588a:	4b4b      	ldr	r3, [pc, #300]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 800588c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800588e:	4a4a      	ldr	r2, [pc, #296]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005890:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005894:	6413      	str	r3, [r2, #64]	; 0x40
 8005896:	4b48      	ldr	r3, [pc, #288]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005898:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800589a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800589e:	623b      	str	r3, [r7, #32]
 80058a0:	6a3b      	ldr	r3, [r7, #32]
 80058a2:	2300      	movs	r3, #0
 80058a4:	61fb      	str	r3, [r7, #28]
 80058a6:	4b44      	ldr	r3, [pc, #272]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 80058a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80058aa:	4a43      	ldr	r2, [pc, #268]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 80058ac:	f043 0302 	orr.w	r3, r3, #2
 80058b0:	6313      	str	r3, [r2, #48]	; 0x30
 80058b2:	4b41      	ldr	r3, [pc, #260]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 80058b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80058b6:	f003 0302 	and.w	r3, r3, #2
 80058ba:	61fb      	str	r3, [r7, #28]
 80058bc:	69fb      	ldr	r3, [r7, #28]
 80058be:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 80058c2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80058c4:	2302      	movs	r3, #2
 80058c6:	633b      	str	r3, [r7, #48]	; 0x30
 80058c8:	2300      	movs	r3, #0
 80058ca:	637b      	str	r3, [r7, #52]	; 0x34
 80058cc:	2303      	movs	r3, #3
 80058ce:	63bb      	str	r3, [r7, #56]	; 0x38
 80058d0:	2305      	movs	r3, #5
 80058d2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80058d4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80058d8:	4619      	mov	r1, r3
 80058da:	483a      	ldr	r0, [pc, #232]	; (80059c4 <HAL_SPI_MspInit+0x1c4>)
 80058dc:	f003 fb04 	bl	8008ee8 <HAL_GPIO_Init>
 80058e0:	e063      	b.n	80059aa <HAL_SPI_MspInit+0x1aa>
 80058e2:	687b      	ldr	r3, [r7, #4]
 80058e4:	681b      	ldr	r3, [r3, #0]
 80058e6:	4a38      	ldr	r2, [pc, #224]	; (80059c8 <HAL_SPI_MspInit+0x1c8>)
 80058e8:	4293      	cmp	r3, r2
 80058ea:	d12d      	bne.n	8005948 <HAL_SPI_MspInit+0x148>
 80058ec:	2300      	movs	r3, #0
 80058ee:	61bb      	str	r3, [r7, #24]
 80058f0:	4b31      	ldr	r3, [pc, #196]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 80058f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80058f4:	4a30      	ldr	r2, [pc, #192]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 80058f6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80058fa:	6413      	str	r3, [r2, #64]	; 0x40
 80058fc:	4b2e      	ldr	r3, [pc, #184]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 80058fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005900:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005904:	61bb      	str	r3, [r7, #24]
 8005906:	69bb      	ldr	r3, [r7, #24]
 8005908:	2300      	movs	r3, #0
 800590a:	617b      	str	r3, [r7, #20]
 800590c:	4b2a      	ldr	r3, [pc, #168]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 800590e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005910:	4a29      	ldr	r2, [pc, #164]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005912:	f043 0304 	orr.w	r3, r3, #4
 8005916:	6313      	str	r3, [r2, #48]	; 0x30
 8005918:	4b27      	ldr	r3, [pc, #156]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 800591a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800591c:	f003 0304 	and.w	r3, r3, #4
 8005920:	617b      	str	r3, [r7, #20]
 8005922:	697b      	ldr	r3, [r7, #20]
 8005924:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 8005928:	62fb      	str	r3, [r7, #44]	; 0x2c
 800592a:	2302      	movs	r3, #2
 800592c:	633b      	str	r3, [r7, #48]	; 0x30
 800592e:	2300      	movs	r3, #0
 8005930:	637b      	str	r3, [r7, #52]	; 0x34
 8005932:	2303      	movs	r3, #3
 8005934:	63bb      	str	r3, [r7, #56]	; 0x38
 8005936:	2306      	movs	r3, #6
 8005938:	63fb      	str	r3, [r7, #60]	; 0x3c
 800593a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800593e:	4619      	mov	r1, r3
 8005940:	4822      	ldr	r0, [pc, #136]	; (80059cc <HAL_SPI_MspInit+0x1cc>)
 8005942:	f003 fad1 	bl	8008ee8 <HAL_GPIO_Init>
 8005946:	e030      	b.n	80059aa <HAL_SPI_MspInit+0x1aa>
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	4a20      	ldr	r2, [pc, #128]	; (80059d0 <HAL_SPI_MspInit+0x1d0>)
 800594e:	4293      	cmp	r3, r2
 8005950:	d12b      	bne.n	80059aa <HAL_SPI_MspInit+0x1aa>
 8005952:	2300      	movs	r3, #0
 8005954:	613b      	str	r3, [r7, #16]
 8005956:	4b18      	ldr	r3, [pc, #96]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005958:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800595a:	4a17      	ldr	r2, [pc, #92]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 800595c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8005960:	6453      	str	r3, [r2, #68]	; 0x44
 8005962:	4b15      	ldr	r3, [pc, #84]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005964:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005966:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800596a:	613b      	str	r3, [r7, #16]
 800596c:	693b      	ldr	r3, [r7, #16]
 800596e:	2300      	movs	r3, #0
 8005970:	60fb      	str	r3, [r7, #12]
 8005972:	4b11      	ldr	r3, [pc, #68]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005974:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005976:	4a10      	ldr	r2, [pc, #64]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005978:	f043 0310 	orr.w	r3, r3, #16
 800597c:	6313      	str	r3, [r2, #48]	; 0x30
 800597e:	4b0e      	ldr	r3, [pc, #56]	; (80059b8 <HAL_SPI_MspInit+0x1b8>)
 8005980:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005982:	f003 0310 	and.w	r3, r3, #16
 8005986:	60fb      	str	r3, [r7, #12]
 8005988:	68fb      	ldr	r3, [r7, #12]
 800598a:	2364      	movs	r3, #100	; 0x64
 800598c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800598e:	2302      	movs	r3, #2
 8005990:	633b      	str	r3, [r7, #48]	; 0x30
 8005992:	2300      	movs	r3, #0
 8005994:	637b      	str	r3, [r7, #52]	; 0x34
 8005996:	2303      	movs	r3, #3
 8005998:	63bb      	str	r3, [r7, #56]	; 0x38
 800599a:	2305      	movs	r3, #5
 800599c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800599e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80059a2:	4619      	mov	r1, r3
 80059a4:	480b      	ldr	r0, [pc, #44]	; (80059d4 <HAL_SPI_MspInit+0x1d4>)
 80059a6:	f003 fa9f 	bl	8008ee8 <HAL_GPIO_Init>
 80059aa:	bf00      	nop
 80059ac:	3740      	adds	r7, #64	; 0x40
 80059ae:	46bd      	mov	sp, r7
 80059b0:	bd80      	pop	{r7, pc}
 80059b2:	bf00      	nop
 80059b4:	40013000 	.word	0x40013000
 80059b8:	40023800 	.word	0x40023800
 80059bc:	40020000 	.word	0x40020000
 80059c0:	40003800 	.word	0x40003800
 80059c4:	40020400 	.word	0x40020400
 80059c8:	40003c00 	.word	0x40003c00
 80059cc:	40020800 	.word	0x40020800
 80059d0:	40013400 	.word	0x40013400
 80059d4:	40021000 	.word	0x40021000

080059d8 <HAL_TIM_Base_MspInit>:
 80059d8:	b580      	push	{r7, lr}
 80059da:	b086      	sub	sp, #24
 80059dc:	af00      	add	r7, sp, #0
 80059de:	6078      	str	r0, [r7, #4]
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	681b      	ldr	r3, [r3, #0]
 80059e4:	4a34      	ldr	r2, [pc, #208]	; (8005ab8 <HAL_TIM_Base_MspInit+0xe0>)
 80059e6:	4293      	cmp	r3, r2
 80059e8:	d10e      	bne.n	8005a08 <HAL_TIM_Base_MspInit+0x30>
 80059ea:	2300      	movs	r3, #0
 80059ec:	617b      	str	r3, [r7, #20]
 80059ee:	4b33      	ldr	r3, [pc, #204]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 80059f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059f2:	4a32      	ldr	r2, [pc, #200]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 80059f4:	f043 0308 	orr.w	r3, r3, #8
 80059f8:	6413      	str	r3, [r2, #64]	; 0x40
 80059fa:	4b30      	ldr	r3, [pc, #192]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 80059fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059fe:	f003 0308 	and.w	r3, r3, #8
 8005a02:	617b      	str	r3, [r7, #20]
 8005a04:	697b      	ldr	r3, [r7, #20]
 8005a06:	e052      	b.n	8005aae <HAL_TIM_Base_MspInit+0xd6>
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	681b      	ldr	r3, [r3, #0]
 8005a0c:	4a2c      	ldr	r2, [pc, #176]	; (8005ac0 <HAL_TIM_Base_MspInit+0xe8>)
 8005a0e:	4293      	cmp	r3, r2
 8005a10:	d116      	bne.n	8005a40 <HAL_TIM_Base_MspInit+0x68>
 8005a12:	2300      	movs	r3, #0
 8005a14:	613b      	str	r3, [r7, #16]
 8005a16:	4b29      	ldr	r3, [pc, #164]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 8005a18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a1a:	4a28      	ldr	r2, [pc, #160]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 8005a1c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005a20:	6453      	str	r3, [r2, #68]	; 0x44
 8005a22:	4b26      	ldr	r3, [pc, #152]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 8005a24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a26:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005a2a:	613b      	str	r3, [r7, #16]
 8005a2c:	693b      	ldr	r3, [r7, #16]
 8005a2e:	2200      	movs	r2, #0
 8005a30:	2101      	movs	r1, #1
 8005a32:	2019      	movs	r0, #25
 8005a34:	f003 f98f 	bl	8008d56 <HAL_NVIC_SetPriority>
 8005a38:	2019      	movs	r0, #25
 8005a3a:	f003 f9a8 	bl	8008d8e <HAL_NVIC_EnableIRQ>
 8005a3e:	e036      	b.n	8005aae <HAL_TIM_Base_MspInit+0xd6>
 8005a40:	687b      	ldr	r3, [r7, #4]
 8005a42:	681b      	ldr	r3, [r3, #0]
 8005a44:	4a1f      	ldr	r2, [pc, #124]	; (8005ac4 <HAL_TIM_Base_MspInit+0xec>)
 8005a46:	4293      	cmp	r3, r2
 8005a48:	d116      	bne.n	8005a78 <HAL_TIM_Base_MspInit+0xa0>
 8005a4a:	2300      	movs	r3, #0
 8005a4c:	60fb      	str	r3, [r7, #12]
 8005a4e:	4b1b      	ldr	r3, [pc, #108]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 8005a50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a52:	4a1a      	ldr	r2, [pc, #104]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 8005a54:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005a58:	6453      	str	r3, [r2, #68]	; 0x44
 8005a5a:	4b18      	ldr	r3, [pc, #96]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 8005a5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a5e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005a62:	60fb      	str	r3, [r7, #12]
 8005a64:	68fb      	ldr	r3, [r7, #12]
 8005a66:	2200      	movs	r2, #0
 8005a68:	2101      	movs	r1, #1
 8005a6a:	201a      	movs	r0, #26
 8005a6c:	f003 f973 	bl	8008d56 <HAL_NVIC_SetPriority>
 8005a70:	201a      	movs	r0, #26
 8005a72:	f003 f98c 	bl	8008d8e <HAL_NVIC_EnableIRQ>
 8005a76:	e01a      	b.n	8005aae <HAL_TIM_Base_MspInit+0xd6>
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	681b      	ldr	r3, [r3, #0]
 8005a7c:	4a12      	ldr	r2, [pc, #72]	; (8005ac8 <HAL_TIM_Base_MspInit+0xf0>)
 8005a7e:	4293      	cmp	r3, r2
 8005a80:	d115      	bne.n	8005aae <HAL_TIM_Base_MspInit+0xd6>
 8005a82:	2300      	movs	r3, #0
 8005a84:	60bb      	str	r3, [r7, #8]
 8005a86:	4b0d      	ldr	r3, [pc, #52]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 8005a88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a8a:	4a0c      	ldr	r2, [pc, #48]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 8005a8c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005a90:	6413      	str	r3, [r2, #64]	; 0x40
 8005a92:	4b0a      	ldr	r3, [pc, #40]	; (8005abc <HAL_TIM_Base_MspInit+0xe4>)
 8005a94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a96:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005a9a:	60bb      	str	r3, [r7, #8]
 8005a9c:	68bb      	ldr	r3, [r7, #8]
 8005a9e:	2200      	movs	r2, #0
 8005aa0:	2101      	movs	r1, #1
 8005aa2:	202c      	movs	r0, #44	; 0x2c
 8005aa4:	f003 f957 	bl	8008d56 <HAL_NVIC_SetPriority>
 8005aa8:	202c      	movs	r0, #44	; 0x2c
 8005aaa:	f003 f970 	bl	8008d8e <HAL_NVIC_EnableIRQ>
 8005aae:	bf00      	nop
 8005ab0:	3718      	adds	r7, #24
 8005ab2:	46bd      	mov	sp, r7
 8005ab4:	bd80      	pop	{r7, pc}
 8005ab6:	bf00      	nop
 8005ab8:	40000c00 	.word	0x40000c00
 8005abc:	40023800 	.word	0x40023800
 8005ac0:	40014400 	.word	0x40014400
 8005ac4:	40014800 	.word	0x40014800
 8005ac8:	40001c00 	.word	0x40001c00

08005acc <HAL_UART_MspInit>:
 8005acc:	b580      	push	{r7, lr}
 8005ace:	b08a      	sub	sp, #40	; 0x28
 8005ad0:	af00      	add	r7, sp, #0
 8005ad2:	6078      	str	r0, [r7, #4]
 8005ad4:	f107 0314 	add.w	r3, r7, #20
 8005ad8:	2200      	movs	r2, #0
 8005ada:	601a      	str	r2, [r3, #0]
 8005adc:	605a      	str	r2, [r3, #4]
 8005ade:	609a      	str	r2, [r3, #8]
 8005ae0:	60da      	str	r2, [r3, #12]
 8005ae2:	611a      	str	r2, [r3, #16]
 8005ae4:	687b      	ldr	r3, [r7, #4]
 8005ae6:	681b      	ldr	r3, [r3, #0]
 8005ae8:	4a1d      	ldr	r2, [pc, #116]	; (8005b60 <HAL_UART_MspInit+0x94>)
 8005aea:	4293      	cmp	r3, r2
 8005aec:	d133      	bne.n	8005b56 <HAL_UART_MspInit+0x8a>
 8005aee:	2300      	movs	r3, #0
 8005af0:	613b      	str	r3, [r7, #16]
 8005af2:	4b1c      	ldr	r3, [pc, #112]	; (8005b64 <HAL_UART_MspInit+0x98>)
 8005af4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005af6:	4a1b      	ldr	r2, [pc, #108]	; (8005b64 <HAL_UART_MspInit+0x98>)
 8005af8:	f043 0310 	orr.w	r3, r3, #16
 8005afc:	6453      	str	r3, [r2, #68]	; 0x44
 8005afe:	4b19      	ldr	r3, [pc, #100]	; (8005b64 <HAL_UART_MspInit+0x98>)
 8005b00:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005b02:	f003 0310 	and.w	r3, r3, #16
 8005b06:	613b      	str	r3, [r7, #16]
 8005b08:	693b      	ldr	r3, [r7, #16]
 8005b0a:	2300      	movs	r3, #0
 8005b0c:	60fb      	str	r3, [r7, #12]
 8005b0e:	4b15      	ldr	r3, [pc, #84]	; (8005b64 <HAL_UART_MspInit+0x98>)
 8005b10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005b12:	4a14      	ldr	r2, [pc, #80]	; (8005b64 <HAL_UART_MspInit+0x98>)
 8005b14:	f043 0302 	orr.w	r3, r3, #2
 8005b18:	6313      	str	r3, [r2, #48]	; 0x30
 8005b1a:	4b12      	ldr	r3, [pc, #72]	; (8005b64 <HAL_UART_MspInit+0x98>)
 8005b1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005b1e:	f003 0302 	and.w	r3, r3, #2
 8005b22:	60fb      	str	r3, [r7, #12]
 8005b24:	68fb      	ldr	r3, [r7, #12]
 8005b26:	23c0      	movs	r3, #192	; 0xc0
 8005b28:	617b      	str	r3, [r7, #20]
 8005b2a:	2302      	movs	r3, #2
 8005b2c:	61bb      	str	r3, [r7, #24]
 8005b2e:	2300      	movs	r3, #0
 8005b30:	61fb      	str	r3, [r7, #28]
 8005b32:	2303      	movs	r3, #3
 8005b34:	623b      	str	r3, [r7, #32]
 8005b36:	2307      	movs	r3, #7
 8005b38:	627b      	str	r3, [r7, #36]	; 0x24
 8005b3a:	f107 0314 	add.w	r3, r7, #20
 8005b3e:	4619      	mov	r1, r3
 8005b40:	4809      	ldr	r0, [pc, #36]	; (8005b68 <HAL_UART_MspInit+0x9c>)
 8005b42:	f003 f9d1 	bl	8008ee8 <HAL_GPIO_Init>
 8005b46:	2200      	movs	r2, #0
 8005b48:	2100      	movs	r1, #0
 8005b4a:	2025      	movs	r0, #37	; 0x25
 8005b4c:	f003 f903 	bl	8008d56 <HAL_NVIC_SetPriority>
 8005b50:	2025      	movs	r0, #37	; 0x25
 8005b52:	f003 f91c 	bl	8008d8e <HAL_NVIC_EnableIRQ>
 8005b56:	bf00      	nop
 8005b58:	3728      	adds	r7, #40	; 0x28
 8005b5a:	46bd      	mov	sp, r7
 8005b5c:	bd80      	pop	{r7, pc}
 8005b5e:	bf00      	nop
 8005b60:	40011000 	.word	0x40011000
 8005b64:	40023800 	.word	0x40023800
 8005b68:	40020400 	.word	0x40020400

08005b6c <NMI_Handler>:
 8005b6c:	b480      	push	{r7}
 8005b6e:	af00      	add	r7, sp, #0
 8005b70:	e7fe      	b.n	8005b70 <NMI_Handler+0x4>

08005b72 <HardFault_Handler>:
 8005b72:	b480      	push	{r7}
 8005b74:	af00      	add	r7, sp, #0
 8005b76:	e7fe      	b.n	8005b76 <HardFault_Handler+0x4>

08005b78 <MemManage_Handler>:
 8005b78:	b480      	push	{r7}
 8005b7a:	af00      	add	r7, sp, #0
 8005b7c:	e7fe      	b.n	8005b7c <MemManage_Handler+0x4>

08005b7e <BusFault_Handler>:
 8005b7e:	b480      	push	{r7}
 8005b80:	af00      	add	r7, sp, #0
 8005b82:	e7fe      	b.n	8005b82 <BusFault_Handler+0x4>

08005b84 <UsageFault_Handler>:
 8005b84:	b480      	push	{r7}
 8005b86:	af00      	add	r7, sp, #0
 8005b88:	e7fe      	b.n	8005b88 <UsageFault_Handler+0x4>

08005b8a <SVC_Handler>:
 8005b8a:	b480      	push	{r7}
 8005b8c:	af00      	add	r7, sp, #0
 8005b8e:	bf00      	nop
 8005b90:	46bd      	mov	sp, r7
 8005b92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b96:	4770      	bx	lr

08005b98 <DebugMon_Handler>:
 8005b98:	b480      	push	{r7}
 8005b9a:	af00      	add	r7, sp, #0
 8005b9c:	bf00      	nop
 8005b9e:	46bd      	mov	sp, r7
 8005ba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ba4:	4770      	bx	lr

08005ba6 <PendSV_Handler>:
 8005ba6:	b480      	push	{r7}
 8005ba8:	af00      	add	r7, sp, #0
 8005baa:	bf00      	nop
 8005bac:	46bd      	mov	sp, r7
 8005bae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bb2:	4770      	bx	lr

08005bb4 <SysTick_Handler>:
 8005bb4:	b580      	push	{r7, lr}
 8005bb6:	af00      	add	r7, sp, #0
 8005bb8:	f002 ffd2 	bl	8008b60 <HAL_IncTick>
 8005bbc:	bf00      	nop
 8005bbe:	bd80      	pop	{r7, pc}

08005bc0 <TIM1_UP_TIM10_IRQHandler>:
 8005bc0:	b580      	push	{r7, lr}
 8005bc2:	af00      	add	r7, sp, #0
 8005bc4:	4802      	ldr	r0, [pc, #8]	; (8005bd0 <TIM1_UP_TIM10_IRQHandler+0x10>)
 8005bc6:	f004 ff3b 	bl	800aa40 <HAL_TIM_IRQHandler>
 8005bca:	bf00      	nop
 8005bcc:	bd80      	pop	{r7, pc}
 8005bce:	bf00      	nop
 8005bd0:	20000a24 	.word	0x20000a24

08005bd4 <TIM1_TRG_COM_TIM11_IRQHandler>:
 8005bd4:	b580      	push	{r7, lr}
 8005bd6:	af00      	add	r7, sp, #0
 8005bd8:	4802      	ldr	r0, [pc, #8]	; (8005be4 <TIM1_TRG_COM_TIM11_IRQHandler+0x10>)
 8005bda:	f004 ff31 	bl	800aa40 <HAL_TIM_IRQHandler>
 8005bde:	bf00      	nop
 8005be0:	bd80      	pop	{r7, pc}
 8005be2:	bf00      	nop
 8005be4:	20000b9c 	.word	0x20000b9c

08005be8 <USART1_IRQHandler>:
 8005be8:	b580      	push	{r7, lr}
 8005bea:	af00      	add	r7, sp, #0
 8005bec:	4802      	ldr	r0, [pc, #8]	; (8005bf8 <USART1_IRQHandler+0x10>)
 8005bee:	f005 fbf5 	bl	800b3dc <HAL_UART_IRQHandler>
 8005bf2:	bf00      	nop
 8005bf4:	bd80      	pop	{r7, pc}
 8005bf6:	bf00      	nop
 8005bf8:	20000b58 	.word	0x20000b58

08005bfc <TIM8_UP_TIM13_IRQHandler>:
 8005bfc:	b580      	push	{r7, lr}
 8005bfe:	af00      	add	r7, sp, #0
 8005c00:	4802      	ldr	r0, [pc, #8]	; (8005c0c <TIM8_UP_TIM13_IRQHandler+0x10>)
 8005c02:	f004 ff1d 	bl	800aa40 <HAL_TIM_IRQHandler>
 8005c06:	bf00      	nop
 8005c08:	bd80      	pop	{r7, pc}
 8005c0a:	bf00      	nop
 8005c0c:	20000b10 	.word	0x20000b10

08005c10 <SystemInit>:
 8005c10:	b480      	push	{r7}
 8005c12:	af00      	add	r7, sp, #0
 8005c14:	4b08      	ldr	r3, [pc, #32]	; (8005c38 <SystemInit+0x28>)
 8005c16:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005c1a:	4a07      	ldr	r2, [pc, #28]	; (8005c38 <SystemInit+0x28>)
 8005c1c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8005c20:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8005c24:	4b04      	ldr	r3, [pc, #16]	; (8005c38 <SystemInit+0x28>)
 8005c26:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005c2a:	609a      	str	r2, [r3, #8]
 8005c2c:	bf00      	nop
 8005c2e:	46bd      	mov	sp, r7
 8005c30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c34:	4770      	bx	lr
 8005c36:	bf00      	nop
 8005c38:	e000ed00 	.word	0xe000ed00

08005c3c <actuate_tank_motor_pos>:
 8005c3c:	b480      	push	{r7}
 8005c3e:	b083      	sub	sp, #12
 8005c40:	af00      	add	r7, sp, #0
 8005c42:	6078      	str	r0, [r7, #4]
 8005c44:	ed87 0a00 	vstr	s0, [r7]
 8005c48:	687b      	ldr	r3, [r7, #4]
 8005c4a:	781b      	ldrb	r3, [r3, #0]
 8005c4c:	bf00      	nop
 8005c4e:	370c      	adds	r7, #12
 8005c50:	46bd      	mov	sp, r7
 8005c52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c56:	4770      	bx	lr

08005c58 <actuate_tank_control_valve>:
 8005c58:	b580      	push	{r7, lr}
 8005c5a:	b082      	sub	sp, #8
 8005c5c:	af00      	add	r7, sp, #0
 8005c5e:	6078      	str	r0, [r7, #4]
 8005c60:	460b      	mov	r3, r1
 8005c62:	70fb      	strb	r3, [r7, #3]
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	781b      	ldrb	r3, [r3, #0]
 8005c68:	b2db      	uxtb	r3, r3
 8005c6a:	2b00      	cmp	r3, #0
 8005c6c:	d007      	beq.n	8005c7e <actuate_tank_control_valve+0x26>
 8005c6e:	687b      	ldr	r3, [r7, #4]
 8005c70:	789b      	ldrb	r3, [r3, #2]
 8005c72:	461a      	mov	r2, r3
 8005c74:	78fb      	ldrb	r3, [r7, #3]
 8005c76:	4619      	mov	r1, r3
 8005c78:	4610      	mov	r0, r2
 8005c7a:	f001 f979 	bl	8006f70 <set_valve_channel>
 8005c7e:	bf00      	nop
 8005c80:	3708      	adds	r7, #8
 8005c82:	46bd      	mov	sp, r7
 8005c84:	bd80      	pop	{r7, pc}

08005c86 <tank_autopress_bang_bang>:
 8005c86:	b580      	push	{r7, lr}
 8005c88:	b082      	sub	sp, #8
 8005c8a:	af00      	add	r7, sp, #0
 8005c8c:	6078      	str	r0, [r7, #4]
 8005c8e:	687b      	ldr	r3, [r7, #4]
 8005c90:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005c92:	ed93 7a00 	vldr	s14, [r3]
 8005c96:	687b      	ldr	r3, [r7, #4]
 8005c98:	edd3 6a10 	vldr	s13, [r3, #64]	; 0x40
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 8005ca2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8005ca6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cae:	d504      	bpl.n	8005cba <tank_autopress_bang_bang+0x34>
 8005cb0:	2101      	movs	r1, #1
 8005cb2:	6878      	ldr	r0, [r7, #4]
 8005cb4:	f7ff ffd0 	bl	8005c58 <actuate_tank_control_valve>
 8005cb8:	e015      	b.n	8005ce6 <tank_autopress_bang_bang+0x60>
 8005cba:	687b      	ldr	r3, [r7, #4]
 8005cbc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005cbe:	ed93 7a00 	vldr	s14, [r3]
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	edd3 6a10 	vldr	s13, [r3, #64]	; 0x40
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 8005cce:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8005cd2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005cd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cda:	dc00      	bgt.n	8005cde <tank_autopress_bang_bang+0x58>
 8005cdc:	e003      	b.n	8005ce6 <tank_autopress_bang_bang+0x60>
 8005cde:	2100      	movs	r1, #0
 8005ce0:	6878      	ldr	r0, [r7, #4]
 8005ce2:	f7ff ffb9 	bl	8005c58 <actuate_tank_control_valve>
 8005ce6:	bf00      	nop
 8005ce8:	3708      	adds	r7, #8
 8005cea:	46bd      	mov	sp, r7
 8005cec:	bd80      	pop	{r7, pc}
	...

08005cf0 <tank_PID_pressure_control>:
 8005cf0:	b580      	push	{r7, lr}
 8005cf2:	b08e      	sub	sp, #56	; 0x38
 8005cf4:	af00      	add	r7, sp, #0
 8005cf6:	6078      	str	r0, [r7, #4]
 8005cf8:	687b      	ldr	r3, [r7, #4]
 8005cfa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005cfc:	4618      	mov	r0, r3
 8005cfe:	f7fa fbc5 	bl	800048c <__aeabi_ui2d>
 8005d02:	f04f 0200 	mov.w	r2, #0
 8005d06:	4b4a      	ldr	r3, [pc, #296]	; (8005e30 <tank_PID_pressure_control+0x140>)
 8005d08:	f7fa fd64 	bl	80007d4 <__aeabi_ddiv>
 8005d0c:	4602      	mov	r2, r0
 8005d0e:	460b      	mov	r3, r1
 8005d10:	4610      	mov	r0, r2
 8005d12:	4619      	mov	r1, r3
 8005d14:	f7fa ff04 	bl	8000b20 <__aeabi_d2f>
 8005d18:	4603      	mov	r3, r0
 8005d1a:	633b      	str	r3, [r7, #48]	; 0x30
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	ed93 7a10 	vldr	s14, [r3, #64]	; 0x40
 8005d22:	687b      	ldr	r3, [r7, #4]
 8005d24:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005d26:	edd3 7a00 	vldr	s15, [r3]
 8005d2a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005d2e:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	ed93 7a1c 	vldr	s14, [r3, #112]	; 0x70
 8005d38:	edd7 6a0b 	vldr	s13, [r7, #44]	; 0x2c
 8005d3c:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 8005d40:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005d44:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005d48:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	edd3 7a1d 	vldr	s15, [r3, #116]	; 0x74
 8005d52:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8005d56:	ee77 6a67 	vsub.f32	s13, s14, s15
 8005d5a:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8005d5e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005d62:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
 8005d66:	687b      	ldr	r3, [r7, #4]
 8005d68:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005d6a:	675a      	str	r2, [r3, #116]	; 0x74
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 8005d72:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8005d76:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005d7a:	edc7 7a08 	vstr	s15, [r7, #32]
 8005d7e:	687b      	ldr	r3, [r7, #4]
 8005d80:	ed93 7a17 	vldr	s14, [r3, #92]	; 0x5c
 8005d84:	687b      	ldr	r3, [r7, #4]
 8005d86:	edd3 7a1c 	vldr	s15, [r3, #112]	; 0x70
 8005d8a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005d8e:	edc7 7a07 	vstr	s15, [r7, #28]
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	edd3 7a18 	vldr	s15, [r3, #96]	; 0x60
 8005d98:	ed97 7a09 	vldr	s14, [r7, #36]	; 0x24
 8005d9c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005da0:	edc7 7a06 	vstr	s15, [r7, #24]
 8005da4:	ed97 7a08 	vldr	s14, [r7, #32]
 8005da8:	edd7 7a07 	vldr	s15, [r7, #28]
 8005dac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005db0:	ed97 7a06 	vldr	s14, [r7, #24]
 8005db4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005db8:	edc7 7a05 	vstr	s15, [r7, #20]
 8005dbc:	ed97 7a04 	vldr	s14, [r7, #16]
 8005dc0:	edd7 7a03 	vldr	s15, [r7, #12]
 8005dc4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005dc8:	edc7 7a02 	vstr	s15, [r7, #8]
 8005dcc:	edd7 7a03 	vldr	s15, [r7, #12]
 8005dd0:	eef1 7a67 	vneg.f32	s15, s15
 8005dd4:	ed97 7a05 	vldr	s14, [r7, #20]
 8005dd8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005ddc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005de0:	d506      	bpl.n	8005df0 <tank_PID_pressure_control+0x100>
 8005de2:	edd7 7a03 	vldr	s15, [r7, #12]
 8005de6:	eef1 7a67 	vneg.f32	s15, s15
 8005dea:	edc7 7a0d 	vstr	s15, [r7, #52]	; 0x34
 8005dee:	e010      	b.n	8005e12 <tank_PID_pressure_control+0x122>
 8005df0:	ed97 7a05 	vldr	s14, [r7, #20]
 8005df4:	edd7 7a02 	vldr	s15, [r7, #8]
 8005df8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005dfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e00:	dd02      	ble.n	8005e08 <tank_PID_pressure_control+0x118>
 8005e02:	68bb      	ldr	r3, [r7, #8]
 8005e04:	637b      	str	r3, [r7, #52]	; 0x34
 8005e06:	e004      	b.n	8005e12 <tank_PID_pressure_control+0x122>
 8005e08:	697b      	ldr	r3, [r7, #20]
 8005e0a:	637b      	str	r3, [r7, #52]	; 0x34
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8005e10:	671a      	str	r2, [r3, #112]	; 0x70
 8005e12:	ed97 7a03 	vldr	s14, [r7, #12]
 8005e16:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8005e1a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005e1e:	eeb0 0a67 	vmov.f32	s0, s15
 8005e22:	6878      	ldr	r0, [r7, #4]
 8005e24:	f7ff ff0a 	bl	8005c3c <actuate_tank_motor_pos>
 8005e28:	bf00      	nop
 8005e2a:	3738      	adds	r7, #56	; 0x38
 8005e2c:	46bd      	mov	sp, r7
 8005e2e:	bd80      	pop	{r7, pc}
 8005e30:	408f4000 	.word	0x408f4000

08005e34 <tank_check_control_valve_threshold>:
 8005e34:	b580      	push	{r7, lr}
 8005e36:	b082      	sub	sp, #8
 8005e38:	af00      	add	r7, sp, #0
 8005e3a:	6078      	str	r0, [r7, #4]
 8005e3c:	687b      	ldr	r3, [r7, #4]
 8005e3e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005e40:	ed93 7a00 	vldr	s14, [r3]
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8005e4a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005e4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e52:	d504      	bpl.n	8005e5e <tank_check_control_valve_threshold+0x2a>
 8005e54:	2101      	movs	r1, #1
 8005e56:	6878      	ldr	r0, [r7, #4]
 8005e58:	f7ff fefe 	bl	8005c58 <actuate_tank_control_valve>
 8005e5c:	e010      	b.n	8005e80 <tank_check_control_valve_threshold+0x4c>
 8005e5e:	687b      	ldr	r3, [r7, #4]
 8005e60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005e62:	ed93 7a00 	vldr	s14, [r3]
 8005e66:	687b      	ldr	r3, [r7, #4]
 8005e68:	edd3 7a14 	vldr	s15, [r3, #80]	; 0x50
 8005e6c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005e70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e74:	dc00      	bgt.n	8005e78 <tank_check_control_valve_threshold+0x44>
 8005e76:	e003      	b.n	8005e80 <tank_check_control_valve_threshold+0x4c>
 8005e78:	2100      	movs	r1, #0
 8005e7a:	6878      	ldr	r0, [r7, #4]
 8005e7c:	f7ff feec 	bl	8005c58 <actuate_tank_control_valve>
 8005e80:	bf00      	nop
 8005e82:	3708      	adds	r7, #8
 8005e84:	46bd      	mov	sp, r7
 8005e86:	bd80      	pop	{r7, pc}

08005e88 <tank_startup_init_motor_position>:
 8005e88:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8005e8c:	ed2d 8b02 	vpush	{d8}
 8005e90:	b09a      	sub	sp, #104	; 0x68
 8005e92:	af00      	add	r7, sp, #0
 8005e94:	6078      	str	r0, [r7, #4]
 8005e96:	f04f 0200 	mov.w	r2, #0
 8005e9a:	f04f 0300 	mov.w	r3, #0
 8005e9e:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005ea6:	681b      	ldr	r3, [r3, #0]
 8005ea8:	4618      	mov	r0, r3
 8005eaa:	f7fa fb11 	bl	80004d0 <__aeabi_f2d>
 8005eae:	4602      	mov	r2, r0
 8005eb0:	460b      	mov	r3, r1
 8005eb2:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8005eb6:	687b      	ldr	r3, [r7, #4]
 8005eb8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005eba:	681b      	ldr	r3, [r3, #0]
 8005ebc:	4618      	mov	r0, r3
 8005ebe:	f7fa fb07 	bl	80004d0 <__aeabi_f2d>
 8005ec2:	4602      	mov	r2, r0
 8005ec4:	460b      	mov	r3, r1
 8005ec6:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 8005eca:	f04f 0200 	mov.w	r2, #0
 8005ece:	f04f 0300 	mov.w	r3, #0
 8005ed2:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 8005ed6:	f7fa fdbb 	bl	8000a50 <__aeabi_dcmpeq>
 8005eda:	4603      	mov	r3, r0
 8005edc:	2b00      	cmp	r3, #0
 8005ede:	d004      	beq.n	8005eea <tank_startup_init_motor_position+0x62>
 8005ee0:	a397      	add	r3, pc, #604	; (adr r3, 8006140 <tank_startup_init_motor_position+0x2b8>)
 8005ee2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ee6:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8005eea:	f04f 0200 	mov.w	r2, #0
 8005eee:	f04f 0300 	mov.w	r3, #0
 8005ef2:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8005ef6:	f7fa fdab 	bl	8000a50 <__aeabi_dcmpeq>
 8005efa:	4603      	mov	r3, r0
 8005efc:	2b00      	cmp	r3, #0
 8005efe:	d004      	beq.n	8005f0a <tank_startup_init_motor_position+0x82>
 8005f00:	a38f      	add	r3, pc, #572	; (adr r3, 8006140 <tank_startup_init_motor_position+0x2b8>)
 8005f02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f06:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 8005f0a:	a38f      	add	r3, pc, #572	; (adr r3, 8006148 <tank_startup_init_motor_position+0x2c0>)
 8005f0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f10:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
 8005f14:	f04f 0200 	mov.w	r2, #0
 8005f18:	4b85      	ldr	r3, [pc, #532]	; (8006130 <tank_startup_init_motor_position+0x2a8>)
 8005f1a:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8005f1e:	a376      	add	r3, pc, #472	; (adr r3, 80060f8 <tank_startup_init_motor_position+0x270>)
 8005f20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f24:	e9c7 2308 	strd	r2, r3, [r7, #32]
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	785b      	ldrb	r3, [r3, #1]
 8005f2c:	2b00      	cmp	r3, #0
 8005f2e:	d005      	beq.n	8005f3c <tank_startup_init_motor_position+0xb4>
 8005f30:	a373      	add	r3, pc, #460	; (adr r3, 8006100 <tank_startup_init_motor_position+0x278>)
 8005f32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f36:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 8005f3a:	e004      	b.n	8005f46 <tank_startup_init_motor_position+0xbe>
 8005f3c:	a372      	add	r3, pc, #456	; (adr r3, 8006108 <tank_startup_init_motor_position+0x280>)
 8005f3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f42:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 8005f46:	4b7b      	ldr	r3, [pc, #492]	; (8006134 <tank_startup_init_motor_position+0x2ac>)
 8005f48:	e9d3 0100 	ldrd	r0, r1, [r3]
 8005f4c:	f04f 0200 	mov.w	r2, #0
 8005f50:	4b79      	ldr	r3, [pc, #484]	; (8006138 <tank_startup_init_motor_position+0x2b0>)
 8005f52:	f7fa f95f 	bl	8000214 <__adddf3>
 8005f56:	4602      	mov	r2, r0
 8005f58:	460b      	mov	r3, r1
 8005f5a:	f04f 0000 	mov.w	r0, #0
 8005f5e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8005f62:	f7fa fc37 	bl	80007d4 <__aeabi_ddiv>
 8005f66:	4602      	mov	r2, r0
 8005f68:	460b      	mov	r3, r1
 8005f6a:	ec43 2b18 	vmov	d8, r2, r3
 8005f6e:	4b71      	ldr	r3, [pc, #452]	; (8006134 <tank_startup_init_motor_position+0x2ac>)
 8005f70:	e9d3 4500 	ldrd	r4, r5, [r3]
 8005f74:	4b6f      	ldr	r3, [pc, #444]	; (8006134 <tank_startup_init_motor_position+0x2ac>)
 8005f76:	e9d3 0100 	ldrd	r0, r1, [r3]
 8005f7a:	f04f 0200 	mov.w	r2, #0
 8005f7e:	4b6e      	ldr	r3, [pc, #440]	; (8006138 <tank_startup_init_motor_position+0x2b0>)
 8005f80:	f7fa f946 	bl	8000210 <__aeabi_dsub>
 8005f84:	4602      	mov	r2, r0
 8005f86:	460b      	mov	r3, r1
 8005f88:	4620      	mov	r0, r4
 8005f8a:	4629      	mov	r1, r5
 8005f8c:	f7fa fc22 	bl	80007d4 <__aeabi_ddiv>
 8005f90:	4602      	mov	r2, r0
 8005f92:	460b      	mov	r3, r1
 8005f94:	ec43 2b17 	vmov	d7, r2, r3
 8005f98:	eeb0 1a47 	vmov.f32	s2, s14
 8005f9c:	eef0 1a67 	vmov.f32	s3, s15
 8005fa0:	eeb0 0a48 	vmov.f32	s0, s16
 8005fa4:	eef0 0a68 	vmov.f32	s1, s17
 8005fa8:	f006 f826 	bl	800bff8 <pow>
 8005fac:	ed87 0b06 	vstr	d0, [r7, #24]
 8005fb0:	687b      	ldr	r3, [r7, #4]
 8005fb2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005fb4:	681b      	ldr	r3, [r3, #0]
 8005fb6:	4618      	mov	r0, r3
 8005fb8:	f7fa fa8a 	bl	80004d0 <__aeabi_f2d>
 8005fbc:	a354      	add	r3, pc, #336	; (adr r3, 8006110 <tank_startup_init_motor_position+0x288>)
 8005fbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005fc2:	f7fa fadd 	bl	8000580 <__aeabi_dmul>
 8005fc6:	4602      	mov	r2, r0
 8005fc8:	460b      	mov	r3, r1
 8005fca:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8005fce:	a352      	add	r3, pc, #328	; (adr r3, 8006118 <tank_startup_init_motor_position+0x290>)
 8005fd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005fd4:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8005fd8:	f7fa fad2 	bl	8000580 <__aeabi_dmul>
 8005fdc:	4602      	mov	r2, r0
 8005fde:	460b      	mov	r3, r1
 8005fe0:	e9c7 2302 	strd	r2, r3, [r7, #8]
 8005fe4:	687b      	ldr	r3, [r7, #4]
 8005fe6:	785b      	ldrb	r3, [r3, #1]
 8005fe8:	2b00      	cmp	r3, #0
 8005fea:	d01b      	beq.n	8006024 <tank_startup_init_motor_position+0x19c>
 8005fec:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8005ff0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8005ff4:	f7fa fac4 	bl	8000580 <__aeabi_dmul>
 8005ff8:	4602      	mov	r2, r0
 8005ffa:	460b      	mov	r3, r1
 8005ffc:	4610      	mov	r0, r2
 8005ffe:	4619      	mov	r1, r3
 8006000:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006004:	f7fa fbe6 	bl	80007d4 <__aeabi_ddiv>
 8006008:	4602      	mov	r2, r0
 800600a:	460b      	mov	r3, r1
 800600c:	4610      	mov	r0, r2
 800600e:	4619      	mov	r1, r3
 8006010:	a343      	add	r3, pc, #268	; (adr r3, 8006120 <tank_startup_init_motor_position+0x298>)
 8006012:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006016:	f7fa fab3 	bl	8000580 <__aeabi_dmul>
 800601a:	4602      	mov	r2, r0
 800601c:	460b      	mov	r3, r1
 800601e:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 8006022:	e021      	b.n	8006068 <tank_startup_init_motor_position+0x1e0>
 8006024:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8006028:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800602c:	f7fa faa8 	bl	8000580 <__aeabi_dmul>
 8006030:	4602      	mov	r2, r0
 8006032:	460b      	mov	r3, r1
 8006034:	4610      	mov	r0, r2
 8006036:	4619      	mov	r1, r3
 8006038:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800603c:	f7fa faa0 	bl	8000580 <__aeabi_dmul>
 8006040:	4602      	mov	r2, r0
 8006042:	460b      	mov	r3, r1
 8006044:	4614      	mov	r4, r2
 8006046:	461d      	mov	r5, r3
 8006048:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800604c:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8006050:	f7fa fa96 	bl	8000580 <__aeabi_dmul>
 8006054:	4602      	mov	r2, r0
 8006056:	460b      	mov	r3, r1
 8006058:	4620      	mov	r0, r4
 800605a:	4629      	mov	r1, r5
 800605c:	f7fa fbba 	bl	80007d4 <__aeabi_ddiv>
 8006060:	4602      	mov	r2, r0
 8006062:	460b      	mov	r3, r1
 8006064:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 8006068:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800606c:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8006070:	f7fa fbb0 	bl	80007d4 <__aeabi_ddiv>
 8006074:	4602      	mov	r2, r0
 8006076:	460b      	mov	r3, r1
 8006078:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800607c:	f7fa fd06 	bl	8000a8c <__aeabi_dcmpge>
 8006080:	4603      	mov	r3, r0
 8006082:	2b00      	cmp	r3, #0
 8006084:	d064      	beq.n	8006150 <tank_startup_init_motor_position+0x2c8>
 8006086:	a328      	add	r3, pc, #160	; (adr r3, 8006128 <tank_startup_init_motor_position+0x2a0>)
 8006088:	e9d3 2300 	ldrd	r2, r3, [r3]
 800608c:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 8006090:	f7fa fba0 	bl	80007d4 <__aeabi_ddiv>
 8006094:	4602      	mov	r2, r0
 8006096:	460b      	mov	r3, r1
 8006098:	4610      	mov	r0, r2
 800609a:	4619      	mov	r1, r3
 800609c:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80060a0:	f7fa fb98 	bl	80007d4 <__aeabi_ddiv>
 80060a4:	4602      	mov	r2, r0
 80060a6:	460b      	mov	r3, r1
 80060a8:	4614      	mov	r4, r2
 80060aa:	461d      	mov	r5, r3
 80060ac:	4b23      	ldr	r3, [pc, #140]	; (800613c <tank_startup_init_motor_position+0x2b4>)
 80060ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060b2:	f04f 0000 	mov.w	r0, #0
 80060b6:	4920      	ldr	r1, [pc, #128]	; (8006138 <tank_startup_init_motor_position+0x2b0>)
 80060b8:	f7fa fb8c 	bl	80007d4 <__aeabi_ddiv>
 80060bc:	4602      	mov	r2, r0
 80060be:	460b      	mov	r3, r1
 80060c0:	4610      	mov	r0, r2
 80060c2:	4619      	mov	r1, r3
 80060c4:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80060c8:	f7fa fb84 	bl	80007d4 <__aeabi_ddiv>
 80060cc:	4602      	mov	r2, r0
 80060ce:	460b      	mov	r3, r1
 80060d0:	ec43 2b17 	vmov	d7, r2, r3
 80060d4:	eeb0 0a47 	vmov.f32	s0, s14
 80060d8:	eef0 0a67 	vmov.f32	s1, s15
 80060dc:	f006 f83a 	bl	800c154 <sqrt>
 80060e0:	ec53 2b10 	vmov	r2, r3, d0
 80060e4:	4620      	mov	r0, r4
 80060e6:	4629      	mov	r1, r5
 80060e8:	f7fa fb74 	bl	80007d4 <__aeabi_ddiv>
 80060ec:	4602      	mov	r2, r0
 80060ee:	460b      	mov	r3, r1
 80060f0:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
 80060f4:	e070      	b.n	80061d8 <tank_startup_init_motor_position+0x350>
 80060f6:	bf00      	nop
 80060f8:	66666666 	.word	0x66666666
 80060fc:	402d6666 	.word	0x402d6666
 8006100:	ca8198f2 	.word	0xca8198f2
 8006104:	3f69f7f8 	.word	0x3f69f7f8
 8006108:	fe08aefb 	.word	0xfe08aefb
 800610c:	3f6d92b7 	.word	0x3f6d92b7
 8006110:	cccccccd 	.word	0xcccccccd
 8006114:	3ffccccc 	.word	0x3ffccccc
 8006118:	8f5c28f6 	.word	0x8f5c28f6
 800611c:	40a08dc2 	.word	0x40a08dc2
 8006120:	cccccccd 	.word	0xcccccccd
 8006124:	3ff4cccc 	.word	0x3ff4cccc
 8006128:	eb851eb8 	.word	0xeb851eb8
 800612c:	402b3851 	.word	0x402b3851
 8006130:	40720000 	.word	0x40720000
 8006134:	20000198 	.word	0x20000198
 8006138:	3ff00000 	.word	0x3ff00000
 800613c:	200001a0 	.word	0x200001a0
 8006140:	9abcaf48 	.word	0x9abcaf48
 8006144:	3e7ad7f2 	.word	0x3e7ad7f2
 8006148:	00000000 	.word	0x00000000
 800614c:	4072c000 	.word	0x4072c000
 8006150:	a373      	add	r3, pc, #460	; (adr r3, 8006320 <tank_startup_init_motor_position+0x498>)
 8006152:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006156:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800615a:	f7fa fb3b 	bl	80007d4 <__aeabi_ddiv>
 800615e:	4602      	mov	r2, r0
 8006160:	460b      	mov	r3, r1
 8006162:	4614      	mov	r4, r2
 8006164:	461d      	mov	r5, r3
 8006166:	ed9f 1b60 	vldr	d1, [pc, #384]	; 80062e8 <tank_startup_init_motor_position+0x460>
 800616a:	ed97 0b10 	vldr	d0, [r7, #64]	; 0x40
 800616e:	f005 ff43 	bl	800bff8 <pow>
 8006172:	ec59 8b10 	vmov	r8, r9, d0
 8006176:	ed9f 1b5c 	vldr	d1, [pc, #368]	; 80062e8 <tank_startup_init_motor_position+0x460>
 800617a:	ed97 0b0e 	vldr	d0, [r7, #56]	; 0x38
 800617e:	f005 ff3b 	bl	800bff8 <pow>
 8006182:	ec53 2b10 	vmov	r2, r3, d0
 8006186:	4640      	mov	r0, r8
 8006188:	4649      	mov	r1, r9
 800618a:	f7fa f841 	bl	8000210 <__aeabi_dsub>
 800618e:	4602      	mov	r2, r0
 8006190:	460b      	mov	r3, r1
 8006192:	4610      	mov	r0, r2
 8006194:	4619      	mov	r1, r3
 8006196:	4b5c      	ldr	r3, [pc, #368]	; (8006308 <tank_startup_init_motor_position+0x480>)
 8006198:	e9d3 2300 	ldrd	r2, r3, [r3]
 800619c:	f7fa fb1a 	bl	80007d4 <__aeabi_ddiv>
 80061a0:	4602      	mov	r2, r0
 80061a2:	460b      	mov	r3, r1
 80061a4:	4610      	mov	r0, r2
 80061a6:	4619      	mov	r1, r3
 80061a8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80061ac:	f7fa fb12 	bl	80007d4 <__aeabi_ddiv>
 80061b0:	4602      	mov	r2, r0
 80061b2:	460b      	mov	r3, r1
 80061b4:	ec43 2b17 	vmov	d7, r2, r3
 80061b8:	eeb0 0a47 	vmov.f32	s0, s14
 80061bc:	eef0 0a67 	vmov.f32	s1, s15
 80061c0:	f005 ffc8 	bl	800c154 <sqrt>
 80061c4:	ec53 2b10 	vmov	r2, r3, d0
 80061c8:	4620      	mov	r0, r4
 80061ca:	4629      	mov	r1, r5
 80061cc:	f7fa fb02 	bl	80007d4 <__aeabi_ddiv>
 80061d0:	4602      	mov	r2, r0
 80061d2:	460b      	mov	r3, r1
 80061d4:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
 80061d8:	4b4c      	ldr	r3, [pc, #304]	; (800630c <tank_startup_init_motor_position+0x484>)
 80061da:	681b      	ldr	r3, [r3, #0]
 80061dc:	4618      	mov	r0, r3
 80061de:	f7fa f977 	bl	80004d0 <__aeabi_f2d>
 80061e2:	4604      	mov	r4, r0
 80061e4:	460d      	mov	r5, r1
 80061e6:	ed9f 1b42 	vldr	d1, [pc, #264]	; 80062f0 <tank_startup_init_motor_position+0x468>
 80061ea:	ed97 0b18 	vldr	d0, [r7, #96]	; 0x60
 80061ee:	f005 ff03 	bl	800bff8 <pow>
 80061f2:	ec51 0b10 	vmov	r0, r1, d0
 80061f6:	4b46      	ldr	r3, [pc, #280]	; (8006310 <tank_startup_init_motor_position+0x488>)
 80061f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061fc:	f7fa f9c0 	bl	8000580 <__aeabi_dmul>
 8006200:	4602      	mov	r2, r0
 8006202:	460b      	mov	r3, r1
 8006204:	4690      	mov	r8, r2
 8006206:	4699      	mov	r9, r3
 8006208:	ed9f 1b3b 	vldr	d1, [pc, #236]	; 80062f8 <tank_startup_init_motor_position+0x470>
 800620c:	ed97 0b18 	vldr	d0, [r7, #96]	; 0x60
 8006210:	f005 fef2 	bl	800bff8 <pow>
 8006214:	ec51 0b10 	vmov	r0, r1, d0
 8006218:	4b3e      	ldr	r3, [pc, #248]	; (8006314 <tank_startup_init_motor_position+0x48c>)
 800621a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800621e:	f7fa f9af 	bl	8000580 <__aeabi_dmul>
 8006222:	4602      	mov	r2, r0
 8006224:	460b      	mov	r3, r1
 8006226:	4640      	mov	r0, r8
 8006228:	4649      	mov	r1, r9
 800622a:	f7f9 fff3 	bl	8000214 <__adddf3>
 800622e:	4602      	mov	r2, r0
 8006230:	460b      	mov	r3, r1
 8006232:	4690      	mov	r8, r2
 8006234:	4699      	mov	r9, r3
 8006236:	ed9f 1b2c 	vldr	d1, [pc, #176]	; 80062e8 <tank_startup_init_motor_position+0x460>
 800623a:	ed97 0b18 	vldr	d0, [r7, #96]	; 0x60
 800623e:	f005 fedb 	bl	800bff8 <pow>
 8006242:	ec51 0b10 	vmov	r0, r1, d0
 8006246:	4b34      	ldr	r3, [pc, #208]	; (8006318 <tank_startup_init_motor_position+0x490>)
 8006248:	e9d3 2300 	ldrd	r2, r3, [r3]
 800624c:	f7fa f998 	bl	8000580 <__aeabi_dmul>
 8006250:	4602      	mov	r2, r0
 8006252:	460b      	mov	r3, r1
 8006254:	4640      	mov	r0, r8
 8006256:	4649      	mov	r1, r9
 8006258:	f7f9 ffdc 	bl	8000214 <__adddf3>
 800625c:	4602      	mov	r2, r0
 800625e:	460b      	mov	r3, r1
 8006260:	4690      	mov	r8, r2
 8006262:	4699      	mov	r9, r3
 8006264:	4b2d      	ldr	r3, [pc, #180]	; (800631c <tank_startup_init_motor_position+0x494>)
 8006266:	e9d3 0100 	ldrd	r0, r1, [r3]
 800626a:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800626e:	f7fa f987 	bl	8000580 <__aeabi_dmul>
 8006272:	4602      	mov	r2, r0
 8006274:	460b      	mov	r3, r1
 8006276:	4640      	mov	r0, r8
 8006278:	4649      	mov	r1, r9
 800627a:	f7f9 ffcb 	bl	8000214 <__adddf3>
 800627e:	4602      	mov	r2, r0
 8006280:	460b      	mov	r3, r1
 8006282:	4620      	mov	r0, r4
 8006284:	4629      	mov	r1, r5
 8006286:	f7fa f97b 	bl	8000580 <__aeabi_dmul>
 800628a:	4602      	mov	r2, r0
 800628c:	460b      	mov	r3, r1
 800628e:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 8006292:	f04f 0200 	mov.w	r2, #0
 8006296:	f04f 0300 	mov.w	r3, #0
 800629a:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800629e:	f7fa fbe1 	bl	8000a64 <__aeabi_dcmplt>
 80062a2:	4603      	mov	r3, r0
 80062a4:	2b00      	cmp	r3, #0
 80062a6:	d005      	beq.n	80062b4 <tank_startup_init_motor_position+0x42c>
 80062a8:	f04f 0200 	mov.w	r2, #0
 80062ac:	f04f 0300 	mov.w	r3, #0
 80062b0:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 80062b4:	a312      	add	r3, pc, #72	; (adr r3, 8006300 <tank_startup_init_motor_position+0x478>)
 80062b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062ba:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80062be:	f7fa fbef 	bl	8000aa0 <__aeabi_dcmpgt>
 80062c2:	4603      	mov	r3, r0
 80062c4:	2b00      	cmp	r3, #0
 80062c6:	d100      	bne.n	80062ca <tank_startup_init_motor_position+0x442>
 80062c8:	e004      	b.n	80062d4 <tank_startup_init_motor_position+0x44c>
 80062ca:	a30d      	add	r3, pc, #52	; (adr r3, 8006300 <tank_startup_init_motor_position+0x478>)
 80062cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062d0:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 80062d4:	bf00      	nop
 80062d6:	3768      	adds	r7, #104	; 0x68
 80062d8:	46bd      	mov	sp, r7
 80062da:	ecbd 8b02 	vpop	{d8}
 80062de:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80062e2:	bf00      	nop
 80062e4:	f3af 8000 	nop.w
 80062e8:	00000000 	.word	0x00000000
 80062ec:	40000000 	.word	0x40000000
 80062f0:	00000000 	.word	0x00000000
 80062f4:	40100000 	.word	0x40100000
 80062f8:	00000000 	.word	0x00000000
 80062fc:	40080000 	.word	0x40080000
 8006300:	00000000 	.word	0x00000000
 8006304:	40a33800 	.word	0x40a33800
 8006308:	200001a0 	.word	0x200001a0
 800630c:	20000420 	.word	0x20000420
 8006310:	200001a8 	.word	0x200001a8
 8006314:	200001b0 	.word	0x200001b0
 8006318:	200001b8 	.word	0x200001b8
 800631c:	200001c0 	.word	0x200001c0
 8006320:	cccccccd 	.word	0xcccccccd
 8006324:	40300ccc 	.word	0x40300ccc

08006328 <set_vlv>:

extern TIM_HandleTypeDef TIM_MICROS;

// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

void set_vlv(uint8_t* data, uint8_t* status){
 8006328:	b580      	push	{r7, lr}
 800632a:	b084      	sub	sp, #16
 800632c:	af00      	add	r7, sp, #0
 800632e:	6078      	str	r0, [r7, #4]
 8006330:	6039      	str	r1, [r7, #0]

	uint32_t vlv_num = (data[3]<<24|data[2]<<16|data[1]<<8|data[0])/1;
 8006332:	687b      	ldr	r3, [r7, #4]
 8006334:	3303      	adds	r3, #3
 8006336:	781b      	ldrb	r3, [r3, #0]
 8006338:	061a      	lsls	r2, r3, #24
 800633a:	687b      	ldr	r3, [r7, #4]
 800633c:	3302      	adds	r3, #2
 800633e:	781b      	ldrb	r3, [r3, #0]
 8006340:	041b      	lsls	r3, r3, #16
 8006342:	431a      	orrs	r2, r3
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	3301      	adds	r3, #1
 8006348:	781b      	ldrb	r3, [r3, #0]
 800634a:	021b      	lsls	r3, r3, #8
 800634c:	4313      	orrs	r3, r2
 800634e:	687a      	ldr	r2, [r7, #4]
 8006350:	7812      	ldrb	r2, [r2, #0]
 8006352:	4313      	orrs	r3, r2
 8006354:	60fb      	str	r3, [r7, #12]
	uint8_t state = (data[4])/1;
 8006356:	687b      	ldr	r3, [r7, #4]
 8006358:	791b      	ldrb	r3, [r3, #4]
 800635a:	72fb      	strb	r3, [r7, #11]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	set_valve_channel(vlv_num, state);
 800635c:	7afb      	ldrb	r3, [r7, #11]
 800635e:	4619      	mov	r1, r3
 8006360:	68f8      	ldr	r0, [r7, #12]
 8006362:	f000 fe05 	bl	8006f70 <set_valve_channel>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006366:	bf00      	nop
 8006368:	3710      	adds	r7, #16
 800636a:	46bd      	mov	sp, r7
 800636c:	bd80      	pop	{r7, pc}
	...

08006370 <set_kp>:

void set_kp(uint8_t* data, uint8_t* status){
 8006370:	b590      	push	{r4, r7, lr}
 8006372:	b087      	sub	sp, #28
 8006374:	af00      	add	r7, sp, #0
 8006376:	6078      	str	r0, [r7, #4]
 8006378:	6039      	str	r1, [r7, #0]

	uint8_t motor_num = (data[0])/1;
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	781b      	ldrb	r3, [r3, #0]
 800637e:	75fb      	strb	r3, [r7, #23]
	double gain = (data[8]<<56|data[7]<<48|data[6]<<40|data[5]<<32|data[4]<<24|data[3]<<16|data[2]<<8|data[1])/100.0;
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	3308      	adds	r3, #8
 8006384:	781b      	ldrb	r3, [r3, #0]
 8006386:	461a      	mov	r2, r3
 8006388:	2338      	movs	r3, #56	; 0x38
 800638a:	409a      	lsls	r2, r3
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	3307      	adds	r3, #7
 8006390:	781b      	ldrb	r3, [r3, #0]
 8006392:	4619      	mov	r1, r3
 8006394:	2330      	movs	r3, #48	; 0x30
 8006396:	fa01 f303 	lsl.w	r3, r1, r3
 800639a:	431a      	orrs	r2, r3
 800639c:	687b      	ldr	r3, [r7, #4]
 800639e:	3306      	adds	r3, #6
 80063a0:	781b      	ldrb	r3, [r3, #0]
 80063a2:	4619      	mov	r1, r3
 80063a4:	2328      	movs	r3, #40	; 0x28
 80063a6:	fa01 f303 	lsl.w	r3, r1, r3
 80063aa:	431a      	orrs	r2, r3
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	3305      	adds	r3, #5
 80063b0:	781b      	ldrb	r3, [r3, #0]
 80063b2:	4619      	mov	r1, r3
 80063b4:	2320      	movs	r3, #32
 80063b6:	fa01 f303 	lsl.w	r3, r1, r3
 80063ba:	431a      	orrs	r2, r3
 80063bc:	687b      	ldr	r3, [r7, #4]
 80063be:	3304      	adds	r3, #4
 80063c0:	781b      	ldrb	r3, [r3, #0]
 80063c2:	061b      	lsls	r3, r3, #24
 80063c4:	431a      	orrs	r2, r3
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	3303      	adds	r3, #3
 80063ca:	781b      	ldrb	r3, [r3, #0]
 80063cc:	041b      	lsls	r3, r3, #16
 80063ce:	431a      	orrs	r2, r3
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	3302      	adds	r3, #2
 80063d4:	781b      	ldrb	r3, [r3, #0]
 80063d6:	021b      	lsls	r3, r3, #8
 80063d8:	4313      	orrs	r3, r2
 80063da:	687a      	ldr	r2, [r7, #4]
 80063dc:	3201      	adds	r2, #1
 80063de:	7812      	ldrb	r2, [r2, #0]
 80063e0:	4313      	orrs	r3, r2
 80063e2:	4618      	mov	r0, r3
 80063e4:	f7fa f862 	bl	80004ac <__aeabi_i2d>
 80063e8:	f04f 0200 	mov.w	r2, #0
 80063ec:	4b0e      	ldr	r3, [pc, #56]	; (8006428 <set_kp+0xb8>)
 80063ee:	f7fa f9f1 	bl	80007d4 <__aeabi_ddiv>
 80063f2:	4602      	mov	r2, r0
 80063f4:	460b      	mov	r3, r1
 80063f6:	e9c7 2302 	strd	r2, r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (motor_num < NUM_MOTORS) {
 80063fa:	7dfb      	ldrb	r3, [r7, #23]
 80063fc:	2b01      	cmp	r3, #1
 80063fe:	d80f      	bhi.n	8006420 <set_kp+0xb0>
		tanks[motor_num].K_p = gain;  // control
 8006400:	7dfc      	ldrb	r4, [r7, #23]
 8006402:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8006406:	f7fa fb8b 	bl	8000b20 <__aeabi_d2f>
 800640a:	4602      	mov	r2, r0
 800640c:	4907      	ldr	r1, [pc, #28]	; (800642c <set_kp+0xbc>)
 800640e:	4623      	mov	r3, r4
 8006410:	015b      	lsls	r3, r3, #5
 8006412:	4423      	add	r3, r4
 8006414:	009b      	lsls	r3, r3, #2
 8006416:	440b      	add	r3, r1
 8006418:	3358      	adds	r3, #88	; 0x58
 800641a:	601a      	str	r2, [r3, #0]
		save_nonvolatile_variables();
 800641c:	f7fb fdfc 	bl	8002018 <save_nonvolatile_variables>
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006420:	bf00      	nop
 8006422:	371c      	adds	r7, #28
 8006424:	46bd      	mov	sp, r7
 8006426:	bd90      	pop	{r4, r7, pc}
 8006428:	40590000 	.word	0x40590000
 800642c:	200004fc 	.word	0x200004fc

08006430 <set_ki>:

void set_ki(uint8_t* data, uint8_t* status){
 8006430:	b590      	push	{r4, r7, lr}
 8006432:	b087      	sub	sp, #28
 8006434:	af00      	add	r7, sp, #0
 8006436:	6078      	str	r0, [r7, #4]
 8006438:	6039      	str	r1, [r7, #0]

	uint8_t motor_num = (data[0])/1;
 800643a:	687b      	ldr	r3, [r7, #4]
 800643c:	781b      	ldrb	r3, [r3, #0]
 800643e:	75fb      	strb	r3, [r7, #23]
	double gain = (data[8]<<56|data[7]<<48|data[6]<<40|data[5]<<32|data[4]<<24|data[3]<<16|data[2]<<8|data[1])/100.0;
 8006440:	687b      	ldr	r3, [r7, #4]
 8006442:	3308      	adds	r3, #8
 8006444:	781b      	ldrb	r3, [r3, #0]
 8006446:	461a      	mov	r2, r3
 8006448:	2338      	movs	r3, #56	; 0x38
 800644a:	409a      	lsls	r2, r3
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	3307      	adds	r3, #7
 8006450:	781b      	ldrb	r3, [r3, #0]
 8006452:	4619      	mov	r1, r3
 8006454:	2330      	movs	r3, #48	; 0x30
 8006456:	fa01 f303 	lsl.w	r3, r1, r3
 800645a:	431a      	orrs	r2, r3
 800645c:	687b      	ldr	r3, [r7, #4]
 800645e:	3306      	adds	r3, #6
 8006460:	781b      	ldrb	r3, [r3, #0]
 8006462:	4619      	mov	r1, r3
 8006464:	2328      	movs	r3, #40	; 0x28
 8006466:	fa01 f303 	lsl.w	r3, r1, r3
 800646a:	431a      	orrs	r2, r3
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	3305      	adds	r3, #5
 8006470:	781b      	ldrb	r3, [r3, #0]
 8006472:	4619      	mov	r1, r3
 8006474:	2320      	movs	r3, #32
 8006476:	fa01 f303 	lsl.w	r3, r1, r3
 800647a:	431a      	orrs	r2, r3
 800647c:	687b      	ldr	r3, [r7, #4]
 800647e:	3304      	adds	r3, #4
 8006480:	781b      	ldrb	r3, [r3, #0]
 8006482:	061b      	lsls	r3, r3, #24
 8006484:	431a      	orrs	r2, r3
 8006486:	687b      	ldr	r3, [r7, #4]
 8006488:	3303      	adds	r3, #3
 800648a:	781b      	ldrb	r3, [r3, #0]
 800648c:	041b      	lsls	r3, r3, #16
 800648e:	431a      	orrs	r2, r3
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	3302      	adds	r3, #2
 8006494:	781b      	ldrb	r3, [r3, #0]
 8006496:	021b      	lsls	r3, r3, #8
 8006498:	4313      	orrs	r3, r2
 800649a:	687a      	ldr	r2, [r7, #4]
 800649c:	3201      	adds	r2, #1
 800649e:	7812      	ldrb	r2, [r2, #0]
 80064a0:	4313      	orrs	r3, r2
 80064a2:	4618      	mov	r0, r3
 80064a4:	f7fa f802 	bl	80004ac <__aeabi_i2d>
 80064a8:	f04f 0200 	mov.w	r2, #0
 80064ac:	4b0e      	ldr	r3, [pc, #56]	; (80064e8 <set_ki+0xb8>)
 80064ae:	f7fa f991 	bl	80007d4 <__aeabi_ddiv>
 80064b2:	4602      	mov	r2, r0
 80064b4:	460b      	mov	r3, r1
 80064b6:	e9c7 2302 	strd	r2, r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (motor_num < NUM_MOTORS) {
 80064ba:	7dfb      	ldrb	r3, [r7, #23]
 80064bc:	2b01      	cmp	r3, #1
 80064be:	d80f      	bhi.n	80064e0 <set_ki+0xb0>
		tanks[motor_num].K_i = gain;  // control
 80064c0:	7dfc      	ldrb	r4, [r7, #23]
 80064c2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80064c6:	f7fa fb2b 	bl	8000b20 <__aeabi_d2f>
 80064ca:	4602      	mov	r2, r0
 80064cc:	4907      	ldr	r1, [pc, #28]	; (80064ec <set_ki+0xbc>)
 80064ce:	4623      	mov	r3, r4
 80064d0:	015b      	lsls	r3, r3, #5
 80064d2:	4423      	add	r3, r4
 80064d4:	009b      	lsls	r3, r3, #2
 80064d6:	440b      	add	r3, r1
 80064d8:	335c      	adds	r3, #92	; 0x5c
 80064da:	601a      	str	r2, [r3, #0]
		save_nonvolatile_variables();
 80064dc:	f7fb fd9c 	bl	8002018 <save_nonvolatile_variables>
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 80064e0:	bf00      	nop
 80064e2:	371c      	adds	r7, #28
 80064e4:	46bd      	mov	sp, r7
 80064e6:	bd90      	pop	{r4, r7, pc}
 80064e8:	40590000 	.word	0x40590000
 80064ec:	200004fc 	.word	0x200004fc

080064f0 <set_kd>:

void set_kd(uint8_t* data, uint8_t* status){
 80064f0:	b590      	push	{r4, r7, lr}
 80064f2:	b087      	sub	sp, #28
 80064f4:	af00      	add	r7, sp, #0
 80064f6:	6078      	str	r0, [r7, #4]
 80064f8:	6039      	str	r1, [r7, #0]

	uint8_t motor_num = (data[0])/1;
 80064fa:	687b      	ldr	r3, [r7, #4]
 80064fc:	781b      	ldrb	r3, [r3, #0]
 80064fe:	75fb      	strb	r3, [r7, #23]
	double gain = (data[8]<<56|data[7]<<48|data[6]<<40|data[5]<<32|data[4]<<24|data[3]<<16|data[2]<<8|data[1])/100.0;
 8006500:	687b      	ldr	r3, [r7, #4]
 8006502:	3308      	adds	r3, #8
 8006504:	781b      	ldrb	r3, [r3, #0]
 8006506:	461a      	mov	r2, r3
 8006508:	2338      	movs	r3, #56	; 0x38
 800650a:	409a      	lsls	r2, r3
 800650c:	687b      	ldr	r3, [r7, #4]
 800650e:	3307      	adds	r3, #7
 8006510:	781b      	ldrb	r3, [r3, #0]
 8006512:	4619      	mov	r1, r3
 8006514:	2330      	movs	r3, #48	; 0x30
 8006516:	fa01 f303 	lsl.w	r3, r1, r3
 800651a:	431a      	orrs	r2, r3
 800651c:	687b      	ldr	r3, [r7, #4]
 800651e:	3306      	adds	r3, #6
 8006520:	781b      	ldrb	r3, [r3, #0]
 8006522:	4619      	mov	r1, r3
 8006524:	2328      	movs	r3, #40	; 0x28
 8006526:	fa01 f303 	lsl.w	r3, r1, r3
 800652a:	431a      	orrs	r2, r3
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	3305      	adds	r3, #5
 8006530:	781b      	ldrb	r3, [r3, #0]
 8006532:	4619      	mov	r1, r3
 8006534:	2320      	movs	r3, #32
 8006536:	fa01 f303 	lsl.w	r3, r1, r3
 800653a:	431a      	orrs	r2, r3
 800653c:	687b      	ldr	r3, [r7, #4]
 800653e:	3304      	adds	r3, #4
 8006540:	781b      	ldrb	r3, [r3, #0]
 8006542:	061b      	lsls	r3, r3, #24
 8006544:	431a      	orrs	r2, r3
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	3303      	adds	r3, #3
 800654a:	781b      	ldrb	r3, [r3, #0]
 800654c:	041b      	lsls	r3, r3, #16
 800654e:	431a      	orrs	r2, r3
 8006550:	687b      	ldr	r3, [r7, #4]
 8006552:	3302      	adds	r3, #2
 8006554:	781b      	ldrb	r3, [r3, #0]
 8006556:	021b      	lsls	r3, r3, #8
 8006558:	4313      	orrs	r3, r2
 800655a:	687a      	ldr	r2, [r7, #4]
 800655c:	3201      	adds	r2, #1
 800655e:	7812      	ldrb	r2, [r2, #0]
 8006560:	4313      	orrs	r3, r2
 8006562:	4618      	mov	r0, r3
 8006564:	f7f9 ffa2 	bl	80004ac <__aeabi_i2d>
 8006568:	f04f 0200 	mov.w	r2, #0
 800656c:	4b0e      	ldr	r3, [pc, #56]	; (80065a8 <set_kd+0xb8>)
 800656e:	f7fa f931 	bl	80007d4 <__aeabi_ddiv>
 8006572:	4602      	mov	r2, r0
 8006574:	460b      	mov	r3, r1
 8006576:	e9c7 2302 	strd	r2, r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (motor_num < NUM_MOTORS) {
 800657a:	7dfb      	ldrb	r3, [r7, #23]
 800657c:	2b01      	cmp	r3, #1
 800657e:	d80f      	bhi.n	80065a0 <set_kd+0xb0>
		tanks[motor_num].K_d = gain;
 8006580:	7dfc      	ldrb	r4, [r7, #23]
 8006582:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8006586:	f7fa facb 	bl	8000b20 <__aeabi_d2f>
 800658a:	4602      	mov	r2, r0
 800658c:	4907      	ldr	r1, [pc, #28]	; (80065ac <set_kd+0xbc>)
 800658e:	4623      	mov	r3, r4
 8006590:	015b      	lsls	r3, r3, #5
 8006592:	4423      	add	r3, r4
 8006594:	009b      	lsls	r3, r3, #2
 8006596:	440b      	add	r3, r1
 8006598:	3360      	adds	r3, #96	; 0x60
 800659a:	601a      	str	r2, [r3, #0]
		save_nonvolatile_variables();
 800659c:	f7fb fd3c 	bl	8002018 <save_nonvolatile_variables>
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 80065a0:	bf00      	nop
 80065a2:	371c      	adds	r7, #28
 80065a4:	46bd      	mov	sp, r7
 80065a6:	bd90      	pop	{r4, r7, pc}
 80065a8:	40590000 	.word	0x40590000
 80065ac:	200004fc 	.word	0x200004fc

080065b0 <set_state>:

void set_state(uint8_t* data, uint8_t* status){
 80065b0:	b580      	push	{r7, lr}
 80065b2:	b084      	sub	sp, #16
 80065b4:	af00      	add	r7, sp, #0
 80065b6:	6078      	str	r0, [r7, #4]
 80065b8:	6039      	str	r1, [r7, #0]

	uint8_t next_state = (data[0])/1;
 80065ba:	687b      	ldr	r3, [r7, #4]
 80065bc:	781b      	ldrb	r3, [r3, #0]
 80065be:	73fb      	strb	r3, [r7, #15]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	manual_state_transition(next_state);
 80065c0:	7bfb      	ldrb	r3, [r7, #15]
 80065c2:	4618      	mov	r0, r3
 80065c4:	f7fa fcf0 	bl	8000fa8 <manual_state_transition>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 80065c8:	bf00      	nop
 80065ca:	3710      	adds	r7, #16
 80065cc:	46bd      	mov	sp, r7
 80065ce:	bd80      	pop	{r7, pc}

080065d0 <download_flash>:

void download_flash(uint8_t* data, uint8_t* status){
 80065d0:	b580      	push	{r7, lr}
 80065d2:	b082      	sub	sp, #8
 80065d4:	af00      	add	r7, sp, #0
 80065d6:	6078      	str	r0, [r7, #4]
 80065d8:	6039      	str	r1, [r7, #0]

	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	transmit_flash_data();
 80065da:	f7ff f869 	bl	80056b0 <transmit_flash_data>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 80065de:	bf00      	nop
 80065e0:	3708      	adds	r7, #8
 80065e2:	46bd      	mov	sp, r7
 80065e4:	bd80      	pop	{r7, pc}
	...

080065e8 <wipe_flash>:

void wipe_flash(uint8_t* data, uint8_t* status){
 80065e8:	b580      	push	{r7, lr}
 80065ea:	b082      	sub	sp, #8
 80065ec:	af00      	add	r7, sp, #0
 80065ee:	6078      	str	r0, [r7, #4]
 80065f0:	6039      	str	r1, [r7, #0]

	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	erase_flash(&flash);
 80065f2:	4803      	ldr	r0, [pc, #12]	; (8006600 <wipe_flash+0x18>)
 80065f4:	f002 f9a7 	bl	8008946 <erase_flash>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 80065f8:	bf00      	nop
 80065fa:	3708      	adds	r7, #8
 80065fc:	46bd      	mov	sp, r7
 80065fe:	bd80      	pop	{r7, pc}
 8006600:	20000ec4 	.word	0x20000ec4

08006604 <start_logging>:

void start_logging(uint8_t* data, uint8_t* status){
 8006604:	b580      	push	{r7, lr}
 8006606:	b082      	sub	sp, #8
 8006608:	af00      	add	r7, sp, #0
 800660a:	6078      	str	r0, [r7, #4]
 800660c:	6039      	str	r1, [r7, #0]

	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	LOGGING_ACTIVE = 1;
 800660e:	4b07      	ldr	r3, [pc, #28]	; (800662c <start_logging+0x28>)
 8006610:	2201      	movs	r2, #1
 8006612:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(LED_TELEM_PORT, LED_TELEM_PIN, GPIO_PIN_SET);
 8006614:	2201      	movs	r2, #1
 8006616:	2101      	movs	r1, #1
 8006618:	4805      	ldr	r0, [pc, #20]	; (8006630 <start_logging+0x2c>)
 800661a:	f002 fdf9 	bl	8009210 <HAL_GPIO_WritePin>
	add_test_delimiter(&flash);
 800661e:	4805      	ldr	r0, [pc, #20]	; (8006634 <start_logging+0x30>)
 8006620:	f002 fa2e 	bl	8008a80 <add_test_delimiter>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006624:	bf00      	nop
 8006626:	3708      	adds	r7, #8
 8006628:	46bd      	mov	sp, r7
 800662a:	bd80      	pop	{r7, pc}
 800662c:	20000430 	.word	0x20000430
 8006630:	40020800 	.word	0x40020800
 8006634:	20000ec4 	.word	0x20000ec4

08006638 <stop_logging>:

void stop_logging(uint8_t* data, uint8_t* status){
 8006638:	b580      	push	{r7, lr}
 800663a:	b082      	sub	sp, #8
 800663c:	af00      	add	r7, sp, #0
 800663e:	6078      	str	r0, [r7, #4]
 8006640:	6039      	str	r1, [r7, #0]

	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	LOGGING_ACTIVE = 0;
 8006642:	4b07      	ldr	r3, [pc, #28]	; (8006660 <stop_logging+0x28>)
 8006644:	2200      	movs	r2, #0
 8006646:	701a      	strb	r2, [r3, #0]
	finish_flash_write(&flash);
 8006648:	4806      	ldr	r0, [pc, #24]	; (8006664 <stop_logging+0x2c>)
 800664a:	f002 f909 	bl	8008860 <finish_flash_write>
	HAL_GPIO_WritePin(LED_FLASH_LOGGING_PORT, LED_FLASH_LOGGING_PIN, GPIO_PIN_RESET);
 800664e:	2200      	movs	r2, #0
 8006650:	2102      	movs	r1, #2
 8006652:	4805      	ldr	r0, [pc, #20]	; (8006668 <stop_logging+0x30>)
 8006654:	f002 fddc 	bl	8009210 <HAL_GPIO_WritePin>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006658:	bf00      	nop
 800665a:	3708      	adds	r7, #8
 800665c:	46bd      	mov	sp, r7
 800665e:	bd80      	pop	{r7, pc}
 8006660:	20000430 	.word	0x20000430
 8006664:	20000ec4 	.word	0x20000ec4
 8006668:	40020800 	.word	0x40020800

0800666c <set_stepper_pos>:

void set_stepper_pos(uint8_t* data, uint8_t* status){
 800666c:	b580      	push	{r7, lr}
 800666e:	b084      	sub	sp, #16
 8006670:	af00      	add	r7, sp, #0
 8006672:	6078      	str	r0, [r7, #4]
 8006674:	6039      	str	r1, [r7, #0]

	uint8_t motor_num = (data[0])/1;
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	781b      	ldrb	r3, [r3, #0]
 800667a:	73fb      	strb	r3, [r7, #15]
	float position = (data[4]<<24|data[3]<<16|data[2]<<8|data[1])/100.0;
 800667c:	687b      	ldr	r3, [r7, #4]
 800667e:	3304      	adds	r3, #4
 8006680:	781b      	ldrb	r3, [r3, #0]
 8006682:	061a      	lsls	r2, r3, #24
 8006684:	687b      	ldr	r3, [r7, #4]
 8006686:	3303      	adds	r3, #3
 8006688:	781b      	ldrb	r3, [r3, #0]
 800668a:	041b      	lsls	r3, r3, #16
 800668c:	431a      	orrs	r2, r3
 800668e:	687b      	ldr	r3, [r7, #4]
 8006690:	3302      	adds	r3, #2
 8006692:	781b      	ldrb	r3, [r3, #0]
 8006694:	021b      	lsls	r3, r3, #8
 8006696:	4313      	orrs	r3, r2
 8006698:	687a      	ldr	r2, [r7, #4]
 800669a:	3201      	adds	r2, #1
 800669c:	7812      	ldrb	r2, [r2, #0]
 800669e:	4313      	orrs	r3, r2
 80066a0:	4618      	mov	r0, r3
 80066a2:	f7f9 ff03 	bl	80004ac <__aeabi_i2d>
 80066a6:	f04f 0200 	mov.w	r2, #0
 80066aa:	4b0f      	ldr	r3, [pc, #60]	; (80066e8 <set_stepper_pos+0x7c>)
 80066ac:	f7fa f892 	bl	80007d4 <__aeabi_ddiv>
 80066b0:	4602      	mov	r2, r0
 80066b2:	460b      	mov	r3, r1
 80066b4:	4610      	mov	r0, r2
 80066b6:	4619      	mov	r1, r3
 80066b8:	f7fa fa32 	bl	8000b20 <__aeabi_d2f>
 80066bc:	4603      	mov	r3, r0
 80066be:	60bb      	str	r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (motor_num < NUM_MOTORS) {
 80066c0:	7bfb      	ldrb	r3, [r7, #15]
 80066c2:	2b01      	cmp	r3, #1
 80066c4:	d80c      	bhi.n	80066e0 <set_stepper_pos+0x74>
		L6470_goto_motor_pos(&(tanks[motor_num].motor), position);
 80066c6:	7bfa      	ldrb	r2, [r7, #15]
 80066c8:	4613      	mov	r3, r2
 80066ca:	015b      	lsls	r3, r3, #5
 80066cc:	4413      	add	r3, r2
 80066ce:	009b      	lsls	r3, r3, #2
 80066d0:	4a06      	ldr	r2, [pc, #24]	; (80066ec <set_stepper_pos+0x80>)
 80066d2:	4413      	add	r3, r2
 80066d4:	3304      	adds	r3, #4
 80066d6:	ed97 0a02 	vldr	s0, [r7, #8]
 80066da:	4618      	mov	r0, r3
 80066dc:	f000 fe95 	bl	800740a <L6470_goto_motor_pos>
		// TODO: update packet values
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 80066e0:	bf00      	nop
 80066e2:	3710      	adds	r7, #16
 80066e4:	46bd      	mov	sp, r7
 80066e6:	bd80      	pop	{r7, pc}
 80066e8:	40590000 	.word	0x40590000
 80066ec:	200004fc 	.word	0x200004fc

080066f0 <set_stepper_zero>:

void set_stepper_zero(uint8_t* data, uint8_t* status){
 80066f0:	b580      	push	{r7, lr}
 80066f2:	b084      	sub	sp, #16
 80066f4:	af00      	add	r7, sp, #0
 80066f6:	6078      	str	r0, [r7, #4]
 80066f8:	6039      	str	r1, [r7, #0]

	uint8_t motor_num = (data[0])/1;
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	781b      	ldrb	r3, [r3, #0]
 80066fe:	73fb      	strb	r3, [r7, #15]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (motor_num < NUM_MOTORS) {
 8006700:	7bfb      	ldrb	r3, [r7, #15]
 8006702:	2b01      	cmp	r3, #1
 8006704:	d80a      	bhi.n	800671c <set_stepper_zero+0x2c>
		L6470_zero_motor(&(tanks[motor_num].motor));
 8006706:	7bfa      	ldrb	r2, [r7, #15]
 8006708:	4613      	mov	r3, r2
 800670a:	015b      	lsls	r3, r3, #5
 800670c:	4413      	add	r3, r2
 800670e:	009b      	lsls	r3, r3, #2
 8006710:	4a04      	ldr	r2, [pc, #16]	; (8006724 <set_stepper_zero+0x34>)
 8006712:	4413      	add	r3, r2
 8006714:	3304      	adds	r3, #4
 8006716:	4618      	mov	r0, r3
 8006718:	f000 fed0 	bl	80074bc <L6470_zero_motor>
		// TODO: update position + packet values
	}

	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 800671c:	bf00      	nop
 800671e:	3710      	adds	r7, #16
 8006720:	46bd      	mov	sp, r7
 8006722:	bd80      	pop	{r7, pc}
 8006724:	200004fc 	.word	0x200004fc

08006728 <set_control_target_pressure>:

void set_control_target_pressure(uint8_t* data, uint8_t* status){
 8006728:	b580      	push	{r7, lr}
 800672a:	b084      	sub	sp, #16
 800672c:	af00      	add	r7, sp, #0
 800672e:	6078      	str	r0, [r7, #4]
 8006730:	6039      	str	r1, [r7, #0]

	uint8_t tank_num = (data[0])/1;
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	781b      	ldrb	r3, [r3, #0]
 8006736:	73fb      	strb	r3, [r7, #15]
	float target_pressure = (data[4]<<24|data[3]<<16|data[2]<<8|data[1])/1000.0;
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	3304      	adds	r3, #4
 800673c:	781b      	ldrb	r3, [r3, #0]
 800673e:	061a      	lsls	r2, r3, #24
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	3303      	adds	r3, #3
 8006744:	781b      	ldrb	r3, [r3, #0]
 8006746:	041b      	lsls	r3, r3, #16
 8006748:	431a      	orrs	r2, r3
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	3302      	adds	r3, #2
 800674e:	781b      	ldrb	r3, [r3, #0]
 8006750:	021b      	lsls	r3, r3, #8
 8006752:	4313      	orrs	r3, r2
 8006754:	687a      	ldr	r2, [r7, #4]
 8006756:	3201      	adds	r2, #1
 8006758:	7812      	ldrb	r2, [r2, #0]
 800675a:	4313      	orrs	r3, r2
 800675c:	4618      	mov	r0, r3
 800675e:	f7f9 fea5 	bl	80004ac <__aeabi_i2d>
 8006762:	f04f 0200 	mov.w	r2, #0
 8006766:	4b0f      	ldr	r3, [pc, #60]	; (80067a4 <set_control_target_pressure+0x7c>)
 8006768:	f7fa f834 	bl	80007d4 <__aeabi_ddiv>
 800676c:	4602      	mov	r2, r0
 800676e:	460b      	mov	r3, r1
 8006770:	4610      	mov	r0, r2
 8006772:	4619      	mov	r1, r3
 8006774:	f7fa f9d4 	bl	8000b20 <__aeabi_d2f>
 8006778:	4603      	mov	r3, r0
 800677a:	60bb      	str	r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (tank_num < NUM_TANKS) {
 800677c:	7bfb      	ldrb	r3, [r7, #15]
 800677e:	2b01      	cmp	r3, #1
 8006780:	d80b      	bhi.n	800679a <set_control_target_pressure+0x72>
		tanks[tank_num].target_pres = target_pressure;
 8006782:	7bfa      	ldrb	r2, [r7, #15]
 8006784:	4908      	ldr	r1, [pc, #32]	; (80067a8 <set_control_target_pressure+0x80>)
 8006786:	4613      	mov	r3, r2
 8006788:	015b      	lsls	r3, r3, #5
 800678a:	4413      	add	r3, r2
 800678c:	009b      	lsls	r3, r3, #2
 800678e:	440b      	add	r3, r1
 8006790:	3340      	adds	r3, #64	; 0x40
 8006792:	68ba      	ldr	r2, [r7, #8]
 8006794:	601a      	str	r2, [r3, #0]
		save_nonvolatile_variables();
 8006796:	f7fb fc3f 	bl	8002018 <save_nonvolatile_variables>
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 800679a:	bf00      	nop
 800679c:	3710      	adds	r7, #16
 800679e:	46bd      	mov	sp, r7
 80067a0:	bd80      	pop	{r7, pc}
 80067a2:	bf00      	nop
 80067a4:	408f4000 	.word	0x408f4000
 80067a8:	200004fc 	.word	0x200004fc

080067ac <ambientize_pressure_transducers>:

void ambientize_pressure_transducers(uint8_t* data, uint8_t* status){
 80067ac:	b580      	push	{r7, lr}
 80067ae:	b084      	sub	sp, #16
 80067b0:	af00      	add	r7, sp, #0
 80067b2:	6078      	str	r0, [r7, #4]
 80067b4:	6039      	str	r1, [r7, #0]

	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 80067b6:	2300      	movs	r3, #0
 80067b8:	73fb      	strb	r3, [r7, #15]
 80067ba:	e016      	b.n	80067ea <ambientize_pressure_transducers+0x3e>
		pt_ambients[i] = pressure[i] + pt_ambients[i];
 80067bc:	7bfb      	ldrb	r3, [r7, #15]
 80067be:	4a0f      	ldr	r2, [pc, #60]	; (80067fc <ambientize_pressure_transducers+0x50>)
 80067c0:	009b      	lsls	r3, r3, #2
 80067c2:	4413      	add	r3, r2
 80067c4:	ed93 7a00 	vldr	s14, [r3]
 80067c8:	7bfb      	ldrb	r3, [r7, #15]
 80067ca:	4a0d      	ldr	r2, [pc, #52]	; (8006800 <ambientize_pressure_transducers+0x54>)
 80067cc:	009b      	lsls	r3, r3, #2
 80067ce:	4413      	add	r3, r2
 80067d0:	edd3 7a00 	vldr	s15, [r3]
 80067d4:	7bfb      	ldrb	r3, [r7, #15]
 80067d6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80067da:	4a09      	ldr	r2, [pc, #36]	; (8006800 <ambientize_pressure_transducers+0x54>)
 80067dc:	009b      	lsls	r3, r3, #2
 80067de:	4413      	add	r3, r2
 80067e0:	edc3 7a00 	vstr	s15, [r3]
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 80067e4:	7bfb      	ldrb	r3, [r7, #15]
 80067e6:	3301      	adds	r3, #1
 80067e8:	73fb      	strb	r3, [r7, #15]
 80067ea:	7bfb      	ldrb	r3, [r7, #15]
 80067ec:	2b13      	cmp	r3, #19
 80067ee:	d9e5      	bls.n	80067bc <ambientize_pressure_transducers+0x10>
	}
	save_nonvolatile_variables();
 80067f0:	f7fb fc12 	bl	8002018 <save_nonvolatile_variables>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 80067f4:	bf00      	nop
 80067f6:	3710      	adds	r7, #16
 80067f8:	46bd      	mov	sp, r7
 80067fa:	bd80      	pop	{r7, pc}
 80067fc:	20000434 	.word	0x20000434
 8006800:	200002a8 	.word	0x200002a8

08006804 <set_low_toggle_percent>:

void set_low_toggle_percent(uint8_t* data, uint8_t* status){
 8006804:	b580      	push	{r7, lr}
 8006806:	b084      	sub	sp, #16
 8006808:	af00      	add	r7, sp, #0
 800680a:	6078      	str	r0, [r7, #4]
 800680c:	6039      	str	r1, [r7, #0]

	uint8_t tank_num = (data[0])/1;
 800680e:	687b      	ldr	r3, [r7, #4]
 8006810:	781b      	ldrb	r3, [r3, #0]
 8006812:	73fb      	strb	r3, [r7, #15]
	float lower_threshold_pct = (data[4]<<24|data[3]<<16|data[2]<<8|data[1])/1000.0;
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	3304      	adds	r3, #4
 8006818:	781b      	ldrb	r3, [r3, #0]
 800681a:	061a      	lsls	r2, r3, #24
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	3303      	adds	r3, #3
 8006820:	781b      	ldrb	r3, [r3, #0]
 8006822:	041b      	lsls	r3, r3, #16
 8006824:	431a      	orrs	r2, r3
 8006826:	687b      	ldr	r3, [r7, #4]
 8006828:	3302      	adds	r3, #2
 800682a:	781b      	ldrb	r3, [r3, #0]
 800682c:	021b      	lsls	r3, r3, #8
 800682e:	4313      	orrs	r3, r2
 8006830:	687a      	ldr	r2, [r7, #4]
 8006832:	3201      	adds	r2, #1
 8006834:	7812      	ldrb	r2, [r2, #0]
 8006836:	4313      	orrs	r3, r2
 8006838:	4618      	mov	r0, r3
 800683a:	f7f9 fe37 	bl	80004ac <__aeabi_i2d>
 800683e:	f04f 0200 	mov.w	r2, #0
 8006842:	4b16      	ldr	r3, [pc, #88]	; (800689c <set_low_toggle_percent+0x98>)
 8006844:	f7f9 ffc6 	bl	80007d4 <__aeabi_ddiv>
 8006848:	4602      	mov	r2, r0
 800684a:	460b      	mov	r3, r1
 800684c:	4610      	mov	r0, r2
 800684e:	4619      	mov	r1, r3
 8006850:	f7fa f966 	bl	8000b20 <__aeabi_d2f>
 8006854:	4603      	mov	r3, r0
 8006856:	60bb      	str	r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (tank_num < NUM_TANKS) {
 8006858:	7bfb      	ldrb	r3, [r7, #15]
 800685a:	2b01      	cmp	r3, #1
 800685c:	d819      	bhi.n	8006892 <set_low_toggle_percent+0x8e>
		tanks[tank_num].PID_ctrl_vlv_low_pres = tanks[tank_num].target_pres
 800685e:	7bfa      	ldrb	r2, [r7, #15]
 8006860:	490f      	ldr	r1, [pc, #60]	; (80068a0 <set_low_toggle_percent+0x9c>)
 8006862:	4613      	mov	r3, r2
 8006864:	015b      	lsls	r3, r3, #5
 8006866:	4413      	add	r3, r2
 8006868:	009b      	lsls	r3, r3, #2
 800686a:	440b      	add	r3, r1
 800686c:	3340      	adds	r3, #64	; 0x40
 800686e:	ed93 7a00 	vldr	s14, [r3]
 8006872:	7bfa      	ldrb	r2, [r7, #15]
				* lower_threshold_pct;
 8006874:	edd7 7a02 	vldr	s15, [r7, #8]
 8006878:	ee67 7a27 	vmul.f32	s15, s14, s15
		tanks[tank_num].PID_ctrl_vlv_low_pres = tanks[tank_num].target_pres
 800687c:	4908      	ldr	r1, [pc, #32]	; (80068a0 <set_low_toggle_percent+0x9c>)
 800687e:	4613      	mov	r3, r2
 8006880:	015b      	lsls	r3, r3, #5
 8006882:	4413      	add	r3, r2
 8006884:	009b      	lsls	r3, r3, #2
 8006886:	440b      	add	r3, r1
 8006888:	334c      	adds	r3, #76	; 0x4c
 800688a:	edc3 7a00 	vstr	s15, [r3]
		save_nonvolatile_variables();
 800688e:	f7fb fbc3 	bl	8002018 <save_nonvolatile_variables>
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006892:	bf00      	nop
 8006894:	3710      	adds	r7, #16
 8006896:	46bd      	mov	sp, r7
 8006898:	bd80      	pop	{r7, pc}
 800689a:	bf00      	nop
 800689c:	408f4000 	.word	0x408f4000
 80068a0:	200004fc 	.word	0x200004fc

080068a4 <set_high_toggle_percent>:

void set_high_toggle_percent(uint8_t* data, uint8_t* status){
 80068a4:	b580      	push	{r7, lr}
 80068a6:	b084      	sub	sp, #16
 80068a8:	af00      	add	r7, sp, #0
 80068aa:	6078      	str	r0, [r7, #4]
 80068ac:	6039      	str	r1, [r7, #0]

	uint8_t tank_num = (data[0])/1;
 80068ae:	687b      	ldr	r3, [r7, #4]
 80068b0:	781b      	ldrb	r3, [r3, #0]
 80068b2:	73fb      	strb	r3, [r7, #15]
	float upper_threshold_pct = (data[4]<<24|data[3]<<16|data[2]<<8|data[1])/1000.0;
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	3304      	adds	r3, #4
 80068b8:	781b      	ldrb	r3, [r3, #0]
 80068ba:	061a      	lsls	r2, r3, #24
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	3303      	adds	r3, #3
 80068c0:	781b      	ldrb	r3, [r3, #0]
 80068c2:	041b      	lsls	r3, r3, #16
 80068c4:	431a      	orrs	r2, r3
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	3302      	adds	r3, #2
 80068ca:	781b      	ldrb	r3, [r3, #0]
 80068cc:	021b      	lsls	r3, r3, #8
 80068ce:	4313      	orrs	r3, r2
 80068d0:	687a      	ldr	r2, [r7, #4]
 80068d2:	3201      	adds	r2, #1
 80068d4:	7812      	ldrb	r2, [r2, #0]
 80068d6:	4313      	orrs	r3, r2
 80068d8:	4618      	mov	r0, r3
 80068da:	f7f9 fde7 	bl	80004ac <__aeabi_i2d>
 80068de:	f04f 0200 	mov.w	r2, #0
 80068e2:	4b16      	ldr	r3, [pc, #88]	; (800693c <set_high_toggle_percent+0x98>)
 80068e4:	f7f9 ff76 	bl	80007d4 <__aeabi_ddiv>
 80068e8:	4602      	mov	r2, r0
 80068ea:	460b      	mov	r3, r1
 80068ec:	4610      	mov	r0, r2
 80068ee:	4619      	mov	r1, r3
 80068f0:	f7fa f916 	bl	8000b20 <__aeabi_d2f>
 80068f4:	4603      	mov	r3, r0
 80068f6:	60bb      	str	r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (tank_num < NUM_TANKS) {
 80068f8:	7bfb      	ldrb	r3, [r7, #15]
 80068fa:	2b01      	cmp	r3, #1
 80068fc:	d819      	bhi.n	8006932 <set_high_toggle_percent+0x8e>
		tanks[tank_num].PID_ctrl_vlv_high_pres = tanks[tank_num].target_pres
 80068fe:	7bfa      	ldrb	r2, [r7, #15]
 8006900:	490f      	ldr	r1, [pc, #60]	; (8006940 <set_high_toggle_percent+0x9c>)
 8006902:	4613      	mov	r3, r2
 8006904:	015b      	lsls	r3, r3, #5
 8006906:	4413      	add	r3, r2
 8006908:	009b      	lsls	r3, r3, #2
 800690a:	440b      	add	r3, r1
 800690c:	3340      	adds	r3, #64	; 0x40
 800690e:	ed93 7a00 	vldr	s14, [r3]
 8006912:	7bfa      	ldrb	r2, [r7, #15]
				* upper_threshold_pct;
 8006914:	edd7 7a02 	vldr	s15, [r7, #8]
 8006918:	ee67 7a27 	vmul.f32	s15, s14, s15
		tanks[tank_num].PID_ctrl_vlv_high_pres = tanks[tank_num].target_pres
 800691c:	4908      	ldr	r1, [pc, #32]	; (8006940 <set_high_toggle_percent+0x9c>)
 800691e:	4613      	mov	r3, r2
 8006920:	015b      	lsls	r3, r3, #5
 8006922:	4413      	add	r3, r2
 8006924:	009b      	lsls	r3, r3, #2
 8006926:	440b      	add	r3, r1
 8006928:	3350      	adds	r3, #80	; 0x50
 800692a:	edc3 7a00 	vstr	s15, [r3]
		save_nonvolatile_variables();
 800692e:	f7fb fb73 	bl	8002018 <save_nonvolatile_variables>
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006932:	bf00      	nop
 8006934:	3710      	adds	r7, #16
 8006936:	46bd      	mov	sp, r7
 8006938:	bd80      	pop	{r7, pc}
 800693a:	bf00      	nop
 800693c:	408f4000 	.word	0x408f4000
 8006940:	200004fc 	.word	0x200004fc

08006944 <set_stepper_speed>:

void set_stepper_speed(uint8_t* data, uint8_t* status){
 8006944:	b480      	push	{r7}
 8006946:	b085      	sub	sp, #20
 8006948:	af00      	add	r7, sp, #0
 800694a:	6078      	str	r0, [r7, #4]
 800694c:	6039      	str	r1, [r7, #0]

	uint8_t motor_num = (data[0])/1;
 800694e:	687b      	ldr	r3, [r7, #4]
 8006950:	781b      	ldrb	r3, [r3, #0]
 8006952:	73fb      	strb	r3, [r7, #15]
	uint16_t target_speed = (data[2]<<8|data[1])/1;
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	3302      	adds	r3, #2
 8006958:	781b      	ldrb	r3, [r3, #0]
 800695a:	021b      	lsls	r3, r3, #8
 800695c:	b21a      	sxth	r2, r3
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	3301      	adds	r3, #1
 8006962:	781b      	ldrb	r3, [r3, #0]
 8006964:	b21b      	sxth	r3, r3
 8006966:	4313      	orrs	r3, r2
 8006968:	b21b      	sxth	r3, r3
 800696a:	81bb      	strh	r3, [r7, #12]
		//L6470_set_motor_max_speed(motor, target_speed)
	}

	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 800696c:	bf00      	nop
 800696e:	3714      	adds	r7, #20
 8006970:	46bd      	mov	sp, r7
 8006972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006976:	4770      	bx	lr

08006978 <set_telem>:

void set_telem(uint8_t* data, uint8_t* status){
 8006978:	b480      	push	{r7}
 800697a:	b085      	sub	sp, #20
 800697c:	af00      	add	r7, sp, #0
 800697e:	6078      	str	r0, [r7, #4]
 8006980:	6039      	str	r1, [r7, #0]

	uint8_t state = (data[0])/1;
 8006982:	687b      	ldr	r3, [r7, #4]
 8006984:	781b      	ldrb	r3, [r3, #0]
 8006986:	73fb      	strb	r3, [r7, #15]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	// Toggle telem on/off
	if (telem_disabled) {
 8006988:	4b08      	ldr	r3, [pc, #32]	; (80069ac <set_telem+0x34>)
 800698a:	781b      	ldrb	r3, [r3, #0]
 800698c:	2b00      	cmp	r3, #0
 800698e:	d003      	beq.n	8006998 <set_telem+0x20>
		telem_disabled = 0;
 8006990:	4b06      	ldr	r3, [pc, #24]	; (80069ac <set_telem+0x34>)
 8006992:	2200      	movs	r2, #0
 8006994:	701a      	strb	r2, [r3, #0]
	else {
		telem_disabled = 1;
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006996:	e002      	b.n	800699e <set_telem+0x26>
		telem_disabled = 1;
 8006998:	4b04      	ldr	r3, [pc, #16]	; (80069ac <set_telem+0x34>)
 800699a:	2201      	movs	r2, #1
 800699c:	701a      	strb	r2, [r3, #0]
}
 800699e:	bf00      	nop
 80069a0:	3714      	adds	r7, #20
 80069a2:	46bd      	mov	sp, r7
 80069a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069a8:	4770      	bx	lr
 80069aa:	bf00      	nop
 80069ac:	200004fb 	.word	0x200004fb

080069b0 <set_presstank_status>:

void set_presstank_status(uint8_t* data, uint8_t* status){
 80069b0:	b580      	push	{r7, lr}
 80069b2:	b084      	sub	sp, #16
 80069b4:	af00      	add	r7, sp, #0
 80069b6:	6078      	str	r0, [r7, #4]
 80069b8:	6039      	str	r1, [r7, #0]

	uint8_t tank_num = (data[0])/1;
 80069ba:	687b      	ldr	r3, [r7, #4]
 80069bc:	781b      	ldrb	r3, [r3, #0]
 80069be:	73fb      	strb	r3, [r7, #15]
	uint8_t state = (data[1])/1;
 80069c0:	687b      	ldr	r3, [r7, #4]
 80069c2:	785b      	ldrb	r3, [r3, #1]
 80069c4:	73bb      	strb	r3, [r7, #14]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (tank_num < NUM_TANKS) {
 80069c6:	7bfb      	ldrb	r3, [r7, #15]
 80069c8:	2b01      	cmp	r3, #1
 80069ca:	d80a      	bhi.n	80069e2 <set_presstank_status+0x32>
		tanks[tank_num].tank_enable = state;
 80069cc:	7bfa      	ldrb	r2, [r7, #15]
 80069ce:	4907      	ldr	r1, [pc, #28]	; (80069ec <set_presstank_status+0x3c>)
 80069d0:	4613      	mov	r3, r2
 80069d2:	015b      	lsls	r3, r3, #5
 80069d4:	4413      	add	r3, r2
 80069d6:	009b      	lsls	r3, r3, #2
 80069d8:	440b      	add	r3, r1
 80069da:	7bba      	ldrb	r2, [r7, #14]
 80069dc:	701a      	strb	r2, [r3, #0]
		save_nonvolatile_variables();
 80069de:	f7fb fb1b 	bl	8002018 <save_nonvolatile_variables>
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 80069e2:	bf00      	nop
 80069e4:	3710      	adds	r7, #16
 80069e6:	46bd      	mov	sp, r7
 80069e8:	bd80      	pop	{r7, pc}
 80069ea:	bf00      	nop
 80069ec:	200004fc 	.word	0x200004fc

080069f0 <ambientize_pot>:

void ambientize_pot(uint8_t* data, uint8_t* status){
 80069f0:	b580      	push	{r7, lr}
 80069f2:	b084      	sub	sp, #16
 80069f4:	af00      	add	r7, sp, #0
 80069f6:	6078      	str	r0, [r7, #4]
 80069f8:	6039      	str	r1, [r7, #0]

	uint8_t pot_num = (data[0])/1;
 80069fa:	687b      	ldr	r3, [r7, #4]
 80069fc:	781b      	ldrb	r3, [r3, #0]
 80069fe:	73bb      	strb	r3, [r7, #14]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	for (uint8_t i = 0; i < NUM_POTS; i++) {
 8006a00:	2300      	movs	r3, #0
 8006a02:	73fb      	strb	r3, [r7, #15]
 8006a04:	e016      	b.n	8006a34 <ambientize_pot+0x44>
		// flip pot sign to decouple direction with motor before applying ambient
		pot_ambients[i] = -epot[i]+pot_ambients[i];
 8006a06:	7bfb      	ldrb	r3, [r7, #15]
 8006a08:	4a0f      	ldr	r2, [pc, #60]	; (8006a48 <ambientize_pot+0x58>)
 8006a0a:	009b      	lsls	r3, r3, #2
 8006a0c:	4413      	add	r3, r2
 8006a0e:	ed93 7a00 	vldr	s14, [r3]
 8006a12:	7bfb      	ldrb	r3, [r7, #15]
 8006a14:	4a0d      	ldr	r2, [pc, #52]	; (8006a4c <ambientize_pot+0x5c>)
 8006a16:	009b      	lsls	r3, r3, #2
 8006a18:	4413      	add	r3, r2
 8006a1a:	edd3 7a00 	vldr	s15, [r3]
 8006a1e:	7bfb      	ldrb	r3, [r7, #15]
 8006a20:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006a24:	4a08      	ldr	r2, [pc, #32]	; (8006a48 <ambientize_pot+0x58>)
 8006a26:	009b      	lsls	r3, r3, #2
 8006a28:	4413      	add	r3, r2
 8006a2a:	edc3 7a00 	vstr	s15, [r3]
	for (uint8_t i = 0; i < NUM_POTS; i++) {
 8006a2e:	7bfb      	ldrb	r3, [r7, #15]
 8006a30:	3301      	adds	r3, #1
 8006a32:	73fb      	strb	r3, [r7, #15]
 8006a34:	7bfb      	ldrb	r3, [r7, #15]
 8006a36:	2b01      	cmp	r3, #1
 8006a38:	d9e5      	bls.n	8006a06 <ambientize_pot+0x16>
	}
	save_nonvolatile_variables();
 8006a3a:	f7fb faed 	bl	8002018 <save_nonvolatile_variables>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006a3e:	bf00      	nop
 8006a40:	3710      	adds	r7, #16
 8006a42:	46bd      	mov	sp, r7
 8006a44:	bd80      	pop	{r7, pc}
 8006a46:	bf00      	nop
 8006a48:	200002f8 	.word	0x200002f8
 8006a4c:	200004f0 	.word	0x200004f0

08006a50 <led_write>:

void led_write(uint8_t* data, uint8_t* status){
 8006a50:	b580      	push	{r7, lr}
 8006a52:	b084      	sub	sp, #16
 8006a54:	af00      	add	r7, sp, #0
 8006a56:	6078      	str	r0, [r7, #4]
 8006a58:	6039      	str	r1, [r7, #0]

	uint8_t led_num = (data[0])/1;
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	781b      	ldrb	r3, [r3, #0]
 8006a5e:	73fb      	strb	r3, [r7, #15]
	uint8_t state = (data[1])/1;
 8006a60:	687b      	ldr	r3, [r7, #4]
 8006a62:	785b      	ldrb	r3, [r3, #1]
 8006a64:	73bb      	strb	r3, [r7, #14]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	switch(led_num) {
 8006a66:	7bfb      	ldrb	r3, [r7, #15]
 8006a68:	2b03      	cmp	r3, #3
 8006a6a:	d827      	bhi.n	8006abc <led_write+0x6c>
 8006a6c:	a201      	add	r2, pc, #4	; (adr r2, 8006a74 <led_write+0x24>)
 8006a6e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006a72:	bf00      	nop
 8006a74:	08006a85 	.word	0x08006a85
 8006a78:	08006a93 	.word	0x08006a93
 8006a7c:	08006aa1 	.word	0x08006aa1
 8006a80:	08006aaf 	.word	0x08006aaf
	case 0:
		HAL_GPIO_WritePin(LED_0_GPIO_Port, LED_0_Pin, state);
 8006a84:	7bbb      	ldrb	r3, [r7, #14]
 8006a86:	461a      	mov	r2, r3
 8006a88:	2101      	movs	r1, #1
 8006a8a:	480f      	ldr	r0, [pc, #60]	; (8006ac8 <led_write+0x78>)
 8006a8c:	f002 fbc0 	bl	8009210 <HAL_GPIO_WritePin>
		break;
 8006a90:	e015      	b.n	8006abe <led_write+0x6e>
	case 1:
		HAL_GPIO_WritePin(LED_1_GPIO_Port, LED_1_Pin, state);
 8006a92:	7bbb      	ldrb	r3, [r7, #14]
 8006a94:	461a      	mov	r2, r3
 8006a96:	2102      	movs	r1, #2
 8006a98:	480b      	ldr	r0, [pc, #44]	; (8006ac8 <led_write+0x78>)
 8006a9a:	f002 fbb9 	bl	8009210 <HAL_GPIO_WritePin>
		break;
 8006a9e:	e00e      	b.n	8006abe <led_write+0x6e>
	case 2:
		HAL_GPIO_WritePin(LED_2_GPIO_Port, LED_2_Pin, state);
 8006aa0:	7bbb      	ldrb	r3, [r7, #14]
 8006aa2:	461a      	mov	r2, r3
 8006aa4:	2104      	movs	r1, #4
 8006aa6:	4808      	ldr	r0, [pc, #32]	; (8006ac8 <led_write+0x78>)
 8006aa8:	f002 fbb2 	bl	8009210 <HAL_GPIO_WritePin>
		break;
 8006aac:	e007      	b.n	8006abe <led_write+0x6e>
	case 3:
		HAL_GPIO_WritePin(LED_3_GPIO_Port, LED_3_Pin, state);
 8006aae:	7bbb      	ldrb	r3, [r7, #14]
 8006ab0:	461a      	mov	r2, r3
 8006ab2:	2108      	movs	r1, #8
 8006ab4:	4804      	ldr	r0, [pc, #16]	; (8006ac8 <led_write+0x78>)
 8006ab6:	f002 fbab 	bl	8009210 <HAL_GPIO_WritePin>
		break;
 8006aba:	e000      	b.n	8006abe <led_write+0x6e>
	default:
		break;
 8006abc:	bf00      	nop
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006abe:	bf00      	nop
 8006ac0:	3710      	adds	r7, #16
 8006ac2:	46bd      	mov	sp, r7
 8006ac4:	bd80      	pop	{r7, pc}
 8006ac6:	bf00      	nop
 8006ac8:	40020800 	.word	0x40020800

08006acc <set_system_clock>:

void set_system_clock(uint8_t* data, uint8_t* status){
 8006acc:	b480      	push	{r7}
 8006ace:	b085      	sub	sp, #20
 8006ad0:	af00      	add	r7, sp, #0
 8006ad2:	6078      	str	r0, [r7, #4]
 8006ad4:	6039      	str	r1, [r7, #0]

	uint32_t system_time = (data[3]<<24|data[2]<<16|data[1]<<8|data[0])/1;
 8006ad6:	687b      	ldr	r3, [r7, #4]
 8006ad8:	3303      	adds	r3, #3
 8006ada:	781b      	ldrb	r3, [r3, #0]
 8006adc:	061a      	lsls	r2, r3, #24
 8006ade:	687b      	ldr	r3, [r7, #4]
 8006ae0:	3302      	adds	r3, #2
 8006ae2:	781b      	ldrb	r3, [r3, #0]
 8006ae4:	041b      	lsls	r3, r3, #16
 8006ae6:	431a      	orrs	r2, r3
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	3301      	adds	r3, #1
 8006aec:	781b      	ldrb	r3, [r3, #0]
 8006aee:	021b      	lsls	r3, r3, #8
 8006af0:	4313      	orrs	r3, r2
 8006af2:	687a      	ldr	r2, [r7, #4]
 8006af4:	7812      	ldrb	r2, [r2, #0]
 8006af6:	4313      	orrs	r3, r2
 8006af8:	60fb      	str	r3, [r7, #12]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	__HAL_TIM_SetCounter(&TIM_MICROS, system_time);
 8006afa:	4b05      	ldr	r3, [pc, #20]	; (8006b10 <set_system_clock+0x44>)
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	68fa      	ldr	r2, [r7, #12]
 8006b00:	625a      	str	r2, [r3, #36]	; 0x24
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006b02:	bf00      	nop
 8006b04:	3714      	adds	r7, #20
 8006b06:	46bd      	mov	sp, r7
 8006b08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b0c:	4770      	bx	lr
 8006b0e:	bf00      	nop
 8006b10:	20000a70 	.word	0x20000a70

08006b14 <remove_pressure_ambients>:

void remove_pressure_ambients(uint8_t* data, uint8_t* status){
 8006b14:	b580      	push	{r7, lr}
 8006b16:	b084      	sub	sp, #16
 8006b18:	af00      	add	r7, sp, #0
 8006b1a:	6078      	str	r0, [r7, #4]
 8006b1c:	6039      	str	r1, [r7, #0]

	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 8006b1e:	2300      	movs	r3, #0
 8006b20:	73fb      	strb	r3, [r7, #15]
 8006b22:	e009      	b.n	8006b38 <remove_pressure_ambients+0x24>
		pt_ambients[i] = 0;
 8006b24:	7bfb      	ldrb	r3, [r7, #15]
 8006b26:	4a09      	ldr	r2, [pc, #36]	; (8006b4c <remove_pressure_ambients+0x38>)
 8006b28:	009b      	lsls	r3, r3, #2
 8006b2a:	4413      	add	r3, r2
 8006b2c:	f04f 0200 	mov.w	r2, #0
 8006b30:	601a      	str	r2, [r3, #0]
	for (uint8_t i = 0; i < NUM_PTS; i++) {
 8006b32:	7bfb      	ldrb	r3, [r7, #15]
 8006b34:	3301      	adds	r3, #1
 8006b36:	73fb      	strb	r3, [r7, #15]
 8006b38:	7bfb      	ldrb	r3, [r7, #15]
 8006b3a:	2b13      	cmp	r3, #19
 8006b3c:	d9f2      	bls.n	8006b24 <remove_pressure_ambients+0x10>
	}
	save_nonvolatile_variables();
 8006b3e:	f7fb fa6b 	bl	8002018 <save_nonvolatile_variables>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006b42:	bf00      	nop
 8006b44:	3710      	adds	r7, #16
 8006b46:	46bd      	mov	sp, r7
 8006b48:	bd80      	pop	{r7, pc}
 8006b4a:	bf00      	nop
 8006b4c:	200002a8 	.word	0x200002a8

08006b50 <set_fuel_mpv_on_delay>:

void set_fuel_mpv_on_delay(uint8_t* data, uint8_t* status){
 8006b50:	b580      	push	{r7, lr}
 8006b52:	b084      	sub	sp, #16
 8006b54:	af00      	add	r7, sp, #0
 8006b56:	6078      	str	r0, [r7, #4]
 8006b58:	6039      	str	r1, [r7, #0]

	uint8_t mpv_delay_ms = (data[0])/1;
 8006b5a:	687b      	ldr	r3, [r7, #4]
 8006b5c:	781b      	ldrb	r3, [r3, #0]
 8006b5e:	73fb      	strb	r3, [r7, #15]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	autosequence.hotfire_fuel_mpv_delay_ms = mpv_delay_ms;
 8006b60:	4a04      	ldr	r2, [pc, #16]	; (8006b74 <set_fuel_mpv_on_delay+0x24>)
 8006b62:	7bfb      	ldrb	r3, [r7, #15]
 8006b64:	7213      	strb	r3, [r2, #8]
	save_nonvolatile_variables();
 8006b66:	f7fb fa57 	bl	8002018 <save_nonvolatile_variables>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006b6a:	bf00      	nop
 8006b6c:	3710      	adds	r7, #16
 8006b6e:	46bd      	mov	sp, r7
 8006b70:	bd80      	pop	{r7, pc}
 8006b72:	bf00      	nop
 8006b74:	20000604 	.word	0x20000604

08006b78 <set_engine_test_duration>:

void set_engine_test_duration(uint8_t* data, uint8_t* status){
 8006b78:	b580      	push	{r7, lr}
 8006b7a:	b084      	sub	sp, #16
 8006b7c:	af00      	add	r7, sp, #0
 8006b7e:	6078      	str	r0, [r7, #4]
 8006b80:	6039      	str	r1, [r7, #0]

	uint32_t engine_test_duration_ms = (data[3]<<24|data[2]<<16|data[1]<<8|data[0])/1;
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	3303      	adds	r3, #3
 8006b86:	781b      	ldrb	r3, [r3, #0]
 8006b88:	061a      	lsls	r2, r3, #24
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	3302      	adds	r3, #2
 8006b8e:	781b      	ldrb	r3, [r3, #0]
 8006b90:	041b      	lsls	r3, r3, #16
 8006b92:	431a      	orrs	r2, r3
 8006b94:	687b      	ldr	r3, [r7, #4]
 8006b96:	3301      	adds	r3, #1
 8006b98:	781b      	ldrb	r3, [r3, #0]
 8006b9a:	021b      	lsls	r3, r3, #8
 8006b9c:	4313      	orrs	r3, r2
 8006b9e:	687a      	ldr	r2, [r7, #4]
 8006ba0:	7812      	ldrb	r2, [r2, #0]
 8006ba2:	4313      	orrs	r3, r2
 8006ba4:	60fb      	str	r3, [r7, #12]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	autosequence.hotfire_test_duration_ms = engine_test_duration_ms;
 8006ba6:	4a04      	ldr	r2, [pc, #16]	; (8006bb8 <set_engine_test_duration+0x40>)
 8006ba8:	68fb      	ldr	r3, [r7, #12]
 8006baa:	6153      	str	r3, [r2, #20]
	save_nonvolatile_variables();
 8006bac:	f7fb fa34 	bl	8002018 <save_nonvolatile_variables>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006bb0:	bf00      	nop
 8006bb2:	3710      	adds	r7, #16
 8006bb4:	46bd      	mov	sp, r7
 8006bb6:	bd80      	pop	{r7, pc}
 8006bb8:	20000604 	.word	0x20000604

08006bbc <set_pid_start_delay>:

void set_pid_start_delay(uint8_t* data, uint8_t* status){
 8006bbc:	b580      	push	{r7, lr}
 8006bbe:	b084      	sub	sp, #16
 8006bc0:	af00      	add	r7, sp, #0
 8006bc2:	6078      	str	r0, [r7, #4]
 8006bc4:	6039      	str	r1, [r7, #0]

	uint16_t pid_delay_ms = (data[1]<<8|data[0])/1;
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	3301      	adds	r3, #1
 8006bca:	781b      	ldrb	r3, [r3, #0]
 8006bcc:	021b      	lsls	r3, r3, #8
 8006bce:	b21a      	sxth	r2, r3
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	781b      	ldrb	r3, [r3, #0]
 8006bd4:	b21b      	sxth	r3, r3
 8006bd6:	4313      	orrs	r3, r2
 8006bd8:	b21b      	sxth	r3, r3
 8006bda:	81fb      	strh	r3, [r7, #14]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	autosequence.hotfire_pid_start_delay_ms = pid_delay_ms;
 8006bdc:	4a04      	ldr	r2, [pc, #16]	; (8006bf0 <set_pid_start_delay+0x34>)
 8006bde:	89fb      	ldrh	r3, [r7, #14]
 8006be0:	8193      	strh	r3, [r2, #12]
	save_nonvolatile_variables();
 8006be2:	f7fb fa19 	bl	8002018 <save_nonvolatile_variables>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006be6:	bf00      	nop
 8006be8:	3710      	adds	r7, #16
 8006bea:	46bd      	mov	sp, r7
 8006bec:	bd80      	pop	{r7, pc}
 8006bee:	bf00      	nop
 8006bf0:	20000604 	.word	0x20000604

08006bf4 <set_ignitor_on_delay>:

void set_ignitor_on_delay(uint8_t* data, uint8_t* status){
 8006bf4:	b580      	push	{r7, lr}
 8006bf6:	b084      	sub	sp, #16
 8006bf8:	af00      	add	r7, sp, #0
 8006bfa:	6078      	str	r0, [r7, #4]
 8006bfc:	6039      	str	r1, [r7, #0]

	uint16_t ignitor_on_delay_ms = (data[1]<<8|data[0])/1;
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	3301      	adds	r3, #1
 8006c02:	781b      	ldrb	r3, [r3, #0]
 8006c04:	021b      	lsls	r3, r3, #8
 8006c06:	b21a      	sxth	r2, r3
 8006c08:	687b      	ldr	r3, [r7, #4]
 8006c0a:	781b      	ldrb	r3, [r3, #0]
 8006c0c:	b21b      	sxth	r3, r3
 8006c0e:	4313      	orrs	r3, r2
 8006c10:	b21b      	sxth	r3, r3
 8006c12:	81fb      	strh	r3, [r7, #14]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	autosequence.ignition_ignitor_on_delay_ms = ignitor_on_delay_ms;
 8006c14:	4a04      	ldr	r2, [pc, #16]	; (8006c28 <set_ignitor_on_delay+0x34>)
 8006c16:	89fb      	ldrh	r3, [r7, #14]
 8006c18:	8093      	strh	r3, [r2, #4]
	save_nonvolatile_variables();
 8006c1a:	f7fb f9fd 	bl	8002018 <save_nonvolatile_variables>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006c1e:	bf00      	nop
 8006c20:	3710      	adds	r7, #16
 8006c22:	46bd      	mov	sp, r7
 8006c24:	bd80      	pop	{r7, pc}
 8006c26:	bf00      	nop
 8006c28:	20000604 	.word	0x20000604

08006c2c <set_ignitor_high_duration>:

void set_ignitor_high_duration(uint8_t* data, uint8_t* status){
 8006c2c:	b580      	push	{r7, lr}
 8006c2e:	b084      	sub	sp, #16
 8006c30:	af00      	add	r7, sp, #0
 8006c32:	6078      	str	r0, [r7, #4]
 8006c34:	6039      	str	r1, [r7, #0]

	uint16_t ignitor_high_duration_ms = (data[1]<<8|data[0])/1;
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	3301      	adds	r3, #1
 8006c3a:	781b      	ldrb	r3, [r3, #0]
 8006c3c:	021b      	lsls	r3, r3, #8
 8006c3e:	b21a      	sxth	r2, r3
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	781b      	ldrb	r3, [r3, #0]
 8006c44:	b21b      	sxth	r3, r3
 8006c46:	4313      	orrs	r3, r2
 8006c48:	b21b      	sxth	r3, r3
 8006c4a:	81fb      	strh	r3, [r7, #14]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	autosequence.ignition_ignitor_high_duration_ms = ignitor_high_duration_ms;
 8006c4c:	4a04      	ldr	r2, [pc, #16]	; (8006c60 <set_ignitor_high_duration+0x34>)
 8006c4e:	89fb      	ldrh	r3, [r7, #14]
 8006c50:	80d3      	strh	r3, [r2, #6]
	save_nonvolatile_variables();
 8006c52:	f7fb f9e1 	bl	8002018 <save_nonvolatile_variables>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006c56:	bf00      	nop
 8006c58:	3710      	adds	r7, #16
 8006c5a:	46bd      	mov	sp, r7
 8006c5c:	bd80      	pop	{r7, pc}
 8006c5e:	bf00      	nop
 8006c60:	20000604 	.word	0x20000604

08006c64 <set_film_cooling_on_delay>:

void set_film_cooling_on_delay(uint8_t* data, uint8_t* status){
 8006c64:	b580      	push	{r7, lr}
 8006c66:	b084      	sub	sp, #16
 8006c68:	af00      	add	r7, sp, #0
 8006c6a:	6078      	str	r0, [r7, #4]
 8006c6c:	6039      	str	r1, [r7, #0]

	uint16_t film_cooling_delay_ms = (data[1]<<8|data[0])/1;
 8006c6e:	687b      	ldr	r3, [r7, #4]
 8006c70:	3301      	adds	r3, #1
 8006c72:	781b      	ldrb	r3, [r3, #0]
 8006c74:	021b      	lsls	r3, r3, #8
 8006c76:	b21a      	sxth	r2, r3
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	781b      	ldrb	r3, [r3, #0]
 8006c7c:	b21b      	sxth	r3, r3
 8006c7e:	4313      	orrs	r3, r2
 8006c80:	b21b      	sxth	r3, r3
 8006c82:	81fb      	strh	r3, [r7, #14]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	autosequence.hotfire_film_cooling_on_time_ms = film_cooling_delay_ms;
 8006c84:	4a04      	ldr	r2, [pc, #16]	; (8006c98 <set_film_cooling_on_delay+0x34>)
 8006c86:	89fb      	ldrh	r3, [r7, #14]
 8006c88:	8153      	strh	r3, [r2, #10]
	save_nonvolatile_variables();
 8006c8a:	f7fb f9c5 	bl	8002018 <save_nonvolatile_variables>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006c8e:	bf00      	nop
 8006c90:	3710      	adds	r7, #16
 8006c92:	46bd      	mov	sp, r7
 8006c94:	bd80      	pop	{r7, pc}
 8006c96:	bf00      	nop
 8006c98:	20000604 	.word	0x20000604
 8006c9c:	00000000 	.word	0x00000000

08006ca0 <set_init_motor_deg_factor>:

void set_init_motor_deg_factor(uint8_t* data, uint8_t* status){
 8006ca0:	b580      	push	{r7, lr}
 8006ca2:	b084      	sub	sp, #16
 8006ca4:	af00      	add	r7, sp, #0
 8006ca6:	6078      	str	r0, [r7, #4]
 8006ca8:	6039      	str	r1, [r7, #0]

	double deg_correction_factor = (data[7]<<56|data[6]<<48|data[5]<<40|data[4]<<32|data[3]<<24|data[2]<<16|data[1]<<8|data[0])/10000.0;
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	3307      	adds	r3, #7
 8006cae:	781b      	ldrb	r3, [r3, #0]
 8006cb0:	461a      	mov	r2, r3
 8006cb2:	2338      	movs	r3, #56	; 0x38
 8006cb4:	409a      	lsls	r2, r3
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	3306      	adds	r3, #6
 8006cba:	781b      	ldrb	r3, [r3, #0]
 8006cbc:	4619      	mov	r1, r3
 8006cbe:	2330      	movs	r3, #48	; 0x30
 8006cc0:	fa01 f303 	lsl.w	r3, r1, r3
 8006cc4:	431a      	orrs	r2, r3
 8006cc6:	687b      	ldr	r3, [r7, #4]
 8006cc8:	3305      	adds	r3, #5
 8006cca:	781b      	ldrb	r3, [r3, #0]
 8006ccc:	4619      	mov	r1, r3
 8006cce:	2328      	movs	r3, #40	; 0x28
 8006cd0:	fa01 f303 	lsl.w	r3, r1, r3
 8006cd4:	431a      	orrs	r2, r3
 8006cd6:	687b      	ldr	r3, [r7, #4]
 8006cd8:	3304      	adds	r3, #4
 8006cda:	781b      	ldrb	r3, [r3, #0]
 8006cdc:	4619      	mov	r1, r3
 8006cde:	2320      	movs	r3, #32
 8006ce0:	fa01 f303 	lsl.w	r3, r1, r3
 8006ce4:	431a      	orrs	r2, r3
 8006ce6:	687b      	ldr	r3, [r7, #4]
 8006ce8:	3303      	adds	r3, #3
 8006cea:	781b      	ldrb	r3, [r3, #0]
 8006cec:	061b      	lsls	r3, r3, #24
 8006cee:	431a      	orrs	r2, r3
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	3302      	adds	r3, #2
 8006cf4:	781b      	ldrb	r3, [r3, #0]
 8006cf6:	041b      	lsls	r3, r3, #16
 8006cf8:	431a      	orrs	r2, r3
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	3301      	adds	r3, #1
 8006cfe:	781b      	ldrb	r3, [r3, #0]
 8006d00:	021b      	lsls	r3, r3, #8
 8006d02:	4313      	orrs	r3, r2
 8006d04:	687a      	ldr	r2, [r7, #4]
 8006d06:	7812      	ldrb	r2, [r2, #0]
 8006d08:	4313      	orrs	r3, r2
 8006d0a:	4618      	mov	r0, r3
 8006d0c:	f7f9 fbce 	bl	80004ac <__aeabi_i2d>
 8006d10:	a30c      	add	r3, pc, #48	; (adr r3, 8006d44 <set_init_motor_deg_factor+0xa4>)
 8006d12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d16:	f7f9 fd5d 	bl	80007d4 <__aeabi_ddiv>
 8006d1a:	4602      	mov	r2, r0
 8006d1c:	460b      	mov	r3, r1
 8006d1e:	e9c7 2302 	strd	r2, r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	init_motor_pos_deg_correction_factor = deg_correction_factor;
 8006d22:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8006d26:	f7f9 fefb 	bl	8000b20 <__aeabi_d2f>
 8006d2a:	4603      	mov	r3, r0
 8006d2c:	4a04      	ldr	r2, [pc, #16]	; (8006d40 <set_init_motor_deg_factor+0xa0>)
 8006d2e:	6013      	str	r3, [r2, #0]
	save_nonvolatile_variables();
 8006d30:	f7fb f972 	bl	8002018 <save_nonvolatile_variables>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006d34:	bf00      	nop
 8006d36:	3710      	adds	r7, #16
 8006d38:	46bd      	mov	sp, r7
 8006d3a:	bd80      	pop	{r7, pc}
 8006d3c:	f3af 8000 	nop.w
 8006d40:	20000420 	.word	0x20000420
 8006d44:	00000000 	.word	0x00000000
 8006d48:	40c38800 	.word	0x40c38800

08006d4c <clear_status_flags>:

void clear_status_flags(uint8_t* data, uint8_t* status){
 8006d4c:	b480      	push	{r7}
 8006d4e:	b083      	sub	sp, #12
 8006d50:	af00      	add	r7, sp, #0
 8006d52:	6078      	str	r0, [r7, #4]
 8006d54:	6039      	str	r1, [r7, #0]

	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	status_flags = 0;
 8006d56:	4b04      	ldr	r3, [pc, #16]	; (8006d68 <clear_status_flags+0x1c>)
 8006d58:	2200      	movs	r2, #0
 8006d5a:	601a      	str	r2, [r3, #0]
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006d5c:	bf00      	nop
 8006d5e:	370c      	adds	r7, #12
 8006d60:	46bd      	mov	sp, r7
 8006d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d66:	4770      	bx	lr
 8006d68:	20000410 	.word	0x20000410

08006d6c <start_simulation>:

void start_simulation(uint8_t* data, uint8_t* status){
 8006d6c:	b480      	push	{r7}
 8006d6e:	b083      	sub	sp, #12
 8006d70:	af00      	add	r7, sp, #0
 8006d72:	6078      	str	r0, [r7, #4]
 8006d74:	6039      	str	r1, [r7, #0]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006d76:	bf00      	nop
 8006d78:	370c      	adds	r7, #12
 8006d7a:	46bd      	mov	sp, r7
 8006d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d80:	4770      	bx	lr

08006d82 <advance_simulation>:

void advance_simulation(uint8_t* data, uint8_t* status){
 8006d82:	b480      	push	{r7}
 8006d84:	b083      	sub	sp, #12
 8006d86:	af00      	add	r7, sp, #0
 8006d88:	6078      	str	r0, [r7, #4]
 8006d8a:	6039      	str	r1, [r7, #0]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006d8c:	bf00      	nop
 8006d8e:	370c      	adds	r7, #12
 8006d90:	46bd      	mov	sp, r7
 8006d92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d96:	4770      	bx	lr

08006d98 <stop_simulation>:

void stop_simulation(uint8_t* data, uint8_t* status){
 8006d98:	b480      	push	{r7}
 8006d9a:	b083      	sub	sp, #12
 8006d9c:	af00      	add	r7, sp, #0
 8006d9e:	6078      	str	r0, [r7, #4]
 8006da0:	6039      	str	r1, [r7, #0]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006da2:	bf00      	nop
 8006da4:	370c      	adds	r7, #12
 8006da6:	46bd      	mov	sp, r7
 8006da8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dac:	4770      	bx	lr
	...

08006db0 <set_pt_lower_voltage>:

void set_pt_lower_voltage(uint8_t* data, uint8_t* status){
 8006db0:	b580      	push	{r7, lr}
 8006db2:	b084      	sub	sp, #16
 8006db4:	af00      	add	r7, sp, #0
 8006db6:	6078      	str	r0, [r7, #4]
 8006db8:	6039      	str	r1, [r7, #0]

	uint8_t pt_num = (data[0])/1;
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	781b      	ldrb	r3, [r3, #0]
 8006dbe:	73fb      	strb	r3, [r7, #15]
	float lower_voltage = (data[4]<<24|data[3]<<16|data[2]<<8|data[1])/10.0;
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	3304      	adds	r3, #4
 8006dc4:	781b      	ldrb	r3, [r3, #0]
 8006dc6:	061a      	lsls	r2, r3, #24
 8006dc8:	687b      	ldr	r3, [r7, #4]
 8006dca:	3303      	adds	r3, #3
 8006dcc:	781b      	ldrb	r3, [r3, #0]
 8006dce:	041b      	lsls	r3, r3, #16
 8006dd0:	431a      	orrs	r2, r3
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	3302      	adds	r3, #2
 8006dd6:	781b      	ldrb	r3, [r3, #0]
 8006dd8:	021b      	lsls	r3, r3, #8
 8006dda:	4313      	orrs	r3, r2
 8006ddc:	687a      	ldr	r2, [r7, #4]
 8006dde:	3201      	adds	r2, #1
 8006de0:	7812      	ldrb	r2, [r2, #0]
 8006de2:	4313      	orrs	r3, r2
 8006de4:	4618      	mov	r0, r3
 8006de6:	f7f9 fb61 	bl	80004ac <__aeabi_i2d>
 8006dea:	f04f 0200 	mov.w	r2, #0
 8006dee:	4b0d      	ldr	r3, [pc, #52]	; (8006e24 <set_pt_lower_voltage+0x74>)
 8006df0:	f7f9 fcf0 	bl	80007d4 <__aeabi_ddiv>
 8006df4:	4602      	mov	r2, r0
 8006df6:	460b      	mov	r3, r1
 8006df8:	4610      	mov	r0, r2
 8006dfa:	4619      	mov	r1, r3
 8006dfc:	f7f9 fe90 	bl	8000b20 <__aeabi_d2f>
 8006e00:	4603      	mov	r3, r0
 8006e02:	60bb      	str	r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (pt_num < NUM_PTS) {
 8006e04:	7bfb      	ldrb	r3, [r7, #15]
 8006e06:	2b13      	cmp	r3, #19
 8006e08:	d807      	bhi.n	8006e1a <set_pt_lower_voltage+0x6a>
		pt_cal_lower_voltage[pt_num] = lower_voltage;
 8006e0a:	7bfb      	ldrb	r3, [r7, #15]
 8006e0c:	4a06      	ldr	r2, [pc, #24]	; (8006e28 <set_pt_lower_voltage+0x78>)
 8006e0e:	009b      	lsls	r3, r3, #2
 8006e10:	4413      	add	r3, r2
 8006e12:	68ba      	ldr	r2, [r7, #8]
 8006e14:	601a      	str	r2, [r3, #0]
		save_nonvolatile_variables();
 8006e16:	f7fb f8ff 	bl	8002018 <save_nonvolatile_variables>
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006e1a:	bf00      	nop
 8006e1c:	3710      	adds	r7, #16
 8006e1e:	46bd      	mov	sp, r7
 8006e20:	bd80      	pop	{r7, pc}
 8006e22:	bf00      	nop
 8006e24:	40240000 	.word	0x40240000
 8006e28:	20000300 	.word	0x20000300

08006e2c <set_pt_upper_voltage>:

void set_pt_upper_voltage(uint8_t* data, uint8_t* status){
 8006e2c:	b580      	push	{r7, lr}
 8006e2e:	b084      	sub	sp, #16
 8006e30:	af00      	add	r7, sp, #0
 8006e32:	6078      	str	r0, [r7, #4]
 8006e34:	6039      	str	r1, [r7, #0]

	uint8_t pt_num = (data[0])/1;
 8006e36:	687b      	ldr	r3, [r7, #4]
 8006e38:	781b      	ldrb	r3, [r3, #0]
 8006e3a:	73fb      	strb	r3, [r7, #15]
	float upper_voltage = (data[4]<<24|data[3]<<16|data[2]<<8|data[1])/10.0;
 8006e3c:	687b      	ldr	r3, [r7, #4]
 8006e3e:	3304      	adds	r3, #4
 8006e40:	781b      	ldrb	r3, [r3, #0]
 8006e42:	061a      	lsls	r2, r3, #24
 8006e44:	687b      	ldr	r3, [r7, #4]
 8006e46:	3303      	adds	r3, #3
 8006e48:	781b      	ldrb	r3, [r3, #0]
 8006e4a:	041b      	lsls	r3, r3, #16
 8006e4c:	431a      	orrs	r2, r3
 8006e4e:	687b      	ldr	r3, [r7, #4]
 8006e50:	3302      	adds	r3, #2
 8006e52:	781b      	ldrb	r3, [r3, #0]
 8006e54:	021b      	lsls	r3, r3, #8
 8006e56:	4313      	orrs	r3, r2
 8006e58:	687a      	ldr	r2, [r7, #4]
 8006e5a:	3201      	adds	r2, #1
 8006e5c:	7812      	ldrb	r2, [r2, #0]
 8006e5e:	4313      	orrs	r3, r2
 8006e60:	4618      	mov	r0, r3
 8006e62:	f7f9 fb23 	bl	80004ac <__aeabi_i2d>
 8006e66:	f04f 0200 	mov.w	r2, #0
 8006e6a:	4b0d      	ldr	r3, [pc, #52]	; (8006ea0 <set_pt_upper_voltage+0x74>)
 8006e6c:	f7f9 fcb2 	bl	80007d4 <__aeabi_ddiv>
 8006e70:	4602      	mov	r2, r0
 8006e72:	460b      	mov	r3, r1
 8006e74:	4610      	mov	r0, r2
 8006e76:	4619      	mov	r1, r3
 8006e78:	f7f9 fe52 	bl	8000b20 <__aeabi_d2f>
 8006e7c:	4603      	mov	r3, r0
 8006e7e:	60bb      	str	r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (pt_num < NUM_PTS) {
 8006e80:	7bfb      	ldrb	r3, [r7, #15]
 8006e82:	2b13      	cmp	r3, #19
 8006e84:	d807      	bhi.n	8006e96 <set_pt_upper_voltage+0x6a>
		pt_cal_upper_voltage[pt_num] = upper_voltage;
 8006e86:	7bfb      	ldrb	r3, [r7, #15]
 8006e88:	4a06      	ldr	r2, [pc, #24]	; (8006ea4 <set_pt_upper_voltage+0x78>)
 8006e8a:	009b      	lsls	r3, r3, #2
 8006e8c:	4413      	add	r3, r2
 8006e8e:	68ba      	ldr	r2, [r7, #8]
 8006e90:	601a      	str	r2, [r3, #0]
		save_nonvolatile_variables();
 8006e92:	f7fb f8c1 	bl	8002018 <save_nonvolatile_variables>
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006e96:	bf00      	nop
 8006e98:	3710      	adds	r7, #16
 8006e9a:	46bd      	mov	sp, r7
 8006e9c:	bd80      	pop	{r7, pc}
 8006e9e:	bf00      	nop
 8006ea0:	40240000 	.word	0x40240000
 8006ea4:	20000350 	.word	0x20000350

08006ea8 <set_pt_upper_pressure>:

void set_pt_upper_pressure(uint8_t* data, uint8_t* status){
 8006ea8:	b580      	push	{r7, lr}
 8006eaa:	b084      	sub	sp, #16
 8006eac:	af00      	add	r7, sp, #0
 8006eae:	6078      	str	r0, [r7, #4]
 8006eb0:	6039      	str	r1, [r7, #0]

	uint8_t pt_num = (data[0])/1;
 8006eb2:	687b      	ldr	r3, [r7, #4]
 8006eb4:	781b      	ldrb	r3, [r3, #0]
 8006eb6:	73fb      	strb	r3, [r7, #15]
	float pressure_range = (data[4]<<24|data[3]<<16|data[2]<<8|data[1])/1.0;
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	3304      	adds	r3, #4
 8006ebc:	781b      	ldrb	r3, [r3, #0]
 8006ebe:	061a      	lsls	r2, r3, #24
 8006ec0:	687b      	ldr	r3, [r7, #4]
 8006ec2:	3303      	adds	r3, #3
 8006ec4:	781b      	ldrb	r3, [r3, #0]
 8006ec6:	041b      	lsls	r3, r3, #16
 8006ec8:	431a      	orrs	r2, r3
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	3302      	adds	r3, #2
 8006ece:	781b      	ldrb	r3, [r3, #0]
 8006ed0:	021b      	lsls	r3, r3, #8
 8006ed2:	4313      	orrs	r3, r2
 8006ed4:	687a      	ldr	r2, [r7, #4]
 8006ed6:	3201      	adds	r2, #1
 8006ed8:	7812      	ldrb	r2, [r2, #0]
 8006eda:	4313      	orrs	r3, r2
 8006edc:	4618      	mov	r0, r3
 8006ede:	f7f9 fae5 	bl	80004ac <__aeabi_i2d>
 8006ee2:	4602      	mov	r2, r0
 8006ee4:	460b      	mov	r3, r1
 8006ee6:	4610      	mov	r0, r2
 8006ee8:	4619      	mov	r1, r3
 8006eea:	f7f9 fe19 	bl	8000b20 <__aeabi_d2f>
 8006eee:	4603      	mov	r3, r0
 8006ef0:	60bb      	str	r3, [r7, #8]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	if (pt_num < NUM_PTS) {
 8006ef2:	7bfb      	ldrb	r3, [r7, #15]
 8006ef4:	2b13      	cmp	r3, #19
 8006ef6:	d807      	bhi.n	8006f08 <set_pt_upper_pressure+0x60>
		pt_cal_upper_pressure[pt_num] = pressure_range;
 8006ef8:	7bfb      	ldrb	r3, [r7, #15]
 8006efa:	4a05      	ldr	r2, [pc, #20]	; (8006f10 <set_pt_upper_pressure+0x68>)
 8006efc:	009b      	lsls	r3, r3, #2
 8006efe:	4413      	add	r3, r2
 8006f00:	68ba      	ldr	r2, [r7, #8]
 8006f02:	601a      	str	r2, [r3, #0]
		save_nonvolatile_variables();
 8006f04:	f7fb f888 	bl	8002018 <save_nonvolatile_variables>
	}
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006f08:	bf00      	nop
 8006f0a:	3710      	adds	r7, #16
 8006f0c:	46bd      	mov	sp, r7
 8006f0e:	bd80      	pop	{r7, pc}
 8006f10:	200003a0 	.word	0x200003a0

08006f14 <refresh_calibrations>:

void refresh_calibrations(uint8_t* data, uint8_t* status){
 8006f14:	b580      	push	{r7, lr}
 8006f16:	b082      	sub	sp, #8
 8006f18:	af00      	add	r7, sp, #0
 8006f1a:	6078      	str	r0, [r7, #4]
 8006f1c:	6039      	str	r1, [r7, #0]

	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	send_calibration_data();
 8006f1e:	f7fe fc09 	bl	8005734 <send_calibration_data>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006f22:	bf00      	nop
 8006f24:	3708      	adds	r7, #8
 8006f26:	46bd      	mov	sp, r7
 8006f28:	bd80      	pop	{r7, pc}

08006f2a <send_gse_cmd>:

void send_gse_cmd(uint8_t* data, uint8_t* status){
 8006f2a:	b580      	push	{r7, lr}
 8006f2c:	b084      	sub	sp, #16
 8006f2e:	af00      	add	r7, sp, #0
 8006f30:	6078      	str	r0, [r7, #4]
 8006f32:	6039      	str	r1, [r7, #0]

	uint32_t vlv_num = (data[3]<<24|data[2]<<16|data[1]<<8|data[0])/1;
 8006f34:	687b      	ldr	r3, [r7, #4]
 8006f36:	3303      	adds	r3, #3
 8006f38:	781b      	ldrb	r3, [r3, #0]
 8006f3a:	061a      	lsls	r2, r3, #24
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	3302      	adds	r3, #2
 8006f40:	781b      	ldrb	r3, [r3, #0]
 8006f42:	041b      	lsls	r3, r3, #16
 8006f44:	431a      	orrs	r2, r3
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	3301      	adds	r3, #1
 8006f4a:	781b      	ldrb	r3, [r3, #0]
 8006f4c:	021b      	lsls	r3, r3, #8
 8006f4e:	4313      	orrs	r3, r2
 8006f50:	687a      	ldr	r2, [r7, #4]
 8006f52:	7812      	ldrb	r2, [r2, #0]
 8006f54:	4313      	orrs	r3, r2
 8006f56:	60fb      	str	r3, [r7, #12]
	uint8_t state = (data[4])/1;
 8006f58:	687b      	ldr	r3, [r7, #4]
 8006f5a:	791b      	ldrb	r3, [r3, #4]
 8006f5c:	72fb      	strb	r3, [r7, #11]
	
	// USER CODE BEGIN - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED
	send_gse_set_vlv_cmd(vlv_num, state);
 8006f5e:	7afb      	ldrb	r3, [r7, #11]
 8006f60:	4619      	mov	r1, r3
 8006f62:	68f8      	ldr	r0, [r7, #12]
 8006f64:	f7fa f900 	bl	8001168 <send_gse_set_vlv_cmd>
	// USER CODE END - MODIFICATIONS OUTSIDE THIS SECTION WILL BE DELETED

}
 8006f68:	bf00      	nop
 8006f6a:	3710      	adds	r7, #16
 8006f6c:	46bd      	mov	sp, r7
 8006f6e:	bd80      	pop	{r7, pc}

08006f70 <set_valve_channel>:
 8006f70:	b580      	push	{r7, lr}
 8006f72:	b084      	sub	sp, #16
 8006f74:	af00      	add	r7, sp, #0
 8006f76:	6078      	str	r0, [r7, #4]
 8006f78:	460b      	mov	r3, r1
 8006f7a:	70fb      	strb	r3, [r7, #3]
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	2b0d      	cmp	r3, #13
 8006f80:	d823      	bhi.n	8006fca <set_valve_channel+0x5a>
 8006f82:	4a14      	ldr	r2, [pc, #80]	; (8006fd4 <set_valve_channel+0x64>)
 8006f84:	687b      	ldr	r3, [r7, #4]
 8006f86:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8006f8a:	4a13      	ldr	r2, [pc, #76]	; (8006fd8 <set_valve_channel+0x68>)
 8006f8c:	687b      	ldr	r3, [r7, #4]
 8006f8e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8006f92:	78fa      	ldrb	r2, [r7, #3]
 8006f94:	4619      	mov	r1, r3
 8006f96:	f002 f93b 	bl	8009210 <HAL_GPIO_WritePin>
 8006f9a:	2201      	movs	r2, #1
 8006f9c:	687b      	ldr	r3, [r7, #4]
 8006f9e:	fa02 f303 	lsl.w	r3, r2, r3
 8006fa2:	60fb      	str	r3, [r7, #12]
 8006fa4:	78fa      	ldrb	r2, [r7, #3]
 8006fa6:	687b      	ldr	r3, [r7, #4]
 8006fa8:	fa02 f303 	lsl.w	r3, r2, r3
 8006fac:	60bb      	str	r3, [r7, #8]
 8006fae:	68fb      	ldr	r3, [r7, #12]
 8006fb0:	43da      	mvns	r2, r3
 8006fb2:	4b0a      	ldr	r3, [pc, #40]	; (8006fdc <set_valve_channel+0x6c>)
 8006fb4:	681b      	ldr	r3, [r3, #0]
 8006fb6:	4013      	ands	r3, r2
 8006fb8:	4a08      	ldr	r2, [pc, #32]	; (8006fdc <set_valve_channel+0x6c>)
 8006fba:	6013      	str	r3, [r2, #0]
 8006fbc:	4b07      	ldr	r3, [pc, #28]	; (8006fdc <set_valve_channel+0x6c>)
 8006fbe:	681a      	ldr	r2, [r3, #0]
 8006fc0:	68bb      	ldr	r3, [r7, #8]
 8006fc2:	4313      	orrs	r3, r2
 8006fc4:	4a05      	ldr	r2, [pc, #20]	; (8006fdc <set_valve_channel+0x6c>)
 8006fc6:	6013      	str	r3, [r2, #0]
 8006fc8:	e000      	b.n	8006fcc <set_valve_channel+0x5c>
 8006fca:	bf00      	nop
 8006fcc:	3710      	adds	r7, #16
 8006fce:	46bd      	mov	sp, r7
 8006fd0:	bd80      	pop	{r7, pc}
 8006fd2:	bf00      	nop
 8006fd4:	200001c8 	.word	0x200001c8
 8006fd8:	20000200 	.word	0x20000200
 8006fdc:	200003fc 	.word	0x200003fc

08006fe0 <Reset_Handler>:
 8006fe0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8007018 <LoopFillZerobss+0x14>
 8006fe4:	2100      	movs	r1, #0
 8006fe6:	e003      	b.n	8006ff0 <LoopCopyDataInit>

08006fe8 <CopyDataInit>:
 8006fe8:	4b0c      	ldr	r3, [pc, #48]	; (800701c <LoopFillZerobss+0x18>)
 8006fea:	585b      	ldr	r3, [r3, r1]
 8006fec:	5043      	str	r3, [r0, r1]
 8006fee:	3104      	adds	r1, #4

08006ff0 <LoopCopyDataInit>:
 8006ff0:	480b      	ldr	r0, [pc, #44]	; (8007020 <LoopFillZerobss+0x1c>)
 8006ff2:	4b0c      	ldr	r3, [pc, #48]	; (8007024 <LoopFillZerobss+0x20>)
 8006ff4:	1842      	adds	r2, r0, r1
 8006ff6:	429a      	cmp	r2, r3
 8006ff8:	d3f6      	bcc.n	8006fe8 <CopyDataInit>
 8006ffa:	4a0b      	ldr	r2, [pc, #44]	; (8007028 <LoopFillZerobss+0x24>)
 8006ffc:	e002      	b.n	8007004 <LoopFillZerobss>

08006ffe <FillZerobss>:
 8006ffe:	2300      	movs	r3, #0
 8007000:	f842 3b04 	str.w	r3, [r2], #4

08007004 <LoopFillZerobss>:
 8007004:	4b09      	ldr	r3, [pc, #36]	; (800702c <LoopFillZerobss+0x28>)
 8007006:	429a      	cmp	r2, r3
 8007008:	d3f9      	bcc.n	8006ffe <FillZerobss>
 800700a:	f7fe fe01 	bl	8005c10 <SystemInit>
 800700e:	f004 ff43 	bl	800be98 <__libc_init_array>
 8007012:	f7fa f96b 	bl	80012ec <main>
 8007016:	4770      	bx	lr
 8007018:	20020000 	.word	0x20020000
 800701c:	0800d058 	.word	0x0800d058
 8007020:	20000000 	.word	0x20000000
 8007024:	2000028c 	.word	0x2000028c
 8007028:	2000028c 	.word	0x2000028c
 800702c:	20002404 	.word	0x20002404

08007030 <ADC_IRQHandler>:
 8007030:	e7fe      	b.n	8007030 <ADC_IRQHandler>

08007032 <L6470_SPI_CS_delay>:
 8007032:	b480      	push	{r7}
 8007034:	b085      	sub	sp, #20
 8007036:	af00      	add	r7, sp, #0
 8007038:	6078      	str	r0, [r7, #4]
 800703a:	2300      	movs	r3, #0
 800703c:	73fb      	strb	r3, [r7, #15]
 800703e:	e003      	b.n	8007048 <L6470_SPI_CS_delay+0x16>
 8007040:	bf00      	nop
 8007042:	7bfb      	ldrb	r3, [r7, #15]
 8007044:	3301      	adds	r3, #1
 8007046:	73fb      	strb	r3, [r7, #15]
 8007048:	7bfb      	ldrb	r3, [r7, #15]
 800704a:	2b95      	cmp	r3, #149	; 0x95
 800704c:	d9f8      	bls.n	8007040 <L6470_SPI_CS_delay+0xe>
 800704e:	bf00      	nop
 8007050:	bf00      	nop
 8007052:	3714      	adds	r7, #20
 8007054:	46bd      	mov	sp, r7
 8007056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800705a:	4770      	bx	lr

0800705c <L6470_SPI_transmit_byte>:
 800705c:	b580      	push	{r7, lr}
 800705e:	b082      	sub	sp, #8
 8007060:	af00      	add	r7, sp, #0
 8007062:	6078      	str	r0, [r7, #4]
 8007064:	460b      	mov	r3, r1
 8007066:	70fb      	strb	r3, [r7, #3]
 8007068:	687b      	ldr	r3, [r7, #4]
 800706a:	6858      	ldr	r0, [r3, #4]
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	891b      	ldrh	r3, [r3, #8]
 8007070:	2200      	movs	r2, #0
 8007072:	4619      	mov	r1, r3
 8007074:	f002 f8cc 	bl	8009210 <HAL_GPIO_WritePin>
 8007078:	687b      	ldr	r3, [r7, #4]
 800707a:	6818      	ldr	r0, [r3, #0]
 800707c:	1cf9      	adds	r1, r7, #3
 800707e:	23ff      	movs	r3, #255	; 0xff
 8007080:	2201      	movs	r2, #1
 8007082:	f002 fe96 	bl	8009db2 <HAL_SPI_Transmit>
 8007086:	4603      	mov	r3, r0
 8007088:	461a      	mov	r2, r3
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	761a      	strb	r2, [r3, #24]
 800708e:	687b      	ldr	r3, [r7, #4]
 8007090:	6858      	ldr	r0, [r3, #4]
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	891b      	ldrh	r3, [r3, #8]
 8007096:	2201      	movs	r2, #1
 8007098:	4619      	mov	r1, r3
 800709a:	f002 f8b9 	bl	8009210 <HAL_GPIO_WritePin>
 800709e:	bf00      	nop
 80070a0:	3708      	adds	r7, #8
 80070a2:	46bd      	mov	sp, r7
 80070a4:	bd80      	pop	{r7, pc}

080070a6 <L6470_SPI_receive_byte>:
 80070a6:	b580      	push	{r7, lr}
 80070a8:	b084      	sub	sp, #16
 80070aa:	af00      	add	r7, sp, #0
 80070ac:	6078      	str	r0, [r7, #4]
 80070ae:	687b      	ldr	r3, [r7, #4]
 80070b0:	6858      	ldr	r0, [r3, #4]
 80070b2:	687b      	ldr	r3, [r7, #4]
 80070b4:	891b      	ldrh	r3, [r3, #8]
 80070b6:	2200      	movs	r2, #0
 80070b8:	4619      	mov	r1, r3
 80070ba:	f002 f8a9 	bl	8009210 <HAL_GPIO_WritePin>
 80070be:	687b      	ldr	r3, [r7, #4]
 80070c0:	6818      	ldr	r0, [r3, #0]
 80070c2:	f107 010f 	add.w	r1, r7, #15
 80070c6:	23ff      	movs	r3, #255	; 0xff
 80070c8:	2201      	movs	r2, #1
 80070ca:	f002 ffae 	bl	800a02a <HAL_SPI_Receive>
 80070ce:	4603      	mov	r3, r0
 80070d0:	461a      	mov	r2, r3
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	761a      	strb	r2, [r3, #24]
 80070d6:	687b      	ldr	r3, [r7, #4]
 80070d8:	6858      	ldr	r0, [r3, #4]
 80070da:	687b      	ldr	r3, [r7, #4]
 80070dc:	891b      	ldrh	r3, [r3, #8]
 80070de:	2201      	movs	r2, #1
 80070e0:	4619      	mov	r1, r3
 80070e2:	f002 f895 	bl	8009210 <HAL_GPIO_WritePin>
 80070e6:	7bfb      	ldrb	r3, [r7, #15]
 80070e8:	4618      	mov	r0, r3
 80070ea:	3710      	adds	r7, #16
 80070ec:	46bd      	mov	sp, r7
 80070ee:	bd80      	pop	{r7, pc}

080070f0 <L6470_write_register>:
 80070f0:	b580      	push	{r7, lr}
 80070f2:	b086      	sub	sp, #24
 80070f4:	af00      	add	r7, sp, #0
 80070f6:	60f8      	str	r0, [r7, #12]
 80070f8:	460b      	mov	r3, r1
 80070fa:	607a      	str	r2, [r7, #4]
 80070fc:	72fb      	strb	r3, [r7, #11]
 80070fe:	7afb      	ldrb	r3, [r7, #11]
 8007100:	75fb      	strb	r3, [r7, #23]
 8007102:	2300      	movs	r3, #0
 8007104:	613b      	str	r3, [r7, #16]
 8007106:	b672      	cpsid	i
 8007108:	bf00      	nop
 800710a:	7dfb      	ldrb	r3, [r7, #23]
 800710c:	4619      	mov	r1, r3
 800710e:	68f8      	ldr	r0, [r7, #12]
 8007110:	f7ff ffa4 	bl	800705c <L6470_SPI_transmit_byte>
 8007114:	7afb      	ldrb	r3, [r7, #11]
 8007116:	2b01      	cmp	r3, #1
 8007118:	d005      	beq.n	8007126 <L6470_write_register+0x36>
 800711a:	7afb      	ldrb	r3, [r7, #11]
 800711c:	2b03      	cmp	r3, #3
 800711e:	d002      	beq.n	8007126 <L6470_write_register+0x36>
 8007120:	7afb      	ldrb	r3, [r7, #11]
 8007122:	2b04      	cmp	r3, #4
 8007124:	d10d      	bne.n	8007142 <L6470_write_register+0x52>
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	613b      	str	r3, [r7, #16]
 800712a:	693b      	ldr	r3, [r7, #16]
 800712c:	0c1b      	lsrs	r3, r3, #16
 800712e:	613b      	str	r3, [r7, #16]
 8007130:	68f8      	ldr	r0, [r7, #12]
 8007132:	f7ff ff7e 	bl	8007032 <L6470_SPI_CS_delay>
 8007136:	693b      	ldr	r3, [r7, #16]
 8007138:	b2db      	uxtb	r3, r3
 800713a:	4619      	mov	r1, r3
 800713c:	68f8      	ldr	r0, [r7, #12]
 800713e:	f7ff ff8d 	bl	800705c <L6470_SPI_transmit_byte>
 8007142:	7afb      	ldrb	r3, [r7, #11]
 8007144:	2b01      	cmp	r3, #1
 8007146:	d020      	beq.n	800718a <L6470_write_register+0x9a>
 8007148:	7afb      	ldrb	r3, [r7, #11]
 800714a:	2b02      	cmp	r3, #2
 800714c:	d01d      	beq.n	800718a <L6470_write_register+0x9a>
 800714e:	7afb      	ldrb	r3, [r7, #11]
 8007150:	2b03      	cmp	r3, #3
 8007152:	d01a      	beq.n	800718a <L6470_write_register+0x9a>
 8007154:	7afb      	ldrb	r3, [r7, #11]
 8007156:	2b04      	cmp	r3, #4
 8007158:	d017      	beq.n	800718a <L6470_write_register+0x9a>
 800715a:	7afb      	ldrb	r3, [r7, #11]
 800715c:	2b05      	cmp	r3, #5
 800715e:	d014      	beq.n	800718a <L6470_write_register+0x9a>
 8007160:	7afb      	ldrb	r3, [r7, #11]
 8007162:	2b06      	cmp	r3, #6
 8007164:	d011      	beq.n	800718a <L6470_write_register+0x9a>
 8007166:	7afb      	ldrb	r3, [r7, #11]
 8007168:	2b07      	cmp	r3, #7
 800716a:	d00e      	beq.n	800718a <L6470_write_register+0x9a>
 800716c:	7afb      	ldrb	r3, [r7, #11]
 800716e:	2b08      	cmp	r3, #8
 8007170:	d00b      	beq.n	800718a <L6470_write_register+0x9a>
 8007172:	7afb      	ldrb	r3, [r7, #11]
 8007174:	2b15      	cmp	r3, #21
 8007176:	d008      	beq.n	800718a <L6470_write_register+0x9a>
 8007178:	7afb      	ldrb	r3, [r7, #11]
 800717a:	2b0d      	cmp	r3, #13
 800717c:	d005      	beq.n	800718a <L6470_write_register+0x9a>
 800717e:	7afb      	ldrb	r3, [r7, #11]
 8007180:	2b18      	cmp	r3, #24
 8007182:	d002      	beq.n	800718a <L6470_write_register+0x9a>
 8007184:	7afb      	ldrb	r3, [r7, #11]
 8007186:	2b19      	cmp	r3, #25
 8007188:	d10d      	bne.n	80071a6 <L6470_write_register+0xb6>
 800718a:	687b      	ldr	r3, [r7, #4]
 800718c:	613b      	str	r3, [r7, #16]
 800718e:	693b      	ldr	r3, [r7, #16]
 8007190:	0a1b      	lsrs	r3, r3, #8
 8007192:	613b      	str	r3, [r7, #16]
 8007194:	68f8      	ldr	r0, [r7, #12]
 8007196:	f7ff ff4c 	bl	8007032 <L6470_SPI_CS_delay>
 800719a:	693b      	ldr	r3, [r7, #16]
 800719c:	b2db      	uxtb	r3, r3
 800719e:	4619      	mov	r1, r3
 80071a0:	68f8      	ldr	r0, [r7, #12]
 80071a2:	f7ff ff5b 	bl	800705c <L6470_SPI_transmit_byte>
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	613b      	str	r3, [r7, #16]
 80071aa:	68f8      	ldr	r0, [r7, #12]
 80071ac:	f7ff ff41 	bl	8007032 <L6470_SPI_CS_delay>
 80071b0:	693b      	ldr	r3, [r7, #16]
 80071b2:	b2db      	uxtb	r3, r3
 80071b4:	4619      	mov	r1, r3
 80071b6:	68f8      	ldr	r0, [r7, #12]
 80071b8:	f7ff ff50 	bl	800705c <L6470_SPI_transmit_byte>
 80071bc:	68f8      	ldr	r0, [r7, #12]
 80071be:	f7ff ff38 	bl	8007032 <L6470_SPI_CS_delay>
 80071c2:	b662      	cpsie	i
 80071c4:	bf00      	nop
 80071c6:	bf00      	nop
 80071c8:	3718      	adds	r7, #24
 80071ca:	46bd      	mov	sp, r7
 80071cc:	bd80      	pop	{r7, pc}
	...

080071d0 <L6470_get_status>:
 80071d0:	b580      	push	{r7, lr}
 80071d2:	b086      	sub	sp, #24
 80071d4:	af00      	add	r7, sp, #0
 80071d6:	6078      	str	r0, [r7, #4]
 80071d8:	23d0      	movs	r3, #208	; 0xd0
 80071da:	75fb      	strb	r3, [r7, #23]
 80071dc:	2300      	movs	r3, #0
 80071de:	81bb      	strh	r3, [r7, #12]
 80071e0:	b672      	cpsid	i
 80071e2:	bf00      	nop
 80071e4:	7dfb      	ldrb	r3, [r7, #23]
 80071e6:	4619      	mov	r1, r3
 80071e8:	6878      	ldr	r0, [r7, #4]
 80071ea:	f7ff ff37 	bl	800705c <L6470_SPI_transmit_byte>
 80071ee:	6878      	ldr	r0, [r7, #4]
 80071f0:	f7ff ff1f 	bl	8007032 <L6470_SPI_CS_delay>
 80071f4:	6878      	ldr	r0, [r7, #4]
 80071f6:	f7ff ff56 	bl	80070a6 <L6470_SPI_receive_byte>
 80071fa:	4603      	mov	r3, r0
 80071fc:	733b      	strb	r3, [r7, #12]
 80071fe:	6878      	ldr	r0, [r7, #4]
 8007200:	f7ff ff17 	bl	8007032 <L6470_SPI_CS_delay>
 8007204:	6878      	ldr	r0, [r7, #4]
 8007206:	f7ff ff4e 	bl	80070a6 <L6470_SPI_receive_byte>
 800720a:	4603      	mov	r3, r0
 800720c:	737b      	strb	r3, [r7, #13]
 800720e:	b662      	cpsie	i
 8007210:	bf00      	nop
 8007212:	7b3b      	ldrb	r3, [r7, #12]
 8007214:	021b      	lsls	r3, r3, #8
 8007216:	b21a      	sxth	r2, r3
 8007218:	7b7b      	ldrb	r3, [r7, #13]
 800721a:	b21b      	sxth	r3, r3
 800721c:	4313      	orrs	r3, r2
 800721e:	b21b      	sxth	r3, r3
 8007220:	82bb      	strh	r3, [r7, #20]
 8007222:	8abb      	ldrh	r3, [r7, #20]
 8007224:	b2db      	uxtb	r3, r3
 8007226:	f003 0301 	and.w	r3, r3, #1
 800722a:	b2da      	uxtb	r2, r3
 800722c:	687b      	ldr	r3, [r7, #4]
 800722e:	76da      	strb	r2, [r3, #27]
 8007230:	8abb      	ldrh	r3, [r7, #20]
 8007232:	f003 0302 	and.w	r3, r3, #2
 8007236:	2b00      	cmp	r3, #0
 8007238:	bf14      	ite	ne
 800723a:	2301      	movne	r3, #1
 800723c:	2300      	moveq	r3, #0
 800723e:	b2db      	uxtb	r3, r3
 8007240:	461a      	mov	r2, r3
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8007248:	8abb      	ldrh	r3, [r7, #20]
 800724a:	f003 0304 	and.w	r3, r3, #4
 800724e:	2b00      	cmp	r3, #0
 8007250:	bf14      	ite	ne
 8007252:	2301      	movne	r3, #1
 8007254:	2300      	moveq	r3, #0
 8007256:	b2db      	uxtb	r3, r3
 8007258:	461a      	mov	r2, r3
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	771a      	strb	r2, [r3, #28]
 800725e:	8abb      	ldrh	r3, [r7, #20]
 8007260:	f003 0308 	and.w	r3, r3, #8
 8007264:	2b00      	cmp	r3, #0
 8007266:	bf14      	ite	ne
 8007268:	2301      	movne	r3, #1
 800726a:	2300      	moveq	r3, #0
 800726c:	b2db      	uxtb	r3, r3
 800726e:	461a      	mov	r2, r3
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	775a      	strb	r2, [r3, #29]
 8007274:	8abb      	ldrh	r3, [r7, #20]
 8007276:	f003 0310 	and.w	r3, r3, #16
 800727a:	2b00      	cmp	r3, #0
 800727c:	bf14      	ite	ne
 800727e:	2301      	movne	r3, #1
 8007280:	2300      	moveq	r3, #0
 8007282:	b2db      	uxtb	r3, r3
 8007284:	461a      	mov	r2, r3
 8007286:	687b      	ldr	r3, [r7, #4]
 8007288:	779a      	strb	r2, [r3, #30]
 800728a:	8abb      	ldrh	r3, [r7, #20]
 800728c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007290:	2b00      	cmp	r3, #0
 8007292:	bf14      	ite	ne
 8007294:	2301      	movne	r3, #1
 8007296:	2300      	moveq	r3, #0
 8007298:	b2db      	uxtb	r3, r3
 800729a:	461a      	mov	r2, r3
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	77da      	strb	r2, [r3, #31]
 80072a0:	8abb      	ldrh	r3, [r7, #20]
 80072a2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80072a6:	2b00      	cmp	r3, #0
 80072a8:	bf14      	ite	ne
 80072aa:	2301      	movne	r3, #1
 80072ac:	2300      	moveq	r3, #0
 80072ae:	b2db      	uxtb	r3, r3
 80072b0:	461a      	mov	r2, r3
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	f883 2020 	strb.w	r2, [r3, #32]
 80072b8:	8abb      	ldrh	r3, [r7, #20]
 80072ba:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80072be:	2b00      	cmp	r3, #0
 80072c0:	bf14      	ite	ne
 80072c2:	2301      	movne	r3, #1
 80072c4:	2300      	moveq	r3, #0
 80072c6:	b2db      	uxtb	r3, r3
 80072c8:	461a      	mov	r2, r3
 80072ca:	687b      	ldr	r3, [r7, #4]
 80072cc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80072d0:	8abb      	ldrh	r3, [r7, #20]
 80072d2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80072d6:	2b00      	cmp	r3, #0
 80072d8:	bf14      	ite	ne
 80072da:	2301      	movne	r3, #1
 80072dc:	2300      	moveq	r3, #0
 80072de:	b2db      	uxtb	r3, r3
 80072e0:	461a      	mov	r2, r3
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
 80072e8:	8abb      	ldrh	r3, [r7, #20]
 80072ea:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80072ee:	2b00      	cmp	r3, #0
 80072f0:	bf14      	ite	ne
 80072f2:	2301      	movne	r3, #1
 80072f4:	2300      	moveq	r3, #0
 80072f6:	b2db      	uxtb	r3, r3
 80072f8:	461a      	mov	r2, r3
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
 8007300:	8abb      	ldrh	r3, [r7, #20]
 8007302:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007306:	2b00      	cmp	r3, #0
 8007308:	bf14      	ite	ne
 800730a:	2301      	movne	r3, #1
 800730c:	2300      	moveq	r3, #0
 800730e:	b2db      	uxtb	r3, r3
 8007310:	461a      	mov	r2, r3
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8007318:	8abb      	ldrh	r3, [r7, #20]
 800731a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800731e:	2b00      	cmp	r3, #0
 8007320:	bf14      	ite	ne
 8007322:	2301      	movne	r3, #1
 8007324:	2300      	moveq	r3, #0
 8007326:	b2db      	uxtb	r3, r3
 8007328:	461a      	mov	r2, r3
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8007330:	8abb      	ldrh	r3, [r7, #20]
 8007332:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8007336:	2b00      	cmp	r3, #0
 8007338:	bf14      	ite	ne
 800733a:	2301      	movne	r3, #1
 800733c:	2300      	moveq	r3, #0
 800733e:	b2db      	uxtb	r3, r3
 8007340:	461a      	mov	r2, r3
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 8007348:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 800734c:	b29b      	uxth	r3, r3
 800734e:	0bdb      	lsrs	r3, r3, #15
 8007350:	b2db      	uxtb	r3, r3
 8007352:	461a      	mov	r2, r3
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	f883 2027 	strb.w	r2, [r3, #39]	; 0x27
 800735a:	8abb      	ldrh	r3, [r7, #20]
 800735c:	b2db      	uxtb	r3, r3
 800735e:	f003 0320 	and.w	r3, r3, #32
 8007362:	74fb      	strb	r3, [r7, #19]
 8007364:	8abb      	ldrh	r3, [r7, #20]
 8007366:	b2db      	uxtb	r3, r3
 8007368:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800736c:	74bb      	strb	r3, [r7, #18]
 800736e:	7cfb      	ldrb	r3, [r7, #19]
 8007370:	005b      	lsls	r3, r3, #1
 8007372:	b25a      	sxtb	r2, r3
 8007374:	f997 3012 	ldrsb.w	r3, [r7, #18]
 8007378:	4313      	orrs	r3, r2
 800737a:	b25b      	sxtb	r3, r3
 800737c:	747b      	strb	r3, [r7, #17]
 800737e:	7c7b      	ldrb	r3, [r7, #17]
 8007380:	2b03      	cmp	r3, #3
 8007382:	d81b      	bhi.n	80073bc <L6470_get_status+0x1ec>
 8007384:	a201      	add	r2, pc, #4	; (adr r2, 800738c <L6470_get_status+0x1bc>)
 8007386:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800738a:	bf00      	nop
 800738c:	0800739d 	.word	0x0800739d
 8007390:	080073a5 	.word	0x080073a5
 8007394:	080073ad 	.word	0x080073ad
 8007398:	080073b5 	.word	0x080073b5
 800739c:	687b      	ldr	r3, [r7, #4]
 800739e:	2200      	movs	r2, #0
 80073a0:	769a      	strb	r2, [r3, #26]
 80073a2:	e00c      	b.n	80073be <L6470_get_status+0x1ee>
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	2201      	movs	r2, #1
 80073a8:	769a      	strb	r2, [r3, #26]
 80073aa:	e008      	b.n	80073be <L6470_get_status+0x1ee>
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	2202      	movs	r2, #2
 80073b0:	769a      	strb	r2, [r3, #26]
 80073b2:	e004      	b.n	80073be <L6470_get_status+0x1ee>
 80073b4:	687b      	ldr	r3, [r7, #4]
 80073b6:	2203      	movs	r2, #3
 80073b8:	769a      	strb	r2, [r3, #26]
 80073ba:	e000      	b.n	80073be <L6470_get_status+0x1ee>
 80073bc:	bf00      	nop
 80073be:	bf00      	nop
 80073c0:	3718      	adds	r7, #24
 80073c2:	46bd      	mov	sp, r7
 80073c4:	bd80      	pop	{r7, pc}
 80073c6:	bf00      	nop

080073c8 <L6470_init_motor>:
 80073c8:	b580      	push	{r7, lr}
 80073ca:	b084      	sub	sp, #16
 80073cc:	af00      	add	r7, sp, #0
 80073ce:	60f8      	str	r0, [r7, #12]
 80073d0:	460b      	mov	r3, r1
 80073d2:	ed87 0a01 	vstr	s0, [r7, #4]
 80073d6:	72fb      	strb	r3, [r7, #11]
 80073d8:	68f8      	ldr	r0, [r7, #12]
 80073da:	f7ff fef9 	bl	80071d0 <L6470_get_status>
 80073de:	68fb      	ldr	r3, [r7, #12]
 80073e0:	7afa      	ldrb	r2, [r7, #11]
 80073e2:	765a      	strb	r2, [r3, #25]
 80073e4:	68f8      	ldr	r0, [r7, #12]
 80073e6:	f000 f869 	bl	80074bc <L6470_zero_motor>
 80073ea:	7afb      	ldrb	r3, [r7, #11]
 80073ec:	461a      	mov	r2, r3
 80073ee:	2116      	movs	r1, #22
 80073f0:	68f8      	ldr	r0, [r7, #12]
 80073f2:	f7ff fe7d 	bl	80070f0 <L6470_write_register>
 80073f6:	68fb      	ldr	r3, [r7, #12]
 80073f8:	687a      	ldr	r2, [r7, #4]
 80073fa:	62da      	str	r2, [r3, #44]	; 0x2c
 80073fc:	68f8      	ldr	r0, [r7, #12]
 80073fe:	f000 f873 	bl	80074e8 <L6470_stop_motor>
 8007402:	bf00      	nop
 8007404:	3710      	adds	r7, #16
 8007406:	46bd      	mov	sp, r7
 8007408:	bd80      	pop	{r7, pc}

0800740a <L6470_goto_motor_pos>:
 800740a:	b580      	push	{r7, lr}
 800740c:	b084      	sub	sp, #16
 800740e:	af00      	add	r7, sp, #0
 8007410:	6078      	str	r0, [r7, #4]
 8007412:	ed87 0a00 	vstr	s0, [r7]
 8007416:	2300      	movs	r3, #0
 8007418:	60fb      	str	r3, [r7, #12]
 800741a:	edd7 7a00 	vldr	s15, [r7]
 800741e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007426:	d514      	bpl.n	8007452 <L6470_goto_motor_pos+0x48>
 8007428:	edd7 7a00 	vldr	s15, [r7]
 800742c:	eef1 6a67 	vneg.f32	s13, s15
 8007430:	687b      	ldr	r3, [r7, #4]
 8007432:	ed93 7a0b 	vldr	s14, [r3, #44]	; 0x2c
 8007436:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800743a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800743e:	ee17 3a90 	vmov	r3, s15
 8007442:	60fb      	str	r3, [r7, #12]
 8007444:	68fb      	ldr	r3, [r7, #12]
 8007446:	3b01      	subs	r3, #1
 8007448:	60fb      	str	r3, [r7, #12]
 800744a:	68fb      	ldr	r3, [r7, #12]
 800744c:	43db      	mvns	r3, r3
 800744e:	60fb      	str	r3, [r7, #12]
 8007450:	e00b      	b.n	800746a <L6470_goto_motor_pos+0x60>
 8007452:	687b      	ldr	r3, [r7, #4]
 8007454:	ed93 7a0b 	vldr	s14, [r3, #44]	; 0x2c
 8007458:	edd7 6a00 	vldr	s13, [r7]
 800745c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007460:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007464:	ee17 3a90 	vmov	r3, s15
 8007468:	60fb      	str	r3, [r7, #12]
 800746a:	b672      	cpsid	i
 800746c:	bf00      	nop
 800746e:	2160      	movs	r1, #96	; 0x60
 8007470:	6878      	ldr	r0, [r7, #4]
 8007472:	f7ff fdf3 	bl	800705c <L6470_SPI_transmit_byte>
 8007476:	6878      	ldr	r0, [r7, #4]
 8007478:	f7ff fddb 	bl	8007032 <L6470_SPI_CS_delay>
 800747c:	68fb      	ldr	r3, [r7, #12]
 800747e:	0c1b      	lsrs	r3, r3, #16
 8007480:	b2db      	uxtb	r3, r3
 8007482:	4619      	mov	r1, r3
 8007484:	6878      	ldr	r0, [r7, #4]
 8007486:	f7ff fde9 	bl	800705c <L6470_SPI_transmit_byte>
 800748a:	6878      	ldr	r0, [r7, #4]
 800748c:	f7ff fdd1 	bl	8007032 <L6470_SPI_CS_delay>
 8007490:	68fb      	ldr	r3, [r7, #12]
 8007492:	0a1b      	lsrs	r3, r3, #8
 8007494:	b2db      	uxtb	r3, r3
 8007496:	4619      	mov	r1, r3
 8007498:	6878      	ldr	r0, [r7, #4]
 800749a:	f7ff fddf 	bl	800705c <L6470_SPI_transmit_byte>
 800749e:	6878      	ldr	r0, [r7, #4]
 80074a0:	f7ff fdc7 	bl	8007032 <L6470_SPI_CS_delay>
 80074a4:	68fb      	ldr	r3, [r7, #12]
 80074a6:	b2db      	uxtb	r3, r3
 80074a8:	4619      	mov	r1, r3
 80074aa:	6878      	ldr	r0, [r7, #4]
 80074ac:	f7ff fdd6 	bl	800705c <L6470_SPI_transmit_byte>
 80074b0:	b662      	cpsie	i
 80074b2:	bf00      	nop
 80074b4:	bf00      	nop
 80074b6:	3710      	adds	r7, #16
 80074b8:	46bd      	mov	sp, r7
 80074ba:	bd80      	pop	{r7, pc}

080074bc <L6470_zero_motor>:
 80074bc:	b580      	push	{r7, lr}
 80074be:	b084      	sub	sp, #16
 80074c0:	af00      	add	r7, sp, #0
 80074c2:	6078      	str	r0, [r7, #4]
 80074c4:	23d8      	movs	r3, #216	; 0xd8
 80074c6:	73fb      	strb	r3, [r7, #15]
 80074c8:	b672      	cpsid	i
 80074ca:	bf00      	nop
 80074cc:	7bfb      	ldrb	r3, [r7, #15]
 80074ce:	4619      	mov	r1, r3
 80074d0:	6878      	ldr	r0, [r7, #4]
 80074d2:	f7ff fdc3 	bl	800705c <L6470_SPI_transmit_byte>
 80074d6:	6878      	ldr	r0, [r7, #4]
 80074d8:	f7ff fdab 	bl	8007032 <L6470_SPI_CS_delay>
 80074dc:	b662      	cpsie	i
 80074de:	bf00      	nop
 80074e0:	bf00      	nop
 80074e2:	3710      	adds	r7, #16
 80074e4:	46bd      	mov	sp, r7
 80074e6:	bd80      	pop	{r7, pc}

080074e8 <L6470_stop_motor>:
 80074e8:	b580      	push	{r7, lr}
 80074ea:	b082      	sub	sp, #8
 80074ec:	af00      	add	r7, sp, #0
 80074ee:	6078      	str	r0, [r7, #4]
 80074f0:	21a8      	movs	r1, #168	; 0xa8
 80074f2:	6878      	ldr	r0, [r7, #4]
 80074f4:	f7ff fdb2 	bl	800705c <L6470_SPI_transmit_byte>
 80074f8:	bf00      	nop
 80074fa:	3708      	adds	r7, #8
 80074fc:	46bd      	mov	sp, r7
 80074fe:	bd80      	pop	{r7, pc}

08007500 <init_board>:
// Prviate function prototypes here
static inline uint8_t validate_command(int16_t cmd_index, uint16_t data_sz);

// Private function prototypes end

void init_board(uint8_t board_addr) {
 8007500:	b480      	push	{r7}
 8007502:	b083      	sub	sp, #12
 8007504:	af00      	add	r7, sp, #0
 8007506:	4603      	mov	r3, r0
 8007508:	71fb      	strb	r3, [r7, #7]
    CLB_receive_header.num_packets = 0;
 800750a:	4b06      	ldr	r3, [pc, #24]	; (8007524 <init_board+0x24>)
 800750c:	2200      	movs	r2, #0
 800750e:	711a      	strb	r2, [r3, #4]
	CLB_board_addr = board_addr;
 8007510:	4a05      	ldr	r2, [pc, #20]	; (8007528 <init_board+0x28>)
 8007512:	79fb      	ldrb	r3, [r7, #7]
 8007514:	7013      	strb	r3, [r2, #0]
}
 8007516:	bf00      	nop
 8007518:	370c      	adds	r7, #12
 800751a:	46bd      	mov	sp, r7
 800751c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007520:	4770      	bx	lr
 8007522:	bf00      	nop
 8007524:	200009b8 	.word	0x200009b8
 8007528:	2000073f 	.word	0x2000073f

0800752c <init_data>:

void init_data(uint8_t *buffer, int16_t buffer_sz, CLB_Packet_Header* header) {
 800752c:	b580      	push	{r7, lr}
 800752e:	b084      	sub	sp, #16
 8007530:	af00      	add	r7, sp, #0
 8007532:	60f8      	str	r0, [r7, #12]
 8007534:	460b      	mov	r3, r1
 8007536:	607a      	str	r2, [r7, #4]
 8007538:	817b      	strh	r3, [r7, #10]
	if (buffer_sz == -1) {	// standard telem
 800753a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800753e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007542:	d11b      	bne.n	800757c <init_data+0x50>
	    // repack CLB_telem_data

		if (header->packet_type == 0) {  // Normal telem
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	781b      	ldrb	r3, [r3, #0]
 8007548:	2b00      	cmp	r3, #0
 800754a:	d109      	bne.n	8007560 <init_data+0x34>
			pack_telem_data(CLB_telem_data);
 800754c:	4812      	ldr	r0, [pc, #72]	; (8007598 <init_data+0x6c>)
 800754e:	f7fc f979 	bl	8003844 <pack_telem_data>
			CLB_buffer = CLB_telem_data;
 8007552:	4b12      	ldr	r3, [pc, #72]	; (800759c <init_data+0x70>)
 8007554:	4a10      	ldr	r2, [pc, #64]	; (8007598 <init_data+0x6c>)
 8007556:	601a      	str	r2, [r3, #0]
			CLB_buffer_sz = CLB_NUM_TELEM_ITEMS;
 8007558:	4b11      	ldr	r3, [pc, #68]	; (80075a0 <init_data+0x74>)
 800755a:	22f1      	movs	r2, #241	; 0xf1
 800755c:	801a      	strh	r2, [r3, #0]
 800755e:	e013      	b.n	8007588 <init_data+0x5c>
		}

//#ifdef PACK_CALIBRATION_DEFINES_H
		else if (header->packet_type == 2) {  // Calibration packet
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	781b      	ldrb	r3, [r3, #0]
 8007564:	2b02      	cmp	r3, #2
 8007566:	d10f      	bne.n	8007588 <init_data+0x5c>
			pack_calibration_data(CLB_calibration_data);
 8007568:	480e      	ldr	r0, [pc, #56]	; (80075a4 <init_data+0x78>)
 800756a:	f7fb f935 	bl	80027d8 <pack_calibration_data>
			CLB_buffer = CLB_calibration_data;
 800756e:	4b0b      	ldr	r3, [pc, #44]	; (800759c <init_data+0x70>)
 8007570:	4a0c      	ldr	r2, [pc, #48]	; (80075a4 <init_data+0x78>)
 8007572:	601a      	str	r2, [r3, #0]
			CLB_buffer_sz = CLB_NUM_CALIBRATION_ITEMS;
 8007574:	4b0a      	ldr	r3, [pc, #40]	; (80075a0 <init_data+0x74>)
 8007576:	2284      	movs	r2, #132	; 0x84
 8007578:	801a      	strh	r2, [r3, #0]
 800757a:	e005      	b.n	8007588 <init_data+0x5c>
		}
//#endif

	} else {				// custom telem
		CLB_buffer = buffer;
 800757c:	4a07      	ldr	r2, [pc, #28]	; (800759c <init_data+0x70>)
 800757e:	68fb      	ldr	r3, [r7, #12]
 8007580:	6013      	str	r3, [r2, #0]
		CLB_buffer_sz = buffer_sz;
 8007582:	897a      	ldrh	r2, [r7, #10]
 8007584:	4b06      	ldr	r3, [pc, #24]	; (80075a0 <init_data+0x74>)
 8007586:	801a      	strh	r2, [r3, #0]
	}
	CLB_header = header;
 8007588:	4a07      	ldr	r2, [pc, #28]	; (80075a8 <init_data+0x7c>)
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	6013      	str	r3, [r2, #0]
}
 800758e:	bf00      	nop
 8007590:	3710      	adds	r7, #16
 8007592:	46bd      	mov	sp, r7
 8007594:	bd80      	pop	{r7, pc}
 8007596:	bf00      	nop
 8007598:	200008c4 	.word	0x200008c4
 800759c:	2000063c 	.word	0x2000063c
 80075a0:	200009b6 	.word	0x200009b6
 80075a4:	20000840 	.word	0x20000840
 80075a8:	200009c4 	.word	0x200009c4

080075ac <send_data>:

uint8_t send_data(CLB_send_data_info* info, uint8_t type) {
 80075ac:	b590      	push	{r4, r7, lr}
 80075ae:	b08d      	sub	sp, #52	; 0x34
 80075b0:	af00      	add	r7, sp, #0
 80075b2:	6078      	str	r0, [r7, #4]
 80075b4:	460b      	mov	r3, r1
 80075b6:	70fb      	strb	r3, [r7, #3]
		2. Stuff packet from buffer
		3. Send packet via UART
		4. Repeats steps 2-3 until buffer is fully transmitted
		5. Return status/errors in transmission if they exist
	*/
	uint8_t status		= CLB_nominal;			// to be used for error codes
 80075b8:	2300      	movs	r3, #0
 80075ba:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	uint32_t flash_pos 	= 0;
 80075be:	2300      	movs	r3, #0
 80075c0:	62bb      	str	r3, [r7, #40]	; 0x28
	uint16_t clb_pos 	= 0;					// position in clb buffer
 80075c2:	2300      	movs	r3, #0
 80075c4:	84fb      	strh	r3, [r7, #38]	; 0x26
	uint16_t clb_sz = CLB_buffer_sz;			// clb buffer sz
 80075c6:	4b6c      	ldr	r3, [pc, #432]	; (8007778 <send_data+0x1cc>)
 80075c8:	881b      	ldrh	r3, [r3, #0]
 80075ca:	83fb      	strh	r3, [r7, #30]
	uint16_t ping_pos = 0;						// position in ping buffer
 80075cc:	2300      	movs	r3, #0
 80075ce:	84bb      	strh	r3, [r7, #36]	; 0x24
	uint16_t ping_sz = PING_MAX_PACKET_SIZE;	// packet size
 80075d0:	23fd      	movs	r3, #253	; 0xfd
 80075d2:	83bb      	strh	r3, [r7, #28]

	// Note: assumes that header sz is less than 255 bytes
	uint8_t header_buffer[CLB_HEADER_SZ] = {0};
 80075d4:	2300      	movs	r3, #0
 80075d6:	60bb      	str	r3, [r7, #8]
 80075d8:	f107 030c 	add.w	r3, r7, #12
 80075dc:	2200      	movs	r2, #0
 80075de:	601a      	str	r2, [r3, #0]
 80075e0:	605a      	str	r2, [r3, #4]
	CLB_header->checksum = compute_checksum();
 80075e2:	4b66      	ldr	r3, [pc, #408]	; (800777c <send_data+0x1d0>)
 80075e4:	681c      	ldr	r4, [r3, #0]
 80075e6:	f000 fa3f 	bl	8007a68 <compute_checksum>
 80075ea:	4603      	mov	r3, r0
 80075ec:	80e3      	strh	r3, [r4, #6]
	CLB_header->num_packets = compute_packet_sz();
 80075ee:	4b63      	ldr	r3, [pc, #396]	; (800777c <send_data+0x1d0>)
 80075f0:	681c      	ldr	r4, [r3, #0]
 80075f2:	f000 fa41 	bl	8007a78 <compute_packet_sz>
 80075f6:	4603      	mov	r3, r0
 80075f8:	7123      	strb	r3, [r4, #4]
	pack_header(CLB_header, header_buffer);
 80075fa:	4b60      	ldr	r3, [pc, #384]	; (800777c <send_data+0x1d0>)
 80075fc:	681b      	ldr	r3, [r3, #0]
 80075fe:	f107 0208 	add.w	r2, r7, #8
 8007602:	4611      	mov	r1, r2
 8007604:	4618      	mov	r0, r3
 8007606:	f000 f9b1 	bl	800796c <pack_header>
	pack_packet(header_buffer, CLB_ping_packet+ping_pos, CLB_HEADER_SZ);
 800760a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800760c:	4a5c      	ldr	r2, [pc, #368]	; (8007780 <send_data+0x1d4>)
 800760e:	1899      	adds	r1, r3, r2
 8007610:	f107 0308 	add.w	r3, r7, #8
 8007614:	220c      	movs	r2, #12
 8007616:	4618      	mov	r0, r3
 8007618:	f000 f9f9 	bl	8007a0e <pack_packet>
	ping_pos += CLB_HEADER_SZ;
 800761c:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800761e:	330c      	adds	r3, #12
 8007620:	84bb      	strh	r3, [r7, #36]	; 0x24

	uint8_t send_termination_bit = 0;
 8007622:	2300      	movs	r3, #0
 8007624:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	while (clb_pos < CLB_buffer_sz) {
 8007628:	e08c      	b.n	8007744 <send_data+0x198>
		uint16_t clb_sz_left = clb_sz - clb_pos;
 800762a:	8bfa      	ldrh	r2, [r7, #30]
 800762c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800762e:	1ad3      	subs	r3, r2, r3
 8007630:	837b      	strh	r3, [r7, #26]
		uint16_t ping_sz_left = ping_sz - ping_pos;
 8007632:	8bba      	ldrh	r2, [r7, #28]
 8007634:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8007636:	1ad3      	subs	r3, r2, r3
 8007638:	833b      	strh	r3, [r7, #24]
		uint16_t transfer_sz_left = (clb_sz_left > ping_sz_left) ? 
 800763a:	8b7a      	ldrh	r2, [r7, #26]
 800763c:	8b3b      	ldrh	r3, [r7, #24]
 800763e:	4293      	cmp	r3, r2
 8007640:	bf28      	it	cs
 8007642:	4613      	movcs	r3, r2
 8007644:	82fb      	strh	r3, [r7, #22]
										ping_sz_left : clb_sz_left;
		// fill up ping buffer as much as possible
		pack_packet(CLB_buffer+clb_pos, CLB_ping_packet+ping_pos, 
 8007646:	4b4f      	ldr	r3, [pc, #316]	; (8007784 <send_data+0x1d8>)
 8007648:	681a      	ldr	r2, [r3, #0]
 800764a:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800764c:	18d0      	adds	r0, r2, r3
 800764e:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8007650:	4a4b      	ldr	r2, [pc, #300]	; (8007780 <send_data+0x1d4>)
 8007652:	4413      	add	r3, r2
 8007654:	8afa      	ldrh	r2, [r7, #22]
 8007656:	4619      	mov	r1, r3
 8007658:	f000 f9d9 	bl	8007a0e <pack_packet>
													transfer_sz_left);
		
		clb_pos += transfer_sz_left;
 800765c:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800765e:	8afb      	ldrh	r3, [r7, #22]
 8007660:	4413      	add	r3, r2
 8007662:	84fb      	strh	r3, [r7, #38]	; 0x26
		ping_pos += transfer_sz_left;
 8007664:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8007666:	8afb      	ldrh	r3, [r7, #22]
 8007668:	4413      	add	r3, r2
 800766a:	84bb      	strh	r3, [r7, #36]	; 0x24

		// cobbs encodes packet if sending over telem
		uint16_t stuffed_packet_sz = 0;
 800766c:	2300      	movs	r3, #0
 800766e:	843b      	strh	r3, [r7, #32]
		if (type == CLB_Telem) {
 8007670:	78fb      	ldrb	r3, [r7, #3]
 8007672:	2b00      	cmp	r3, #0
 8007674:	d121      	bne.n	80076ba <send_data+0x10e>
			stuffed_packet_sz = stuff_packet(CLB_ping_packet,
 8007676:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8007678:	461a      	mov	r2, r3
 800767a:	4943      	ldr	r1, [pc, #268]	; (8007788 <send_data+0x1dc>)
 800767c:	4840      	ldr	r0, [pc, #256]	; (8007780 <send_data+0x1d4>)
 800767e:	f000 fa29 	bl	8007ad4 <stuff_packet>
 8007682:	4603      	mov	r3, r0
 8007684:	843b      	strh	r3, [r7, #32]
												CLB_pong_packet, ping_pos);
			// add termination character to transmission if possible
			if (clb_pos == clb_sz) {
 8007686:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8007688:	8bfb      	ldrh	r3, [r7, #30]
 800768a:	429a      	cmp	r2, r3
 800768c:	d10d      	bne.n	80076aa <send_data+0xfe>
				if (stuffed_packet_sz < 255) {
 800768e:	8c3b      	ldrh	r3, [r7, #32]
 8007690:	2bfe      	cmp	r3, #254	; 0xfe
 8007692:	d807      	bhi.n	80076a4 <send_data+0xf8>
					CLB_pong_packet[stuffed_packet_sz++] = 0;
 8007694:	8c3b      	ldrh	r3, [r7, #32]
 8007696:	1c5a      	adds	r2, r3, #1
 8007698:	843a      	strh	r2, [r7, #32]
 800769a:	461a      	mov	r2, r3
 800769c:	4b3a      	ldr	r3, [pc, #232]	; (8007788 <send_data+0x1dc>)
 800769e:	2100      	movs	r1, #0
 80076a0:	5499      	strb	r1, [r3, r2]
 80076a2:	e002      	b.n	80076aa <send_data+0xfe>
				} else {
					send_termination_bit = 1;
 80076a4:	2301      	movs	r3, #1
 80076a6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
				}
			}
			transmit_packet(info->uartx, stuffed_packet_sz);
 80076aa:	687b      	ldr	r3, [r7, #4]
 80076ac:	681b      	ldr	r3, [r3, #0]
 80076ae:	8c3a      	ldrh	r2, [r7, #32]
 80076b0:	4611      	mov	r1, r2
 80076b2:	4618      	mov	r0, r3
 80076b4:	f000 f900 	bl	80078b8 <transmit_packet>
 80076b8:	e03e      	b.n	8007738 <send_data+0x18c>
		} else if (type == CLB_Flash) {
 80076ba:	78fb      	ldrb	r3, [r7, #3]
 80076bc:	2b01      	cmp	r3, #1
 80076be:	d13b      	bne.n	8007738 <send_data+0x18c>
			stuffed_packet_sz = stuff_packet(CLB_ping_packet,
										info->flash_arr+flash_pos, ping_pos);
 80076c0:	687b      	ldr	r3, [r7, #4]
 80076c2:	689a      	ldr	r2, [r3, #8]
			stuffed_packet_sz = stuff_packet(CLB_ping_packet,
 80076c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80076c6:	4413      	add	r3, r2
 80076c8:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80076ca:	4619      	mov	r1, r3
 80076cc:	482c      	ldr	r0, [pc, #176]	; (8007780 <send_data+0x1d4>)
 80076ce:	f000 fa01 	bl	8007ad4 <stuff_packet>
 80076d2:	4603      	mov	r3, r0
 80076d4:	843b      	strh	r3, [r7, #32]
			flash_pos += stuffed_packet_sz;
 80076d6:	8c3b      	ldrh	r3, [r7, #32]
 80076d8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80076da:	4413      	add	r3, r2
 80076dc:	62bb      	str	r3, [r7, #40]	; 0x28
			info->flash_arr_used += stuffed_packet_sz;
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80076e4:	b29a      	uxth	r2, r3
 80076e6:	8c3b      	ldrh	r3, [r7, #32]
 80076e8:	4413      	add	r3, r2
 80076ea:	b29b      	uxth	r3, r3
 80076ec:	b21a      	sxth	r2, r3
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	80da      	strh	r2, [r3, #6]
			// handle termination bit for flash
			if (clb_pos == clb_sz) {
 80076f2:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 80076f4:	8bfb      	ldrh	r3, [r7, #30]
 80076f6:	429a      	cmp	r2, r3
 80076f8:	d115      	bne.n	8007726 <send_data+0x17a>
				if (stuffed_packet_sz < 255) {
 80076fa:	8c3b      	ldrh	r3, [r7, #32]
 80076fc:	2bfe      	cmp	r3, #254	; 0xfe
 80076fe:	d80f      	bhi.n	8007720 <send_data+0x174>
					info->flash_arr[info->flash_arr_used++] = 0;
 8007700:	687b      	ldr	r3, [r7, #4]
 8007702:	689b      	ldr	r3, [r3, #8]
 8007704:	687a      	ldr	r2, [r7, #4]
 8007706:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 800770a:	b28a      	uxth	r2, r1
 800770c:	3201      	adds	r2, #1
 800770e:	b292      	uxth	r2, r2
 8007710:	b210      	sxth	r0, r2
 8007712:	687a      	ldr	r2, [r7, #4]
 8007714:	80d0      	strh	r0, [r2, #6]
 8007716:	460a      	mov	r2, r1
 8007718:	4413      	add	r3, r2
 800771a:	2200      	movs	r2, #0
 800771c:	701a      	strb	r2, [r3, #0]
 800771e:	e002      	b.n	8007726 <send_data+0x17a>
				} else {
					send_termination_bit = 1;
 8007720:	2301      	movs	r3, #1
 8007722:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
				}
			}
			if (info->flash_arr_sz < 0) {
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800772c:	2b00      	cmp	r3, #0
 800772e:	da03      	bge.n	8007738 <send_data+0x18c>
				status = CLB_flash_buffer_overflow;
 8007730:	2301      	movs	r3, #1
 8007732:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
				break;
 8007736:	e00b      	b.n	8007750 <send_data+0x1a4>
			}
		}

		if (ping_pos >= ping_sz) {
 8007738:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 800773a:	8bbb      	ldrh	r3, [r7, #28]
 800773c:	429a      	cmp	r2, r3
 800773e:	d301      	bcc.n	8007744 <send_data+0x198>
			ping_pos = 0;
 8007740:	2300      	movs	r3, #0
 8007742:	84bb      	strh	r3, [r7, #36]	; 0x24
	while (clb_pos < CLB_buffer_sz) {
 8007744:	4b0c      	ldr	r3, [pc, #48]	; (8007778 <send_data+0x1cc>)
 8007746:	881b      	ldrh	r3, [r3, #0]
 8007748:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800774a:	429a      	cmp	r2, r3
 800774c:	f4ff af6d 	bcc.w	800762a <send_data+0x7e>
		}
	}

	if (send_termination_bit) {
 8007750:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8007754:	2b00      	cmp	r3, #0
 8007756:	d008      	beq.n	800776a <send_data+0x1be>
	    CLB_pong_packet[0] = 0;
 8007758:	4b0b      	ldr	r3, [pc, #44]	; (8007788 <send_data+0x1dc>)
 800775a:	2200      	movs	r2, #0
 800775c:	701a      	strb	r2, [r3, #0]
	    transmit_packet(info->uartx, 1);
 800775e:	687b      	ldr	r3, [r7, #4]
 8007760:	681b      	ldr	r3, [r3, #0]
 8007762:	2101      	movs	r1, #1
 8007764:	4618      	mov	r0, r3
 8007766:	f000 f8a7 	bl	80078b8 <transmit_packet>
	}

	return status; // TODO: return better error handling
 800776a:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
}
 800776e:	4618      	mov	r0, r3
 8007770:	3734      	adds	r7, #52	; 0x34
 8007772:	46bd      	mov	sp, r7
 8007774:	bd90      	pop	{r4, r7, pc}
 8007776:	bf00      	nop
 8007778:	200009b6 	.word	0x200009b6
 800777c:	200009c4 	.word	0x200009c4
 8007780:	20000740 	.word	0x20000740
 8007784:	2000063c 	.word	0x2000063c
 8007788:	20000640 	.word	0x20000640

0800778c <receive_data>:

uint8_t receive_data(UART_HandleTypeDef* uartx, uint8_t* buffer, uint16_t buffer_sz) {
 800778c:	b580      	push	{r7, lr}
 800778e:	b088      	sub	sp, #32
 8007790:	af00      	add	r7, sp, #0
 8007792:	60f8      	str	r0, [r7, #12]
 8007794:	60b9      	str	r1, [r7, #8]
 8007796:	4613      	mov	r3, r2
 8007798:	80fb      	strh	r3, [r7, #6]
	 * 
	 * 	Note: 	The boards only expect to receive data/cmds within 255 bytes
	 * 	       	any custom packet types that require more than 255 bytes will
	 * 			have to be spread out over multiple packet type ids
	 */
	for(uint16_t i = 0; i < buffer_sz; ++i) {
 800779a:	2300      	movs	r3, #0
 800779c:	83fb      	strh	r3, [r7, #30]
 800779e:	e009      	b.n	80077b4 <receive_data+0x28>
		CLB_pong_packet[i] = buffer[i]; // copy items over for uart reception
 80077a0:	8bfb      	ldrh	r3, [r7, #30]
 80077a2:	68ba      	ldr	r2, [r7, #8]
 80077a4:	441a      	add	r2, r3
 80077a6:	8bfb      	ldrh	r3, [r7, #30]
 80077a8:	7811      	ldrb	r1, [r2, #0]
 80077aa:	4a2d      	ldr	r2, [pc, #180]	; (8007860 <receive_data+0xd4>)
 80077ac:	54d1      	strb	r1, [r2, r3]
	for(uint16_t i = 0; i < buffer_sz; ++i) {
 80077ae:	8bfb      	ldrh	r3, [r7, #30]
 80077b0:	3301      	adds	r3, #1
 80077b2:	83fb      	strh	r3, [r7, #30]
 80077b4:	8bfa      	ldrh	r2, [r7, #30]
 80077b6:	88fb      	ldrh	r3, [r7, #6]
 80077b8:	429a      	cmp	r2, r3
 80077ba:	d3f1      	bcc.n	80077a0 <receive_data+0x14>
	}

	int16_t data_sz = unstuff_packet(CLB_pong_packet, CLB_ping_packet, buffer_sz);
 80077bc:	88fb      	ldrh	r3, [r7, #6]
 80077be:	461a      	mov	r2, r3
 80077c0:	4928      	ldr	r1, [pc, #160]	; (8007864 <receive_data+0xd8>)
 80077c2:	4827      	ldr	r0, [pc, #156]	; (8007860 <receive_data+0xd4>)
 80077c4:	f000 f9ec 	bl	8007ba0 <unstuff_packet>
 80077c8:	4603      	mov	r3, r0
 80077ca:	83bb      	strh	r3, [r7, #28]
    unpack_header(&CLB_receive_header, CLB_ping_packet);
 80077cc:	4925      	ldr	r1, [pc, #148]	; (8007864 <receive_data+0xd8>)
 80077ce:	4826      	ldr	r0, [pc, #152]	; (8007868 <receive_data+0xdc>)
 80077d0:	f000 f886 	bl	80078e0 <unpack_header>
    uint8_t checksum_status = verify_checksum(CLB_receive_header.checksum);
 80077d4:	4b24      	ldr	r3, [pc, #144]	; (8007868 <receive_data+0xdc>)
 80077d6:	88db      	ldrh	r3, [r3, #6]
 80077d8:	4618      	mov	r0, r3
 80077da:	f000 f939 	bl	8007a50 <verify_checksum>
 80077de:	4603      	mov	r3, r0
 80077e0:	76fb      	strb	r3, [r7, #27]
    if (checksum_status!=0) {
 80077e2:	7efb      	ldrb	r3, [r7, #27]
 80077e4:	2b00      	cmp	r3, #0
 80077e6:	d001      	beq.n	80077ec <receive_data+0x60>
        return CLB_RECEIVE_CHECKSUM_ERROR; // drop transmission if checksum is bad
 80077e8:	2303      	movs	r3, #3
 80077ea:	e034      	b.n	8007856 <receive_data+0xca>
    }

	uint8_t cmd_status = 0;
 80077ec:	2300      	movs	r3, #0
 80077ee:	75fb      	strb	r3, [r7, #23]

	if (CLB_board_addr == CLB_receive_header.target_addr) {
 80077f0:	4b1d      	ldr	r3, [pc, #116]	; (8007868 <receive_data+0xdc>)
 80077f2:	789a      	ldrb	r2, [r3, #2]
 80077f4:	4b1d      	ldr	r3, [pc, #116]	; (800786c <receive_data+0xe0>)
 80077f6:	781b      	ldrb	r3, [r3, #0]
 80077f8:	429a      	cmp	r2, r3
 80077fa:	d129      	bne.n	8007850 <receive_data+0xc4>
	    // TODO: handle receiving different packet types besides cmd
		if (CLB_receive_header.packet_type < COMMAND_MAP_SZ) {
 80077fc:	4b1a      	ldr	r3, [pc, #104]	; (8007868 <receive_data+0xdc>)
 80077fe:	781b      	ldrb	r3, [r3, #0]
 8007800:	2b35      	cmp	r3, #53	; 0x35
 8007802:	d827      	bhi.n	8007854 <receive_data+0xc8>
			int16_t cmd_index = command_map[CLB_receive_header.packet_type];
 8007804:	4b18      	ldr	r3, [pc, #96]	; (8007868 <receive_data+0xdc>)
 8007806:	781b      	ldrb	r3, [r3, #0]
 8007808:	461a      	mov	r2, r3
 800780a:	4b19      	ldr	r3, [pc, #100]	; (8007870 <receive_data+0xe4>)
 800780c:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8007810:	833b      	strh	r3, [r7, #24]
			if(cmd_index != -1
 8007812:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8007816:	f1b3 3fff 	cmp.w	r3, #4294967295
 800781a:	d01b      	beq.n	8007854 <receive_data+0xc8>
			   && validate_command(CLB_receive_header.packet_type, data_sz) == CLB_RECEIVE_NOMINAL) {
 800781c:	4b12      	ldr	r3, [pc, #72]	; (8007868 <receive_data+0xdc>)
 800781e:	781b      	ldrb	r3, [r3, #0]
 8007820:	b21b      	sxth	r3, r3
 8007822:	8bba      	ldrh	r2, [r7, #28]
 8007824:	4611      	mov	r1, r2
 8007826:	4618      	mov	r0, r3
 8007828:	f000 f82a 	bl	8007880 <validate_command>
 800782c:	4603      	mov	r3, r0
 800782e:	2b00      	cmp	r3, #0
 8007830:	d110      	bne.n	8007854 <receive_data+0xc8>
				(*cmds_ptr[cmd_index])(CLB_ping_packet+CLB_HEADER_SZ, &cmd_status);
 8007832:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8007836:	4a0f      	ldr	r2, [pc, #60]	; (8007874 <receive_data+0xe8>)
 8007838:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800783c:	480e      	ldr	r0, [pc, #56]	; (8007878 <receive_data+0xec>)
 800783e:	f107 0217 	add.w	r2, r7, #23
 8007842:	4611      	mov	r1, r2
 8007844:	4798      	blx	r3
				CLB_last_cmd_received = CLB_receive_header.packet_type;
 8007846:	4b08      	ldr	r3, [pc, #32]	; (8007868 <receive_data+0xdc>)
 8007848:	781a      	ldrb	r2, [r3, #0]
 800784a:	4b0c      	ldr	r3, [pc, #48]	; (800787c <receive_data+0xf0>)
 800784c:	701a      	strb	r2, [r3, #0]
 800784e:	e001      	b.n	8007854 <receive_data+0xc8>
			}
		}
	} else {
	    // Pass on daisy chained telem over uart channel
	    cmd_status = CLB_RECEIVE_DAISY_TELEM;
 8007850:	2302      	movs	r3, #2
 8007852:	75fb      	strb	r3, [r7, #23]
	}

	return cmd_status;
 8007854:	7dfb      	ldrb	r3, [r7, #23]
}
 8007856:	4618      	mov	r0, r3
 8007858:	3720      	adds	r7, #32
 800785a:	46bd      	mov	sp, r7
 800785c:	bd80      	pop	{r7, pc}
 800785e:	bf00      	nop
 8007860:	20000640 	.word	0x20000640
 8007864:	20000740 	.word	0x20000740
 8007868:	200009b8 	.word	0x200009b8
 800786c:	2000073f 	.word	0x2000073f
 8007870:	20000004 	.word	0x20000004
 8007874:	200000dc 	.word	0x200000dc
 8007878:	2000074c 	.word	0x2000074c
 800787c:	200009b5 	.word	0x200009b5

08007880 <validate_command>:

static inline uint8_t validate_command(int16_t cmd_index, uint16_t data_sz) {
 8007880:	b480      	push	{r7}
 8007882:	b083      	sub	sp, #12
 8007884:	af00      	add	r7, sp, #0
 8007886:	4603      	mov	r3, r0
 8007888:	460a      	mov	r2, r1
 800788a:	80fb      	strh	r3, [r7, #6]
 800788c:	4613      	mov	r3, r2
 800788e:	80bb      	strh	r3, [r7, #4]
    if (data_sz == command_sz[cmd_index]) {
 8007890:	88bb      	ldrh	r3, [r7, #4]
 8007892:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8007896:	4907      	ldr	r1, [pc, #28]	; (80078b4 <validate_command+0x34>)
 8007898:	f931 2012 	ldrsh.w	r2, [r1, r2, lsl #1]
 800789c:	4293      	cmp	r3, r2
 800789e:	d101      	bne.n	80078a4 <validate_command+0x24>
        return CLB_RECEIVE_NOMINAL;
 80078a0:	2300      	movs	r3, #0
 80078a2:	e000      	b.n	80078a6 <validate_command+0x26>
    }
    return CLB_RECEIVE_SZ_ERROR;
 80078a4:	2301      	movs	r3, #1
}
 80078a6:	4618      	mov	r0, r3
 80078a8:	370c      	adds	r7, #12
 80078aa:	46bd      	mov	sp, r7
 80078ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078b0:	4770      	bx	lr
 80078b2:	bf00      	nop
 80078b4:	20000070 	.word	0x20000070

080078b8 <transmit_packet>:
//    __disable_irq();
	HAL_UART_Receive(uartx, CLB_pong_packet, sz, HAL_MAX_DELAY);
//	__enable_irq();
}

void transmit_packet(UART_HandleTypeDef* uartx, uint16_t sz) {
 80078b8:	b580      	push	{r7, lr}
 80078ba:	b082      	sub	sp, #8
 80078bc:	af00      	add	r7, sp, #0
 80078be:	6078      	str	r0, [r7, #4]
 80078c0:	460b      	mov	r3, r1
 80078c2:	807b      	strh	r3, [r7, #2]
	// currently abstracted in case we need more transmisison options
	// transmit packet via serial TODO: error handling
//    __disable_irq();
	HAL_UART_Transmit(uartx, CLB_pong_packet, sz, HAL_MAX_DELAY);
 80078c4:	887a      	ldrh	r2, [r7, #2]
 80078c6:	f04f 33ff 	mov.w	r3, #4294967295
 80078ca:	4904      	ldr	r1, [pc, #16]	; (80078dc <transmit_packet+0x24>)
 80078cc:	6878      	ldr	r0, [r7, #4]
 80078ce:	f003 fcc2 	bl	800b256 <HAL_UART_Transmit>
//	__enable_irq();
}
 80078d2:	bf00      	nop
 80078d4:	3708      	adds	r7, #8
 80078d6:	46bd      	mov	sp, r7
 80078d8:	bd80      	pop	{r7, pc}
 80078da:	bf00      	nop
 80078dc:	20000640 	.word	0x20000640

080078e0 <unpack_header>:

void unpack_header(CLB_Packet_Header* header, uint8_t* header_buffer) {
 80078e0:	b480      	push	{r7}
 80078e2:	b083      	sub	sp, #12
 80078e4:	af00      	add	r7, sp, #0
 80078e6:	6078      	str	r0, [r7, #4]
 80078e8:	6039      	str	r1, [r7, #0]
	header->packet_type = header_buffer[0];
 80078ea:	683b      	ldr	r3, [r7, #0]
 80078ec:	781a      	ldrb	r2, [r3, #0]
 80078ee:	687b      	ldr	r3, [r7, #4]
 80078f0:	701a      	strb	r2, [r3, #0]
	header->origin_addr = header_buffer[1];
 80078f2:	683b      	ldr	r3, [r7, #0]
 80078f4:	785a      	ldrb	r2, [r3, #1]
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	705a      	strb	r2, [r3, #1]
	header->target_addr = header_buffer[2];
 80078fa:	683b      	ldr	r3, [r7, #0]
 80078fc:	789a      	ldrb	r2, [r3, #2]
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	709a      	strb	r2, [r3, #2]
	header->priority	= header_buffer[3];
 8007902:	683b      	ldr	r3, [r7, #0]
 8007904:	78da      	ldrb	r2, [r3, #3]
 8007906:	687b      	ldr	r3, [r7, #4]
 8007908:	70da      	strb	r2, [r3, #3]
	header->num_packets = header_buffer[4];
 800790a:	683b      	ldr	r3, [r7, #0]
 800790c:	791a      	ldrb	r2, [r3, #4]
 800790e:	687b      	ldr	r3, [r7, #4]
 8007910:	711a      	strb	r2, [r3, #4]
	header->do_cobbs    = header_buffer[5];
 8007912:	683b      	ldr	r3, [r7, #0]
 8007914:	795a      	ldrb	r2, [r3, #5]
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	715a      	strb	r2, [r3, #5]
	header->checksum	= (header_buffer[6]<<8)|header_buffer[7];
 800791a:	683b      	ldr	r3, [r7, #0]
 800791c:	3306      	adds	r3, #6
 800791e:	781b      	ldrb	r3, [r3, #0]
 8007920:	021b      	lsls	r3, r3, #8
 8007922:	b21a      	sxth	r2, r3
 8007924:	683b      	ldr	r3, [r7, #0]
 8007926:	3307      	adds	r3, #7
 8007928:	781b      	ldrb	r3, [r3, #0]
 800792a:	b21b      	sxth	r3, r3
 800792c:	4313      	orrs	r3, r2
 800792e:	b21b      	sxth	r3, r3
 8007930:	b29a      	uxth	r2, r3
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	80da      	strh	r2, [r3, #6]
	header->timestamp   = header_buffer[8]<<24|header_buffer[9]<<16|
 8007936:	683b      	ldr	r3, [r7, #0]
 8007938:	3308      	adds	r3, #8
 800793a:	781b      	ldrb	r3, [r3, #0]
 800793c:	061a      	lsls	r2, r3, #24
 800793e:	683b      	ldr	r3, [r7, #0]
 8007940:	3309      	adds	r3, #9
 8007942:	781b      	ldrb	r3, [r3, #0]
 8007944:	041b      	lsls	r3, r3, #16
 8007946:	431a      	orrs	r2, r3
	                        header_buffer[10]<<8|header_buffer[11];
 8007948:	683b      	ldr	r3, [r7, #0]
 800794a:	330a      	adds	r3, #10
 800794c:	781b      	ldrb	r3, [r3, #0]
 800794e:	021b      	lsls	r3, r3, #8
	header->timestamp   = header_buffer[8]<<24|header_buffer[9]<<16|
 8007950:	4313      	orrs	r3, r2
	                        header_buffer[10]<<8|header_buffer[11];
 8007952:	683a      	ldr	r2, [r7, #0]
 8007954:	320b      	adds	r2, #11
 8007956:	7812      	ldrb	r2, [r2, #0]
 8007958:	4313      	orrs	r3, r2
 800795a:	461a      	mov	r2, r3
	header->timestamp   = header_buffer[8]<<24|header_buffer[9]<<16|
 800795c:	687b      	ldr	r3, [r7, #4]
 800795e:	609a      	str	r2, [r3, #8]
}
 8007960:	bf00      	nop
 8007962:	370c      	adds	r7, #12
 8007964:	46bd      	mov	sp, r7
 8007966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800796a:	4770      	bx	lr

0800796c <pack_header>:

void pack_header(CLB_Packet_Header* header, uint8_t*header_buffer) {
 800796c:	b480      	push	{r7}
 800796e:	b083      	sub	sp, #12
 8007970:	af00      	add	r7, sp, #0
 8007972:	6078      	str	r0, [r7, #4]
 8007974:	6039      	str	r1, [r7, #0]
	header_buffer[0] = header->packet_type;
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	781a      	ldrb	r2, [r3, #0]
 800797a:	683b      	ldr	r3, [r7, #0]
 800797c:	701a      	strb	r2, [r3, #0]
	header_buffer[1] = header->origin_addr;
 800797e:	683b      	ldr	r3, [r7, #0]
 8007980:	3301      	adds	r3, #1
 8007982:	687a      	ldr	r2, [r7, #4]
 8007984:	7852      	ldrb	r2, [r2, #1]
 8007986:	701a      	strb	r2, [r3, #0]
	header_buffer[2] = header->target_addr;
 8007988:	683b      	ldr	r3, [r7, #0]
 800798a:	3302      	adds	r3, #2
 800798c:	687a      	ldr	r2, [r7, #4]
 800798e:	7892      	ldrb	r2, [r2, #2]
 8007990:	701a      	strb	r2, [r3, #0]
	header_buffer[3] = header->priority;
 8007992:	683b      	ldr	r3, [r7, #0]
 8007994:	3303      	adds	r3, #3
 8007996:	687a      	ldr	r2, [r7, #4]
 8007998:	78d2      	ldrb	r2, [r2, #3]
 800799a:	701a      	strb	r2, [r3, #0]
	header_buffer[4] = header->num_packets;
 800799c:	683b      	ldr	r3, [r7, #0]
 800799e:	3304      	adds	r3, #4
 80079a0:	687a      	ldr	r2, [r7, #4]
 80079a2:	7912      	ldrb	r2, [r2, #4]
 80079a4:	701a      	strb	r2, [r3, #0]
	header_buffer[5] = header->do_cobbs;
 80079a6:	683b      	ldr	r3, [r7, #0]
 80079a8:	3305      	adds	r3, #5
 80079aa:	687a      	ldr	r2, [r7, #4]
 80079ac:	7952      	ldrb	r2, [r2, #5]
 80079ae:	701a      	strb	r2, [r3, #0]
	header_buffer[6] = 0xff&(header->checksum);
 80079b0:	687b      	ldr	r3, [r7, #4]
 80079b2:	88da      	ldrh	r2, [r3, #6]
 80079b4:	683b      	ldr	r3, [r7, #0]
 80079b6:	3306      	adds	r3, #6
 80079b8:	b2d2      	uxtb	r2, r2
 80079ba:	701a      	strb	r2, [r3, #0]
	header_buffer[7] = 0xff&((header->checksum)>>8);
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	88db      	ldrh	r3, [r3, #6]
 80079c0:	0a1b      	lsrs	r3, r3, #8
 80079c2:	b29a      	uxth	r2, r3
 80079c4:	683b      	ldr	r3, [r7, #0]
 80079c6:	3307      	adds	r3, #7
 80079c8:	b2d2      	uxtb	r2, r2
 80079ca:	701a      	strb	r2, [r3, #0]
	header_buffer[8] = 0xff&(header->timestamp);
 80079cc:	687b      	ldr	r3, [r7, #4]
 80079ce:	689a      	ldr	r2, [r3, #8]
 80079d0:	683b      	ldr	r3, [r7, #0]
 80079d2:	3308      	adds	r3, #8
 80079d4:	b2d2      	uxtb	r2, r2
 80079d6:	701a      	strb	r2, [r3, #0]
	header_buffer[9] = 0xff&((header->timestamp)>>8);
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	689b      	ldr	r3, [r3, #8]
 80079dc:	0a1a      	lsrs	r2, r3, #8
 80079de:	683b      	ldr	r3, [r7, #0]
 80079e0:	3309      	adds	r3, #9
 80079e2:	b2d2      	uxtb	r2, r2
 80079e4:	701a      	strb	r2, [r3, #0]
	header_buffer[10] = 0xff&((header->timestamp)>>16);     // little endian
 80079e6:	687b      	ldr	r3, [r7, #4]
 80079e8:	689b      	ldr	r3, [r3, #8]
 80079ea:	0c1a      	lsrs	r2, r3, #16
 80079ec:	683b      	ldr	r3, [r7, #0]
 80079ee:	330a      	adds	r3, #10
 80079f0:	b2d2      	uxtb	r2, r2
 80079f2:	701a      	strb	r2, [r3, #0]
	header_buffer[11] = 0xff&((header->timestamp)>>24);
 80079f4:	687b      	ldr	r3, [r7, #4]
 80079f6:	689b      	ldr	r3, [r3, #8]
 80079f8:	0e1a      	lsrs	r2, r3, #24
 80079fa:	683b      	ldr	r3, [r7, #0]
 80079fc:	330b      	adds	r3, #11
 80079fe:	b2d2      	uxtb	r2, r2
 8007a00:	701a      	strb	r2, [r3, #0]
}
 8007a02:	bf00      	nop
 8007a04:	370c      	adds	r7, #12
 8007a06:	46bd      	mov	sp, r7
 8007a08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a0c:	4770      	bx	lr

08007a0e <pack_packet>:

void pack_packet(uint8_t *src, uint8_t *dst, uint16_t sz) {
 8007a0e:	b480      	push	{r7}
 8007a10:	b087      	sub	sp, #28
 8007a12:	af00      	add	r7, sp, #0
 8007a14:	60f8      	str	r0, [r7, #12]
 8007a16:	60b9      	str	r1, [r7, #8]
 8007a18:	4613      	mov	r3, r2
 8007a1a:	80fb      	strh	r3, [r7, #6]
	uint8_t *curr = src;
 8007a1c:	68fb      	ldr	r3, [r7, #12]
 8007a1e:	617b      	str	r3, [r7, #20]
	uint8_t *end = src + sz;
 8007a20:	88fb      	ldrh	r3, [r7, #6]
 8007a22:	68fa      	ldr	r2, [r7, #12]
 8007a24:	4413      	add	r3, r2
 8007a26:	613b      	str	r3, [r7, #16]
	while (curr != end) {
 8007a28:	e007      	b.n	8007a3a <pack_packet+0x2c>
		*dst++ = *curr++;
 8007a2a:	697a      	ldr	r2, [r7, #20]
 8007a2c:	1c53      	adds	r3, r2, #1
 8007a2e:	617b      	str	r3, [r7, #20]
 8007a30:	68bb      	ldr	r3, [r7, #8]
 8007a32:	1c59      	adds	r1, r3, #1
 8007a34:	60b9      	str	r1, [r7, #8]
 8007a36:	7812      	ldrb	r2, [r2, #0]
 8007a38:	701a      	strb	r2, [r3, #0]
	while (curr != end) {
 8007a3a:	697a      	ldr	r2, [r7, #20]
 8007a3c:	693b      	ldr	r3, [r7, #16]
 8007a3e:	429a      	cmp	r2, r3
 8007a40:	d1f3      	bne.n	8007a2a <pack_packet+0x1c>
	}
}
 8007a42:	bf00      	nop
 8007a44:	bf00      	nop
 8007a46:	371c      	adds	r7, #28
 8007a48:	46bd      	mov	sp, r7
 8007a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a4e:	4770      	bx	lr

08007a50 <verify_checksum>:

uint8_t verify_checksum(uint16_t checksum) {
 8007a50:	b480      	push	{r7}
 8007a52:	b083      	sub	sp, #12
 8007a54:	af00      	add	r7, sp, #0
 8007a56:	4603      	mov	r3, r0
 8007a58:	80fb      	strh	r3, [r7, #6]
	// TODO: Implement checksum checking procedure
	return 0;
 8007a5a:	2300      	movs	r3, #0
}
 8007a5c:	4618      	mov	r0, r3
 8007a5e:	370c      	adds	r7, #12
 8007a60:	46bd      	mov	sp, r7
 8007a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a66:	4770      	bx	lr

08007a68 <compute_checksum>:

uint16_t compute_checksum() {
 8007a68:	b480      	push	{r7}
 8007a6a:	af00      	add	r7, sp, #0
	// TODO: Implement checksum procedure, use 0 dummy value temporarily
	return 0; 
 8007a6c:	2300      	movs	r3, #0
}
 8007a6e:	4618      	mov	r0, r3
 8007a70:	46bd      	mov	sp, r7
 8007a72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a76:	4770      	bx	lr

08007a78 <compute_packet_sz>:

uint8_t compute_packet_sz() {
 8007a78:	b580      	push	{r7, lr}
 8007a7a:	b082      	sub	sp, #8
 8007a7c:	af00      	add	r7, sp, #0
    uint16_t bytes = CLB_buffer_sz + CLB_HEADER_SZ + 1; // 1 for termination bit
 8007a7e:	4b14      	ldr	r3, [pc, #80]	; (8007ad0 <compute_packet_sz+0x58>)
 8007a80:	881b      	ldrh	r3, [r3, #0]
 8007a82:	330d      	adds	r3, #13
 8007a84:	80fb      	strh	r3, [r7, #6]
    uint8_t num_packets = ceil((bytes*1.0)/PONG_MAX_PACKET_SIZE);
 8007a86:	88fb      	ldrh	r3, [r7, #6]
 8007a88:	4618      	mov	r0, r3
 8007a8a:	f7f8 fd0f 	bl	80004ac <__aeabi_i2d>
 8007a8e:	a30e      	add	r3, pc, #56	; (adr r3, 8007ac8 <compute_packet_sz+0x50>)
 8007a90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a94:	f7f8 fe9e 	bl	80007d4 <__aeabi_ddiv>
 8007a98:	4602      	mov	r2, r0
 8007a9a:	460b      	mov	r3, r1
 8007a9c:	ec43 2b17 	vmov	d7, r2, r3
 8007aa0:	eeb0 0a47 	vmov.f32	s0, s14
 8007aa4:	eef0 0a67 	vmov.f32	s1, s15
 8007aa8:	f004 fa22 	bl	800bef0 <ceil>
 8007aac:	ec53 2b10 	vmov	r2, r3, d0
 8007ab0:	4610      	mov	r0, r2
 8007ab2:	4619      	mov	r1, r3
 8007ab4:	f7f9 f814 	bl	8000ae0 <__aeabi_d2uiz>
 8007ab8:	4603      	mov	r3, r0
 8007aba:	717b      	strb	r3, [r7, #5]
    return num_packets;
 8007abc:	797b      	ldrb	r3, [r7, #5]
}
 8007abe:	4618      	mov	r0, r3
 8007ac0:	3708      	adds	r7, #8
 8007ac2:	46bd      	mov	sp, r7
 8007ac4:	bd80      	pop	{r7, pc}
 8007ac6:	bf00      	nop
 8007ac8:	00000000 	.word	0x00000000
 8007acc:	406fe000 	.word	0x406fe000
 8007ad0:	200009b6 	.word	0x200009b6

08007ad4 <stuff_packet>:

//This code was shamelessly stolen from wikipedia, docs by me tho
uint16_t stuff_packet(const uint8_t *unstuffed, uint8_t *stuffed, uint16_t length) {
 8007ad4:	b480      	push	{r7}
 8007ad6:	b089      	sub	sp, #36	; 0x24
 8007ad8:	af00      	add	r7, sp, #0
 8007ada:	60f8      	str	r0, [r7, #12]
 8007adc:	60b9      	str	r1, [r7, #8]
 8007ade:	4613      	mov	r3, r2
 8007ae0:	80fb      	strh	r3, [r7, #6]

	//Start just keeps track of the start point
	uint8_t *start = stuffed;
 8007ae2:	68bb      	ldr	r3, [r7, #8]
 8007ae4:	617b      	str	r3, [r7, #20]
	if (CLB_header->do_cobbs) {
 8007ae6:	4b2d      	ldr	r3, [pc, #180]	; (8007b9c <stuff_packet+0xc8>)
 8007ae8:	681b      	ldr	r3, [r3, #0]
 8007aea:	795b      	ldrb	r3, [r3, #5]
 8007aec:	2b00      	cmp	r3, #0
 8007aee:	d038      	beq.n	8007b62 <stuff_packet+0x8e>
		//Code represents the number of positions till the next 0 and code_ptr
        //holds the position of the last zero to be updated when the next 0 is found
        uint8_t *code_ptr = stuffed++; //Note: this sets code_ptr to stuffed, then ++ stuffed
 8007af0:	68bb      	ldr	r3, [r7, #8]
 8007af2:	1c5a      	adds	r2, r3, #1
 8007af4:	60ba      	str	r2, [r7, #8]
 8007af6:	61fb      	str	r3, [r7, #28]
        *code_ptr = 1;
 8007af8:	69fb      	ldr	r3, [r7, #28]
 8007afa:	2201      	movs	r2, #1
 8007afc:	701a      	strb	r2, [r3, #0]
        while (length--)
 8007afe:	e02a      	b.n	8007b56 <stuff_packet+0x82>
        {
            if (*unstuffed) {
 8007b00:	68fb      	ldr	r3, [r7, #12]
 8007b02:	781b      	ldrb	r3, [r3, #0]
 8007b04:	2b00      	cmp	r3, #0
 8007b06:	d00e      	beq.n	8007b26 <stuff_packet+0x52>
                *stuffed++ = *unstuffed++;
 8007b08:	68fa      	ldr	r2, [r7, #12]
 8007b0a:	1c53      	adds	r3, r2, #1
 8007b0c:	60fb      	str	r3, [r7, #12]
 8007b0e:	68bb      	ldr	r3, [r7, #8]
 8007b10:	1c59      	adds	r1, r3, #1
 8007b12:	60b9      	str	r1, [r7, #8]
 8007b14:	7812      	ldrb	r2, [r2, #0]
 8007b16:	701a      	strb	r2, [r3, #0]
                *code_ptr += 1;
 8007b18:	69fb      	ldr	r3, [r7, #28]
 8007b1a:	781b      	ldrb	r3, [r3, #0]
 8007b1c:	3301      	adds	r3, #1
 8007b1e:	b2da      	uxtb	r2, r3
 8007b20:	69fb      	ldr	r3, [r7, #28]
 8007b22:	701a      	strb	r2, [r3, #0]
 8007b24:	e009      	b.n	8007b3a <stuff_packet+0x66>
            } else {
                code_ptr = stuffed++;
 8007b26:	68bb      	ldr	r3, [r7, #8]
 8007b28:	1c5a      	adds	r2, r3, #1
 8007b2a:	60ba      	str	r2, [r7, #8]
 8007b2c:	61fb      	str	r3, [r7, #28]
                *code_ptr = 1;
 8007b2e:	69fb      	ldr	r3, [r7, #28]
 8007b30:	2201      	movs	r2, #1
 8007b32:	701a      	strb	r2, [r3, #0]
                unstuffed++;
 8007b34:	68fb      	ldr	r3, [r7, #12]
 8007b36:	3301      	adds	r3, #1
 8007b38:	60fb      	str	r3, [r7, #12]
            }

            if (*code_ptr == 0xFF && length > 0)
 8007b3a:	69fb      	ldr	r3, [r7, #28]
 8007b3c:	781b      	ldrb	r3, [r3, #0]
 8007b3e:	2bff      	cmp	r3, #255	; 0xff
 8007b40:	d109      	bne.n	8007b56 <stuff_packet+0x82>
 8007b42:	88fb      	ldrh	r3, [r7, #6]
 8007b44:	2b00      	cmp	r3, #0
 8007b46:	d006      	beq.n	8007b56 <stuff_packet+0x82>
            {
                code_ptr = stuffed++;
 8007b48:	68bb      	ldr	r3, [r7, #8]
 8007b4a:	1c5a      	adds	r2, r3, #1
 8007b4c:	60ba      	str	r2, [r7, #8]
 8007b4e:	61fb      	str	r3, [r7, #28]
                *code_ptr = 1;
 8007b50:	69fb      	ldr	r3, [r7, #28]
 8007b52:	2201      	movs	r2, #1
 8007b54:	701a      	strb	r2, [r3, #0]
        while (length--)
 8007b56:	88fb      	ldrh	r3, [r7, #6]
 8007b58:	1e5a      	subs	r2, r3, #1
 8007b5a:	80fa      	strh	r2, [r7, #6]
 8007b5c:	2b00      	cmp	r3, #0
 8007b5e:	d1cf      	bne.n	8007b00 <stuff_packet+0x2c>
 8007b60:	e011      	b.n	8007b86 <stuff_packet+0xb2>
        }
        //Set the final code
        //*code_ptr = code;
        //Returns length of encoded data
	} else {
		for (uint16_t i = 0; i < length; ++i) {
 8007b62:	2300      	movs	r3, #0
 8007b64:	837b      	strh	r3, [r7, #26]
 8007b66:	e00a      	b.n	8007b7e <stuff_packet+0xaa>
			*stuffed++ = *unstuffed++;
 8007b68:	68fa      	ldr	r2, [r7, #12]
 8007b6a:	1c53      	adds	r3, r2, #1
 8007b6c:	60fb      	str	r3, [r7, #12]
 8007b6e:	68bb      	ldr	r3, [r7, #8]
 8007b70:	1c59      	adds	r1, r3, #1
 8007b72:	60b9      	str	r1, [r7, #8]
 8007b74:	7812      	ldrb	r2, [r2, #0]
 8007b76:	701a      	strb	r2, [r3, #0]
		for (uint16_t i = 0; i < length; ++i) {
 8007b78:	8b7b      	ldrh	r3, [r7, #26]
 8007b7a:	3301      	adds	r3, #1
 8007b7c:	837b      	strh	r3, [r7, #26]
 8007b7e:	8b7a      	ldrh	r2, [r7, #26]
 8007b80:	88fb      	ldrh	r3, [r7, #6]
 8007b82:	429a      	cmp	r2, r3
 8007b84:	d3f0      	bcc.n	8007b68 <stuff_packet+0x94>
		}
	}

	return stuffed - start;
 8007b86:	68ba      	ldr	r2, [r7, #8]
 8007b88:	697b      	ldr	r3, [r7, #20]
 8007b8a:	1ad3      	subs	r3, r2, r3
 8007b8c:	b29b      	uxth	r3, r3
}
 8007b8e:	4618      	mov	r0, r3
 8007b90:	3724      	adds	r7, #36	; 0x24
 8007b92:	46bd      	mov	sp, r7
 8007b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b98:	4770      	bx	lr
 8007b9a:	bf00      	nop
 8007b9c:	200009c4 	.word	0x200009c4

08007ba0 <unstuff_packet>:
 *
 * Returns the length of the decoded data
 * (which is guaranteed to be <= length).
 */
uint16_t unstuff_packet(uint8_t *stuffed, uint8_t *unstuffed, uint16_t length)
{
 8007ba0:	b480      	push	{r7}
 8007ba2:	b089      	sub	sp, #36	; 0x24
 8007ba4:	af00      	add	r7, sp, #0
 8007ba6:	60f8      	str	r0, [r7, #12]
 8007ba8:	60b9      	str	r1, [r7, #8]
 8007baa:	4613      	mov	r3, r2
 8007bac:	80fb      	strh	r3, [r7, #6]
    uint8_t *start = unstuffed, *end = stuffed + length;
 8007bae:	68bb      	ldr	r3, [r7, #8]
 8007bb0:	61bb      	str	r3, [r7, #24]
 8007bb2:	88fb      	ldrh	r3, [r7, #6]
 8007bb4:	68fa      	ldr	r2, [r7, #12]
 8007bb6:	4413      	add	r3, r2
 8007bb8:	617b      	str	r3, [r7, #20]
	uint8_t code = 0xFF, copy = 0;
 8007bba:	23ff      	movs	r3, #255	; 0xff
 8007bbc:	77fb      	strb	r3, [r7, #31]
 8007bbe:	2300      	movs	r3, #0
 8007bc0:	77bb      	strb	r3, [r7, #30]
	for (; stuffed < end; copy--) {
 8007bc2:	e024      	b.n	8007c0e <unstuff_packet+0x6e>
	    if (!*stuffed) break; // early return if zero is encountered
 8007bc4:	68fb      	ldr	r3, [r7, #12]
 8007bc6:	781b      	ldrb	r3, [r3, #0]
 8007bc8:	2b00      	cmp	r3, #0
 8007bca:	d025      	beq.n	8007c18 <unstuff_packet+0x78>
		if (copy != 0) {
 8007bcc:	7fbb      	ldrb	r3, [r7, #30]
 8007bce:	2b00      	cmp	r3, #0
 8007bd0:	d008      	beq.n	8007be4 <unstuff_packet+0x44>
			*unstuffed++ = *stuffed++;
 8007bd2:	68fa      	ldr	r2, [r7, #12]
 8007bd4:	1c53      	adds	r3, r2, #1
 8007bd6:	60fb      	str	r3, [r7, #12]
 8007bd8:	68bb      	ldr	r3, [r7, #8]
 8007bda:	1c59      	adds	r1, r3, #1
 8007bdc:	60b9      	str	r1, [r7, #8]
 8007bde:	7812      	ldrb	r2, [r2, #0]
 8007be0:	701a      	strb	r2, [r3, #0]
 8007be2:	e011      	b.n	8007c08 <unstuff_packet+0x68>
		} else {
			if (code != 0xFF)
 8007be4:	7ffb      	ldrb	r3, [r7, #31]
 8007be6:	2bff      	cmp	r3, #255	; 0xff
 8007be8:	d004      	beq.n	8007bf4 <unstuff_packet+0x54>
				*unstuffed++ = 0;
 8007bea:	68bb      	ldr	r3, [r7, #8]
 8007bec:	1c5a      	adds	r2, r3, #1
 8007bee:	60ba      	str	r2, [r7, #8]
 8007bf0:	2200      	movs	r2, #0
 8007bf2:	701a      	strb	r2, [r3, #0]
			copy = code = *stuffed++;
 8007bf4:	68fb      	ldr	r3, [r7, #12]
 8007bf6:	1c5a      	adds	r2, r3, #1
 8007bf8:	60fa      	str	r2, [r7, #12]
 8007bfa:	781b      	ldrb	r3, [r3, #0]
 8007bfc:	77fb      	strb	r3, [r7, #31]
 8007bfe:	7ffb      	ldrb	r3, [r7, #31]
 8007c00:	77bb      	strb	r3, [r7, #30]
			if (code == 0)
 8007c02:	7ffb      	ldrb	r3, [r7, #31]
 8007c04:	2b00      	cmp	r3, #0
 8007c06:	d009      	beq.n	8007c1c <unstuff_packet+0x7c>
	for (; stuffed < end; copy--) {
 8007c08:	7fbb      	ldrb	r3, [r7, #30]
 8007c0a:	3b01      	subs	r3, #1
 8007c0c:	77bb      	strb	r3, [r7, #30]
 8007c0e:	68fa      	ldr	r2, [r7, #12]
 8007c10:	697b      	ldr	r3, [r7, #20]
 8007c12:	429a      	cmp	r2, r3
 8007c14:	d3d6      	bcc.n	8007bc4 <unstuff_packet+0x24>
 8007c16:	e002      	b.n	8007c1e <unstuff_packet+0x7e>
	    if (!*stuffed) break; // early return if zero is encountered
 8007c18:	bf00      	nop
 8007c1a:	e000      	b.n	8007c1e <unstuff_packet+0x7e>
				break; /* Source length too long */
 8007c1c:	bf00      	nop
		}
	}
	return unstuffed - start;
 8007c1e:	68ba      	ldr	r2, [r7, #8]
 8007c20:	69bb      	ldr	r3, [r7, #24]
 8007c22:	1ad3      	subs	r3, r2, r3
 8007c24:	b29b      	uxth	r3, r3
}
 8007c26:	4618      	mov	r0, r3
 8007c28:	3724      	adds	r7, #36	; 0x24
 8007c2a:	46bd      	mov	sp, r7
 8007c2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c30:	4770      	bx	lr

08007c32 <spi_transmit>:
 8007c32:	b580      	push	{r7, lr}
 8007c34:	b084      	sub	sp, #16
 8007c36:	af00      	add	r7, sp, #0
 8007c38:	60f8      	str	r0, [r7, #12]
 8007c3a:	60b9      	str	r1, [r7, #8]
 8007c3c:	4613      	mov	r3, r2
 8007c3e:	80fb      	strh	r3, [r7, #6]
 8007c40:	b672      	cpsid	i
 8007c42:	bf00      	nop
 8007c44:	68fb      	ldr	r3, [r7, #12]
 8007c46:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
 8007c4a:	68fb      	ldr	r3, [r7, #12]
 8007c4c:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 8007c50:	2200      	movs	r2, #0
 8007c52:	4619      	mov	r1, r3
 8007c54:	f001 fadc 	bl	8009210 <HAL_GPIO_WritePin>
 8007c58:	68fb      	ldr	r3, [r7, #12]
 8007c5a:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 8007c5e:	88fa      	ldrh	r2, [r7, #6]
 8007c60:	23ff      	movs	r3, #255	; 0xff
 8007c62:	68b9      	ldr	r1, [r7, #8]
 8007c64:	f002 f8a5 	bl	8009db2 <HAL_SPI_Transmit>
 8007c68:	4603      	mov	r3, r0
 8007c6a:	461a      	mov	r2, r3
 8007c6c:	68fb      	ldr	r3, [r7, #12]
 8007c6e:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8007c72:	68fb      	ldr	r3, [r7, #12]
 8007c74:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
 8007c78:	68fb      	ldr	r3, [r7, #12]
 8007c7a:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 8007c7e:	2201      	movs	r2, #1
 8007c80:	4619      	mov	r1, r3
 8007c82:	f001 fac5 	bl	8009210 <HAL_GPIO_WritePin>
 8007c86:	b662      	cpsie	i
 8007c88:	bf00      	nop
 8007c8a:	bf00      	nop
 8007c8c:	3710      	adds	r7, #16
 8007c8e:	46bd      	mov	sp, r7
 8007c90:	bd80      	pop	{r7, pc}

08007c92 <spi_transmit_receive>:
 8007c92:	b580      	push	{r7, lr}
 8007c94:	b084      	sub	sp, #16
 8007c96:	af00      	add	r7, sp, #0
 8007c98:	60f8      	str	r0, [r7, #12]
 8007c9a:	60b9      	str	r1, [r7, #8]
 8007c9c:	603b      	str	r3, [r7, #0]
 8007c9e:	4613      	mov	r3, r2
 8007ca0:	80fb      	strh	r3, [r7, #6]
 8007ca2:	b672      	cpsid	i
 8007ca4:	bf00      	nop
 8007ca6:	68fb      	ldr	r3, [r7, #12]
 8007ca8:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
 8007cac:	68fb      	ldr	r3, [r7, #12]
 8007cae:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 8007cb2:	2200      	movs	r2, #0
 8007cb4:	4619      	mov	r1, r3
 8007cb6:	f001 faab 	bl	8009210 <HAL_GPIO_WritePin>
 8007cba:	68fb      	ldr	r3, [r7, #12]
 8007cbc:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 8007cc0:	88fa      	ldrh	r2, [r7, #6]
 8007cc2:	23ff      	movs	r3, #255	; 0xff
 8007cc4:	68b9      	ldr	r1, [r7, #8]
 8007cc6:	f002 f874 	bl	8009db2 <HAL_SPI_Transmit>
 8007cca:	4603      	mov	r3, r0
 8007ccc:	461a      	mov	r2, r3
 8007cce:	68fb      	ldr	r3, [r7, #12]
 8007cd0:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8007cd4:	68fb      	ldr	r3, [r7, #12]
 8007cd6:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 8007cda:	8b3a      	ldrh	r2, [r7, #24]
 8007cdc:	23ff      	movs	r3, #255	; 0xff
 8007cde:	6839      	ldr	r1, [r7, #0]
 8007ce0:	f002 f9a3 	bl	800a02a <HAL_SPI_Receive>
 8007ce4:	4603      	mov	r3, r0
 8007ce6:	461a      	mov	r2, r3
 8007ce8:	68fb      	ldr	r3, [r7, #12]
 8007cea:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8007cee:	68fb      	ldr	r3, [r7, #12]
 8007cf0:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
 8007cf4:	68fb      	ldr	r3, [r7, #12]
 8007cf6:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 8007cfa:	2201      	movs	r2, #1
 8007cfc:	4619      	mov	r1, r3
 8007cfe:	f001 fa87 	bl	8009210 <HAL_GPIO_WritePin>
 8007d02:	b662      	cpsie	i
 8007d04:	bf00      	nop
 8007d06:	bf00      	nop
 8007d08:	3710      	adds	r7, #16
 8007d0a:	46bd      	mov	sp, r7
 8007d0c:	bd80      	pop	{r7, pc}

08007d0e <read_status_register>:
 8007d0e:	b580      	push	{r7, lr}
 8007d10:	b086      	sub	sp, #24
 8007d12:	af02      	add	r7, sp, #8
 8007d14:	6078      	str	r0, [r7, #4]
 8007d16:	460b      	mov	r3, r1
 8007d18:	70fb      	strb	r3, [r7, #3]
 8007d1a:	230f      	movs	r3, #15
 8007d1c:	733b      	strb	r3, [r7, #12]
 8007d1e:	78fb      	ldrb	r3, [r7, #3]
 8007d20:	737b      	strb	r3, [r7, #13]
 8007d22:	f107 0308 	add.w	r3, r7, #8
 8007d26:	f107 010c 	add.w	r1, r7, #12
 8007d2a:	2201      	movs	r2, #1
 8007d2c:	9200      	str	r2, [sp, #0]
 8007d2e:	2202      	movs	r2, #2
 8007d30:	6878      	ldr	r0, [r7, #4]
 8007d32:	f7ff ffae 	bl	8007c92 <spi_transmit_receive>
 8007d36:	7a3b      	ldrb	r3, [r7, #8]
 8007d38:	4618      	mov	r0, r3
 8007d3a:	3710      	adds	r7, #16
 8007d3c:	46bd      	mov	sp, r7
 8007d3e:	bd80      	pop	{r7, pc}

08007d40 <flash_is_busy>:
 8007d40:	b580      	push	{r7, lr}
 8007d42:	b084      	sub	sp, #16
 8007d44:	af00      	add	r7, sp, #0
 8007d46:	6078      	str	r0, [r7, #4]
 8007d48:	21c0      	movs	r1, #192	; 0xc0
 8007d4a:	6878      	ldr	r0, [r7, #4]
 8007d4c:	f7ff ffdf 	bl	8007d0e <read_status_register>
 8007d50:	4603      	mov	r3, r0
 8007d52:	73fb      	strb	r3, [r7, #15]
 8007d54:	7bfb      	ldrb	r3, [r7, #15]
 8007d56:	f003 0301 	and.w	r3, r3, #1
 8007d5a:	b2db      	uxtb	r3, r3
 8007d5c:	4618      	mov	r0, r3
 8007d5e:	3710      	adds	r7, #16
 8007d60:	46bd      	mov	sp, r7
 8007d62:	bd80      	pop	{r7, pc}

08007d64 <wait_for_operation>:
 8007d64:	b580      	push	{r7, lr}
 8007d66:	b084      	sub	sp, #16
 8007d68:	af00      	add	r7, sp, #0
 8007d6a:	6078      	str	r0, [r7, #4]
 8007d6c:	6039      	str	r1, [r7, #0]
 8007d6e:	2300      	movs	r3, #0
 8007d70:	60fb      	str	r3, [r7, #12]
 8007d72:	e002      	b.n	8007d7a <wait_for_operation+0x16>
 8007d74:	68fb      	ldr	r3, [r7, #12]
 8007d76:	3301      	adds	r3, #1
 8007d78:	60fb      	str	r3, [r7, #12]
 8007d7a:	6878      	ldr	r0, [r7, #4]
 8007d7c:	f7ff ffe0 	bl	8007d40 <flash_is_busy>
 8007d80:	4603      	mov	r3, r0
 8007d82:	2b00      	cmp	r3, #0
 8007d84:	d008      	beq.n	8007d98 <wait_for_operation+0x34>
 8007d86:	683a      	ldr	r2, [r7, #0]
 8007d88:	4613      	mov	r3, r2
 8007d8a:	005b      	lsls	r3, r3, #1
 8007d8c:	4413      	add	r3, r2
 8007d8e:	005b      	lsls	r3, r3, #1
 8007d90:	461a      	mov	r2, r3
 8007d92:	68fb      	ldr	r3, [r7, #12]
 8007d94:	4293      	cmp	r3, r2
 8007d96:	d3ed      	bcc.n	8007d74 <wait_for_operation+0x10>
 8007d98:	bf00      	nop
 8007d9a:	3710      	adds	r7, #16
 8007d9c:	46bd      	mov	sp, r7
 8007d9e:	bd80      	pop	{r7, pc}

08007da0 <write_status_register>:
 8007da0:	b580      	push	{r7, lr}
 8007da2:	b084      	sub	sp, #16
 8007da4:	af00      	add	r7, sp, #0
 8007da6:	6078      	str	r0, [r7, #4]
 8007da8:	460b      	mov	r3, r1
 8007daa:	70fb      	strb	r3, [r7, #3]
 8007dac:	4613      	mov	r3, r2
 8007dae:	70bb      	strb	r3, [r7, #2]
 8007db0:	231f      	movs	r3, #31
 8007db2:	733b      	strb	r3, [r7, #12]
 8007db4:	78fb      	ldrb	r3, [r7, #3]
 8007db6:	737b      	strb	r3, [r7, #13]
 8007db8:	78bb      	ldrb	r3, [r7, #2]
 8007dba:	73bb      	strb	r3, [r7, #14]
 8007dbc:	f107 030c 	add.w	r3, r7, #12
 8007dc0:	2203      	movs	r2, #3
 8007dc2:	4619      	mov	r1, r3
 8007dc4:	6878      	ldr	r0, [r7, #4]
 8007dc6:	f7ff ff34 	bl	8007c32 <spi_transmit>
 8007dca:	2132      	movs	r1, #50	; 0x32
 8007dcc:	6878      	ldr	r0, [r7, #4]
 8007dce:	f7ff ffc9 	bl	8007d64 <wait_for_operation>
 8007dd2:	bf00      	nop
 8007dd4:	3710      	adds	r7, #16
 8007dd6:	46bd      	mov	sp, r7
 8007dd8:	bd80      	pop	{r7, pc}

08007dda <load_page>:
 8007dda:	b580      	push	{r7, lr}
 8007ddc:	b084      	sub	sp, #16
 8007dde:	af00      	add	r7, sp, #0
 8007de0:	6078      	str	r0, [r7, #4]
 8007de2:	460b      	mov	r3, r1
 8007de4:	807b      	strh	r3, [r7, #2]
 8007de6:	887b      	ldrh	r3, [r7, #2]
 8007de8:	0a1b      	lsrs	r3, r3, #8
 8007dea:	b29b      	uxth	r3, r3
 8007dec:	b2db      	uxtb	r3, r3
 8007dee:	733b      	strb	r3, [r7, #12]
 8007df0:	887b      	ldrh	r3, [r7, #2]
 8007df2:	b2db      	uxtb	r3, r3
 8007df4:	737b      	strb	r3, [r7, #13]
 8007df6:	2313      	movs	r3, #19
 8007df8:	723b      	strb	r3, [r7, #8]
 8007dfa:	2300      	movs	r3, #0
 8007dfc:	727b      	strb	r3, [r7, #9]
 8007dfe:	7b3b      	ldrb	r3, [r7, #12]
 8007e00:	72bb      	strb	r3, [r7, #10]
 8007e02:	7b7b      	ldrb	r3, [r7, #13]
 8007e04:	72fb      	strb	r3, [r7, #11]
 8007e06:	f107 0308 	add.w	r3, r7, #8
 8007e0a:	2204      	movs	r2, #4
 8007e0c:	4619      	mov	r1, r3
 8007e0e:	6878      	ldr	r0, [r7, #4]
 8007e10:	f7ff ff0f 	bl	8007c32 <spi_transmit>
 8007e14:	f246 11a8 	movw	r1, #25000	; 0x61a8
 8007e18:	6878      	ldr	r0, [r7, #4]
 8007e1a:	f7ff ffa3 	bl	8007d64 <wait_for_operation>
 8007e1e:	bf00      	nop
 8007e20:	3710      	adds	r7, #16
 8007e22:	46bd      	mov	sp, r7
 8007e24:	bd80      	pop	{r7, pc}

08007e26 <unlock_flash>:
 8007e26:	b580      	push	{r7, lr}
 8007e28:	b084      	sub	sp, #16
 8007e2a:	af00      	add	r7, sp, #0
 8007e2c:	6078      	str	r0, [r7, #4]
 8007e2e:	21a0      	movs	r1, #160	; 0xa0
 8007e30:	6878      	ldr	r0, [r7, #4]
 8007e32:	f7ff ff6c 	bl	8007d0e <read_status_register>
 8007e36:	4603      	mov	r3, r0
 8007e38:	73fb      	strb	r3, [r7, #15]
 8007e3a:	7bfb      	ldrb	r3, [r7, #15]
 8007e3c:	f023 037c 	bic.w	r3, r3, #124	; 0x7c
 8007e40:	73bb      	strb	r3, [r7, #14]
 8007e42:	7bbb      	ldrb	r3, [r7, #14]
 8007e44:	461a      	mov	r2, r3
 8007e46:	21a0      	movs	r1, #160	; 0xa0
 8007e48:	6878      	ldr	r0, [r7, #4]
 8007e4a:	f7ff ffa9 	bl	8007da0 <write_status_register>
 8007e4e:	bf00      	nop
 8007e50:	3710      	adds	r7, #16
 8007e52:	46bd      	mov	sp, r7
 8007e54:	bd80      	pop	{r7, pc}

08007e56 <lock_flash>:
 8007e56:	b580      	push	{r7, lr}
 8007e58:	b084      	sub	sp, #16
 8007e5a:	af00      	add	r7, sp, #0
 8007e5c:	6078      	str	r0, [r7, #4]
 8007e5e:	21a0      	movs	r1, #160	; 0xa0
 8007e60:	6878      	ldr	r0, [r7, #4]
 8007e62:	f7ff ff54 	bl	8007d0e <read_status_register>
 8007e66:	4603      	mov	r3, r0
 8007e68:	73fb      	strb	r3, [r7, #15]
 8007e6a:	7bfb      	ldrb	r3, [r7, #15]
 8007e6c:	f023 037c 	bic.w	r3, r3, #124	; 0x7c
 8007e70:	73bb      	strb	r3, [r7, #14]
 8007e72:	7bfb      	ldrb	r3, [r7, #15]
 8007e74:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8007e78:	73bb      	strb	r3, [r7, #14]
 8007e7a:	7bbb      	ldrb	r3, [r7, #14]
 8007e7c:	461a      	mov	r2, r3
 8007e7e:	21a0      	movs	r1, #160	; 0xa0
 8007e80:	6878      	ldr	r0, [r7, #4]
 8007e82:	f7ff ff8d 	bl	8007da0 <write_status_register>
 8007e86:	bf00      	nop
 8007e88:	3710      	adds	r7, #16
 8007e8a:	46bd      	mov	sp, r7
 8007e8c:	bd80      	pop	{r7, pc}

08007e8e <enable_write>:
 8007e8e:	b580      	push	{r7, lr}
 8007e90:	b084      	sub	sp, #16
 8007e92:	af00      	add	r7, sp, #0
 8007e94:	6078      	str	r0, [r7, #4]
 8007e96:	2306      	movs	r3, #6
 8007e98:	733b      	strb	r3, [r7, #12]
 8007e9a:	f107 030c 	add.w	r3, r7, #12
 8007e9e:	2201      	movs	r2, #1
 8007ea0:	4619      	mov	r1, r3
 8007ea2:	6878      	ldr	r0, [r7, #4]
 8007ea4:	f7ff fec5 	bl	8007c32 <spi_transmit>
 8007ea8:	bf00      	nop
 8007eaa:	3710      	adds	r7, #16
 8007eac:	46bd      	mov	sp, r7
 8007eae:	bd80      	pop	{r7, pc}

08007eb0 <disable_write>:
 8007eb0:	b580      	push	{r7, lr}
 8007eb2:	b084      	sub	sp, #16
 8007eb4:	af00      	add	r7, sp, #0
 8007eb6:	6078      	str	r0, [r7, #4]
 8007eb8:	2304      	movs	r3, #4
 8007eba:	733b      	strb	r3, [r7, #12]
 8007ebc:	f107 030c 	add.w	r3, r7, #12
 8007ec0:	2201      	movs	r2, #1
 8007ec2:	4619      	mov	r1, r3
 8007ec4:	6878      	ldr	r0, [r7, #4]
 8007ec6:	f7ff feb4 	bl	8007c32 <spi_transmit>
 8007eca:	bf00      	nop
 8007ecc:	3710      	adds	r7, #16
 8007ece:	46bd      	mov	sp, r7
 8007ed0:	bd80      	pop	{r7, pc}

08007ed2 <write_page_to_buffer>:
 8007ed2:	b580      	push	{r7, lr}
 8007ed4:	b086      	sub	sp, #24
 8007ed6:	af00      	add	r7, sp, #0
 8007ed8:	60f8      	str	r0, [r7, #12]
 8007eda:	60b9      	str	r1, [r7, #8]
 8007edc:	4611      	mov	r1, r2
 8007ede:	461a      	mov	r2, r3
 8007ee0:	460b      	mov	r3, r1
 8007ee2:	80fb      	strh	r3, [r7, #6]
 8007ee4:	4613      	mov	r3, r2
 8007ee6:	80bb      	strh	r3, [r7, #4]
 8007ee8:	88bb      	ldrh	r3, [r7, #4]
 8007eea:	0a1b      	lsrs	r3, r3, #8
 8007eec:	b29b      	uxth	r3, r3
 8007eee:	b2db      	uxtb	r3, r3
 8007ef0:	753b      	strb	r3, [r7, #20]
 8007ef2:	88bb      	ldrh	r3, [r7, #4]
 8007ef4:	b2db      	uxtb	r3, r3
 8007ef6:	757b      	strb	r3, [r7, #21]
 8007ef8:	2302      	movs	r3, #2
 8007efa:	743b      	strb	r3, [r7, #16]
 8007efc:	7d3b      	ldrb	r3, [r7, #20]
 8007efe:	747b      	strb	r3, [r7, #17]
 8007f00:	7d7b      	ldrb	r3, [r7, #21]
 8007f02:	74bb      	strb	r3, [r7, #18]
 8007f04:	88fb      	ldrh	r3, [r7, #6]
 8007f06:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007f0a:	d902      	bls.n	8007f12 <write_page_to_buffer+0x40>
 8007f0c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8007f10:	80fb      	strh	r3, [r7, #6]
 8007f12:	b672      	cpsid	i
 8007f14:	bf00      	nop
 8007f16:	68fb      	ldr	r3, [r7, #12]
 8007f18:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
 8007f1c:	68fb      	ldr	r3, [r7, #12]
 8007f1e:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 8007f22:	2200      	movs	r2, #0
 8007f24:	4619      	mov	r1, r3
 8007f26:	f001 f973 	bl	8009210 <HAL_GPIO_WritePin>
 8007f2a:	68fb      	ldr	r3, [r7, #12]
 8007f2c:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 8007f30:	f107 0110 	add.w	r1, r7, #16
 8007f34:	23ff      	movs	r3, #255	; 0xff
 8007f36:	2203      	movs	r2, #3
 8007f38:	f001 ff3b 	bl	8009db2 <HAL_SPI_Transmit>
 8007f3c:	4603      	mov	r3, r0
 8007f3e:	461a      	mov	r2, r3
 8007f40:	68fb      	ldr	r3, [r7, #12]
 8007f42:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8007f46:	68fb      	ldr	r3, [r7, #12]
 8007f48:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 8007f4c:	88fa      	ldrh	r2, [r7, #6]
 8007f4e:	23ff      	movs	r3, #255	; 0xff
 8007f50:	68b9      	ldr	r1, [r7, #8]
 8007f52:	f001 ff2e 	bl	8009db2 <HAL_SPI_Transmit>
 8007f56:	4603      	mov	r3, r0
 8007f58:	461a      	mov	r2, r3
 8007f5a:	68fb      	ldr	r3, [r7, #12]
 8007f5c:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8007f60:	68fb      	ldr	r3, [r7, #12]
 8007f62:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
 8007f66:	68fb      	ldr	r3, [r7, #12]
 8007f68:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 8007f6c:	2201      	movs	r2, #1
 8007f6e:	4619      	mov	r1, r3
 8007f70:	f001 f94e 	bl	8009210 <HAL_GPIO_WritePin>
 8007f74:	b662      	cpsie	i
 8007f76:	bf00      	nop
 8007f78:	bf00      	nop
 8007f7a:	3718      	adds	r7, #24
 8007f7c:	46bd      	mov	sp, r7
 8007f7e:	bd80      	pop	{r7, pc}

08007f80 <program_buffer_to_memory>:
 8007f80:	b580      	push	{r7, lr}
 8007f82:	b084      	sub	sp, #16
 8007f84:	af00      	add	r7, sp, #0
 8007f86:	6078      	str	r0, [r7, #4]
 8007f88:	460b      	mov	r3, r1
 8007f8a:	807b      	strh	r3, [r7, #2]
 8007f8c:	887b      	ldrh	r3, [r7, #2]
 8007f8e:	0a1b      	lsrs	r3, r3, #8
 8007f90:	b29b      	uxth	r3, r3
 8007f92:	b2db      	uxtb	r3, r3
 8007f94:	733b      	strb	r3, [r7, #12]
 8007f96:	887b      	ldrh	r3, [r7, #2]
 8007f98:	b2db      	uxtb	r3, r3
 8007f9a:	737b      	strb	r3, [r7, #13]
 8007f9c:	2310      	movs	r3, #16
 8007f9e:	723b      	strb	r3, [r7, #8]
 8007fa0:	2300      	movs	r3, #0
 8007fa2:	727b      	strb	r3, [r7, #9]
 8007fa4:	7b3b      	ldrb	r3, [r7, #12]
 8007fa6:	72bb      	strb	r3, [r7, #10]
 8007fa8:	7b7b      	ldrb	r3, [r7, #13]
 8007faa:	72fb      	strb	r3, [r7, #11]
 8007fac:	f107 0308 	add.w	r3, r7, #8
 8007fb0:	2204      	movs	r2, #4
 8007fb2:	4619      	mov	r1, r3
 8007fb4:	6878      	ldr	r0, [r7, #4]
 8007fb6:	f7ff fe3c 	bl	8007c32 <spi_transmit>
 8007fba:	4904      	ldr	r1, [pc, #16]	; (8007fcc <program_buffer_to_memory+0x4c>)
 8007fbc:	6878      	ldr	r0, [r7, #4]
 8007fbe:	f7ff fed1 	bl	8007d64 <wait_for_operation>
 8007fc2:	bf00      	nop
 8007fc4:	3710      	adds	r7, #16
 8007fc6:	46bd      	mov	sp, r7
 8007fc8:	bd80      	pop	{r7, pc}
 8007fca:	bf00      	nop
 8007fcc:	000aae60 	.word	0x000aae60

08007fd0 <get_write_failure_status>:
 8007fd0:	b580      	push	{r7, lr}
 8007fd2:	b084      	sub	sp, #16
 8007fd4:	af00      	add	r7, sp, #0
 8007fd6:	6078      	str	r0, [r7, #4]
 8007fd8:	6878      	ldr	r0, [r7, #4]
 8007fda:	f000 fabd 	bl	8008558 <ping_flash>
 8007fde:	4603      	mov	r3, r0
 8007fe0:	2b00      	cmp	r3, #0
 8007fe2:	d00d      	beq.n	8008000 <get_write_failure_status+0x30>
 8007fe4:	21c0      	movs	r1, #192	; 0xc0
 8007fe6:	6878      	ldr	r0, [r7, #4]
 8007fe8:	f7ff fe91 	bl	8007d0e <read_status_register>
 8007fec:	4603      	mov	r3, r0
 8007fee:	73fb      	strb	r3, [r7, #15]
 8007ff0:	7bfb      	ldrb	r3, [r7, #15]
 8007ff2:	f003 0308 	and.w	r3, r3, #8
 8007ff6:	b2da      	uxtb	r2, r3
 8007ff8:	687b      	ldr	r3, [r7, #4]
 8007ffa:	f883 2216 	strb.w	r2, [r3, #534]	; 0x216
 8007ffe:	e003      	b.n	8008008 <get_write_failure_status+0x38>
 8008000:	687b      	ldr	r3, [r7, #4]
 8008002:	2208      	movs	r2, #8
 8008004:	f883 2216 	strb.w	r2, [r3, #534]	; 0x216
 8008008:	687b      	ldr	r3, [r7, #4]
 800800a:	f893 3216 	ldrb.w	r3, [r3, #534]	; 0x216
 800800e:	4618      	mov	r0, r3
 8008010:	3710      	adds	r7, #16
 8008012:	46bd      	mov	sp, r7
 8008014:	bd80      	pop	{r7, pc}

08008016 <get_erase_failure_status>:
 8008016:	b580      	push	{r7, lr}
 8008018:	b084      	sub	sp, #16
 800801a:	af00      	add	r7, sp, #0
 800801c:	6078      	str	r0, [r7, #4]
 800801e:	6878      	ldr	r0, [r7, #4]
 8008020:	f000 fa9a 	bl	8008558 <ping_flash>
 8008024:	4603      	mov	r3, r0
 8008026:	2b00      	cmp	r3, #0
 8008028:	d00d      	beq.n	8008046 <get_erase_failure_status+0x30>
 800802a:	21c0      	movs	r1, #192	; 0xc0
 800802c:	6878      	ldr	r0, [r7, #4]
 800802e:	f7ff fe6e 	bl	8007d0e <read_status_register>
 8008032:	4603      	mov	r3, r0
 8008034:	73fb      	strb	r3, [r7, #15]
 8008036:	7bfb      	ldrb	r3, [r7, #15]
 8008038:	f003 0304 	and.w	r3, r3, #4
 800803c:	b2da      	uxtb	r2, r3
 800803e:	687b      	ldr	r3, [r7, #4]
 8008040:	f883 2217 	strb.w	r2, [r3, #535]	; 0x217
 8008044:	e003      	b.n	800804e <get_erase_failure_status+0x38>
 8008046:	687b      	ldr	r3, [r7, #4]
 8008048:	2204      	movs	r2, #4
 800804a:	f883 2217 	strb.w	r2, [r3, #535]	; 0x217
 800804e:	687b      	ldr	r3, [r7, #4]
 8008050:	f893 3217 	ldrb.w	r3, [r3, #535]	; 0x217
 8008054:	4618      	mov	r0, r3
 8008056:	3710      	adds	r7, #16
 8008058:	46bd      	mov	sp, r7
 800805a:	bd80      	pop	{r7, pc}

0800805c <erase_block>:
 800805c:	b580      	push	{r7, lr}
 800805e:	b084      	sub	sp, #16
 8008060:	af00      	add	r7, sp, #0
 8008062:	6078      	str	r0, [r7, #4]
 8008064:	460b      	mov	r3, r1
 8008066:	807b      	strh	r3, [r7, #2]
 8008068:	6878      	ldr	r0, [r7, #4]
 800806a:	f7ff ff10 	bl	8007e8e <enable_write>
 800806e:	887b      	ldrh	r3, [r7, #2]
 8008070:	0a1b      	lsrs	r3, r3, #8
 8008072:	b29b      	uxth	r3, r3
 8008074:	b2db      	uxtb	r3, r3
 8008076:	733b      	strb	r3, [r7, #12]
 8008078:	887b      	ldrh	r3, [r7, #2]
 800807a:	b2db      	uxtb	r3, r3
 800807c:	737b      	strb	r3, [r7, #13]
 800807e:	23d8      	movs	r3, #216	; 0xd8
 8008080:	723b      	strb	r3, [r7, #8]
 8008082:	2300      	movs	r3, #0
 8008084:	727b      	strb	r3, [r7, #9]
 8008086:	7b3b      	ldrb	r3, [r7, #12]
 8008088:	72bb      	strb	r3, [r7, #10]
 800808a:	7b7b      	ldrb	r3, [r7, #13]
 800808c:	72fb      	strb	r3, [r7, #11]
 800808e:	f107 0308 	add.w	r3, r7, #8
 8008092:	2204      	movs	r2, #4
 8008094:	4619      	mov	r1, r3
 8008096:	6878      	ldr	r0, [r7, #4]
 8008098:	f7ff fdcb 	bl	8007c32 <spi_transmit>
 800809c:	6878      	ldr	r0, [r7, #4]
 800809e:	f7ff ff07 	bl	8007eb0 <disable_write>
 80080a2:	4905      	ldr	r1, [pc, #20]	; (80080b8 <erase_block+0x5c>)
 80080a4:	6878      	ldr	r0, [r7, #4]
 80080a6:	f7ff fe5d 	bl	8007d64 <wait_for_operation>
 80080aa:	6878      	ldr	r0, [r7, #4]
 80080ac:	f7ff ffb3 	bl	8008016 <get_erase_failure_status>
 80080b0:	bf00      	nop
 80080b2:	3710      	adds	r7, #16
 80080b4:	46bd      	mov	sp, r7
 80080b6:	bd80      	pop	{r7, pc}
 80080b8:	003d0900 	.word	0x003d0900

080080bc <get_ECC_status>:
 80080bc:	b580      	push	{r7, lr}
 80080be:	b084      	sub	sp, #16
 80080c0:	af00      	add	r7, sp, #0
 80080c2:	6078      	str	r0, [r7, #4]
 80080c4:	6878      	ldr	r0, [r7, #4]
 80080c6:	f000 fa47 	bl	8008558 <ping_flash>
 80080ca:	4603      	mov	r3, r0
 80080cc:	2b00      	cmp	r3, #0
 80080ce:	d033      	beq.n	8008138 <get_ECC_status+0x7c>
 80080d0:	21c0      	movs	r1, #192	; 0xc0
 80080d2:	6878      	ldr	r0, [r7, #4]
 80080d4:	f7ff fe1b 	bl	8007d0e <read_status_register>
 80080d8:	4603      	mov	r3, r0
 80080da:	73fb      	strb	r3, [r7, #15]
 80080dc:	7bfb      	ldrb	r3, [r7, #15]
 80080de:	f003 0320 	and.w	r3, r3, #32
 80080e2:	73bb      	strb	r3, [r7, #14]
 80080e4:	7bfb      	ldrb	r3, [r7, #15]
 80080e6:	f003 0310 	and.w	r3, r3, #16
 80080ea:	737b      	strb	r3, [r7, #13]
 80080ec:	7bbb      	ldrb	r3, [r7, #14]
 80080ee:	2b00      	cmp	r3, #0
 80080f0:	d107      	bne.n	8008102 <get_ECC_status+0x46>
 80080f2:	7b7b      	ldrb	r3, [r7, #13]
 80080f4:	2b00      	cmp	r3, #0
 80080f6:	d104      	bne.n	8008102 <get_ECC_status+0x46>
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	2200      	movs	r2, #0
 80080fc:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 8008100:	e01f      	b.n	8008142 <get_ECC_status+0x86>
 8008102:	7bbb      	ldrb	r3, [r7, #14]
 8008104:	2b00      	cmp	r3, #0
 8008106:	d107      	bne.n	8008118 <get_ECC_status+0x5c>
 8008108:	7b7b      	ldrb	r3, [r7, #13]
 800810a:	2b00      	cmp	r3, #0
 800810c:	d004      	beq.n	8008118 <get_ECC_status+0x5c>
 800810e:	687b      	ldr	r3, [r7, #4]
 8008110:	2201      	movs	r2, #1
 8008112:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 8008116:	e014      	b.n	8008142 <get_ECC_status+0x86>
 8008118:	7bbb      	ldrb	r3, [r7, #14]
 800811a:	2b00      	cmp	r3, #0
 800811c:	d007      	beq.n	800812e <get_ECC_status+0x72>
 800811e:	7b7b      	ldrb	r3, [r7, #13]
 8008120:	2b00      	cmp	r3, #0
 8008122:	d104      	bne.n	800812e <get_ECC_status+0x72>
 8008124:	687b      	ldr	r3, [r7, #4]
 8008126:	2202      	movs	r2, #2
 8008128:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 800812c:	e009      	b.n	8008142 <get_ECC_status+0x86>
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	2203      	movs	r2, #3
 8008132:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 8008136:	e004      	b.n	8008142 <get_ECC_status+0x86>
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	2204      	movs	r2, #4
 800813c:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 8008140:	e7ff      	b.n	8008142 <get_ECC_status+0x86>
 8008142:	bf00      	nop
 8008144:	3710      	adds	r7, #16
 8008146:	46bd      	mov	sp, r7
 8008148:	bd80      	pop	{r7, pc}

0800814a <read_flash_buffer>:
 800814a:	b580      	push	{r7, lr}
 800814c:	b088      	sub	sp, #32
 800814e:	af02      	add	r7, sp, #8
 8008150:	60f8      	str	r0, [r7, #12]
 8008152:	60b9      	str	r1, [r7, #8]
 8008154:	4611      	mov	r1, r2
 8008156:	461a      	mov	r2, r3
 8008158:	460b      	mov	r3, r1
 800815a:	80fb      	strh	r3, [r7, #6]
 800815c:	4613      	mov	r3, r2
 800815e:	80bb      	strh	r3, [r7, #4]
 8008160:	88bb      	ldrh	r3, [r7, #4]
 8008162:	0a1b      	lsrs	r3, r3, #8
 8008164:	b29b      	uxth	r3, r3
 8008166:	b2db      	uxtb	r3, r3
 8008168:	753b      	strb	r3, [r7, #20]
 800816a:	88bb      	ldrh	r3, [r7, #4]
 800816c:	b2db      	uxtb	r3, r3
 800816e:	757b      	strb	r3, [r7, #21]
 8008170:	2303      	movs	r3, #3
 8008172:	743b      	strb	r3, [r7, #16]
 8008174:	7d3b      	ldrb	r3, [r7, #20]
 8008176:	747b      	strb	r3, [r7, #17]
 8008178:	7d7b      	ldrb	r3, [r7, #21]
 800817a:	74bb      	strb	r3, [r7, #18]
 800817c:	2300      	movs	r3, #0
 800817e:	74fb      	strb	r3, [r7, #19]
 8008180:	f107 0110 	add.w	r1, r7, #16
 8008184:	88fb      	ldrh	r3, [r7, #6]
 8008186:	9300      	str	r3, [sp, #0]
 8008188:	68bb      	ldr	r3, [r7, #8]
 800818a:	2204      	movs	r2, #4
 800818c:	68f8      	ldr	r0, [r7, #12]
 800818e:	f7ff fd80 	bl	8007c92 <spi_transmit_receive>
 8008192:	bf00      	nop
 8008194:	3718      	adds	r7, #24
 8008196:	46bd      	mov	sp, r7
 8008198:	bd80      	pop	{r7, pc}

0800819a <read_bytes_from_page>:
 800819a:	b580      	push	{r7, lr}
 800819c:	b084      	sub	sp, #16
 800819e:	af00      	add	r7, sp, #0
 80081a0:	60f8      	str	r0, [r7, #12]
 80081a2:	60b9      	str	r1, [r7, #8]
 80081a4:	4611      	mov	r1, r2
 80081a6:	461a      	mov	r2, r3
 80081a8:	460b      	mov	r3, r1
 80081aa:	80fb      	strh	r3, [r7, #6]
 80081ac:	4613      	mov	r3, r2
 80081ae:	80bb      	strh	r3, [r7, #4]
 80081b0:	88bb      	ldrh	r3, [r7, #4]
 80081b2:	4619      	mov	r1, r3
 80081b4:	68f8      	ldr	r0, [r7, #12]
 80081b6:	f7ff fe10 	bl	8007dda <load_page>
 80081ba:	8b3b      	ldrh	r3, [r7, #24]
 80081bc:	88fa      	ldrh	r2, [r7, #6]
 80081be:	68b9      	ldr	r1, [r7, #8]
 80081c0:	68f8      	ldr	r0, [r7, #12]
 80081c2:	f7ff ffc2 	bl	800814a <read_flash_buffer>
 80081c6:	68f8      	ldr	r0, [r7, #12]
 80081c8:	f7ff ff78 	bl	80080bc <get_ECC_status>
 80081cc:	bf00      	nop
 80081ce:	3710      	adds	r7, #16
 80081d0:	46bd      	mov	sp, r7
 80081d2:	bd80      	pop	{r7, pc}

080081d4 <write_bytes_to_page>:
 80081d4:	b580      	push	{r7, lr}
 80081d6:	b084      	sub	sp, #16
 80081d8:	af00      	add	r7, sp, #0
 80081da:	60f8      	str	r0, [r7, #12]
 80081dc:	60b9      	str	r1, [r7, #8]
 80081de:	4611      	mov	r1, r2
 80081e0:	461a      	mov	r2, r3
 80081e2:	460b      	mov	r3, r1
 80081e4:	80fb      	strh	r3, [r7, #6]
 80081e6:	4613      	mov	r3, r2
 80081e8:	80bb      	strh	r3, [r7, #4]
 80081ea:	68f8      	ldr	r0, [r7, #12]
 80081ec:	f7ff fe4f 	bl	8007e8e <enable_write>
 80081f0:	8b3b      	ldrh	r3, [r7, #24]
 80081f2:	88fa      	ldrh	r2, [r7, #6]
 80081f4:	68b9      	ldr	r1, [r7, #8]
 80081f6:	68f8      	ldr	r0, [r7, #12]
 80081f8:	f7ff fe6b 	bl	8007ed2 <write_page_to_buffer>
 80081fc:	88bb      	ldrh	r3, [r7, #4]
 80081fe:	4619      	mov	r1, r3
 8008200:	68f8      	ldr	r0, [r7, #12]
 8008202:	f7ff febd 	bl	8007f80 <program_buffer_to_memory>
 8008206:	68f8      	ldr	r0, [r7, #12]
 8008208:	f7ff fe52 	bl	8007eb0 <disable_write>
 800820c:	68f8      	ldr	r0, [r7, #12]
 800820e:	f7ff fedf 	bl	8007fd0 <get_write_failure_status>
 8008212:	bf00      	nop
 8008214:	3710      	adds	r7, #16
 8008216:	46bd      	mov	sp, r7
 8008218:	bd80      	pop	{r7, pc}

0800821a <enable_ECC>:
 800821a:	b580      	push	{r7, lr}
 800821c:	b084      	sub	sp, #16
 800821e:	af00      	add	r7, sp, #0
 8008220:	6078      	str	r0, [r7, #4]
 8008222:	21b0      	movs	r1, #176	; 0xb0
 8008224:	6878      	ldr	r0, [r7, #4]
 8008226:	f7ff fd72 	bl	8007d0e <read_status_register>
 800822a:	4603      	mov	r3, r0
 800822c:	73fb      	strb	r3, [r7, #15]
 800822e:	7bfb      	ldrb	r3, [r7, #15]
 8008230:	f043 0310 	orr.w	r3, r3, #16
 8008234:	73bb      	strb	r3, [r7, #14]
 8008236:	7bba      	ldrb	r2, [r7, #14]
 8008238:	7bfb      	ldrb	r3, [r7, #15]
 800823a:	429a      	cmp	r2, r3
 800823c:	d005      	beq.n	800824a <enable_ECC+0x30>
 800823e:	7bbb      	ldrb	r3, [r7, #14]
 8008240:	461a      	mov	r2, r3
 8008242:	21b0      	movs	r1, #176	; 0xb0
 8008244:	6878      	ldr	r0, [r7, #4]
 8008246:	f7ff fdab 	bl	8007da0 <write_status_register>
 800824a:	bf00      	nop
 800824c:	3710      	adds	r7, #16
 800824e:	46bd      	mov	sp, r7
 8008250:	bd80      	pop	{r7, pc}

08008252 <enable_buffer_mode>:
 8008252:	b580      	push	{r7, lr}
 8008254:	b084      	sub	sp, #16
 8008256:	af00      	add	r7, sp, #0
 8008258:	6078      	str	r0, [r7, #4]
 800825a:	21b0      	movs	r1, #176	; 0xb0
 800825c:	6878      	ldr	r0, [r7, #4]
 800825e:	f7ff fd56 	bl	8007d0e <read_status_register>
 8008262:	4603      	mov	r3, r0
 8008264:	73fb      	strb	r3, [r7, #15]
 8008266:	7bfb      	ldrb	r3, [r7, #15]
 8008268:	f043 0308 	orr.w	r3, r3, #8
 800826c:	73bb      	strb	r3, [r7, #14]
 800826e:	7bba      	ldrb	r2, [r7, #14]
 8008270:	7bfb      	ldrb	r3, [r7, #15]
 8008272:	429a      	cmp	r2, r3
 8008274:	d005      	beq.n	8008282 <enable_buffer_mode+0x30>
 8008276:	7bbb      	ldrb	r3, [r7, #14]
 8008278:	461a      	mov	r2, r3
 800827a:	21b0      	movs	r1, #176	; 0xb0
 800827c:	6878      	ldr	r0, [r7, #4]
 800827e:	f7ff fd8f 	bl	8007da0 <write_status_register>
 8008282:	bf00      	nop
 8008284:	3710      	adds	r7, #16
 8008286:	46bd      	mov	sp, r7
 8008288:	bd80      	pop	{r7, pc}

0800828a <find_write_ptr>:
 800828a:	b580      	push	{r7, lr}
 800828c:	f6ad 0d28 	subw	sp, sp, #2088	; 0x828
 8008290:	af02      	add	r7, sp, #8
 8008292:	1d3b      	adds	r3, r7, #4
 8008294:	6018      	str	r0, [r3, #0]
 8008296:	f107 0108 	add.w	r1, r7, #8
 800829a:	1d38      	adds	r0, r7, #4
 800829c:	2300      	movs	r3, #0
 800829e:	9300      	str	r3, [sp, #0]
 80082a0:	2300      	movs	r3, #0
 80082a2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80082a6:	6800      	ldr	r0, [r0, #0]
 80082a8:	f7ff ff77 	bl	800819a <read_bytes_from_page>
 80082ac:	2301      	movs	r3, #1
 80082ae:	f887 381f 	strb.w	r3, [r7, #2079]	; 0x81f
 80082b2:	2300      	movs	r3, #0
 80082b4:	f8a7 381c 	strh.w	r3, [r7, #2076]	; 0x81c
 80082b8:	e00e      	b.n	80082d8 <find_write_ptr+0x4e>
 80082ba:	f8b7 381c 	ldrh.w	r3, [r7, #2076]	; 0x81c
 80082be:	f107 0208 	add.w	r2, r7, #8
 80082c2:	5cd3      	ldrb	r3, [r2, r3]
 80082c4:	2bff      	cmp	r3, #255	; 0xff
 80082c6:	d002      	beq.n	80082ce <find_write_ptr+0x44>
 80082c8:	2300      	movs	r3, #0
 80082ca:	f887 381f 	strb.w	r3, [r7, #2079]	; 0x81f
 80082ce:	f8b7 381c 	ldrh.w	r3, [r7, #2076]	; 0x81c
 80082d2:	3301      	adds	r3, #1
 80082d4:	f8a7 381c 	strh.w	r3, [r7, #2076]	; 0x81c
 80082d8:	f8b7 381c 	ldrh.w	r3, [r7, #2076]	; 0x81c
 80082dc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80082e0:	d3eb      	bcc.n	80082ba <find_write_ptr+0x30>
 80082e2:	f897 381f 	ldrb.w	r3, [r7, #2079]	; 0x81f
 80082e6:	2b00      	cmp	r3, #0
 80082e8:	d00a      	beq.n	8008300 <find_write_ptr+0x76>
 80082ea:	1d3b      	adds	r3, r7, #4
 80082ec:	681b      	ldr	r3, [r3, #0]
 80082ee:	2200      	movs	r2, #0
 80082f0:	f8a3 2210 	strh.w	r2, [r3, #528]	; 0x210
 80082f4:	1d3b      	adds	r3, r7, #4
 80082f6:	681b      	ldr	r3, [r3, #0]
 80082f8:	2200      	movs	r2, #0
 80082fa:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 80082fe:	e0f0      	b.n	80084e2 <find_write_ptr+0x258>
 8008300:	2300      	movs	r3, #0
 8008302:	f8c7 3818 	str.w	r3, [r7, #2072]	; 0x818
 8008306:	f64f 73c0 	movw	r3, #65472	; 0xffc0
 800830a:	f8c7 3814 	str.w	r3, [r7, #2068]	; 0x814
 800830e:	e041      	b.n	8008394 <find_write_ptr+0x10a>
 8008310:	f8d7 2814 	ldr.w	r2, [r7, #2068]	; 0x814
 8008314:	f8d7 3818 	ldr.w	r3, [r7, #2072]	; 0x818
 8008318:	1ad3      	subs	r3, r2, r3
 800831a:	085b      	lsrs	r3, r3, #1
 800831c:	b29a      	uxth	r2, r3
 800831e:	f8d7 3818 	ldr.w	r3, [r7, #2072]	; 0x818
 8008322:	b29b      	uxth	r3, r3
 8008324:	4413      	add	r3, r2
 8008326:	f8a7 380a 	strh.w	r3, [r7, #2058]	; 0x80a
 800832a:	f8b7 380a 	ldrh.w	r3, [r7, #2058]	; 0x80a
 800832e:	f107 0108 	add.w	r1, r7, #8
 8008332:	1d38      	adds	r0, r7, #4
 8008334:	2200      	movs	r2, #0
 8008336:	9200      	str	r2, [sp, #0]
 8008338:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800833c:	6800      	ldr	r0, [r0, #0]
 800833e:	f7ff ff2c 	bl	800819a <read_bytes_from_page>
 8008342:	2301      	movs	r3, #1
 8008344:	f887 3813 	strb.w	r3, [r7, #2067]	; 0x813
 8008348:	2300      	movs	r3, #0
 800834a:	f8a7 3810 	strh.w	r3, [r7, #2064]	; 0x810
 800834e:	e00f      	b.n	8008370 <find_write_ptr+0xe6>
 8008350:	f8b7 3810 	ldrh.w	r3, [r7, #2064]	; 0x810
 8008354:	f107 0208 	add.w	r2, r7, #8
 8008358:	5cd3      	ldrb	r3, [r2, r3]
 800835a:	2bff      	cmp	r3, #255	; 0xff
 800835c:	d003      	beq.n	8008366 <find_write_ptr+0xdc>
 800835e:	2300      	movs	r3, #0
 8008360:	f887 3813 	strb.w	r3, [r7, #2067]	; 0x813
 8008364:	e009      	b.n	800837a <find_write_ptr+0xf0>
 8008366:	f8b7 3810 	ldrh.w	r3, [r7, #2064]	; 0x810
 800836a:	3301      	adds	r3, #1
 800836c:	f8a7 3810 	strh.w	r3, [r7, #2064]	; 0x810
 8008370:	f8b7 3810 	ldrh.w	r3, [r7, #2064]	; 0x810
 8008374:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008378:	d3ea      	bcc.n	8008350 <find_write_ptr+0xc6>
 800837a:	f897 3813 	ldrb.w	r3, [r7, #2067]	; 0x813
 800837e:	2b00      	cmp	r3, #0
 8008380:	d004      	beq.n	800838c <find_write_ptr+0x102>
 8008382:	f8b7 380a 	ldrh.w	r3, [r7, #2058]	; 0x80a
 8008386:	f8c7 3814 	str.w	r3, [r7, #2068]	; 0x814
 800838a:	e003      	b.n	8008394 <find_write_ptr+0x10a>
 800838c:	f8b7 380a 	ldrh.w	r3, [r7, #2058]	; 0x80a
 8008390:	f8c7 3818 	str.w	r3, [r7, #2072]	; 0x818
 8008394:	f8d7 2814 	ldr.w	r2, [r7, #2068]	; 0x814
 8008398:	f8d7 3818 	ldr.w	r3, [r7, #2072]	; 0x818
 800839c:	1ad3      	subs	r3, r2, r3
 800839e:	2b01      	cmp	r3, #1
 80083a0:	d8b6      	bhi.n	8008310 <find_write_ptr+0x86>
 80083a2:	f8d7 3818 	ldr.w	r3, [r7, #2072]	; 0x818
 80083a6:	b29a      	uxth	r2, r3
 80083a8:	1d3b      	adds	r3, r7, #4
 80083aa:	681b      	ldr	r3, [r3, #0]
 80083ac:	f8a3 2210 	strh.w	r2, [r3, #528]	; 0x210
 80083b0:	1d3b      	adds	r3, r7, #4
 80083b2:	681b      	ldr	r3, [r3, #0]
 80083b4:	f8b3 3210 	ldrh.w	r3, [r3, #528]	; 0x210
 80083b8:	f107 0108 	add.w	r1, r7, #8
 80083bc:	1d38      	adds	r0, r7, #4
 80083be:	2200      	movs	r2, #0
 80083c0:	9200      	str	r2, [sp, #0]
 80083c2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80083c6:	6800      	ldr	r0, [r0, #0]
 80083c8:	f7ff fee7 	bl	800819a <read_bytes_from_page>
 80083cc:	f107 0308 	add.w	r3, r7, #8
 80083d0:	f893 37ff 	ldrb.w	r3, [r3, #2047]	; 0x7ff
 80083d4:	2bff      	cmp	r3, #255	; 0xff
 80083d6:	d01e      	beq.n	8008416 <find_write_ptr+0x18c>
 80083d8:	1d3b      	adds	r3, r7, #4
 80083da:	681b      	ldr	r3, [r3, #0]
 80083dc:	f8b3 3210 	ldrh.w	r3, [r3, #528]	; 0x210
 80083e0:	f64f 72bf 	movw	r2, #65471	; 0xffbf
 80083e4:	4293      	cmp	r3, r2
 80083e6:	d106      	bne.n	80083f6 <find_write_ptr+0x16c>
 80083e8:	1d3b      	adds	r3, r7, #4
 80083ea:	681b      	ldr	r3, [r3, #0]
 80083ec:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80083f0:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 80083f4:	e075      	b.n	80084e2 <find_write_ptr+0x258>
 80083f6:	1d3b      	adds	r3, r7, #4
 80083f8:	681b      	ldr	r3, [r3, #0]
 80083fa:	f8b3 3210 	ldrh.w	r3, [r3, #528]	; 0x210
 80083fe:	3301      	adds	r3, #1
 8008400:	b29a      	uxth	r2, r3
 8008402:	1d3b      	adds	r3, r7, #4
 8008404:	681b      	ldr	r3, [r3, #0]
 8008406:	f8a3 2210 	strh.w	r2, [r3, #528]	; 0x210
 800840a:	1d3b      	adds	r3, r7, #4
 800840c:	681b      	ldr	r3, [r3, #0]
 800840e:	2200      	movs	r2, #0
 8008410:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 8008414:	e065      	b.n	80084e2 <find_write_ptr+0x258>
 8008416:	2301      	movs	r3, #1
 8008418:	f887 380d 	strb.w	r3, [r7, #2061]	; 0x80d
 800841c:	f240 73ff 	movw	r3, #2047	; 0x7ff
 8008420:	f8a7 380e 	strh.w	r3, [r7, #2062]	; 0x80e
 8008424:	e019      	b.n	800845a <find_write_ptr+0x1d0>
 8008426:	f9b7 380e 	ldrsh.w	r3, [r7, #2062]	; 0x80e
 800842a:	f107 0208 	add.w	r2, r7, #8
 800842e:	5cd3      	ldrb	r3, [r2, r3]
 8008430:	2bff      	cmp	r3, #255	; 0xff
 8008432:	d00b      	beq.n	800844c <find_write_ptr+0x1c2>
 8008434:	f8b7 380e 	ldrh.w	r3, [r7, #2062]	; 0x80e
 8008438:	3301      	adds	r3, #1
 800843a:	b29a      	uxth	r2, r3
 800843c:	1d3b      	adds	r3, r7, #4
 800843e:	681b      	ldr	r3, [r3, #0]
 8008440:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 8008444:	2300      	movs	r3, #0
 8008446:	f887 380d 	strb.w	r3, [r7, #2061]	; 0x80d
 800844a:	e00a      	b.n	8008462 <find_write_ptr+0x1d8>
 800844c:	f9b7 380e 	ldrsh.w	r3, [r7, #2062]	; 0x80e
 8008450:	b29b      	uxth	r3, r3
 8008452:	3b01      	subs	r3, #1
 8008454:	b29b      	uxth	r3, r3
 8008456:	f8a7 380e 	strh.w	r3, [r7, #2062]	; 0x80e
 800845a:	f9b7 380e 	ldrsh.w	r3, [r7, #2062]	; 0x80e
 800845e:	2b00      	cmp	r3, #0
 8008460:	dae1      	bge.n	8008426 <find_write_ptr+0x19c>
 8008462:	1d3b      	adds	r3, r7, #4
 8008464:	681b      	ldr	r3, [r3, #0]
 8008466:	f8b3 3212 	ldrh.w	r3, [r3, #530]	; 0x212
 800846a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800846e:	d806      	bhi.n	800847e <find_write_ptr+0x1f4>
 8008470:	1d3b      	adds	r3, r7, #4
 8008472:	681b      	ldr	r3, [r3, #0]
 8008474:	f44f 7200 	mov.w	r2, #512	; 0x200
 8008478:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 800847c:	e031      	b.n	80084e2 <find_write_ptr+0x258>
 800847e:	1d3b      	adds	r3, r7, #4
 8008480:	681b      	ldr	r3, [r3, #0]
 8008482:	f8b3 3212 	ldrh.w	r3, [r3, #530]	; 0x212
 8008486:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800848a:	d806      	bhi.n	800849a <find_write_ptr+0x210>
 800848c:	1d3b      	adds	r3, r7, #4
 800848e:	681b      	ldr	r3, [r3, #0]
 8008490:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008494:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 8008498:	e023      	b.n	80084e2 <find_write_ptr+0x258>
 800849a:	1d3b      	adds	r3, r7, #4
 800849c:	681b      	ldr	r3, [r3, #0]
 800849e:	f8b3 3212 	ldrh.w	r3, [r3, #530]	; 0x212
 80084a2:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80084a6:	d806      	bhi.n	80084b6 <find_write_ptr+0x22c>
 80084a8:	1d3b      	adds	r3, r7, #4
 80084aa:	681b      	ldr	r3, [r3, #0]
 80084ac:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 80084b0:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 80084b4:	e015      	b.n	80084e2 <find_write_ptr+0x258>
 80084b6:	1d3b      	adds	r3, r7, #4
 80084b8:	681b      	ldr	r3, [r3, #0]
 80084ba:	f8b3 3212 	ldrh.w	r3, [r3, #530]	; 0x212
 80084be:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80084c2:	d20e      	bcs.n	80084e2 <find_write_ptr+0x258>
 80084c4:	1d3b      	adds	r3, r7, #4
 80084c6:	681b      	ldr	r3, [r3, #0]
 80084c8:	2200      	movs	r2, #0
 80084ca:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 80084ce:	1d3b      	adds	r3, r7, #4
 80084d0:	681b      	ldr	r3, [r3, #0]
 80084d2:	f8b3 3210 	ldrh.w	r3, [r3, #528]	; 0x210
 80084d6:	3301      	adds	r3, #1
 80084d8:	b29a      	uxth	r2, r3
 80084da:	1d3b      	adds	r3, r7, #4
 80084dc:	681b      	ldr	r3, [r3, #0]
 80084de:	f8a3 2210 	strh.w	r2, [r3, #528]	; 0x210
 80084e2:	f507 6702 	add.w	r7, r7, #2080	; 0x820
 80084e6:	46bd      	mov	sp, r7
 80084e8:	bd80      	pop	{r7, pc}

080084ea <init_flash>:
 80084ea:	b580      	push	{r7, lr}
 80084ec:	b084      	sub	sp, #16
 80084ee:	af00      	add	r7, sp, #0
 80084f0:	60f8      	str	r0, [r7, #12]
 80084f2:	60b9      	str	r1, [r7, #8]
 80084f4:	607a      	str	r2, [r7, #4]
 80084f6:	807b      	strh	r3, [r7, #2]
 80084f8:	68fb      	ldr	r3, [r7, #12]
 80084fa:	68ba      	ldr	r2, [r7, #8]
 80084fc:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8008500:	68fb      	ldr	r3, [r7, #12]
 8008502:	687a      	ldr	r2, [r7, #4]
 8008504:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 8008508:	68fb      	ldr	r3, [r7, #12]
 800850a:	887a      	ldrh	r2, [r7, #2]
 800850c:	f8a3 220c 	strh.w	r2, [r3, #524]	; 0x20c
 8008510:	68fb      	ldr	r3, [r7, #12]
 8008512:	2200      	movs	r2, #0
 8008514:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8008518:	68fb      	ldr	r3, [r7, #12]
 800851a:	2200      	movs	r2, #0
 800851c:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8008520:	68fb      	ldr	r3, [r7, #12]
 8008522:	2200      	movs	r2, #0
 8008524:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 8008528:	68fb      	ldr	r3, [r7, #12]
 800852a:	2200      	movs	r2, #0
 800852c:	f883 2216 	strb.w	r2, [r3, #534]	; 0x216
 8008530:	68fb      	ldr	r3, [r7, #12]
 8008532:	2200      	movs	r2, #0
 8008534:	f883 2217 	strb.w	r2, [r3, #535]	; 0x217
 8008538:	68f8      	ldr	r0, [r7, #12]
 800853a:	f000 f837 	bl	80085ac <reset_flash>
 800853e:	68f8      	ldr	r0, [r7, #12]
 8008540:	f7ff fe6b 	bl	800821a <enable_ECC>
 8008544:	68f8      	ldr	r0, [r7, #12]
 8008546:	f7ff fe84 	bl	8008252 <enable_buffer_mode>
 800854a:	68f8      	ldr	r0, [r7, #12]
 800854c:	f7ff fe9d 	bl	800828a <find_write_ptr>
 8008550:	bf00      	nop
 8008552:	3710      	adds	r7, #16
 8008554:	46bd      	mov	sp, r7
 8008556:	bd80      	pop	{r7, pc}

08008558 <ping_flash>:
 8008558:	b580      	push	{r7, lr}
 800855a:	b088      	sub	sp, #32
 800855c:	af02      	add	r7, sp, #8
 800855e:	6078      	str	r0, [r7, #4]
 8008560:	239f      	movs	r3, #159	; 0x9f
 8008562:	823b      	strh	r3, [r7, #16]
 8008564:	f107 030c 	add.w	r3, r7, #12
 8008568:	f107 0110 	add.w	r1, r7, #16
 800856c:	2203      	movs	r2, #3
 800856e:	9200      	str	r2, [sp, #0]
 8008570:	2202      	movs	r2, #2
 8008572:	6878      	ldr	r0, [r7, #4]
 8008574:	f7ff fb8d 	bl	8007c92 <spi_transmit_receive>
 8008578:	7b3b      	ldrb	r3, [r7, #12]
 800857a:	75fb      	strb	r3, [r7, #23]
 800857c:	7b7b      	ldrb	r3, [r7, #13]
 800857e:	b29b      	uxth	r3, r3
 8008580:	021b      	lsls	r3, r3, #8
 8008582:	b29a      	uxth	r2, r3
 8008584:	7bbb      	ldrb	r3, [r7, #14]
 8008586:	b29b      	uxth	r3, r3
 8008588:	4413      	add	r3, r2
 800858a:	82bb      	strh	r3, [r7, #20]
 800858c:	7dfb      	ldrb	r3, [r7, #23]
 800858e:	2bef      	cmp	r3, #239	; 0xef
 8008590:	d106      	bne.n	80085a0 <ping_flash+0x48>
 8008592:	8abb      	ldrh	r3, [r7, #20]
 8008594:	f64a 2221 	movw	r2, #43553	; 0xaa21
 8008598:	4293      	cmp	r3, r2
 800859a:	d101      	bne.n	80085a0 <ping_flash+0x48>
 800859c:	2301      	movs	r3, #1
 800859e:	e000      	b.n	80085a2 <ping_flash+0x4a>
 80085a0:	2300      	movs	r3, #0
 80085a2:	4618      	mov	r0, r3
 80085a4:	3718      	adds	r7, #24
 80085a6:	46bd      	mov	sp, r7
 80085a8:	bd80      	pop	{r7, pc}
	...

080085ac <reset_flash>:
 80085ac:	b580      	push	{r7, lr}
 80085ae:	b084      	sub	sp, #16
 80085b0:	af00      	add	r7, sp, #0
 80085b2:	6078      	str	r0, [r7, #4]
 80085b4:	6878      	ldr	r0, [r7, #4]
 80085b6:	f7ff fbc3 	bl	8007d40 <flash_is_busy>
 80085ba:	4603      	mov	r3, r0
 80085bc:	2b00      	cmp	r3, #0
 80085be:	d001      	beq.n	80085c4 <reset_flash+0x18>
 80085c0:	2300      	movs	r3, #0
 80085c2:	e00d      	b.n	80085e0 <reset_flash+0x34>
 80085c4:	23ff      	movs	r3, #255	; 0xff
 80085c6:	733b      	strb	r3, [r7, #12]
 80085c8:	f107 030c 	add.w	r3, r7, #12
 80085cc:	2201      	movs	r2, #1
 80085ce:	4619      	mov	r1, r3
 80085d0:	6878      	ldr	r0, [r7, #4]
 80085d2:	f7ff fb2e 	bl	8007c32 <spi_transmit>
 80085d6:	4904      	ldr	r1, [pc, #16]	; (80085e8 <reset_flash+0x3c>)
 80085d8:	6878      	ldr	r0, [r7, #4]
 80085da:	f7ff fbc3 	bl	8007d64 <wait_for_operation>
 80085de:	2301      	movs	r3, #1
 80085e0:	4618      	mov	r0, r3
 80085e2:	3710      	adds	r7, #16
 80085e4:	46bd      	mov	sp, r7
 80085e6:	bd80      	pop	{r7, pc}
 80085e8:	0007a120 	.word	0x0007a120

080085ec <write_to_flash_contiguous>:
 80085ec:	b580      	push	{r7, lr}
 80085ee:	b088      	sub	sp, #32
 80085f0:	af02      	add	r7, sp, #8
 80085f2:	60f8      	str	r0, [r7, #12]
 80085f4:	60b9      	str	r1, [r7, #8]
 80085f6:	607a      	str	r2, [r7, #4]
 80085f8:	2300      	movs	r3, #0
 80085fa:	617b      	str	r3, [r7, #20]
 80085fc:	2300      	movs	r3, #0
 80085fe:	827b      	strh	r3, [r7, #18]
 8008600:	e05a      	b.n	80086b8 <write_to_flash_contiguous+0xcc>
 8008602:	687b      	ldr	r3, [r7, #4]
 8008604:	b29a      	uxth	r2, r3
 8008606:	697b      	ldr	r3, [r7, #20]
 8008608:	b29b      	uxth	r3, r3
 800860a:	1ad3      	subs	r3, r2, r3
 800860c:	823b      	strh	r3, [r7, #16]
 800860e:	8a3a      	ldrh	r2, [r7, #16]
 8008610:	68fb      	ldr	r3, [r7, #12]
 8008612:	f8b3 3212 	ldrh.w	r3, [r3, #530]	; 0x212
 8008616:	f5c3 6300 	rsb	r3, r3, #2048	; 0x800
 800861a:	429a      	cmp	r2, r3
 800861c:	dd05      	ble.n	800862a <write_to_flash_contiguous+0x3e>
 800861e:	68fb      	ldr	r3, [r7, #12]
 8008620:	f8b3 3212 	ldrh.w	r3, [r3, #530]	; 0x212
 8008624:	f5c3 6300 	rsb	r3, r3, #2048	; 0x800
 8008628:	823b      	strh	r3, [r7, #16]
 800862a:	68ba      	ldr	r2, [r7, #8]
 800862c:	697b      	ldr	r3, [r7, #20]
 800862e:	18d1      	adds	r1, r2, r3
 8008630:	68fb      	ldr	r3, [r7, #12]
 8008632:	f8b3 0210 	ldrh.w	r0, [r3, #528]	; 0x210
 8008636:	68fb      	ldr	r3, [r7, #12]
 8008638:	f8b3 3212 	ldrh.w	r3, [r3, #530]	; 0x212
 800863c:	8a3a      	ldrh	r2, [r7, #16]
 800863e:	9300      	str	r3, [sp, #0]
 8008640:	4603      	mov	r3, r0
 8008642:	68f8      	ldr	r0, [r7, #12]
 8008644:	f7ff fdc6 	bl	80081d4 <write_bytes_to_page>
 8008648:	68fb      	ldr	r3, [r7, #12]
 800864a:	f893 3216 	ldrb.w	r3, [r3, #534]	; 0x216
 800864e:	2b00      	cmp	r3, #0
 8008650:	d002      	beq.n	8008658 <write_to_flash_contiguous+0x6c>
 8008652:	8a7b      	ldrh	r3, [r7, #18]
 8008654:	3301      	adds	r3, #1
 8008656:	827b      	strh	r3, [r7, #18]
 8008658:	8a3b      	ldrh	r3, [r7, #16]
 800865a:	697a      	ldr	r2, [r7, #20]
 800865c:	4413      	add	r3, r2
 800865e:	617b      	str	r3, [r7, #20]
 8008660:	68fb      	ldr	r3, [r7, #12]
 8008662:	f8b3 3212 	ldrh.w	r3, [r3, #530]	; 0x212
 8008666:	461a      	mov	r2, r3
 8008668:	8a3b      	ldrh	r3, [r7, #16]
 800866a:	4413      	add	r3, r2
 800866c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008670:	da09      	bge.n	8008686 <write_to_flash_contiguous+0x9a>
 8008672:	68fb      	ldr	r3, [r7, #12]
 8008674:	f8b3 2212 	ldrh.w	r2, [r3, #530]	; 0x212
 8008678:	8a3b      	ldrh	r3, [r7, #16]
 800867a:	4413      	add	r3, r2
 800867c:	b29a      	uxth	r2, r3
 800867e:	68fb      	ldr	r3, [r7, #12]
 8008680:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 8008684:	e018      	b.n	80086b8 <write_to_flash_contiguous+0xcc>
 8008686:	68fb      	ldr	r3, [r7, #12]
 8008688:	f8b3 3210 	ldrh.w	r3, [r3, #528]	; 0x210
 800868c:	f64f 72bf 	movw	r2, #65471	; 0xffbf
 8008690:	4293      	cmp	r3, r2
 8008692:	d105      	bne.n	80086a0 <write_to_flash_contiguous+0xb4>
 8008694:	68fb      	ldr	r3, [r7, #12]
 8008696:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800869a:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 800869e:	e00b      	b.n	80086b8 <write_to_flash_contiguous+0xcc>
 80086a0:	68fb      	ldr	r3, [r7, #12]
 80086a2:	2200      	movs	r2, #0
 80086a4:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212
 80086a8:	68fb      	ldr	r3, [r7, #12]
 80086aa:	f8b3 3210 	ldrh.w	r3, [r3, #528]	; 0x210
 80086ae:	3301      	adds	r3, #1
 80086b0:	b29a      	uxth	r2, r3
 80086b2:	68fb      	ldr	r3, [r7, #12]
 80086b4:	f8a3 2210 	strh.w	r2, [r3, #528]	; 0x210
 80086b8:	697a      	ldr	r2, [r7, #20]
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	429a      	cmp	r2, r3
 80086be:	d3a0      	bcc.n	8008602 <write_to_flash_contiguous+0x16>
 80086c0:	8a7b      	ldrh	r3, [r7, #18]
 80086c2:	4618      	mov	r0, r3
 80086c4:	3718      	adds	r7, #24
 80086c6:	46bd      	mov	sp, r7
 80086c8:	bd80      	pop	{r7, pc}

080086ca <write_to_flash>:
 80086ca:	b580      	push	{r7, lr}
 80086cc:	b08c      	sub	sp, #48	; 0x30
 80086ce:	af00      	add	r7, sp, #0
 80086d0:	60f8      	str	r0, [r7, #12]
 80086d2:	60b9      	str	r1, [r7, #8]
 80086d4:	607a      	str	r2, [r7, #4]
 80086d6:	68f8      	ldr	r0, [r7, #12]
 80086d8:	f000 f967 	bl	80089aa <get_bytes_remaining>
 80086dc:	6238      	str	r0, [r7, #32]
 80086de:	687a      	ldr	r2, [r7, #4]
 80086e0:	6a3b      	ldr	r3, [r7, #32]
 80086e2:	429a      	cmp	r2, r3
 80086e4:	d901      	bls.n	80086ea <write_to_flash+0x20>
 80086e6:	6a3b      	ldr	r3, [r7, #32]
 80086e8:	607b      	str	r3, [r7, #4]
 80086ea:	2300      	movs	r3, #0
 80086ec:	85fb      	strh	r3, [r7, #46]	; 0x2e
 80086ee:	2300      	movs	r3, #0
 80086f0:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 80086f4:	68fb      	ldr	r3, [r7, #12]
 80086f6:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 80086fa:	2b00      	cmp	r3, #0
 80086fc:	d035      	beq.n	800876a <write_to_flash+0xa0>
 80086fe:	68fb      	ldr	r3, [r7, #12]
 8008700:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 8008704:	461a      	mov	r2, r3
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	4413      	add	r3, r2
 800870a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800870e:	d32c      	bcc.n	800876a <write_to_flash+0xa0>
 8008710:	68fb      	ldr	r3, [r7, #12]
 8008712:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 8008716:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 800871a:	83fb      	strh	r3, [r7, #30]
 800871c:	2300      	movs	r3, #0
 800871e:	857b      	strh	r3, [r7, #42]	; 0x2a
 8008720:	e00e      	b.n	8008740 <write_to_flash+0x76>
 8008722:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
 8008724:	68ba      	ldr	r2, [r7, #8]
 8008726:	441a      	add	r2, r3
 8008728:	68fb      	ldr	r3, [r7, #12]
 800872a:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 800872e:	4619      	mov	r1, r3
 8008730:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
 8008732:	440b      	add	r3, r1
 8008734:	7811      	ldrb	r1, [r2, #0]
 8008736:	68fa      	ldr	r2, [r7, #12]
 8008738:	54d1      	strb	r1, [r2, r3]
 800873a:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
 800873c:	3301      	adds	r3, #1
 800873e:	857b      	strh	r3, [r7, #42]	; 0x2a
 8008740:	8d7a      	ldrh	r2, [r7, #42]	; 0x2a
 8008742:	8bfb      	ldrh	r3, [r7, #30]
 8008744:	429a      	cmp	r2, r3
 8008746:	d3ec      	bcc.n	8008722 <write_to_flash+0x58>
 8008748:	68fb      	ldr	r3, [r7, #12]
 800874a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800874e:	f8a3 220e 	strh.w	r2, [r3, #526]	; 0x20e
 8008752:	2301      	movs	r3, #1
 8008754:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 8008758:	8bfb      	ldrh	r3, [r7, #30]
 800875a:	68ba      	ldr	r2, [r7, #8]
 800875c:	4413      	add	r3, r2
 800875e:	60bb      	str	r3, [r7, #8]
 8008760:	8bfb      	ldrh	r3, [r7, #30]
 8008762:	687a      	ldr	r2, [r7, #4]
 8008764:	1ad3      	subs	r3, r2, r3
 8008766:	607b      	str	r3, [r7, #4]
 8008768:	e02a      	b.n	80087c0 <write_to_flash+0xf6>
 800876a:	68fb      	ldr	r3, [r7, #12]
 800876c:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 8008770:	461a      	mov	r2, r3
 8008772:	687b      	ldr	r3, [r7, #4]
 8008774:	4413      	add	r3, r2
 8008776:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800877a:	d221      	bcs.n	80087c0 <write_to_flash+0xf6>
 800877c:	2300      	movs	r3, #0
 800877e:	853b      	strh	r3, [r7, #40]	; 0x28
 8008780:	e00e      	b.n	80087a0 <write_to_flash+0xd6>
 8008782:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8008784:	68ba      	ldr	r2, [r7, #8]
 8008786:	441a      	add	r2, r3
 8008788:	68fb      	ldr	r3, [r7, #12]
 800878a:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 800878e:	4619      	mov	r1, r3
 8008790:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8008792:	440b      	add	r3, r1
 8008794:	7811      	ldrb	r1, [r2, #0]
 8008796:	68fa      	ldr	r2, [r7, #12]
 8008798:	54d1      	strb	r1, [r2, r3]
 800879a:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 800879c:	3301      	adds	r3, #1
 800879e:	853b      	strh	r3, [r7, #40]	; 0x28
 80087a0:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 80087a2:	687a      	ldr	r2, [r7, #4]
 80087a4:	429a      	cmp	r2, r3
 80087a6:	d8ec      	bhi.n	8008782 <write_to_flash+0xb8>
 80087a8:	68fb      	ldr	r3, [r7, #12]
 80087aa:	f8b3 220e 	ldrh.w	r2, [r3, #526]	; 0x20e
 80087ae:	687b      	ldr	r3, [r7, #4]
 80087b0:	b29b      	uxth	r3, r3
 80087b2:	4413      	add	r3, r2
 80087b4:	b29a      	uxth	r2, r3
 80087b6:	68fb      	ldr	r3, [r7, #12]
 80087b8:	f8a3 220e 	strh.w	r2, [r3, #526]	; 0x20e
 80087bc:	2300      	movs	r3, #0
 80087be:	e04b      	b.n	8008858 <write_to_flash+0x18e>
 80087c0:	687b      	ldr	r3, [r7, #4]
 80087c2:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 80087c6:	f023 0301 	bic.w	r3, r3, #1
 80087ca:	61bb      	str	r3, [r7, #24]
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	b29b      	uxth	r3, r3
 80087d0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80087d4:	82fb      	strh	r3, [r7, #22]
 80087d6:	68ba      	ldr	r2, [r7, #8]
 80087d8:	69bb      	ldr	r3, [r7, #24]
 80087da:	4413      	add	r3, r2
 80087dc:	613b      	str	r3, [r7, #16]
 80087de:	68f8      	ldr	r0, [r7, #12]
 80087e0:	f7ff fb21 	bl	8007e26 <unlock_flash>
 80087e4:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 80087e8:	2b00      	cmp	r3, #0
 80087ea:	d00f      	beq.n	800880c <write_to_flash+0x142>
 80087ec:	68fb      	ldr	r3, [r7, #12]
 80087ee:	f44f 7200 	mov.w	r2, #512	; 0x200
 80087f2:	4619      	mov	r1, r3
 80087f4:	68f8      	ldr	r0, [r7, #12]
 80087f6:	f7ff fef9 	bl	80085ec <write_to_flash_contiguous>
 80087fa:	4603      	mov	r3, r0
 80087fc:	461a      	mov	r2, r3
 80087fe:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8008800:	4413      	add	r3, r2
 8008802:	85fb      	strh	r3, [r7, #46]	; 0x2e
 8008804:	68fb      	ldr	r3, [r7, #12]
 8008806:	2200      	movs	r2, #0
 8008808:	f8a3 220e 	strh.w	r2, [r3, #526]	; 0x20e
 800880c:	69bb      	ldr	r3, [r7, #24]
 800880e:	2b00      	cmp	r3, #0
 8008810:	d009      	beq.n	8008826 <write_to_flash+0x15c>
 8008812:	69ba      	ldr	r2, [r7, #24]
 8008814:	68b9      	ldr	r1, [r7, #8]
 8008816:	68f8      	ldr	r0, [r7, #12]
 8008818:	f7ff fee8 	bl	80085ec <write_to_flash_contiguous>
 800881c:	4603      	mov	r3, r0
 800881e:	461a      	mov	r2, r3
 8008820:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8008822:	4413      	add	r3, r2
 8008824:	85fb      	strh	r3, [r7, #46]	; 0x2e
 8008826:	68f8      	ldr	r0, [r7, #12]
 8008828:	f7ff fb15 	bl	8007e56 <lock_flash>
 800882c:	2300      	movs	r3, #0
 800882e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8008830:	e009      	b.n	8008846 <write_to_flash+0x17c>
 8008832:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8008834:	693a      	ldr	r2, [r7, #16]
 8008836:	441a      	add	r2, r3
 8008838:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800883a:	7811      	ldrb	r1, [r2, #0]
 800883c:	68fa      	ldr	r2, [r7, #12]
 800883e:	54d1      	strb	r1, [r2, r3]
 8008840:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8008842:	3301      	adds	r3, #1
 8008844:	84fb      	strh	r3, [r7, #38]	; 0x26
 8008846:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8008848:	8afb      	ldrh	r3, [r7, #22]
 800884a:	429a      	cmp	r2, r3
 800884c:	d3f1      	bcc.n	8008832 <write_to_flash+0x168>
 800884e:	68fb      	ldr	r3, [r7, #12]
 8008850:	8afa      	ldrh	r2, [r7, #22]
 8008852:	f8a3 220e 	strh.w	r2, [r3, #526]	; 0x20e
 8008856:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8008858:	4618      	mov	r0, r3
 800885a:	3730      	adds	r7, #48	; 0x30
 800885c:	46bd      	mov	sp, r7
 800885e:	bd80      	pop	{r7, pc}

08008860 <finish_flash_write>:
 8008860:	b580      	push	{r7, lr}
 8008862:	b084      	sub	sp, #16
 8008864:	af00      	add	r7, sp, #0
 8008866:	6078      	str	r0, [r7, #4]
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 800886e:	2b00      	cmp	r3, #0
 8008870:	d10d      	bne.n	800888e <finish_flash_write+0x2e>
 8008872:	2300      	movs	r3, #0
 8008874:	e036      	b.n	80088e4 <finish_flash_write+0x84>
 8008876:	687b      	ldr	r3, [r7, #4]
 8008878:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 800887c:	1c5a      	adds	r2, r3, #1
 800887e:	b291      	uxth	r1, r2
 8008880:	687a      	ldr	r2, [r7, #4]
 8008882:	f8a2 120e 	strh.w	r1, [r2, #526]	; 0x20e
 8008886:	461a      	mov	r2, r3
 8008888:	687b      	ldr	r3, [r7, #4]
 800888a:	2100      	movs	r1, #0
 800888c:	5499      	strb	r1, [r3, r2]
 800888e:	687b      	ldr	r3, [r7, #4]
 8008890:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 8008894:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008898:	d3ed      	bcc.n	8008876 <finish_flash_write+0x16>
 800889a:	6878      	ldr	r0, [r7, #4]
 800889c:	f000 f885 	bl	80089aa <get_bytes_remaining>
 80088a0:	60f8      	str	r0, [r7, #12]
 80088a2:	687b      	ldr	r3, [r7, #4]
 80088a4:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 80088a8:	461a      	mov	r2, r3
 80088aa:	68fb      	ldr	r3, [r7, #12]
 80088ac:	4293      	cmp	r3, r2
 80088ae:	d204      	bcs.n	80088ba <finish_flash_write+0x5a>
 80088b0:	68fb      	ldr	r3, [r7, #12]
 80088b2:	b29a      	uxth	r2, r3
 80088b4:	687b      	ldr	r3, [r7, #4]
 80088b6:	f8a3 220e 	strh.w	r2, [r3, #526]	; 0x20e
 80088ba:	6878      	ldr	r0, [r7, #4]
 80088bc:	f7ff fab3 	bl	8007e26 <unlock_flash>
 80088c0:	6879      	ldr	r1, [r7, #4]
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 80088c8:	461a      	mov	r2, r3
 80088ca:	6878      	ldr	r0, [r7, #4]
 80088cc:	f7ff fe8e 	bl	80085ec <write_to_flash_contiguous>
 80088d0:	4603      	mov	r3, r0
 80088d2:	817b      	strh	r3, [r7, #10]
 80088d4:	687b      	ldr	r3, [r7, #4]
 80088d6:	2200      	movs	r2, #0
 80088d8:	f8a3 220e 	strh.w	r2, [r3, #526]	; 0x20e
 80088dc:	6878      	ldr	r0, [r7, #4]
 80088de:	f7ff faba 	bl	8007e56 <lock_flash>
 80088e2:	897b      	ldrh	r3, [r7, #10]
 80088e4:	4618      	mov	r0, r3
 80088e6:	3710      	adds	r7, #16
 80088e8:	46bd      	mov	sp, r7
 80088ea:	bd80      	pop	{r7, pc}

080088ec <reset_flash_read_pointer>:
 80088ec:	b480      	push	{r7}
 80088ee:	b083      	sub	sp, #12
 80088f0:	af00      	add	r7, sp, #0
 80088f2:	6078      	str	r0, [r7, #4]
 80088f4:	687b      	ldr	r3, [r7, #4]
 80088f6:	2200      	movs	r2, #0
 80088f8:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 80088fc:	bf00      	nop
 80088fe:	370c      	adds	r7, #12
 8008900:	46bd      	mov	sp, r7
 8008902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008906:	4770      	bx	lr

08008908 <read_next_2KB_from_flash>:
 8008908:	b580      	push	{r7, lr}
 800890a:	b084      	sub	sp, #16
 800890c:	af02      	add	r7, sp, #8
 800890e:	6078      	str	r0, [r7, #4]
 8008910:	6039      	str	r1, [r7, #0]
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8008918:	b29b      	uxth	r3, r3
 800891a:	2200      	movs	r2, #0
 800891c:	9200      	str	r2, [sp, #0]
 800891e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8008922:	6839      	ldr	r1, [r7, #0]
 8008924:	6878      	ldr	r0, [r7, #4]
 8008926:	f7ff fc38 	bl	800819a <read_bytes_from_page>
 800892a:	687b      	ldr	r3, [r7, #4]
 800892c:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8008930:	1c5a      	adds	r2, r3, #1
 8008932:	687b      	ldr	r3, [r7, #4]
 8008934:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8008938:	6878      	ldr	r0, [r7, #4]
 800893a:	f7ff fbbf 	bl	80080bc <get_ECC_status>
 800893e:	bf00      	nop
 8008940:	3708      	adds	r7, #8
 8008942:	46bd      	mov	sp, r7
 8008944:	bd80      	pop	{r7, pc}

08008946 <erase_flash>:
 8008946:	b580      	push	{r7, lr}
 8008948:	b084      	sub	sp, #16
 800894a:	af00      	add	r7, sp, #0
 800894c:	6078      	str	r0, [r7, #4]
 800894e:	2300      	movs	r3, #0
 8008950:	81fb      	strh	r3, [r7, #14]
 8008952:	6878      	ldr	r0, [r7, #4]
 8008954:	f7ff fa67 	bl	8007e26 <unlock_flash>
 8008958:	2300      	movs	r3, #0
 800895a:	81bb      	strh	r3, [r7, #12]
 800895c:	e011      	b.n	8008982 <erase_flash+0x3c>
 800895e:	89bb      	ldrh	r3, [r7, #12]
 8008960:	019b      	lsls	r3, r3, #6
 8008962:	b29b      	uxth	r3, r3
 8008964:	4619      	mov	r1, r3
 8008966:	6878      	ldr	r0, [r7, #4]
 8008968:	f7ff fb78 	bl	800805c <erase_block>
 800896c:	687b      	ldr	r3, [r7, #4]
 800896e:	f893 3217 	ldrb.w	r3, [r3, #535]	; 0x217
 8008972:	2b00      	cmp	r3, #0
 8008974:	d002      	beq.n	800897c <erase_flash+0x36>
 8008976:	89fb      	ldrh	r3, [r7, #14]
 8008978:	3301      	adds	r3, #1
 800897a:	81fb      	strh	r3, [r7, #14]
 800897c:	89bb      	ldrh	r3, [r7, #12]
 800897e:	3301      	adds	r3, #1
 8008980:	81bb      	strh	r3, [r7, #12]
 8008982:	89bb      	ldrh	r3, [r7, #12]
 8008984:	f240 32fe 	movw	r2, #1022	; 0x3fe
 8008988:	4293      	cmp	r3, r2
 800898a:	d9e8      	bls.n	800895e <erase_flash+0x18>
 800898c:	6878      	ldr	r0, [r7, #4]
 800898e:	f7ff fa62 	bl	8007e56 <lock_flash>
 8008992:	6878      	ldr	r0, [r7, #4]
 8008994:	f7ff fc79 	bl	800828a <find_write_ptr>
 8008998:	687b      	ldr	r3, [r7, #4]
 800899a:	2200      	movs	r2, #0
 800899c:	f8a3 220e 	strh.w	r2, [r3, #526]	; 0x20e
 80089a0:	89fb      	ldrh	r3, [r7, #14]
 80089a2:	4618      	mov	r0, r3
 80089a4:	3710      	adds	r7, #16
 80089a6:	46bd      	mov	sp, r7
 80089a8:	bd80      	pop	{r7, pc}

080089aa <get_bytes_remaining>:
 80089aa:	b480      	push	{r7}
 80089ac:	b083      	sub	sp, #12
 80089ae:	af00      	add	r7, sp, #0
 80089b0:	6078      	str	r0, [r7, #4]
 80089b2:	687b      	ldr	r3, [r7, #4]
 80089b4:	f8b3 3210 	ldrh.w	r3, [r3, #528]	; 0x210
 80089b8:	02db      	lsls	r3, r3, #11
 80089ba:	687a      	ldr	r2, [r7, #4]
 80089bc:	f8b2 2212 	ldrh.w	r2, [r2, #530]	; 0x212
 80089c0:	4413      	add	r3, r2
 80089c2:	f1c3 63ff 	rsb	r3, r3, #133693440	; 0x7f80000
 80089c6:	f503 23c0 	add.w	r3, r3, #393216	; 0x60000
 80089ca:	687a      	ldr	r2, [r7, #4]
 80089cc:	f8b2 220e 	ldrh.w	r2, [r2, #526]	; 0x20e
 80089d0:	1a9b      	subs	r3, r3, r2
 80089d2:	4618      	mov	r0, r3
 80089d4:	370c      	adds	r7, #12
 80089d6:	46bd      	mov	sp, r7
 80089d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089dc:	4770      	bx	lr

080089de <write_reserved_flash_page>:
 80089de:	b580      	push	{r7, lr}
 80089e0:	b086      	sub	sp, #24
 80089e2:	af02      	add	r7, sp, #8
 80089e4:	60f8      	str	r0, [r7, #12]
 80089e6:	607a      	str	r2, [r7, #4]
 80089e8:	461a      	mov	r2, r3
 80089ea:	460b      	mov	r3, r1
 80089ec:	72fb      	strb	r3, [r7, #11]
 80089ee:	4613      	mov	r3, r2
 80089f0:	813b      	strh	r3, [r7, #8]
 80089f2:	68f8      	ldr	r0, [r7, #12]
 80089f4:	f7ff fa17 	bl	8007e26 <unlock_flash>
 80089f8:	7afb      	ldrb	r3, [r7, #11]
 80089fa:	b29b      	uxth	r3, r3
 80089fc:	3b40      	subs	r3, #64	; 0x40
 80089fe:	b29b      	uxth	r3, r3
 8008a00:	893a      	ldrh	r2, [r7, #8]
 8008a02:	2100      	movs	r1, #0
 8008a04:	9100      	str	r1, [sp, #0]
 8008a06:	6879      	ldr	r1, [r7, #4]
 8008a08:	68f8      	ldr	r0, [r7, #12]
 8008a0a:	f7ff fbe3 	bl	80081d4 <write_bytes_to_page>
 8008a0e:	68f8      	ldr	r0, [r7, #12]
 8008a10:	f7ff fa21 	bl	8007e56 <lock_flash>
 8008a14:	68fb      	ldr	r3, [r7, #12]
 8008a16:	f893 3216 	ldrb.w	r3, [r3, #534]	; 0x216
 8008a1a:	4618      	mov	r0, r3
 8008a1c:	3710      	adds	r7, #16
 8008a1e:	46bd      	mov	sp, r7
 8008a20:	bd80      	pop	{r7, pc}

08008a22 <read_reserved_flash_page>:
 8008a22:	b580      	push	{r7, lr}
 8008a24:	b086      	sub	sp, #24
 8008a26:	af02      	add	r7, sp, #8
 8008a28:	60f8      	str	r0, [r7, #12]
 8008a2a:	607a      	str	r2, [r7, #4]
 8008a2c:	461a      	mov	r2, r3
 8008a2e:	460b      	mov	r3, r1
 8008a30:	72fb      	strb	r3, [r7, #11]
 8008a32:	4613      	mov	r3, r2
 8008a34:	813b      	strh	r3, [r7, #8]
 8008a36:	7afb      	ldrb	r3, [r7, #11]
 8008a38:	b29b      	uxth	r3, r3
 8008a3a:	3b40      	subs	r3, #64	; 0x40
 8008a3c:	b29b      	uxth	r3, r3
 8008a3e:	893a      	ldrh	r2, [r7, #8]
 8008a40:	2100      	movs	r1, #0
 8008a42:	9100      	str	r1, [sp, #0]
 8008a44:	6879      	ldr	r1, [r7, #4]
 8008a46:	68f8      	ldr	r0, [r7, #12]
 8008a48:	f7ff fba7 	bl	800819a <read_bytes_from_page>
 8008a4c:	bf00      	nop
 8008a4e:	3710      	adds	r7, #16
 8008a50:	46bd      	mov	sp, r7
 8008a52:	bd80      	pop	{r7, pc}

08008a54 <erase_reserved_flash_pages>:
 8008a54:	b580      	push	{r7, lr}
 8008a56:	b082      	sub	sp, #8
 8008a58:	af00      	add	r7, sp, #0
 8008a5a:	6078      	str	r0, [r7, #4]
 8008a5c:	6878      	ldr	r0, [r7, #4]
 8008a5e:	f7ff f9e2 	bl	8007e26 <unlock_flash>
 8008a62:	f64f 71c0 	movw	r1, #65472	; 0xffc0
 8008a66:	6878      	ldr	r0, [r7, #4]
 8008a68:	f7ff faf8 	bl	800805c <erase_block>
 8008a6c:	6878      	ldr	r0, [r7, #4]
 8008a6e:	f7ff f9f2 	bl	8007e56 <lock_flash>
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	f893 3217 	ldrb.w	r3, [r3, #535]	; 0x217
 8008a78:	4618      	mov	r0, r3
 8008a7a:	3708      	adds	r7, #8
 8008a7c:	46bd      	mov	sp, r7
 8008a7e:	bd80      	pop	{r7, pc}

08008a80 <add_test_delimiter>:
 8008a80:	b580      	push	{r7, lr}
 8008a82:	f6ad 0d08 	subw	sp, sp, #2056	; 0x808
 8008a86:	af00      	add	r7, sp, #0
 8008a88:	1d3b      	adds	r3, r7, #4
 8008a8a:	6018      	str	r0, [r3, #0]
 8008a8c:	f107 0308 	add.w	r3, r7, #8
 8008a90:	2200      	movs	r2, #0
 8008a92:	601a      	str	r2, [r3, #0]
 8008a94:	3304      	adds	r3, #4
 8008a96:	f240 72fc 	movw	r2, #2044	; 0x7fc
 8008a9a:	2100      	movs	r1, #0
 8008a9c:	4618      	mov	r0, r3
 8008a9e:	f003 fa1f 	bl	800bee0 <memset>
 8008aa2:	f107 0108 	add.w	r1, r7, #8
 8008aa6:	1d3b      	adds	r3, r7, #4
 8008aa8:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8008aac:	6818      	ldr	r0, [r3, #0]
 8008aae:	f7ff fe0c 	bl	80086ca <write_to_flash>
 8008ab2:	bf00      	nop
 8008ab4:	f607 0708 	addw	r7, r7, #2056	; 0x808
 8008ab8:	46bd      	mov	sp, r7
 8008aba:	bd80      	pop	{r7, pc}

08008abc <HAL_Init>:
 8008abc:	b580      	push	{r7, lr}
 8008abe:	af00      	add	r7, sp, #0
 8008ac0:	4b0e      	ldr	r3, [pc, #56]	; (8008afc <HAL_Init+0x40>)
 8008ac2:	681b      	ldr	r3, [r3, #0]
 8008ac4:	4a0d      	ldr	r2, [pc, #52]	; (8008afc <HAL_Init+0x40>)
 8008ac6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008aca:	6013      	str	r3, [r2, #0]
 8008acc:	4b0b      	ldr	r3, [pc, #44]	; (8008afc <HAL_Init+0x40>)
 8008ace:	681b      	ldr	r3, [r3, #0]
 8008ad0:	4a0a      	ldr	r2, [pc, #40]	; (8008afc <HAL_Init+0x40>)
 8008ad2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8008ad6:	6013      	str	r3, [r2, #0]
 8008ad8:	4b08      	ldr	r3, [pc, #32]	; (8008afc <HAL_Init+0x40>)
 8008ada:	681b      	ldr	r3, [r3, #0]
 8008adc:	4a07      	ldr	r2, [pc, #28]	; (8008afc <HAL_Init+0x40>)
 8008ade:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008ae2:	6013      	str	r3, [r2, #0]
 8008ae4:	2003      	movs	r0, #3
 8008ae6:	f000 f92b 	bl	8008d40 <HAL_NVIC_SetPriorityGrouping>
 8008aea:	2000      	movs	r0, #0
 8008aec:	f000 f808 	bl	8008b00 <HAL_InitTick>
 8008af0:	f7fc fe5e 	bl	80057b0 <HAL_MspInit>
 8008af4:	2300      	movs	r3, #0
 8008af6:	4618      	mov	r0, r3
 8008af8:	bd80      	pop	{r7, pc}
 8008afa:	bf00      	nop
 8008afc:	40023c00 	.word	0x40023c00

08008b00 <HAL_InitTick>:
 8008b00:	b580      	push	{r7, lr}
 8008b02:	b082      	sub	sp, #8
 8008b04:	af00      	add	r7, sp, #0
 8008b06:	6078      	str	r0, [r7, #4]
 8008b08:	4b12      	ldr	r3, [pc, #72]	; (8008b54 <HAL_InitTick+0x54>)
 8008b0a:	681a      	ldr	r2, [r3, #0]
 8008b0c:	4b12      	ldr	r3, [pc, #72]	; (8008b58 <HAL_InitTick+0x58>)
 8008b0e:	781b      	ldrb	r3, [r3, #0]
 8008b10:	4619      	mov	r1, r3
 8008b12:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008b16:	fbb3 f3f1 	udiv	r3, r3, r1
 8008b1a:	fbb2 f3f3 	udiv	r3, r2, r3
 8008b1e:	4618      	mov	r0, r3
 8008b20:	f000 f943 	bl	8008daa <HAL_SYSTICK_Config>
 8008b24:	4603      	mov	r3, r0
 8008b26:	2b00      	cmp	r3, #0
 8008b28:	d001      	beq.n	8008b2e <HAL_InitTick+0x2e>
 8008b2a:	2301      	movs	r3, #1
 8008b2c:	e00e      	b.n	8008b4c <HAL_InitTick+0x4c>
 8008b2e:	687b      	ldr	r3, [r7, #4]
 8008b30:	2b0f      	cmp	r3, #15
 8008b32:	d80a      	bhi.n	8008b4a <HAL_InitTick+0x4a>
 8008b34:	2200      	movs	r2, #0
 8008b36:	6879      	ldr	r1, [r7, #4]
 8008b38:	f04f 30ff 	mov.w	r0, #4294967295
 8008b3c:	f000 f90b 	bl	8008d56 <HAL_NVIC_SetPriority>
 8008b40:	4a06      	ldr	r2, [pc, #24]	; (8008b5c <HAL_InitTick+0x5c>)
 8008b42:	687b      	ldr	r3, [r7, #4]
 8008b44:	6013      	str	r3, [r2, #0]
 8008b46:	2300      	movs	r3, #0
 8008b48:	e000      	b.n	8008b4c <HAL_InitTick+0x4c>
 8008b4a:	2301      	movs	r3, #1
 8008b4c:	4618      	mov	r0, r3
 8008b4e:	3708      	adds	r7, #8
 8008b50:	46bd      	mov	sp, r7
 8008b52:	bd80      	pop	{r7, pc}
 8008b54:	20000194 	.word	0x20000194
 8008b58:	20000220 	.word	0x20000220
 8008b5c:	2000021c 	.word	0x2000021c

08008b60 <HAL_IncTick>:
 8008b60:	b480      	push	{r7}
 8008b62:	af00      	add	r7, sp, #0
 8008b64:	4b06      	ldr	r3, [pc, #24]	; (8008b80 <HAL_IncTick+0x20>)
 8008b66:	781b      	ldrb	r3, [r3, #0]
 8008b68:	461a      	mov	r2, r3
 8008b6a:	4b06      	ldr	r3, [pc, #24]	; (8008b84 <HAL_IncTick+0x24>)
 8008b6c:	681b      	ldr	r3, [r3, #0]
 8008b6e:	4413      	add	r3, r2
 8008b70:	4a04      	ldr	r2, [pc, #16]	; (8008b84 <HAL_IncTick+0x24>)
 8008b72:	6013      	str	r3, [r2, #0]
 8008b74:	bf00      	nop
 8008b76:	46bd      	mov	sp, r7
 8008b78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b7c:	4770      	bx	lr
 8008b7e:	bf00      	nop
 8008b80:	20000220 	.word	0x20000220
 8008b84:	20002400 	.word	0x20002400

08008b88 <HAL_GetTick>:
 8008b88:	b480      	push	{r7}
 8008b8a:	af00      	add	r7, sp, #0
 8008b8c:	4b03      	ldr	r3, [pc, #12]	; (8008b9c <HAL_GetTick+0x14>)
 8008b8e:	681b      	ldr	r3, [r3, #0]
 8008b90:	4618      	mov	r0, r3
 8008b92:	46bd      	mov	sp, r7
 8008b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b98:	4770      	bx	lr
 8008b9a:	bf00      	nop
 8008b9c:	20002400 	.word	0x20002400

08008ba0 <__NVIC_SetPriorityGrouping>:
 8008ba0:	b480      	push	{r7}
 8008ba2:	b085      	sub	sp, #20
 8008ba4:	af00      	add	r7, sp, #0
 8008ba6:	6078      	str	r0, [r7, #4]
 8008ba8:	687b      	ldr	r3, [r7, #4]
 8008baa:	f003 0307 	and.w	r3, r3, #7
 8008bae:	60fb      	str	r3, [r7, #12]
 8008bb0:	4b0c      	ldr	r3, [pc, #48]	; (8008be4 <__NVIC_SetPriorityGrouping+0x44>)
 8008bb2:	68db      	ldr	r3, [r3, #12]
 8008bb4:	60bb      	str	r3, [r7, #8]
 8008bb6:	68ba      	ldr	r2, [r7, #8]
 8008bb8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8008bbc:	4013      	ands	r3, r2
 8008bbe:	60bb      	str	r3, [r7, #8]
 8008bc0:	68fb      	ldr	r3, [r7, #12]
 8008bc2:	021a      	lsls	r2, r3, #8
 8008bc4:	68bb      	ldr	r3, [r7, #8]
 8008bc6:	4313      	orrs	r3, r2
 8008bc8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8008bcc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008bd0:	60bb      	str	r3, [r7, #8]
 8008bd2:	4a04      	ldr	r2, [pc, #16]	; (8008be4 <__NVIC_SetPriorityGrouping+0x44>)
 8008bd4:	68bb      	ldr	r3, [r7, #8]
 8008bd6:	60d3      	str	r3, [r2, #12]
 8008bd8:	bf00      	nop
 8008bda:	3714      	adds	r7, #20
 8008bdc:	46bd      	mov	sp, r7
 8008bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008be2:	4770      	bx	lr
 8008be4:	e000ed00 	.word	0xe000ed00

08008be8 <__NVIC_GetPriorityGrouping>:
 8008be8:	b480      	push	{r7}
 8008bea:	af00      	add	r7, sp, #0
 8008bec:	4b04      	ldr	r3, [pc, #16]	; (8008c00 <__NVIC_GetPriorityGrouping+0x18>)
 8008bee:	68db      	ldr	r3, [r3, #12]
 8008bf0:	0a1b      	lsrs	r3, r3, #8
 8008bf2:	f003 0307 	and.w	r3, r3, #7
 8008bf6:	4618      	mov	r0, r3
 8008bf8:	46bd      	mov	sp, r7
 8008bfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bfe:	4770      	bx	lr
 8008c00:	e000ed00 	.word	0xe000ed00

08008c04 <__NVIC_EnableIRQ>:
 8008c04:	b480      	push	{r7}
 8008c06:	b083      	sub	sp, #12
 8008c08:	af00      	add	r7, sp, #0
 8008c0a:	4603      	mov	r3, r0
 8008c0c:	71fb      	strb	r3, [r7, #7]
 8008c0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008c12:	2b00      	cmp	r3, #0
 8008c14:	db0b      	blt.n	8008c2e <__NVIC_EnableIRQ+0x2a>
 8008c16:	79fb      	ldrb	r3, [r7, #7]
 8008c18:	f003 021f 	and.w	r2, r3, #31
 8008c1c:	4907      	ldr	r1, [pc, #28]	; (8008c3c <__NVIC_EnableIRQ+0x38>)
 8008c1e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008c22:	095b      	lsrs	r3, r3, #5
 8008c24:	2001      	movs	r0, #1
 8008c26:	fa00 f202 	lsl.w	r2, r0, r2
 8008c2a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008c2e:	bf00      	nop
 8008c30:	370c      	adds	r7, #12
 8008c32:	46bd      	mov	sp, r7
 8008c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c38:	4770      	bx	lr
 8008c3a:	bf00      	nop
 8008c3c:	e000e100 	.word	0xe000e100

08008c40 <__NVIC_SetPriority>:
 8008c40:	b480      	push	{r7}
 8008c42:	b083      	sub	sp, #12
 8008c44:	af00      	add	r7, sp, #0
 8008c46:	4603      	mov	r3, r0
 8008c48:	6039      	str	r1, [r7, #0]
 8008c4a:	71fb      	strb	r3, [r7, #7]
 8008c4c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008c50:	2b00      	cmp	r3, #0
 8008c52:	db0a      	blt.n	8008c6a <__NVIC_SetPriority+0x2a>
 8008c54:	683b      	ldr	r3, [r7, #0]
 8008c56:	b2da      	uxtb	r2, r3
 8008c58:	490c      	ldr	r1, [pc, #48]	; (8008c8c <__NVIC_SetPriority+0x4c>)
 8008c5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008c5e:	0112      	lsls	r2, r2, #4
 8008c60:	b2d2      	uxtb	r2, r2
 8008c62:	440b      	add	r3, r1
 8008c64:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8008c68:	e00a      	b.n	8008c80 <__NVIC_SetPriority+0x40>
 8008c6a:	683b      	ldr	r3, [r7, #0]
 8008c6c:	b2da      	uxtb	r2, r3
 8008c6e:	4908      	ldr	r1, [pc, #32]	; (8008c90 <__NVIC_SetPriority+0x50>)
 8008c70:	79fb      	ldrb	r3, [r7, #7]
 8008c72:	f003 030f 	and.w	r3, r3, #15
 8008c76:	3b04      	subs	r3, #4
 8008c78:	0112      	lsls	r2, r2, #4
 8008c7a:	b2d2      	uxtb	r2, r2
 8008c7c:	440b      	add	r3, r1
 8008c7e:	761a      	strb	r2, [r3, #24]
 8008c80:	bf00      	nop
 8008c82:	370c      	adds	r7, #12
 8008c84:	46bd      	mov	sp, r7
 8008c86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c8a:	4770      	bx	lr
 8008c8c:	e000e100 	.word	0xe000e100
 8008c90:	e000ed00 	.word	0xe000ed00

08008c94 <NVIC_EncodePriority>:
 8008c94:	b480      	push	{r7}
 8008c96:	b089      	sub	sp, #36	; 0x24
 8008c98:	af00      	add	r7, sp, #0
 8008c9a:	60f8      	str	r0, [r7, #12]
 8008c9c:	60b9      	str	r1, [r7, #8]
 8008c9e:	607a      	str	r2, [r7, #4]
 8008ca0:	68fb      	ldr	r3, [r7, #12]
 8008ca2:	f003 0307 	and.w	r3, r3, #7
 8008ca6:	61fb      	str	r3, [r7, #28]
 8008ca8:	69fb      	ldr	r3, [r7, #28]
 8008caa:	f1c3 0307 	rsb	r3, r3, #7
 8008cae:	2b04      	cmp	r3, #4
 8008cb0:	bf28      	it	cs
 8008cb2:	2304      	movcs	r3, #4
 8008cb4:	61bb      	str	r3, [r7, #24]
 8008cb6:	69fb      	ldr	r3, [r7, #28]
 8008cb8:	3304      	adds	r3, #4
 8008cba:	2b06      	cmp	r3, #6
 8008cbc:	d902      	bls.n	8008cc4 <NVIC_EncodePriority+0x30>
 8008cbe:	69fb      	ldr	r3, [r7, #28]
 8008cc0:	3b03      	subs	r3, #3
 8008cc2:	e000      	b.n	8008cc6 <NVIC_EncodePriority+0x32>
 8008cc4:	2300      	movs	r3, #0
 8008cc6:	617b      	str	r3, [r7, #20]
 8008cc8:	f04f 32ff 	mov.w	r2, #4294967295
 8008ccc:	69bb      	ldr	r3, [r7, #24]
 8008cce:	fa02 f303 	lsl.w	r3, r2, r3
 8008cd2:	43da      	mvns	r2, r3
 8008cd4:	68bb      	ldr	r3, [r7, #8]
 8008cd6:	401a      	ands	r2, r3
 8008cd8:	697b      	ldr	r3, [r7, #20]
 8008cda:	409a      	lsls	r2, r3
 8008cdc:	f04f 31ff 	mov.w	r1, #4294967295
 8008ce0:	697b      	ldr	r3, [r7, #20]
 8008ce2:	fa01 f303 	lsl.w	r3, r1, r3
 8008ce6:	43d9      	mvns	r1, r3
 8008ce8:	687b      	ldr	r3, [r7, #4]
 8008cea:	400b      	ands	r3, r1
 8008cec:	4313      	orrs	r3, r2
 8008cee:	4618      	mov	r0, r3
 8008cf0:	3724      	adds	r7, #36	; 0x24
 8008cf2:	46bd      	mov	sp, r7
 8008cf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cf8:	4770      	bx	lr
	...

08008cfc <SysTick_Config>:
 8008cfc:	b580      	push	{r7, lr}
 8008cfe:	b082      	sub	sp, #8
 8008d00:	af00      	add	r7, sp, #0
 8008d02:	6078      	str	r0, [r7, #4]
 8008d04:	687b      	ldr	r3, [r7, #4]
 8008d06:	3b01      	subs	r3, #1
 8008d08:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8008d0c:	d301      	bcc.n	8008d12 <SysTick_Config+0x16>
 8008d0e:	2301      	movs	r3, #1
 8008d10:	e00f      	b.n	8008d32 <SysTick_Config+0x36>
 8008d12:	4a0a      	ldr	r2, [pc, #40]	; (8008d3c <SysTick_Config+0x40>)
 8008d14:	687b      	ldr	r3, [r7, #4]
 8008d16:	3b01      	subs	r3, #1
 8008d18:	6053      	str	r3, [r2, #4]
 8008d1a:	210f      	movs	r1, #15
 8008d1c:	f04f 30ff 	mov.w	r0, #4294967295
 8008d20:	f7ff ff8e 	bl	8008c40 <__NVIC_SetPriority>
 8008d24:	4b05      	ldr	r3, [pc, #20]	; (8008d3c <SysTick_Config+0x40>)
 8008d26:	2200      	movs	r2, #0
 8008d28:	609a      	str	r2, [r3, #8]
 8008d2a:	4b04      	ldr	r3, [pc, #16]	; (8008d3c <SysTick_Config+0x40>)
 8008d2c:	2207      	movs	r2, #7
 8008d2e:	601a      	str	r2, [r3, #0]
 8008d30:	2300      	movs	r3, #0
 8008d32:	4618      	mov	r0, r3
 8008d34:	3708      	adds	r7, #8
 8008d36:	46bd      	mov	sp, r7
 8008d38:	bd80      	pop	{r7, pc}
 8008d3a:	bf00      	nop
 8008d3c:	e000e010 	.word	0xe000e010

08008d40 <HAL_NVIC_SetPriorityGrouping>:
 8008d40:	b580      	push	{r7, lr}
 8008d42:	b082      	sub	sp, #8
 8008d44:	af00      	add	r7, sp, #0
 8008d46:	6078      	str	r0, [r7, #4]
 8008d48:	6878      	ldr	r0, [r7, #4]
 8008d4a:	f7ff ff29 	bl	8008ba0 <__NVIC_SetPriorityGrouping>
 8008d4e:	bf00      	nop
 8008d50:	3708      	adds	r7, #8
 8008d52:	46bd      	mov	sp, r7
 8008d54:	bd80      	pop	{r7, pc}

08008d56 <HAL_NVIC_SetPriority>:
 8008d56:	b580      	push	{r7, lr}
 8008d58:	b086      	sub	sp, #24
 8008d5a:	af00      	add	r7, sp, #0
 8008d5c:	4603      	mov	r3, r0
 8008d5e:	60b9      	str	r1, [r7, #8]
 8008d60:	607a      	str	r2, [r7, #4]
 8008d62:	73fb      	strb	r3, [r7, #15]
 8008d64:	2300      	movs	r3, #0
 8008d66:	617b      	str	r3, [r7, #20]
 8008d68:	f7ff ff3e 	bl	8008be8 <__NVIC_GetPriorityGrouping>
 8008d6c:	6178      	str	r0, [r7, #20]
 8008d6e:	687a      	ldr	r2, [r7, #4]
 8008d70:	68b9      	ldr	r1, [r7, #8]
 8008d72:	6978      	ldr	r0, [r7, #20]
 8008d74:	f7ff ff8e 	bl	8008c94 <NVIC_EncodePriority>
 8008d78:	4602      	mov	r2, r0
 8008d7a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8008d7e:	4611      	mov	r1, r2
 8008d80:	4618      	mov	r0, r3
 8008d82:	f7ff ff5d 	bl	8008c40 <__NVIC_SetPriority>
 8008d86:	bf00      	nop
 8008d88:	3718      	adds	r7, #24
 8008d8a:	46bd      	mov	sp, r7
 8008d8c:	bd80      	pop	{r7, pc}

08008d8e <HAL_NVIC_EnableIRQ>:
 8008d8e:	b580      	push	{r7, lr}
 8008d90:	b082      	sub	sp, #8
 8008d92:	af00      	add	r7, sp, #0
 8008d94:	4603      	mov	r3, r0
 8008d96:	71fb      	strb	r3, [r7, #7]
 8008d98:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008d9c:	4618      	mov	r0, r3
 8008d9e:	f7ff ff31 	bl	8008c04 <__NVIC_EnableIRQ>
 8008da2:	bf00      	nop
 8008da4:	3708      	adds	r7, #8
 8008da6:	46bd      	mov	sp, r7
 8008da8:	bd80      	pop	{r7, pc}

08008daa <HAL_SYSTICK_Config>:
 8008daa:	b580      	push	{r7, lr}
 8008dac:	b082      	sub	sp, #8
 8008dae:	af00      	add	r7, sp, #0
 8008db0:	6078      	str	r0, [r7, #4]
 8008db2:	6878      	ldr	r0, [r7, #4]
 8008db4:	f7ff ffa2 	bl	8008cfc <SysTick_Config>
 8008db8:	4603      	mov	r3, r0
 8008dba:	4618      	mov	r0, r3
 8008dbc:	3708      	adds	r7, #8
 8008dbe:	46bd      	mov	sp, r7
 8008dc0:	bd80      	pop	{r7, pc}

08008dc2 <HAL_DMA_Abort>:
 8008dc2:	b580      	push	{r7, lr}
 8008dc4:	b084      	sub	sp, #16
 8008dc6:	af00      	add	r7, sp, #0
 8008dc8:	6078      	str	r0, [r7, #4]
 8008dca:	687b      	ldr	r3, [r7, #4]
 8008dcc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008dce:	60fb      	str	r3, [r7, #12]
 8008dd0:	f7ff feda 	bl	8008b88 <HAL_GetTick>
 8008dd4:	60b8      	str	r0, [r7, #8]
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008ddc:	b2db      	uxtb	r3, r3
 8008dde:	2b02      	cmp	r3, #2
 8008de0:	d008      	beq.n	8008df4 <HAL_DMA_Abort+0x32>
 8008de2:	687b      	ldr	r3, [r7, #4]
 8008de4:	2280      	movs	r2, #128	; 0x80
 8008de6:	655a      	str	r2, [r3, #84]	; 0x54
 8008de8:	687b      	ldr	r3, [r7, #4]
 8008dea:	2200      	movs	r2, #0
 8008dec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008df0:	2301      	movs	r3, #1
 8008df2:	e052      	b.n	8008e9a <HAL_DMA_Abort+0xd8>
 8008df4:	687b      	ldr	r3, [r7, #4]
 8008df6:	681b      	ldr	r3, [r3, #0]
 8008df8:	681a      	ldr	r2, [r3, #0]
 8008dfa:	687b      	ldr	r3, [r7, #4]
 8008dfc:	681b      	ldr	r3, [r3, #0]
 8008dfe:	f022 0216 	bic.w	r2, r2, #22
 8008e02:	601a      	str	r2, [r3, #0]
 8008e04:	687b      	ldr	r3, [r7, #4]
 8008e06:	681b      	ldr	r3, [r3, #0]
 8008e08:	695a      	ldr	r2, [r3, #20]
 8008e0a:	687b      	ldr	r3, [r7, #4]
 8008e0c:	681b      	ldr	r3, [r3, #0]
 8008e0e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008e12:	615a      	str	r2, [r3, #20]
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008e18:	2b00      	cmp	r3, #0
 8008e1a:	d103      	bne.n	8008e24 <HAL_DMA_Abort+0x62>
 8008e1c:	687b      	ldr	r3, [r7, #4]
 8008e1e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008e20:	2b00      	cmp	r3, #0
 8008e22:	d007      	beq.n	8008e34 <HAL_DMA_Abort+0x72>
 8008e24:	687b      	ldr	r3, [r7, #4]
 8008e26:	681b      	ldr	r3, [r3, #0]
 8008e28:	681a      	ldr	r2, [r3, #0]
 8008e2a:	687b      	ldr	r3, [r7, #4]
 8008e2c:	681b      	ldr	r3, [r3, #0]
 8008e2e:	f022 0208 	bic.w	r2, r2, #8
 8008e32:	601a      	str	r2, [r3, #0]
 8008e34:	687b      	ldr	r3, [r7, #4]
 8008e36:	681b      	ldr	r3, [r3, #0]
 8008e38:	681a      	ldr	r2, [r3, #0]
 8008e3a:	687b      	ldr	r3, [r7, #4]
 8008e3c:	681b      	ldr	r3, [r3, #0]
 8008e3e:	f022 0201 	bic.w	r2, r2, #1
 8008e42:	601a      	str	r2, [r3, #0]
 8008e44:	e013      	b.n	8008e6e <HAL_DMA_Abort+0xac>
 8008e46:	f7ff fe9f 	bl	8008b88 <HAL_GetTick>
 8008e4a:	4602      	mov	r2, r0
 8008e4c:	68bb      	ldr	r3, [r7, #8]
 8008e4e:	1ad3      	subs	r3, r2, r3
 8008e50:	2b05      	cmp	r3, #5
 8008e52:	d90c      	bls.n	8008e6e <HAL_DMA_Abort+0xac>
 8008e54:	687b      	ldr	r3, [r7, #4]
 8008e56:	2220      	movs	r2, #32
 8008e58:	655a      	str	r2, [r3, #84]	; 0x54
 8008e5a:	687b      	ldr	r3, [r7, #4]
 8008e5c:	2200      	movs	r2, #0
 8008e5e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008e62:	687b      	ldr	r3, [r7, #4]
 8008e64:	2203      	movs	r2, #3
 8008e66:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008e6a:	2303      	movs	r3, #3
 8008e6c:	e015      	b.n	8008e9a <HAL_DMA_Abort+0xd8>
 8008e6e:	687b      	ldr	r3, [r7, #4]
 8008e70:	681b      	ldr	r3, [r3, #0]
 8008e72:	681b      	ldr	r3, [r3, #0]
 8008e74:	f003 0301 	and.w	r3, r3, #1
 8008e78:	2b00      	cmp	r3, #0
 8008e7a:	d1e4      	bne.n	8008e46 <HAL_DMA_Abort+0x84>
 8008e7c:	687b      	ldr	r3, [r7, #4]
 8008e7e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008e80:	223f      	movs	r2, #63	; 0x3f
 8008e82:	409a      	lsls	r2, r3
 8008e84:	68fb      	ldr	r3, [r7, #12]
 8008e86:	609a      	str	r2, [r3, #8]
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	2200      	movs	r2, #0
 8008e8c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008e90:	687b      	ldr	r3, [r7, #4]
 8008e92:	2201      	movs	r2, #1
 8008e94:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008e98:	2300      	movs	r3, #0
 8008e9a:	4618      	mov	r0, r3
 8008e9c:	3710      	adds	r7, #16
 8008e9e:	46bd      	mov	sp, r7
 8008ea0:	bd80      	pop	{r7, pc}

08008ea2 <HAL_DMA_Abort_IT>:
 8008ea2:	b480      	push	{r7}
 8008ea4:	b083      	sub	sp, #12
 8008ea6:	af00      	add	r7, sp, #0
 8008ea8:	6078      	str	r0, [r7, #4]
 8008eaa:	687b      	ldr	r3, [r7, #4]
 8008eac:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008eb0:	b2db      	uxtb	r3, r3
 8008eb2:	2b02      	cmp	r3, #2
 8008eb4:	d004      	beq.n	8008ec0 <HAL_DMA_Abort_IT+0x1e>
 8008eb6:	687b      	ldr	r3, [r7, #4]
 8008eb8:	2280      	movs	r2, #128	; 0x80
 8008eba:	655a      	str	r2, [r3, #84]	; 0x54
 8008ebc:	2301      	movs	r3, #1
 8008ebe:	e00c      	b.n	8008eda <HAL_DMA_Abort_IT+0x38>
 8008ec0:	687b      	ldr	r3, [r7, #4]
 8008ec2:	2205      	movs	r2, #5
 8008ec4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008ec8:	687b      	ldr	r3, [r7, #4]
 8008eca:	681b      	ldr	r3, [r3, #0]
 8008ecc:	681a      	ldr	r2, [r3, #0]
 8008ece:	687b      	ldr	r3, [r7, #4]
 8008ed0:	681b      	ldr	r3, [r3, #0]
 8008ed2:	f022 0201 	bic.w	r2, r2, #1
 8008ed6:	601a      	str	r2, [r3, #0]
 8008ed8:	2300      	movs	r3, #0
 8008eda:	4618      	mov	r0, r3
 8008edc:	370c      	adds	r7, #12
 8008ede:	46bd      	mov	sp, r7
 8008ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ee4:	4770      	bx	lr
	...

08008ee8 <HAL_GPIO_Init>:
 8008ee8:	b480      	push	{r7}
 8008eea:	b089      	sub	sp, #36	; 0x24
 8008eec:	af00      	add	r7, sp, #0
 8008eee:	6078      	str	r0, [r7, #4]
 8008ef0:	6039      	str	r1, [r7, #0]
 8008ef2:	2300      	movs	r3, #0
 8008ef4:	617b      	str	r3, [r7, #20]
 8008ef6:	2300      	movs	r3, #0
 8008ef8:	613b      	str	r3, [r7, #16]
 8008efa:	2300      	movs	r3, #0
 8008efc:	61bb      	str	r3, [r7, #24]
 8008efe:	2300      	movs	r3, #0
 8008f00:	61fb      	str	r3, [r7, #28]
 8008f02:	e165      	b.n	80091d0 <HAL_GPIO_Init+0x2e8>
 8008f04:	2201      	movs	r2, #1
 8008f06:	69fb      	ldr	r3, [r7, #28]
 8008f08:	fa02 f303 	lsl.w	r3, r2, r3
 8008f0c:	617b      	str	r3, [r7, #20]
 8008f0e:	683b      	ldr	r3, [r7, #0]
 8008f10:	681b      	ldr	r3, [r3, #0]
 8008f12:	697a      	ldr	r2, [r7, #20]
 8008f14:	4013      	ands	r3, r2
 8008f16:	613b      	str	r3, [r7, #16]
 8008f18:	693a      	ldr	r2, [r7, #16]
 8008f1a:	697b      	ldr	r3, [r7, #20]
 8008f1c:	429a      	cmp	r2, r3
 8008f1e:	f040 8154 	bne.w	80091ca <HAL_GPIO_Init+0x2e2>
 8008f22:	683b      	ldr	r3, [r7, #0]
 8008f24:	685b      	ldr	r3, [r3, #4]
 8008f26:	f003 0303 	and.w	r3, r3, #3
 8008f2a:	2b01      	cmp	r3, #1
 8008f2c:	d005      	beq.n	8008f3a <HAL_GPIO_Init+0x52>
 8008f2e:	683b      	ldr	r3, [r7, #0]
 8008f30:	685b      	ldr	r3, [r3, #4]
 8008f32:	f003 0303 	and.w	r3, r3, #3
 8008f36:	2b02      	cmp	r3, #2
 8008f38:	d130      	bne.n	8008f9c <HAL_GPIO_Init+0xb4>
 8008f3a:	687b      	ldr	r3, [r7, #4]
 8008f3c:	689b      	ldr	r3, [r3, #8]
 8008f3e:	61bb      	str	r3, [r7, #24]
 8008f40:	69fb      	ldr	r3, [r7, #28]
 8008f42:	005b      	lsls	r3, r3, #1
 8008f44:	2203      	movs	r2, #3
 8008f46:	fa02 f303 	lsl.w	r3, r2, r3
 8008f4a:	43db      	mvns	r3, r3
 8008f4c:	69ba      	ldr	r2, [r7, #24]
 8008f4e:	4013      	ands	r3, r2
 8008f50:	61bb      	str	r3, [r7, #24]
 8008f52:	683b      	ldr	r3, [r7, #0]
 8008f54:	68da      	ldr	r2, [r3, #12]
 8008f56:	69fb      	ldr	r3, [r7, #28]
 8008f58:	005b      	lsls	r3, r3, #1
 8008f5a:	fa02 f303 	lsl.w	r3, r2, r3
 8008f5e:	69ba      	ldr	r2, [r7, #24]
 8008f60:	4313      	orrs	r3, r2
 8008f62:	61bb      	str	r3, [r7, #24]
 8008f64:	687b      	ldr	r3, [r7, #4]
 8008f66:	69ba      	ldr	r2, [r7, #24]
 8008f68:	609a      	str	r2, [r3, #8]
 8008f6a:	687b      	ldr	r3, [r7, #4]
 8008f6c:	685b      	ldr	r3, [r3, #4]
 8008f6e:	61bb      	str	r3, [r7, #24]
 8008f70:	2201      	movs	r2, #1
 8008f72:	69fb      	ldr	r3, [r7, #28]
 8008f74:	fa02 f303 	lsl.w	r3, r2, r3
 8008f78:	43db      	mvns	r3, r3
 8008f7a:	69ba      	ldr	r2, [r7, #24]
 8008f7c:	4013      	ands	r3, r2
 8008f7e:	61bb      	str	r3, [r7, #24]
 8008f80:	683b      	ldr	r3, [r7, #0]
 8008f82:	685b      	ldr	r3, [r3, #4]
 8008f84:	091b      	lsrs	r3, r3, #4
 8008f86:	f003 0201 	and.w	r2, r3, #1
 8008f8a:	69fb      	ldr	r3, [r7, #28]
 8008f8c:	fa02 f303 	lsl.w	r3, r2, r3
 8008f90:	69ba      	ldr	r2, [r7, #24]
 8008f92:	4313      	orrs	r3, r2
 8008f94:	61bb      	str	r3, [r7, #24]
 8008f96:	687b      	ldr	r3, [r7, #4]
 8008f98:	69ba      	ldr	r2, [r7, #24]
 8008f9a:	605a      	str	r2, [r3, #4]
 8008f9c:	683b      	ldr	r3, [r7, #0]
 8008f9e:	685b      	ldr	r3, [r3, #4]
 8008fa0:	f003 0303 	and.w	r3, r3, #3
 8008fa4:	2b03      	cmp	r3, #3
 8008fa6:	d017      	beq.n	8008fd8 <HAL_GPIO_Init+0xf0>
 8008fa8:	687b      	ldr	r3, [r7, #4]
 8008faa:	68db      	ldr	r3, [r3, #12]
 8008fac:	61bb      	str	r3, [r7, #24]
 8008fae:	69fb      	ldr	r3, [r7, #28]
 8008fb0:	005b      	lsls	r3, r3, #1
 8008fb2:	2203      	movs	r2, #3
 8008fb4:	fa02 f303 	lsl.w	r3, r2, r3
 8008fb8:	43db      	mvns	r3, r3
 8008fba:	69ba      	ldr	r2, [r7, #24]
 8008fbc:	4013      	ands	r3, r2
 8008fbe:	61bb      	str	r3, [r7, #24]
 8008fc0:	683b      	ldr	r3, [r7, #0]
 8008fc2:	689a      	ldr	r2, [r3, #8]
 8008fc4:	69fb      	ldr	r3, [r7, #28]
 8008fc6:	005b      	lsls	r3, r3, #1
 8008fc8:	fa02 f303 	lsl.w	r3, r2, r3
 8008fcc:	69ba      	ldr	r2, [r7, #24]
 8008fce:	4313      	orrs	r3, r2
 8008fd0:	61bb      	str	r3, [r7, #24]
 8008fd2:	687b      	ldr	r3, [r7, #4]
 8008fd4:	69ba      	ldr	r2, [r7, #24]
 8008fd6:	60da      	str	r2, [r3, #12]
 8008fd8:	683b      	ldr	r3, [r7, #0]
 8008fda:	685b      	ldr	r3, [r3, #4]
 8008fdc:	f003 0303 	and.w	r3, r3, #3
 8008fe0:	2b02      	cmp	r3, #2
 8008fe2:	d123      	bne.n	800902c <HAL_GPIO_Init+0x144>
 8008fe4:	69fb      	ldr	r3, [r7, #28]
 8008fe6:	08da      	lsrs	r2, r3, #3
 8008fe8:	687b      	ldr	r3, [r7, #4]
 8008fea:	3208      	adds	r2, #8
 8008fec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008ff0:	61bb      	str	r3, [r7, #24]
 8008ff2:	69fb      	ldr	r3, [r7, #28]
 8008ff4:	f003 0307 	and.w	r3, r3, #7
 8008ff8:	009b      	lsls	r3, r3, #2
 8008ffa:	220f      	movs	r2, #15
 8008ffc:	fa02 f303 	lsl.w	r3, r2, r3
 8009000:	43db      	mvns	r3, r3
 8009002:	69ba      	ldr	r2, [r7, #24]
 8009004:	4013      	ands	r3, r2
 8009006:	61bb      	str	r3, [r7, #24]
 8009008:	683b      	ldr	r3, [r7, #0]
 800900a:	691a      	ldr	r2, [r3, #16]
 800900c:	69fb      	ldr	r3, [r7, #28]
 800900e:	f003 0307 	and.w	r3, r3, #7
 8009012:	009b      	lsls	r3, r3, #2
 8009014:	fa02 f303 	lsl.w	r3, r2, r3
 8009018:	69ba      	ldr	r2, [r7, #24]
 800901a:	4313      	orrs	r3, r2
 800901c:	61bb      	str	r3, [r7, #24]
 800901e:	69fb      	ldr	r3, [r7, #28]
 8009020:	08da      	lsrs	r2, r3, #3
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	3208      	adds	r2, #8
 8009026:	69b9      	ldr	r1, [r7, #24]
 8009028:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800902c:	687b      	ldr	r3, [r7, #4]
 800902e:	681b      	ldr	r3, [r3, #0]
 8009030:	61bb      	str	r3, [r7, #24]
 8009032:	69fb      	ldr	r3, [r7, #28]
 8009034:	005b      	lsls	r3, r3, #1
 8009036:	2203      	movs	r2, #3
 8009038:	fa02 f303 	lsl.w	r3, r2, r3
 800903c:	43db      	mvns	r3, r3
 800903e:	69ba      	ldr	r2, [r7, #24]
 8009040:	4013      	ands	r3, r2
 8009042:	61bb      	str	r3, [r7, #24]
 8009044:	683b      	ldr	r3, [r7, #0]
 8009046:	685b      	ldr	r3, [r3, #4]
 8009048:	f003 0203 	and.w	r2, r3, #3
 800904c:	69fb      	ldr	r3, [r7, #28]
 800904e:	005b      	lsls	r3, r3, #1
 8009050:	fa02 f303 	lsl.w	r3, r2, r3
 8009054:	69ba      	ldr	r2, [r7, #24]
 8009056:	4313      	orrs	r3, r2
 8009058:	61bb      	str	r3, [r7, #24]
 800905a:	687b      	ldr	r3, [r7, #4]
 800905c:	69ba      	ldr	r2, [r7, #24]
 800905e:	601a      	str	r2, [r3, #0]
 8009060:	683b      	ldr	r3, [r7, #0]
 8009062:	685b      	ldr	r3, [r3, #4]
 8009064:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009068:	2b00      	cmp	r3, #0
 800906a:	f000 80ae 	beq.w	80091ca <HAL_GPIO_Init+0x2e2>
 800906e:	2300      	movs	r3, #0
 8009070:	60fb      	str	r3, [r7, #12]
 8009072:	4b5d      	ldr	r3, [pc, #372]	; (80091e8 <HAL_GPIO_Init+0x300>)
 8009074:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009076:	4a5c      	ldr	r2, [pc, #368]	; (80091e8 <HAL_GPIO_Init+0x300>)
 8009078:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800907c:	6453      	str	r3, [r2, #68]	; 0x44
 800907e:	4b5a      	ldr	r3, [pc, #360]	; (80091e8 <HAL_GPIO_Init+0x300>)
 8009080:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009082:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009086:	60fb      	str	r3, [r7, #12]
 8009088:	68fb      	ldr	r3, [r7, #12]
 800908a:	4a58      	ldr	r2, [pc, #352]	; (80091ec <HAL_GPIO_Init+0x304>)
 800908c:	69fb      	ldr	r3, [r7, #28]
 800908e:	089b      	lsrs	r3, r3, #2
 8009090:	3302      	adds	r3, #2
 8009092:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009096:	61bb      	str	r3, [r7, #24]
 8009098:	69fb      	ldr	r3, [r7, #28]
 800909a:	f003 0303 	and.w	r3, r3, #3
 800909e:	009b      	lsls	r3, r3, #2
 80090a0:	220f      	movs	r2, #15
 80090a2:	fa02 f303 	lsl.w	r3, r2, r3
 80090a6:	43db      	mvns	r3, r3
 80090a8:	69ba      	ldr	r2, [r7, #24]
 80090aa:	4013      	ands	r3, r2
 80090ac:	61bb      	str	r3, [r7, #24]
 80090ae:	687b      	ldr	r3, [r7, #4]
 80090b0:	4a4f      	ldr	r2, [pc, #316]	; (80091f0 <HAL_GPIO_Init+0x308>)
 80090b2:	4293      	cmp	r3, r2
 80090b4:	d025      	beq.n	8009102 <HAL_GPIO_Init+0x21a>
 80090b6:	687b      	ldr	r3, [r7, #4]
 80090b8:	4a4e      	ldr	r2, [pc, #312]	; (80091f4 <HAL_GPIO_Init+0x30c>)
 80090ba:	4293      	cmp	r3, r2
 80090bc:	d01f      	beq.n	80090fe <HAL_GPIO_Init+0x216>
 80090be:	687b      	ldr	r3, [r7, #4]
 80090c0:	4a4d      	ldr	r2, [pc, #308]	; (80091f8 <HAL_GPIO_Init+0x310>)
 80090c2:	4293      	cmp	r3, r2
 80090c4:	d019      	beq.n	80090fa <HAL_GPIO_Init+0x212>
 80090c6:	687b      	ldr	r3, [r7, #4]
 80090c8:	4a4c      	ldr	r2, [pc, #304]	; (80091fc <HAL_GPIO_Init+0x314>)
 80090ca:	4293      	cmp	r3, r2
 80090cc:	d013      	beq.n	80090f6 <HAL_GPIO_Init+0x20e>
 80090ce:	687b      	ldr	r3, [r7, #4]
 80090d0:	4a4b      	ldr	r2, [pc, #300]	; (8009200 <HAL_GPIO_Init+0x318>)
 80090d2:	4293      	cmp	r3, r2
 80090d4:	d00d      	beq.n	80090f2 <HAL_GPIO_Init+0x20a>
 80090d6:	687b      	ldr	r3, [r7, #4]
 80090d8:	4a4a      	ldr	r2, [pc, #296]	; (8009204 <HAL_GPIO_Init+0x31c>)
 80090da:	4293      	cmp	r3, r2
 80090dc:	d007      	beq.n	80090ee <HAL_GPIO_Init+0x206>
 80090de:	687b      	ldr	r3, [r7, #4]
 80090e0:	4a49      	ldr	r2, [pc, #292]	; (8009208 <HAL_GPIO_Init+0x320>)
 80090e2:	4293      	cmp	r3, r2
 80090e4:	d101      	bne.n	80090ea <HAL_GPIO_Init+0x202>
 80090e6:	2306      	movs	r3, #6
 80090e8:	e00c      	b.n	8009104 <HAL_GPIO_Init+0x21c>
 80090ea:	2307      	movs	r3, #7
 80090ec:	e00a      	b.n	8009104 <HAL_GPIO_Init+0x21c>
 80090ee:	2305      	movs	r3, #5
 80090f0:	e008      	b.n	8009104 <HAL_GPIO_Init+0x21c>
 80090f2:	2304      	movs	r3, #4
 80090f4:	e006      	b.n	8009104 <HAL_GPIO_Init+0x21c>
 80090f6:	2303      	movs	r3, #3
 80090f8:	e004      	b.n	8009104 <HAL_GPIO_Init+0x21c>
 80090fa:	2302      	movs	r3, #2
 80090fc:	e002      	b.n	8009104 <HAL_GPIO_Init+0x21c>
 80090fe:	2301      	movs	r3, #1
 8009100:	e000      	b.n	8009104 <HAL_GPIO_Init+0x21c>
 8009102:	2300      	movs	r3, #0
 8009104:	69fa      	ldr	r2, [r7, #28]
 8009106:	f002 0203 	and.w	r2, r2, #3
 800910a:	0092      	lsls	r2, r2, #2
 800910c:	4093      	lsls	r3, r2
 800910e:	69ba      	ldr	r2, [r7, #24]
 8009110:	4313      	orrs	r3, r2
 8009112:	61bb      	str	r3, [r7, #24]
 8009114:	4935      	ldr	r1, [pc, #212]	; (80091ec <HAL_GPIO_Init+0x304>)
 8009116:	69fb      	ldr	r3, [r7, #28]
 8009118:	089b      	lsrs	r3, r3, #2
 800911a:	3302      	adds	r3, #2
 800911c:	69ba      	ldr	r2, [r7, #24]
 800911e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8009122:	4b3a      	ldr	r3, [pc, #232]	; (800920c <HAL_GPIO_Init+0x324>)
 8009124:	681b      	ldr	r3, [r3, #0]
 8009126:	61bb      	str	r3, [r7, #24]
 8009128:	693b      	ldr	r3, [r7, #16]
 800912a:	43db      	mvns	r3, r3
 800912c:	69ba      	ldr	r2, [r7, #24]
 800912e:	4013      	ands	r3, r2
 8009130:	61bb      	str	r3, [r7, #24]
 8009132:	683b      	ldr	r3, [r7, #0]
 8009134:	685b      	ldr	r3, [r3, #4]
 8009136:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800913a:	2b00      	cmp	r3, #0
 800913c:	d003      	beq.n	8009146 <HAL_GPIO_Init+0x25e>
 800913e:	69ba      	ldr	r2, [r7, #24]
 8009140:	693b      	ldr	r3, [r7, #16]
 8009142:	4313      	orrs	r3, r2
 8009144:	61bb      	str	r3, [r7, #24]
 8009146:	4a31      	ldr	r2, [pc, #196]	; (800920c <HAL_GPIO_Init+0x324>)
 8009148:	69bb      	ldr	r3, [r7, #24]
 800914a:	6013      	str	r3, [r2, #0]
 800914c:	4b2f      	ldr	r3, [pc, #188]	; (800920c <HAL_GPIO_Init+0x324>)
 800914e:	685b      	ldr	r3, [r3, #4]
 8009150:	61bb      	str	r3, [r7, #24]
 8009152:	693b      	ldr	r3, [r7, #16]
 8009154:	43db      	mvns	r3, r3
 8009156:	69ba      	ldr	r2, [r7, #24]
 8009158:	4013      	ands	r3, r2
 800915a:	61bb      	str	r3, [r7, #24]
 800915c:	683b      	ldr	r3, [r7, #0]
 800915e:	685b      	ldr	r3, [r3, #4]
 8009160:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009164:	2b00      	cmp	r3, #0
 8009166:	d003      	beq.n	8009170 <HAL_GPIO_Init+0x288>
 8009168:	69ba      	ldr	r2, [r7, #24]
 800916a:	693b      	ldr	r3, [r7, #16]
 800916c:	4313      	orrs	r3, r2
 800916e:	61bb      	str	r3, [r7, #24]
 8009170:	4a26      	ldr	r2, [pc, #152]	; (800920c <HAL_GPIO_Init+0x324>)
 8009172:	69bb      	ldr	r3, [r7, #24]
 8009174:	6053      	str	r3, [r2, #4]
 8009176:	4b25      	ldr	r3, [pc, #148]	; (800920c <HAL_GPIO_Init+0x324>)
 8009178:	689b      	ldr	r3, [r3, #8]
 800917a:	61bb      	str	r3, [r7, #24]
 800917c:	693b      	ldr	r3, [r7, #16]
 800917e:	43db      	mvns	r3, r3
 8009180:	69ba      	ldr	r2, [r7, #24]
 8009182:	4013      	ands	r3, r2
 8009184:	61bb      	str	r3, [r7, #24]
 8009186:	683b      	ldr	r3, [r7, #0]
 8009188:	685b      	ldr	r3, [r3, #4]
 800918a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800918e:	2b00      	cmp	r3, #0
 8009190:	d003      	beq.n	800919a <HAL_GPIO_Init+0x2b2>
 8009192:	69ba      	ldr	r2, [r7, #24]
 8009194:	693b      	ldr	r3, [r7, #16]
 8009196:	4313      	orrs	r3, r2
 8009198:	61bb      	str	r3, [r7, #24]
 800919a:	4a1c      	ldr	r2, [pc, #112]	; (800920c <HAL_GPIO_Init+0x324>)
 800919c:	69bb      	ldr	r3, [r7, #24]
 800919e:	6093      	str	r3, [r2, #8]
 80091a0:	4b1a      	ldr	r3, [pc, #104]	; (800920c <HAL_GPIO_Init+0x324>)
 80091a2:	68db      	ldr	r3, [r3, #12]
 80091a4:	61bb      	str	r3, [r7, #24]
 80091a6:	693b      	ldr	r3, [r7, #16]
 80091a8:	43db      	mvns	r3, r3
 80091aa:	69ba      	ldr	r2, [r7, #24]
 80091ac:	4013      	ands	r3, r2
 80091ae:	61bb      	str	r3, [r7, #24]
 80091b0:	683b      	ldr	r3, [r7, #0]
 80091b2:	685b      	ldr	r3, [r3, #4]
 80091b4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80091b8:	2b00      	cmp	r3, #0
 80091ba:	d003      	beq.n	80091c4 <HAL_GPIO_Init+0x2dc>
 80091bc:	69ba      	ldr	r2, [r7, #24]
 80091be:	693b      	ldr	r3, [r7, #16]
 80091c0:	4313      	orrs	r3, r2
 80091c2:	61bb      	str	r3, [r7, #24]
 80091c4:	4a11      	ldr	r2, [pc, #68]	; (800920c <HAL_GPIO_Init+0x324>)
 80091c6:	69bb      	ldr	r3, [r7, #24]
 80091c8:	60d3      	str	r3, [r2, #12]
 80091ca:	69fb      	ldr	r3, [r7, #28]
 80091cc:	3301      	adds	r3, #1
 80091ce:	61fb      	str	r3, [r7, #28]
 80091d0:	69fb      	ldr	r3, [r7, #28]
 80091d2:	2b0f      	cmp	r3, #15
 80091d4:	f67f ae96 	bls.w	8008f04 <HAL_GPIO_Init+0x1c>
 80091d8:	bf00      	nop
 80091da:	bf00      	nop
 80091dc:	3724      	adds	r7, #36	; 0x24
 80091de:	46bd      	mov	sp, r7
 80091e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091e4:	4770      	bx	lr
 80091e6:	bf00      	nop
 80091e8:	40023800 	.word	0x40023800
 80091ec:	40013800 	.word	0x40013800
 80091f0:	40020000 	.word	0x40020000
 80091f4:	40020400 	.word	0x40020400
 80091f8:	40020800 	.word	0x40020800
 80091fc:	40020c00 	.word	0x40020c00
 8009200:	40021000 	.word	0x40021000
 8009204:	40021400 	.word	0x40021400
 8009208:	40021800 	.word	0x40021800
 800920c:	40013c00 	.word	0x40013c00

08009210 <HAL_GPIO_WritePin>:
 8009210:	b480      	push	{r7}
 8009212:	b083      	sub	sp, #12
 8009214:	af00      	add	r7, sp, #0
 8009216:	6078      	str	r0, [r7, #4]
 8009218:	460b      	mov	r3, r1
 800921a:	807b      	strh	r3, [r7, #2]
 800921c:	4613      	mov	r3, r2
 800921e:	707b      	strb	r3, [r7, #1]
 8009220:	787b      	ldrb	r3, [r7, #1]
 8009222:	2b00      	cmp	r3, #0
 8009224:	d003      	beq.n	800922e <HAL_GPIO_WritePin+0x1e>
 8009226:	887a      	ldrh	r2, [r7, #2]
 8009228:	687b      	ldr	r3, [r7, #4]
 800922a:	619a      	str	r2, [r3, #24]
 800922c:	e003      	b.n	8009236 <HAL_GPIO_WritePin+0x26>
 800922e:	887b      	ldrh	r3, [r7, #2]
 8009230:	041a      	lsls	r2, r3, #16
 8009232:	687b      	ldr	r3, [r7, #4]
 8009234:	619a      	str	r2, [r3, #24]
 8009236:	bf00      	nop
 8009238:	370c      	adds	r7, #12
 800923a:	46bd      	mov	sp, r7
 800923c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009240:	4770      	bx	lr

08009242 <HAL_GPIO_TogglePin>:
 8009242:	b480      	push	{r7}
 8009244:	b085      	sub	sp, #20
 8009246:	af00      	add	r7, sp, #0
 8009248:	6078      	str	r0, [r7, #4]
 800924a:	460b      	mov	r3, r1
 800924c:	807b      	strh	r3, [r7, #2]
 800924e:	687b      	ldr	r3, [r7, #4]
 8009250:	695b      	ldr	r3, [r3, #20]
 8009252:	60fb      	str	r3, [r7, #12]
 8009254:	887a      	ldrh	r2, [r7, #2]
 8009256:	68fb      	ldr	r3, [r7, #12]
 8009258:	4013      	ands	r3, r2
 800925a:	041a      	lsls	r2, r3, #16
 800925c:	68fb      	ldr	r3, [r7, #12]
 800925e:	43d9      	mvns	r1, r3
 8009260:	887b      	ldrh	r3, [r7, #2]
 8009262:	400b      	ands	r3, r1
 8009264:	431a      	orrs	r2, r3
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	619a      	str	r2, [r3, #24]
 800926a:	bf00      	nop
 800926c:	3714      	adds	r7, #20
 800926e:	46bd      	mov	sp, r7
 8009270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009274:	4770      	bx	lr
	...

08009278 <HAL_RCC_ClockConfig>:
 8009278:	b580      	push	{r7, lr}
 800927a:	b084      	sub	sp, #16
 800927c:	af00      	add	r7, sp, #0
 800927e:	6078      	str	r0, [r7, #4]
 8009280:	6039      	str	r1, [r7, #0]
 8009282:	687b      	ldr	r3, [r7, #4]
 8009284:	2b00      	cmp	r3, #0
 8009286:	d101      	bne.n	800928c <HAL_RCC_ClockConfig+0x14>
 8009288:	2301      	movs	r3, #1
 800928a:	e0cc      	b.n	8009426 <HAL_RCC_ClockConfig+0x1ae>
 800928c:	4b68      	ldr	r3, [pc, #416]	; (8009430 <HAL_RCC_ClockConfig+0x1b8>)
 800928e:	681b      	ldr	r3, [r3, #0]
 8009290:	f003 030f 	and.w	r3, r3, #15
 8009294:	683a      	ldr	r2, [r7, #0]
 8009296:	429a      	cmp	r2, r3
 8009298:	d90c      	bls.n	80092b4 <HAL_RCC_ClockConfig+0x3c>
 800929a:	4b65      	ldr	r3, [pc, #404]	; (8009430 <HAL_RCC_ClockConfig+0x1b8>)
 800929c:	683a      	ldr	r2, [r7, #0]
 800929e:	b2d2      	uxtb	r2, r2
 80092a0:	701a      	strb	r2, [r3, #0]
 80092a2:	4b63      	ldr	r3, [pc, #396]	; (8009430 <HAL_RCC_ClockConfig+0x1b8>)
 80092a4:	681b      	ldr	r3, [r3, #0]
 80092a6:	f003 030f 	and.w	r3, r3, #15
 80092aa:	683a      	ldr	r2, [r7, #0]
 80092ac:	429a      	cmp	r2, r3
 80092ae:	d001      	beq.n	80092b4 <HAL_RCC_ClockConfig+0x3c>
 80092b0:	2301      	movs	r3, #1
 80092b2:	e0b8      	b.n	8009426 <HAL_RCC_ClockConfig+0x1ae>
 80092b4:	687b      	ldr	r3, [r7, #4]
 80092b6:	681b      	ldr	r3, [r3, #0]
 80092b8:	f003 0302 	and.w	r3, r3, #2
 80092bc:	2b00      	cmp	r3, #0
 80092be:	d020      	beq.n	8009302 <HAL_RCC_ClockConfig+0x8a>
 80092c0:	687b      	ldr	r3, [r7, #4]
 80092c2:	681b      	ldr	r3, [r3, #0]
 80092c4:	f003 0304 	and.w	r3, r3, #4
 80092c8:	2b00      	cmp	r3, #0
 80092ca:	d005      	beq.n	80092d8 <HAL_RCC_ClockConfig+0x60>
 80092cc:	4b59      	ldr	r3, [pc, #356]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 80092ce:	689b      	ldr	r3, [r3, #8]
 80092d0:	4a58      	ldr	r2, [pc, #352]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 80092d2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80092d6:	6093      	str	r3, [r2, #8]
 80092d8:	687b      	ldr	r3, [r7, #4]
 80092da:	681b      	ldr	r3, [r3, #0]
 80092dc:	f003 0308 	and.w	r3, r3, #8
 80092e0:	2b00      	cmp	r3, #0
 80092e2:	d005      	beq.n	80092f0 <HAL_RCC_ClockConfig+0x78>
 80092e4:	4b53      	ldr	r3, [pc, #332]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 80092e6:	689b      	ldr	r3, [r3, #8]
 80092e8:	4a52      	ldr	r2, [pc, #328]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 80092ea:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80092ee:	6093      	str	r3, [r2, #8]
 80092f0:	4b50      	ldr	r3, [pc, #320]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 80092f2:	689b      	ldr	r3, [r3, #8]
 80092f4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80092f8:	687b      	ldr	r3, [r7, #4]
 80092fa:	689b      	ldr	r3, [r3, #8]
 80092fc:	494d      	ldr	r1, [pc, #308]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 80092fe:	4313      	orrs	r3, r2
 8009300:	608b      	str	r3, [r1, #8]
 8009302:	687b      	ldr	r3, [r7, #4]
 8009304:	681b      	ldr	r3, [r3, #0]
 8009306:	f003 0301 	and.w	r3, r3, #1
 800930a:	2b00      	cmp	r3, #0
 800930c:	d044      	beq.n	8009398 <HAL_RCC_ClockConfig+0x120>
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	685b      	ldr	r3, [r3, #4]
 8009312:	2b01      	cmp	r3, #1
 8009314:	d107      	bne.n	8009326 <HAL_RCC_ClockConfig+0xae>
 8009316:	4b47      	ldr	r3, [pc, #284]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 8009318:	681b      	ldr	r3, [r3, #0]
 800931a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800931e:	2b00      	cmp	r3, #0
 8009320:	d119      	bne.n	8009356 <HAL_RCC_ClockConfig+0xde>
 8009322:	2301      	movs	r3, #1
 8009324:	e07f      	b.n	8009426 <HAL_RCC_ClockConfig+0x1ae>
 8009326:	687b      	ldr	r3, [r7, #4]
 8009328:	685b      	ldr	r3, [r3, #4]
 800932a:	2b02      	cmp	r3, #2
 800932c:	d003      	beq.n	8009336 <HAL_RCC_ClockConfig+0xbe>
 800932e:	687b      	ldr	r3, [r7, #4]
 8009330:	685b      	ldr	r3, [r3, #4]
 8009332:	2b03      	cmp	r3, #3
 8009334:	d107      	bne.n	8009346 <HAL_RCC_ClockConfig+0xce>
 8009336:	4b3f      	ldr	r3, [pc, #252]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 8009338:	681b      	ldr	r3, [r3, #0]
 800933a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800933e:	2b00      	cmp	r3, #0
 8009340:	d109      	bne.n	8009356 <HAL_RCC_ClockConfig+0xde>
 8009342:	2301      	movs	r3, #1
 8009344:	e06f      	b.n	8009426 <HAL_RCC_ClockConfig+0x1ae>
 8009346:	4b3b      	ldr	r3, [pc, #236]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 8009348:	681b      	ldr	r3, [r3, #0]
 800934a:	f003 0302 	and.w	r3, r3, #2
 800934e:	2b00      	cmp	r3, #0
 8009350:	d101      	bne.n	8009356 <HAL_RCC_ClockConfig+0xde>
 8009352:	2301      	movs	r3, #1
 8009354:	e067      	b.n	8009426 <HAL_RCC_ClockConfig+0x1ae>
 8009356:	4b37      	ldr	r3, [pc, #220]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 8009358:	689b      	ldr	r3, [r3, #8]
 800935a:	f023 0203 	bic.w	r2, r3, #3
 800935e:	687b      	ldr	r3, [r7, #4]
 8009360:	685b      	ldr	r3, [r3, #4]
 8009362:	4934      	ldr	r1, [pc, #208]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 8009364:	4313      	orrs	r3, r2
 8009366:	608b      	str	r3, [r1, #8]
 8009368:	f7ff fc0e 	bl	8008b88 <HAL_GetTick>
 800936c:	60f8      	str	r0, [r7, #12]
 800936e:	e00a      	b.n	8009386 <HAL_RCC_ClockConfig+0x10e>
 8009370:	f7ff fc0a 	bl	8008b88 <HAL_GetTick>
 8009374:	4602      	mov	r2, r0
 8009376:	68fb      	ldr	r3, [r7, #12]
 8009378:	1ad3      	subs	r3, r2, r3
 800937a:	f241 3288 	movw	r2, #5000	; 0x1388
 800937e:	4293      	cmp	r3, r2
 8009380:	d901      	bls.n	8009386 <HAL_RCC_ClockConfig+0x10e>
 8009382:	2303      	movs	r3, #3
 8009384:	e04f      	b.n	8009426 <HAL_RCC_ClockConfig+0x1ae>
 8009386:	4b2b      	ldr	r3, [pc, #172]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 8009388:	689b      	ldr	r3, [r3, #8]
 800938a:	f003 020c 	and.w	r2, r3, #12
 800938e:	687b      	ldr	r3, [r7, #4]
 8009390:	685b      	ldr	r3, [r3, #4]
 8009392:	009b      	lsls	r3, r3, #2
 8009394:	429a      	cmp	r2, r3
 8009396:	d1eb      	bne.n	8009370 <HAL_RCC_ClockConfig+0xf8>
 8009398:	4b25      	ldr	r3, [pc, #148]	; (8009430 <HAL_RCC_ClockConfig+0x1b8>)
 800939a:	681b      	ldr	r3, [r3, #0]
 800939c:	f003 030f 	and.w	r3, r3, #15
 80093a0:	683a      	ldr	r2, [r7, #0]
 80093a2:	429a      	cmp	r2, r3
 80093a4:	d20c      	bcs.n	80093c0 <HAL_RCC_ClockConfig+0x148>
 80093a6:	4b22      	ldr	r3, [pc, #136]	; (8009430 <HAL_RCC_ClockConfig+0x1b8>)
 80093a8:	683a      	ldr	r2, [r7, #0]
 80093aa:	b2d2      	uxtb	r2, r2
 80093ac:	701a      	strb	r2, [r3, #0]
 80093ae:	4b20      	ldr	r3, [pc, #128]	; (8009430 <HAL_RCC_ClockConfig+0x1b8>)
 80093b0:	681b      	ldr	r3, [r3, #0]
 80093b2:	f003 030f 	and.w	r3, r3, #15
 80093b6:	683a      	ldr	r2, [r7, #0]
 80093b8:	429a      	cmp	r2, r3
 80093ba:	d001      	beq.n	80093c0 <HAL_RCC_ClockConfig+0x148>
 80093bc:	2301      	movs	r3, #1
 80093be:	e032      	b.n	8009426 <HAL_RCC_ClockConfig+0x1ae>
 80093c0:	687b      	ldr	r3, [r7, #4]
 80093c2:	681b      	ldr	r3, [r3, #0]
 80093c4:	f003 0304 	and.w	r3, r3, #4
 80093c8:	2b00      	cmp	r3, #0
 80093ca:	d008      	beq.n	80093de <HAL_RCC_ClockConfig+0x166>
 80093cc:	4b19      	ldr	r3, [pc, #100]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 80093ce:	689b      	ldr	r3, [r3, #8]
 80093d0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80093d4:	687b      	ldr	r3, [r7, #4]
 80093d6:	68db      	ldr	r3, [r3, #12]
 80093d8:	4916      	ldr	r1, [pc, #88]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 80093da:	4313      	orrs	r3, r2
 80093dc:	608b      	str	r3, [r1, #8]
 80093de:	687b      	ldr	r3, [r7, #4]
 80093e0:	681b      	ldr	r3, [r3, #0]
 80093e2:	f003 0308 	and.w	r3, r3, #8
 80093e6:	2b00      	cmp	r3, #0
 80093e8:	d009      	beq.n	80093fe <HAL_RCC_ClockConfig+0x186>
 80093ea:	4b12      	ldr	r3, [pc, #72]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 80093ec:	689b      	ldr	r3, [r3, #8]
 80093ee:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80093f2:	687b      	ldr	r3, [r7, #4]
 80093f4:	691b      	ldr	r3, [r3, #16]
 80093f6:	00db      	lsls	r3, r3, #3
 80093f8:	490e      	ldr	r1, [pc, #56]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 80093fa:	4313      	orrs	r3, r2
 80093fc:	608b      	str	r3, [r1, #8]
 80093fe:	f000 f855 	bl	80094ac <HAL_RCC_GetSysClockFreq>
 8009402:	4602      	mov	r2, r0
 8009404:	4b0b      	ldr	r3, [pc, #44]	; (8009434 <HAL_RCC_ClockConfig+0x1bc>)
 8009406:	689b      	ldr	r3, [r3, #8]
 8009408:	091b      	lsrs	r3, r3, #4
 800940a:	f003 030f 	and.w	r3, r3, #15
 800940e:	490a      	ldr	r1, [pc, #40]	; (8009438 <HAL_RCC_ClockConfig+0x1c0>)
 8009410:	5ccb      	ldrb	r3, [r1, r3]
 8009412:	fa22 f303 	lsr.w	r3, r2, r3
 8009416:	4a09      	ldr	r2, [pc, #36]	; (800943c <HAL_RCC_ClockConfig+0x1c4>)
 8009418:	6013      	str	r3, [r2, #0]
 800941a:	4b09      	ldr	r3, [pc, #36]	; (8009440 <HAL_RCC_ClockConfig+0x1c8>)
 800941c:	681b      	ldr	r3, [r3, #0]
 800941e:	4618      	mov	r0, r3
 8009420:	f7ff fb6e 	bl	8008b00 <HAL_InitTick>
 8009424:	2300      	movs	r3, #0
 8009426:	4618      	mov	r0, r3
 8009428:	3710      	adds	r7, #16
 800942a:	46bd      	mov	sp, r7
 800942c:	bd80      	pop	{r7, pc}
 800942e:	bf00      	nop
 8009430:	40023c00 	.word	0x40023c00
 8009434:	40023800 	.word	0x40023800
 8009438:	0800cfe8 	.word	0x0800cfe8
 800943c:	20000194 	.word	0x20000194
 8009440:	2000021c 	.word	0x2000021c

08009444 <HAL_RCC_GetHCLKFreq>:
 8009444:	b480      	push	{r7}
 8009446:	af00      	add	r7, sp, #0
 8009448:	4b03      	ldr	r3, [pc, #12]	; (8009458 <HAL_RCC_GetHCLKFreq+0x14>)
 800944a:	681b      	ldr	r3, [r3, #0]
 800944c:	4618      	mov	r0, r3
 800944e:	46bd      	mov	sp, r7
 8009450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009454:	4770      	bx	lr
 8009456:	bf00      	nop
 8009458:	20000194 	.word	0x20000194

0800945c <HAL_RCC_GetPCLK1Freq>:
 800945c:	b580      	push	{r7, lr}
 800945e:	af00      	add	r7, sp, #0
 8009460:	f7ff fff0 	bl	8009444 <HAL_RCC_GetHCLKFreq>
 8009464:	4602      	mov	r2, r0
 8009466:	4b05      	ldr	r3, [pc, #20]	; (800947c <HAL_RCC_GetPCLK1Freq+0x20>)
 8009468:	689b      	ldr	r3, [r3, #8]
 800946a:	0a9b      	lsrs	r3, r3, #10
 800946c:	f003 0307 	and.w	r3, r3, #7
 8009470:	4903      	ldr	r1, [pc, #12]	; (8009480 <HAL_RCC_GetPCLK1Freq+0x24>)
 8009472:	5ccb      	ldrb	r3, [r1, r3]
 8009474:	fa22 f303 	lsr.w	r3, r2, r3
 8009478:	4618      	mov	r0, r3
 800947a:	bd80      	pop	{r7, pc}
 800947c:	40023800 	.word	0x40023800
 8009480:	0800cff8 	.word	0x0800cff8

08009484 <HAL_RCC_GetPCLK2Freq>:
 8009484:	b580      	push	{r7, lr}
 8009486:	af00      	add	r7, sp, #0
 8009488:	f7ff ffdc 	bl	8009444 <HAL_RCC_GetHCLKFreq>
 800948c:	4602      	mov	r2, r0
 800948e:	4b05      	ldr	r3, [pc, #20]	; (80094a4 <HAL_RCC_GetPCLK2Freq+0x20>)
 8009490:	689b      	ldr	r3, [r3, #8]
 8009492:	0b5b      	lsrs	r3, r3, #13
 8009494:	f003 0307 	and.w	r3, r3, #7
 8009498:	4903      	ldr	r1, [pc, #12]	; (80094a8 <HAL_RCC_GetPCLK2Freq+0x24>)
 800949a:	5ccb      	ldrb	r3, [r1, r3]
 800949c:	fa22 f303 	lsr.w	r3, r2, r3
 80094a0:	4618      	mov	r0, r3
 80094a2:	bd80      	pop	{r7, pc}
 80094a4:	40023800 	.word	0x40023800
 80094a8:	0800cff8 	.word	0x0800cff8

080094ac <HAL_RCC_GetSysClockFreq>:
 80094ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80094b0:	b087      	sub	sp, #28
 80094b2:	af00      	add	r7, sp, #0
 80094b4:	2600      	movs	r6, #0
 80094b6:	60fe      	str	r6, [r7, #12]
 80094b8:	2600      	movs	r6, #0
 80094ba:	617e      	str	r6, [r7, #20]
 80094bc:	2600      	movs	r6, #0
 80094be:	60be      	str	r6, [r7, #8]
 80094c0:	2600      	movs	r6, #0
 80094c2:	607e      	str	r6, [r7, #4]
 80094c4:	2600      	movs	r6, #0
 80094c6:	613e      	str	r6, [r7, #16]
 80094c8:	4ea3      	ldr	r6, [pc, #652]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 80094ca:	68b6      	ldr	r6, [r6, #8]
 80094cc:	f006 060c 	and.w	r6, r6, #12
 80094d0:	2e0c      	cmp	r6, #12
 80094d2:	f200 8137 	bhi.w	8009744 <HAL_RCC_GetSysClockFreq+0x298>
 80094d6:	f20f 0c08 	addw	ip, pc, #8
 80094da:	f85c f026 	ldr.w	pc, [ip, r6, lsl #2]
 80094de:	bf00      	nop
 80094e0:	08009515 	.word	0x08009515
 80094e4:	08009745 	.word	0x08009745
 80094e8:	08009745 	.word	0x08009745
 80094ec:	08009745 	.word	0x08009745
 80094f0:	0800951b 	.word	0x0800951b
 80094f4:	08009745 	.word	0x08009745
 80094f8:	08009745 	.word	0x08009745
 80094fc:	08009745 	.word	0x08009745
 8009500:	08009521 	.word	0x08009521
 8009504:	08009745 	.word	0x08009745
 8009508:	08009745 	.word	0x08009745
 800950c:	08009745 	.word	0x08009745
 8009510:	08009637 	.word	0x08009637
 8009514:	4b91      	ldr	r3, [pc, #580]	; (800975c <HAL_RCC_GetSysClockFreq+0x2b0>)
 8009516:	613b      	str	r3, [r7, #16]
 8009518:	e117      	b.n	800974a <HAL_RCC_GetSysClockFreq+0x29e>
 800951a:	4b91      	ldr	r3, [pc, #580]	; (8009760 <HAL_RCC_GetSysClockFreq+0x2b4>)
 800951c:	613b      	str	r3, [r7, #16]
 800951e:	e114      	b.n	800974a <HAL_RCC_GetSysClockFreq+0x29e>
 8009520:	4b8d      	ldr	r3, [pc, #564]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8009522:	685b      	ldr	r3, [r3, #4]
 8009524:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009528:	60fb      	str	r3, [r7, #12]
 800952a:	4b8b      	ldr	r3, [pc, #556]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 800952c:	685b      	ldr	r3, [r3, #4]
 800952e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009532:	2b00      	cmp	r3, #0
 8009534:	d024      	beq.n	8009580 <HAL_RCC_GetSysClockFreq+0xd4>
 8009536:	4b88      	ldr	r3, [pc, #544]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8009538:	685b      	ldr	r3, [r3, #4]
 800953a:	099b      	lsrs	r3, r3, #6
 800953c:	461a      	mov	r2, r3
 800953e:	f04f 0300 	mov.w	r3, #0
 8009542:	f240 14ff 	movw	r4, #511	; 0x1ff
 8009546:	f04f 0500 	mov.w	r5, #0
 800954a:	ea02 0004 	and.w	r0, r2, r4
 800954e:	ea03 0105 	and.w	r1, r3, r5
 8009552:	4b83      	ldr	r3, [pc, #524]	; (8009760 <HAL_RCC_GetSysClockFreq+0x2b4>)
 8009554:	fb03 f201 	mul.w	r2, r3, r1
 8009558:	2300      	movs	r3, #0
 800955a:	fb03 f300 	mul.w	r3, r3, r0
 800955e:	4413      	add	r3, r2
 8009560:	4a7f      	ldr	r2, [pc, #508]	; (8009760 <HAL_RCC_GetSysClockFreq+0x2b4>)
 8009562:	fba0 0102 	umull	r0, r1, r0, r2
 8009566:	440b      	add	r3, r1
 8009568:	4619      	mov	r1, r3
 800956a:	68fb      	ldr	r3, [r7, #12]
 800956c:	461a      	mov	r2, r3
 800956e:	f04f 0300 	mov.w	r3, #0
 8009572:	f7f7 fb25 	bl	8000bc0 <__aeabi_uldivmod>
 8009576:	4602      	mov	r2, r0
 8009578:	460b      	mov	r3, r1
 800957a:	4613      	mov	r3, r2
 800957c:	617b      	str	r3, [r7, #20]
 800957e:	e04c      	b.n	800961a <HAL_RCC_GetSysClockFreq+0x16e>
 8009580:	4b75      	ldr	r3, [pc, #468]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8009582:	685b      	ldr	r3, [r3, #4]
 8009584:	099b      	lsrs	r3, r3, #6
 8009586:	461a      	mov	r2, r3
 8009588:	f04f 0300 	mov.w	r3, #0
 800958c:	f240 10ff 	movw	r0, #511	; 0x1ff
 8009590:	f04f 0100 	mov.w	r1, #0
 8009594:	ea02 0800 	and.w	r8, r2, r0
 8009598:	ea03 0901 	and.w	r9, r3, r1
 800959c:	4640      	mov	r0, r8
 800959e:	4649      	mov	r1, r9
 80095a0:	f04f 0200 	mov.w	r2, #0
 80095a4:	f04f 0300 	mov.w	r3, #0
 80095a8:	014b      	lsls	r3, r1, #5
 80095aa:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80095ae:	0142      	lsls	r2, r0, #5
 80095b0:	4610      	mov	r0, r2
 80095b2:	4619      	mov	r1, r3
 80095b4:	ebb0 0008 	subs.w	r0, r0, r8
 80095b8:	eb61 0109 	sbc.w	r1, r1, r9
 80095bc:	f04f 0200 	mov.w	r2, #0
 80095c0:	f04f 0300 	mov.w	r3, #0
 80095c4:	018b      	lsls	r3, r1, #6
 80095c6:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80095ca:	0182      	lsls	r2, r0, #6
 80095cc:	1a12      	subs	r2, r2, r0
 80095ce:	eb63 0301 	sbc.w	r3, r3, r1
 80095d2:	f04f 0000 	mov.w	r0, #0
 80095d6:	f04f 0100 	mov.w	r1, #0
 80095da:	00d9      	lsls	r1, r3, #3
 80095dc:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80095e0:	00d0      	lsls	r0, r2, #3
 80095e2:	4602      	mov	r2, r0
 80095e4:	460b      	mov	r3, r1
 80095e6:	eb12 0208 	adds.w	r2, r2, r8
 80095ea:	eb43 0309 	adc.w	r3, r3, r9
 80095ee:	f04f 0000 	mov.w	r0, #0
 80095f2:	f04f 0100 	mov.w	r1, #0
 80095f6:	0299      	lsls	r1, r3, #10
 80095f8:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 80095fc:	0290      	lsls	r0, r2, #10
 80095fe:	4602      	mov	r2, r0
 8009600:	460b      	mov	r3, r1
 8009602:	4610      	mov	r0, r2
 8009604:	4619      	mov	r1, r3
 8009606:	68fb      	ldr	r3, [r7, #12]
 8009608:	461a      	mov	r2, r3
 800960a:	f04f 0300 	mov.w	r3, #0
 800960e:	f7f7 fad7 	bl	8000bc0 <__aeabi_uldivmod>
 8009612:	4602      	mov	r2, r0
 8009614:	460b      	mov	r3, r1
 8009616:	4613      	mov	r3, r2
 8009618:	617b      	str	r3, [r7, #20]
 800961a:	4b4f      	ldr	r3, [pc, #316]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 800961c:	685b      	ldr	r3, [r3, #4]
 800961e:	0c1b      	lsrs	r3, r3, #16
 8009620:	f003 0303 	and.w	r3, r3, #3
 8009624:	3301      	adds	r3, #1
 8009626:	005b      	lsls	r3, r3, #1
 8009628:	60bb      	str	r3, [r7, #8]
 800962a:	697a      	ldr	r2, [r7, #20]
 800962c:	68bb      	ldr	r3, [r7, #8]
 800962e:	fbb2 f3f3 	udiv	r3, r2, r3
 8009632:	613b      	str	r3, [r7, #16]
 8009634:	e089      	b.n	800974a <HAL_RCC_GetSysClockFreq+0x29e>
 8009636:	4948      	ldr	r1, [pc, #288]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8009638:	6849      	ldr	r1, [r1, #4]
 800963a:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 800963e:	60f9      	str	r1, [r7, #12]
 8009640:	4945      	ldr	r1, [pc, #276]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8009642:	6849      	ldr	r1, [r1, #4]
 8009644:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 8009648:	2900      	cmp	r1, #0
 800964a:	d024      	beq.n	8009696 <HAL_RCC_GetSysClockFreq+0x1ea>
 800964c:	4942      	ldr	r1, [pc, #264]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 800964e:	6849      	ldr	r1, [r1, #4]
 8009650:	0989      	lsrs	r1, r1, #6
 8009652:	4608      	mov	r0, r1
 8009654:	f04f 0100 	mov.w	r1, #0
 8009658:	f240 14ff 	movw	r4, #511	; 0x1ff
 800965c:	f04f 0500 	mov.w	r5, #0
 8009660:	ea00 0204 	and.w	r2, r0, r4
 8009664:	ea01 0305 	and.w	r3, r1, r5
 8009668:	493d      	ldr	r1, [pc, #244]	; (8009760 <HAL_RCC_GetSysClockFreq+0x2b4>)
 800966a:	fb01 f003 	mul.w	r0, r1, r3
 800966e:	2100      	movs	r1, #0
 8009670:	fb01 f102 	mul.w	r1, r1, r2
 8009674:	1844      	adds	r4, r0, r1
 8009676:	493a      	ldr	r1, [pc, #232]	; (8009760 <HAL_RCC_GetSysClockFreq+0x2b4>)
 8009678:	fba2 0101 	umull	r0, r1, r2, r1
 800967c:	1863      	adds	r3, r4, r1
 800967e:	4619      	mov	r1, r3
 8009680:	68fb      	ldr	r3, [r7, #12]
 8009682:	461a      	mov	r2, r3
 8009684:	f04f 0300 	mov.w	r3, #0
 8009688:	f7f7 fa9a 	bl	8000bc0 <__aeabi_uldivmod>
 800968c:	4602      	mov	r2, r0
 800968e:	460b      	mov	r3, r1
 8009690:	4613      	mov	r3, r2
 8009692:	617b      	str	r3, [r7, #20]
 8009694:	e04a      	b.n	800972c <HAL_RCC_GetSysClockFreq+0x280>
 8009696:	4b30      	ldr	r3, [pc, #192]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8009698:	685b      	ldr	r3, [r3, #4]
 800969a:	099b      	lsrs	r3, r3, #6
 800969c:	461a      	mov	r2, r3
 800969e:	f04f 0300 	mov.w	r3, #0
 80096a2:	f240 10ff 	movw	r0, #511	; 0x1ff
 80096a6:	f04f 0100 	mov.w	r1, #0
 80096aa:	ea02 0400 	and.w	r4, r2, r0
 80096ae:	ea03 0501 	and.w	r5, r3, r1
 80096b2:	4620      	mov	r0, r4
 80096b4:	4629      	mov	r1, r5
 80096b6:	f04f 0200 	mov.w	r2, #0
 80096ba:	f04f 0300 	mov.w	r3, #0
 80096be:	014b      	lsls	r3, r1, #5
 80096c0:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80096c4:	0142      	lsls	r2, r0, #5
 80096c6:	4610      	mov	r0, r2
 80096c8:	4619      	mov	r1, r3
 80096ca:	1b00      	subs	r0, r0, r4
 80096cc:	eb61 0105 	sbc.w	r1, r1, r5
 80096d0:	f04f 0200 	mov.w	r2, #0
 80096d4:	f04f 0300 	mov.w	r3, #0
 80096d8:	018b      	lsls	r3, r1, #6
 80096da:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80096de:	0182      	lsls	r2, r0, #6
 80096e0:	1a12      	subs	r2, r2, r0
 80096e2:	eb63 0301 	sbc.w	r3, r3, r1
 80096e6:	f04f 0000 	mov.w	r0, #0
 80096ea:	f04f 0100 	mov.w	r1, #0
 80096ee:	00d9      	lsls	r1, r3, #3
 80096f0:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80096f4:	00d0      	lsls	r0, r2, #3
 80096f6:	4602      	mov	r2, r0
 80096f8:	460b      	mov	r3, r1
 80096fa:	1912      	adds	r2, r2, r4
 80096fc:	eb45 0303 	adc.w	r3, r5, r3
 8009700:	f04f 0000 	mov.w	r0, #0
 8009704:	f04f 0100 	mov.w	r1, #0
 8009708:	0299      	lsls	r1, r3, #10
 800970a:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 800970e:	0290      	lsls	r0, r2, #10
 8009710:	4602      	mov	r2, r0
 8009712:	460b      	mov	r3, r1
 8009714:	4610      	mov	r0, r2
 8009716:	4619      	mov	r1, r3
 8009718:	68fb      	ldr	r3, [r7, #12]
 800971a:	461a      	mov	r2, r3
 800971c:	f04f 0300 	mov.w	r3, #0
 8009720:	f7f7 fa4e 	bl	8000bc0 <__aeabi_uldivmod>
 8009724:	4602      	mov	r2, r0
 8009726:	460b      	mov	r3, r1
 8009728:	4613      	mov	r3, r2
 800972a:	617b      	str	r3, [r7, #20]
 800972c:	4b0a      	ldr	r3, [pc, #40]	; (8009758 <HAL_RCC_GetSysClockFreq+0x2ac>)
 800972e:	685b      	ldr	r3, [r3, #4]
 8009730:	0f1b      	lsrs	r3, r3, #28
 8009732:	f003 0307 	and.w	r3, r3, #7
 8009736:	607b      	str	r3, [r7, #4]
 8009738:	697a      	ldr	r2, [r7, #20]
 800973a:	687b      	ldr	r3, [r7, #4]
 800973c:	fbb2 f3f3 	udiv	r3, r2, r3
 8009740:	613b      	str	r3, [r7, #16]
 8009742:	e002      	b.n	800974a <HAL_RCC_GetSysClockFreq+0x29e>
 8009744:	4b05      	ldr	r3, [pc, #20]	; (800975c <HAL_RCC_GetSysClockFreq+0x2b0>)
 8009746:	613b      	str	r3, [r7, #16]
 8009748:	bf00      	nop
 800974a:	693b      	ldr	r3, [r7, #16]
 800974c:	4618      	mov	r0, r3
 800974e:	371c      	adds	r7, #28
 8009750:	46bd      	mov	sp, r7
 8009752:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009756:	bf00      	nop
 8009758:	40023800 	.word	0x40023800
 800975c:	00f42400 	.word	0x00f42400
 8009760:	017d7840 	.word	0x017d7840

08009764 <HAL_RCC_OscConfig>:
 8009764:	b580      	push	{r7, lr}
 8009766:	b086      	sub	sp, #24
 8009768:	af00      	add	r7, sp, #0
 800976a:	6078      	str	r0, [r7, #4]
 800976c:	687b      	ldr	r3, [r7, #4]
 800976e:	2b00      	cmp	r3, #0
 8009770:	d101      	bne.n	8009776 <HAL_RCC_OscConfig+0x12>
 8009772:	2301      	movs	r3, #1
 8009774:	e28d      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009776:	687b      	ldr	r3, [r7, #4]
 8009778:	681b      	ldr	r3, [r3, #0]
 800977a:	f003 0301 	and.w	r3, r3, #1
 800977e:	2b00      	cmp	r3, #0
 8009780:	f000 8083 	beq.w	800988a <HAL_RCC_OscConfig+0x126>
 8009784:	4b94      	ldr	r3, [pc, #592]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 8009786:	689b      	ldr	r3, [r3, #8]
 8009788:	f003 030c 	and.w	r3, r3, #12
 800978c:	2b04      	cmp	r3, #4
 800978e:	d019      	beq.n	80097c4 <HAL_RCC_OscConfig+0x60>
 8009790:	4b91      	ldr	r3, [pc, #580]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 8009792:	689b      	ldr	r3, [r3, #8]
 8009794:	f003 030c 	and.w	r3, r3, #12
 8009798:	2b08      	cmp	r3, #8
 800979a:	d106      	bne.n	80097aa <HAL_RCC_OscConfig+0x46>
 800979c:	4b8e      	ldr	r3, [pc, #568]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 800979e:	685b      	ldr	r3, [r3, #4]
 80097a0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80097a4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80097a8:	d00c      	beq.n	80097c4 <HAL_RCC_OscConfig+0x60>
 80097aa:	4b8b      	ldr	r3, [pc, #556]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80097ac:	689b      	ldr	r3, [r3, #8]
 80097ae:	f003 030c 	and.w	r3, r3, #12
 80097b2:	2b0c      	cmp	r3, #12
 80097b4:	d112      	bne.n	80097dc <HAL_RCC_OscConfig+0x78>
 80097b6:	4b88      	ldr	r3, [pc, #544]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80097b8:	685b      	ldr	r3, [r3, #4]
 80097ba:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80097be:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80097c2:	d10b      	bne.n	80097dc <HAL_RCC_OscConfig+0x78>
 80097c4:	4b84      	ldr	r3, [pc, #528]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80097c6:	681b      	ldr	r3, [r3, #0]
 80097c8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80097cc:	2b00      	cmp	r3, #0
 80097ce:	d05b      	beq.n	8009888 <HAL_RCC_OscConfig+0x124>
 80097d0:	687b      	ldr	r3, [r7, #4]
 80097d2:	685b      	ldr	r3, [r3, #4]
 80097d4:	2b00      	cmp	r3, #0
 80097d6:	d157      	bne.n	8009888 <HAL_RCC_OscConfig+0x124>
 80097d8:	2301      	movs	r3, #1
 80097da:	e25a      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 80097dc:	687b      	ldr	r3, [r7, #4]
 80097de:	685b      	ldr	r3, [r3, #4]
 80097e0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80097e4:	d106      	bne.n	80097f4 <HAL_RCC_OscConfig+0x90>
 80097e6:	4b7c      	ldr	r3, [pc, #496]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80097e8:	681b      	ldr	r3, [r3, #0]
 80097ea:	4a7b      	ldr	r2, [pc, #492]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80097ec:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80097f0:	6013      	str	r3, [r2, #0]
 80097f2:	e01d      	b.n	8009830 <HAL_RCC_OscConfig+0xcc>
 80097f4:	687b      	ldr	r3, [r7, #4]
 80097f6:	685b      	ldr	r3, [r3, #4]
 80097f8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80097fc:	d10c      	bne.n	8009818 <HAL_RCC_OscConfig+0xb4>
 80097fe:	4b76      	ldr	r3, [pc, #472]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 8009800:	681b      	ldr	r3, [r3, #0]
 8009802:	4a75      	ldr	r2, [pc, #468]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 8009804:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8009808:	6013      	str	r3, [r2, #0]
 800980a:	4b73      	ldr	r3, [pc, #460]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 800980c:	681b      	ldr	r3, [r3, #0]
 800980e:	4a72      	ldr	r2, [pc, #456]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 8009810:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009814:	6013      	str	r3, [r2, #0]
 8009816:	e00b      	b.n	8009830 <HAL_RCC_OscConfig+0xcc>
 8009818:	4b6f      	ldr	r3, [pc, #444]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 800981a:	681b      	ldr	r3, [r3, #0]
 800981c:	4a6e      	ldr	r2, [pc, #440]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 800981e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009822:	6013      	str	r3, [r2, #0]
 8009824:	4b6c      	ldr	r3, [pc, #432]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 8009826:	681b      	ldr	r3, [r3, #0]
 8009828:	4a6b      	ldr	r2, [pc, #428]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 800982a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800982e:	6013      	str	r3, [r2, #0]
 8009830:	687b      	ldr	r3, [r7, #4]
 8009832:	685b      	ldr	r3, [r3, #4]
 8009834:	2b00      	cmp	r3, #0
 8009836:	d013      	beq.n	8009860 <HAL_RCC_OscConfig+0xfc>
 8009838:	f7ff f9a6 	bl	8008b88 <HAL_GetTick>
 800983c:	6138      	str	r0, [r7, #16]
 800983e:	e008      	b.n	8009852 <HAL_RCC_OscConfig+0xee>
 8009840:	f7ff f9a2 	bl	8008b88 <HAL_GetTick>
 8009844:	4602      	mov	r2, r0
 8009846:	693b      	ldr	r3, [r7, #16]
 8009848:	1ad3      	subs	r3, r2, r3
 800984a:	2b64      	cmp	r3, #100	; 0x64
 800984c:	d901      	bls.n	8009852 <HAL_RCC_OscConfig+0xee>
 800984e:	2303      	movs	r3, #3
 8009850:	e21f      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009852:	4b61      	ldr	r3, [pc, #388]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 8009854:	681b      	ldr	r3, [r3, #0]
 8009856:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800985a:	2b00      	cmp	r3, #0
 800985c:	d0f0      	beq.n	8009840 <HAL_RCC_OscConfig+0xdc>
 800985e:	e014      	b.n	800988a <HAL_RCC_OscConfig+0x126>
 8009860:	f7ff f992 	bl	8008b88 <HAL_GetTick>
 8009864:	6138      	str	r0, [r7, #16]
 8009866:	e008      	b.n	800987a <HAL_RCC_OscConfig+0x116>
 8009868:	f7ff f98e 	bl	8008b88 <HAL_GetTick>
 800986c:	4602      	mov	r2, r0
 800986e:	693b      	ldr	r3, [r7, #16]
 8009870:	1ad3      	subs	r3, r2, r3
 8009872:	2b64      	cmp	r3, #100	; 0x64
 8009874:	d901      	bls.n	800987a <HAL_RCC_OscConfig+0x116>
 8009876:	2303      	movs	r3, #3
 8009878:	e20b      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 800987a:	4b57      	ldr	r3, [pc, #348]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 800987c:	681b      	ldr	r3, [r3, #0]
 800987e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009882:	2b00      	cmp	r3, #0
 8009884:	d1f0      	bne.n	8009868 <HAL_RCC_OscConfig+0x104>
 8009886:	e000      	b.n	800988a <HAL_RCC_OscConfig+0x126>
 8009888:	bf00      	nop
 800988a:	687b      	ldr	r3, [r7, #4]
 800988c:	681b      	ldr	r3, [r3, #0]
 800988e:	f003 0302 	and.w	r3, r3, #2
 8009892:	2b00      	cmp	r3, #0
 8009894:	d06f      	beq.n	8009976 <HAL_RCC_OscConfig+0x212>
 8009896:	4b50      	ldr	r3, [pc, #320]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 8009898:	689b      	ldr	r3, [r3, #8]
 800989a:	f003 030c 	and.w	r3, r3, #12
 800989e:	2b00      	cmp	r3, #0
 80098a0:	d017      	beq.n	80098d2 <HAL_RCC_OscConfig+0x16e>
 80098a2:	4b4d      	ldr	r3, [pc, #308]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80098a4:	689b      	ldr	r3, [r3, #8]
 80098a6:	f003 030c 	and.w	r3, r3, #12
 80098aa:	2b08      	cmp	r3, #8
 80098ac:	d105      	bne.n	80098ba <HAL_RCC_OscConfig+0x156>
 80098ae:	4b4a      	ldr	r3, [pc, #296]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80098b0:	685b      	ldr	r3, [r3, #4]
 80098b2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80098b6:	2b00      	cmp	r3, #0
 80098b8:	d00b      	beq.n	80098d2 <HAL_RCC_OscConfig+0x16e>
 80098ba:	4b47      	ldr	r3, [pc, #284]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80098bc:	689b      	ldr	r3, [r3, #8]
 80098be:	f003 030c 	and.w	r3, r3, #12
 80098c2:	2b0c      	cmp	r3, #12
 80098c4:	d11c      	bne.n	8009900 <HAL_RCC_OscConfig+0x19c>
 80098c6:	4b44      	ldr	r3, [pc, #272]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80098c8:	685b      	ldr	r3, [r3, #4]
 80098ca:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80098ce:	2b00      	cmp	r3, #0
 80098d0:	d116      	bne.n	8009900 <HAL_RCC_OscConfig+0x19c>
 80098d2:	4b41      	ldr	r3, [pc, #260]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80098d4:	681b      	ldr	r3, [r3, #0]
 80098d6:	f003 0302 	and.w	r3, r3, #2
 80098da:	2b00      	cmp	r3, #0
 80098dc:	d005      	beq.n	80098ea <HAL_RCC_OscConfig+0x186>
 80098de:	687b      	ldr	r3, [r7, #4]
 80098e0:	68db      	ldr	r3, [r3, #12]
 80098e2:	2b01      	cmp	r3, #1
 80098e4:	d001      	beq.n	80098ea <HAL_RCC_OscConfig+0x186>
 80098e6:	2301      	movs	r3, #1
 80098e8:	e1d3      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 80098ea:	4b3b      	ldr	r3, [pc, #236]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80098ec:	681b      	ldr	r3, [r3, #0]
 80098ee:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80098f2:	687b      	ldr	r3, [r7, #4]
 80098f4:	691b      	ldr	r3, [r3, #16]
 80098f6:	00db      	lsls	r3, r3, #3
 80098f8:	4937      	ldr	r1, [pc, #220]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80098fa:	4313      	orrs	r3, r2
 80098fc:	600b      	str	r3, [r1, #0]
 80098fe:	e03a      	b.n	8009976 <HAL_RCC_OscConfig+0x212>
 8009900:	687b      	ldr	r3, [r7, #4]
 8009902:	68db      	ldr	r3, [r3, #12]
 8009904:	2b00      	cmp	r3, #0
 8009906:	d020      	beq.n	800994a <HAL_RCC_OscConfig+0x1e6>
 8009908:	4b34      	ldr	r3, [pc, #208]	; (80099dc <HAL_RCC_OscConfig+0x278>)
 800990a:	2201      	movs	r2, #1
 800990c:	601a      	str	r2, [r3, #0]
 800990e:	f7ff f93b 	bl	8008b88 <HAL_GetTick>
 8009912:	6138      	str	r0, [r7, #16]
 8009914:	e008      	b.n	8009928 <HAL_RCC_OscConfig+0x1c4>
 8009916:	f7ff f937 	bl	8008b88 <HAL_GetTick>
 800991a:	4602      	mov	r2, r0
 800991c:	693b      	ldr	r3, [r7, #16]
 800991e:	1ad3      	subs	r3, r2, r3
 8009920:	2b02      	cmp	r3, #2
 8009922:	d901      	bls.n	8009928 <HAL_RCC_OscConfig+0x1c4>
 8009924:	2303      	movs	r3, #3
 8009926:	e1b4      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009928:	4b2b      	ldr	r3, [pc, #172]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 800992a:	681b      	ldr	r3, [r3, #0]
 800992c:	f003 0302 	and.w	r3, r3, #2
 8009930:	2b00      	cmp	r3, #0
 8009932:	d0f0      	beq.n	8009916 <HAL_RCC_OscConfig+0x1b2>
 8009934:	4b28      	ldr	r3, [pc, #160]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 8009936:	681b      	ldr	r3, [r3, #0]
 8009938:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800993c:	687b      	ldr	r3, [r7, #4]
 800993e:	691b      	ldr	r3, [r3, #16]
 8009940:	00db      	lsls	r3, r3, #3
 8009942:	4925      	ldr	r1, [pc, #148]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 8009944:	4313      	orrs	r3, r2
 8009946:	600b      	str	r3, [r1, #0]
 8009948:	e015      	b.n	8009976 <HAL_RCC_OscConfig+0x212>
 800994a:	4b24      	ldr	r3, [pc, #144]	; (80099dc <HAL_RCC_OscConfig+0x278>)
 800994c:	2200      	movs	r2, #0
 800994e:	601a      	str	r2, [r3, #0]
 8009950:	f7ff f91a 	bl	8008b88 <HAL_GetTick>
 8009954:	6138      	str	r0, [r7, #16]
 8009956:	e008      	b.n	800996a <HAL_RCC_OscConfig+0x206>
 8009958:	f7ff f916 	bl	8008b88 <HAL_GetTick>
 800995c:	4602      	mov	r2, r0
 800995e:	693b      	ldr	r3, [r7, #16]
 8009960:	1ad3      	subs	r3, r2, r3
 8009962:	2b02      	cmp	r3, #2
 8009964:	d901      	bls.n	800996a <HAL_RCC_OscConfig+0x206>
 8009966:	2303      	movs	r3, #3
 8009968:	e193      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 800996a:	4b1b      	ldr	r3, [pc, #108]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 800996c:	681b      	ldr	r3, [r3, #0]
 800996e:	f003 0302 	and.w	r3, r3, #2
 8009972:	2b00      	cmp	r3, #0
 8009974:	d1f0      	bne.n	8009958 <HAL_RCC_OscConfig+0x1f4>
 8009976:	687b      	ldr	r3, [r7, #4]
 8009978:	681b      	ldr	r3, [r3, #0]
 800997a:	f003 0308 	and.w	r3, r3, #8
 800997e:	2b00      	cmp	r3, #0
 8009980:	d036      	beq.n	80099f0 <HAL_RCC_OscConfig+0x28c>
 8009982:	687b      	ldr	r3, [r7, #4]
 8009984:	695b      	ldr	r3, [r3, #20]
 8009986:	2b00      	cmp	r3, #0
 8009988:	d016      	beq.n	80099b8 <HAL_RCC_OscConfig+0x254>
 800998a:	4b15      	ldr	r3, [pc, #84]	; (80099e0 <HAL_RCC_OscConfig+0x27c>)
 800998c:	2201      	movs	r2, #1
 800998e:	601a      	str	r2, [r3, #0]
 8009990:	f7ff f8fa 	bl	8008b88 <HAL_GetTick>
 8009994:	6138      	str	r0, [r7, #16]
 8009996:	e008      	b.n	80099aa <HAL_RCC_OscConfig+0x246>
 8009998:	f7ff f8f6 	bl	8008b88 <HAL_GetTick>
 800999c:	4602      	mov	r2, r0
 800999e:	693b      	ldr	r3, [r7, #16]
 80099a0:	1ad3      	subs	r3, r2, r3
 80099a2:	2b02      	cmp	r3, #2
 80099a4:	d901      	bls.n	80099aa <HAL_RCC_OscConfig+0x246>
 80099a6:	2303      	movs	r3, #3
 80099a8:	e173      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 80099aa:	4b0b      	ldr	r3, [pc, #44]	; (80099d8 <HAL_RCC_OscConfig+0x274>)
 80099ac:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80099ae:	f003 0302 	and.w	r3, r3, #2
 80099b2:	2b00      	cmp	r3, #0
 80099b4:	d0f0      	beq.n	8009998 <HAL_RCC_OscConfig+0x234>
 80099b6:	e01b      	b.n	80099f0 <HAL_RCC_OscConfig+0x28c>
 80099b8:	4b09      	ldr	r3, [pc, #36]	; (80099e0 <HAL_RCC_OscConfig+0x27c>)
 80099ba:	2200      	movs	r2, #0
 80099bc:	601a      	str	r2, [r3, #0]
 80099be:	f7ff f8e3 	bl	8008b88 <HAL_GetTick>
 80099c2:	6138      	str	r0, [r7, #16]
 80099c4:	e00e      	b.n	80099e4 <HAL_RCC_OscConfig+0x280>
 80099c6:	f7ff f8df 	bl	8008b88 <HAL_GetTick>
 80099ca:	4602      	mov	r2, r0
 80099cc:	693b      	ldr	r3, [r7, #16]
 80099ce:	1ad3      	subs	r3, r2, r3
 80099d0:	2b02      	cmp	r3, #2
 80099d2:	d907      	bls.n	80099e4 <HAL_RCC_OscConfig+0x280>
 80099d4:	2303      	movs	r3, #3
 80099d6:	e15c      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 80099d8:	40023800 	.word	0x40023800
 80099dc:	42470000 	.word	0x42470000
 80099e0:	42470e80 	.word	0x42470e80
 80099e4:	4b8a      	ldr	r3, [pc, #552]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 80099e6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80099e8:	f003 0302 	and.w	r3, r3, #2
 80099ec:	2b00      	cmp	r3, #0
 80099ee:	d1ea      	bne.n	80099c6 <HAL_RCC_OscConfig+0x262>
 80099f0:	687b      	ldr	r3, [r7, #4]
 80099f2:	681b      	ldr	r3, [r3, #0]
 80099f4:	f003 0304 	and.w	r3, r3, #4
 80099f8:	2b00      	cmp	r3, #0
 80099fa:	f000 8097 	beq.w	8009b2c <HAL_RCC_OscConfig+0x3c8>
 80099fe:	2300      	movs	r3, #0
 8009a00:	75fb      	strb	r3, [r7, #23]
 8009a02:	4b83      	ldr	r3, [pc, #524]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009a04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009a06:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009a0a:	2b00      	cmp	r3, #0
 8009a0c:	d10f      	bne.n	8009a2e <HAL_RCC_OscConfig+0x2ca>
 8009a0e:	2300      	movs	r3, #0
 8009a10:	60bb      	str	r3, [r7, #8]
 8009a12:	4b7f      	ldr	r3, [pc, #508]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009a14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009a16:	4a7e      	ldr	r2, [pc, #504]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009a18:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009a1c:	6413      	str	r3, [r2, #64]	; 0x40
 8009a1e:	4b7c      	ldr	r3, [pc, #496]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009a20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009a22:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009a26:	60bb      	str	r3, [r7, #8]
 8009a28:	68bb      	ldr	r3, [r7, #8]
 8009a2a:	2301      	movs	r3, #1
 8009a2c:	75fb      	strb	r3, [r7, #23]
 8009a2e:	4b79      	ldr	r3, [pc, #484]	; (8009c14 <HAL_RCC_OscConfig+0x4b0>)
 8009a30:	681b      	ldr	r3, [r3, #0]
 8009a32:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009a36:	2b00      	cmp	r3, #0
 8009a38:	d118      	bne.n	8009a6c <HAL_RCC_OscConfig+0x308>
 8009a3a:	4b76      	ldr	r3, [pc, #472]	; (8009c14 <HAL_RCC_OscConfig+0x4b0>)
 8009a3c:	681b      	ldr	r3, [r3, #0]
 8009a3e:	4a75      	ldr	r2, [pc, #468]	; (8009c14 <HAL_RCC_OscConfig+0x4b0>)
 8009a40:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009a44:	6013      	str	r3, [r2, #0]
 8009a46:	f7ff f89f 	bl	8008b88 <HAL_GetTick>
 8009a4a:	6138      	str	r0, [r7, #16]
 8009a4c:	e008      	b.n	8009a60 <HAL_RCC_OscConfig+0x2fc>
 8009a4e:	f7ff f89b 	bl	8008b88 <HAL_GetTick>
 8009a52:	4602      	mov	r2, r0
 8009a54:	693b      	ldr	r3, [r7, #16]
 8009a56:	1ad3      	subs	r3, r2, r3
 8009a58:	2b02      	cmp	r3, #2
 8009a5a:	d901      	bls.n	8009a60 <HAL_RCC_OscConfig+0x2fc>
 8009a5c:	2303      	movs	r3, #3
 8009a5e:	e118      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009a60:	4b6c      	ldr	r3, [pc, #432]	; (8009c14 <HAL_RCC_OscConfig+0x4b0>)
 8009a62:	681b      	ldr	r3, [r3, #0]
 8009a64:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009a68:	2b00      	cmp	r3, #0
 8009a6a:	d0f0      	beq.n	8009a4e <HAL_RCC_OscConfig+0x2ea>
 8009a6c:	687b      	ldr	r3, [r7, #4]
 8009a6e:	689b      	ldr	r3, [r3, #8]
 8009a70:	2b01      	cmp	r3, #1
 8009a72:	d106      	bne.n	8009a82 <HAL_RCC_OscConfig+0x31e>
 8009a74:	4b66      	ldr	r3, [pc, #408]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009a76:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009a78:	4a65      	ldr	r2, [pc, #404]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009a7a:	f043 0301 	orr.w	r3, r3, #1
 8009a7e:	6713      	str	r3, [r2, #112]	; 0x70
 8009a80:	e01c      	b.n	8009abc <HAL_RCC_OscConfig+0x358>
 8009a82:	687b      	ldr	r3, [r7, #4]
 8009a84:	689b      	ldr	r3, [r3, #8]
 8009a86:	2b05      	cmp	r3, #5
 8009a88:	d10c      	bne.n	8009aa4 <HAL_RCC_OscConfig+0x340>
 8009a8a:	4b61      	ldr	r3, [pc, #388]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009a8c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009a8e:	4a60      	ldr	r2, [pc, #384]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009a90:	f043 0304 	orr.w	r3, r3, #4
 8009a94:	6713      	str	r3, [r2, #112]	; 0x70
 8009a96:	4b5e      	ldr	r3, [pc, #376]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009a98:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009a9a:	4a5d      	ldr	r2, [pc, #372]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009a9c:	f043 0301 	orr.w	r3, r3, #1
 8009aa0:	6713      	str	r3, [r2, #112]	; 0x70
 8009aa2:	e00b      	b.n	8009abc <HAL_RCC_OscConfig+0x358>
 8009aa4:	4b5a      	ldr	r3, [pc, #360]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009aa6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009aa8:	4a59      	ldr	r2, [pc, #356]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009aaa:	f023 0301 	bic.w	r3, r3, #1
 8009aae:	6713      	str	r3, [r2, #112]	; 0x70
 8009ab0:	4b57      	ldr	r3, [pc, #348]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009ab2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009ab4:	4a56      	ldr	r2, [pc, #344]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009ab6:	f023 0304 	bic.w	r3, r3, #4
 8009aba:	6713      	str	r3, [r2, #112]	; 0x70
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	689b      	ldr	r3, [r3, #8]
 8009ac0:	2b00      	cmp	r3, #0
 8009ac2:	d015      	beq.n	8009af0 <HAL_RCC_OscConfig+0x38c>
 8009ac4:	f7ff f860 	bl	8008b88 <HAL_GetTick>
 8009ac8:	6138      	str	r0, [r7, #16]
 8009aca:	e00a      	b.n	8009ae2 <HAL_RCC_OscConfig+0x37e>
 8009acc:	f7ff f85c 	bl	8008b88 <HAL_GetTick>
 8009ad0:	4602      	mov	r2, r0
 8009ad2:	693b      	ldr	r3, [r7, #16]
 8009ad4:	1ad3      	subs	r3, r2, r3
 8009ad6:	f241 3288 	movw	r2, #5000	; 0x1388
 8009ada:	4293      	cmp	r3, r2
 8009adc:	d901      	bls.n	8009ae2 <HAL_RCC_OscConfig+0x37e>
 8009ade:	2303      	movs	r3, #3
 8009ae0:	e0d7      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009ae2:	4b4b      	ldr	r3, [pc, #300]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009ae4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009ae6:	f003 0302 	and.w	r3, r3, #2
 8009aea:	2b00      	cmp	r3, #0
 8009aec:	d0ee      	beq.n	8009acc <HAL_RCC_OscConfig+0x368>
 8009aee:	e014      	b.n	8009b1a <HAL_RCC_OscConfig+0x3b6>
 8009af0:	f7ff f84a 	bl	8008b88 <HAL_GetTick>
 8009af4:	6138      	str	r0, [r7, #16]
 8009af6:	e00a      	b.n	8009b0e <HAL_RCC_OscConfig+0x3aa>
 8009af8:	f7ff f846 	bl	8008b88 <HAL_GetTick>
 8009afc:	4602      	mov	r2, r0
 8009afe:	693b      	ldr	r3, [r7, #16]
 8009b00:	1ad3      	subs	r3, r2, r3
 8009b02:	f241 3288 	movw	r2, #5000	; 0x1388
 8009b06:	4293      	cmp	r3, r2
 8009b08:	d901      	bls.n	8009b0e <HAL_RCC_OscConfig+0x3aa>
 8009b0a:	2303      	movs	r3, #3
 8009b0c:	e0c1      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009b0e:	4b40      	ldr	r3, [pc, #256]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009b10:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009b12:	f003 0302 	and.w	r3, r3, #2
 8009b16:	2b00      	cmp	r3, #0
 8009b18:	d1ee      	bne.n	8009af8 <HAL_RCC_OscConfig+0x394>
 8009b1a:	7dfb      	ldrb	r3, [r7, #23]
 8009b1c:	2b01      	cmp	r3, #1
 8009b1e:	d105      	bne.n	8009b2c <HAL_RCC_OscConfig+0x3c8>
 8009b20:	4b3b      	ldr	r3, [pc, #236]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009b22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b24:	4a3a      	ldr	r2, [pc, #232]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009b26:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009b2a:	6413      	str	r3, [r2, #64]	; 0x40
 8009b2c:	687b      	ldr	r3, [r7, #4]
 8009b2e:	699b      	ldr	r3, [r3, #24]
 8009b30:	2b00      	cmp	r3, #0
 8009b32:	f000 80ad 	beq.w	8009c90 <HAL_RCC_OscConfig+0x52c>
 8009b36:	4b36      	ldr	r3, [pc, #216]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009b38:	689b      	ldr	r3, [r3, #8]
 8009b3a:	f003 030c 	and.w	r3, r3, #12
 8009b3e:	2b08      	cmp	r3, #8
 8009b40:	d060      	beq.n	8009c04 <HAL_RCC_OscConfig+0x4a0>
 8009b42:	687b      	ldr	r3, [r7, #4]
 8009b44:	699b      	ldr	r3, [r3, #24]
 8009b46:	2b02      	cmp	r3, #2
 8009b48:	d145      	bne.n	8009bd6 <HAL_RCC_OscConfig+0x472>
 8009b4a:	4b33      	ldr	r3, [pc, #204]	; (8009c18 <HAL_RCC_OscConfig+0x4b4>)
 8009b4c:	2200      	movs	r2, #0
 8009b4e:	601a      	str	r2, [r3, #0]
 8009b50:	f7ff f81a 	bl	8008b88 <HAL_GetTick>
 8009b54:	6138      	str	r0, [r7, #16]
 8009b56:	e008      	b.n	8009b6a <HAL_RCC_OscConfig+0x406>
 8009b58:	f7ff f816 	bl	8008b88 <HAL_GetTick>
 8009b5c:	4602      	mov	r2, r0
 8009b5e:	693b      	ldr	r3, [r7, #16]
 8009b60:	1ad3      	subs	r3, r2, r3
 8009b62:	2b02      	cmp	r3, #2
 8009b64:	d901      	bls.n	8009b6a <HAL_RCC_OscConfig+0x406>
 8009b66:	2303      	movs	r3, #3
 8009b68:	e093      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009b6a:	4b29      	ldr	r3, [pc, #164]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009b6c:	681b      	ldr	r3, [r3, #0]
 8009b6e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009b72:	2b00      	cmp	r3, #0
 8009b74:	d1f0      	bne.n	8009b58 <HAL_RCC_OscConfig+0x3f4>
 8009b76:	687b      	ldr	r3, [r7, #4]
 8009b78:	69da      	ldr	r2, [r3, #28]
 8009b7a:	687b      	ldr	r3, [r7, #4]
 8009b7c:	6a1b      	ldr	r3, [r3, #32]
 8009b7e:	431a      	orrs	r2, r3
 8009b80:	687b      	ldr	r3, [r7, #4]
 8009b82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b84:	019b      	lsls	r3, r3, #6
 8009b86:	431a      	orrs	r2, r3
 8009b88:	687b      	ldr	r3, [r7, #4]
 8009b8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009b8c:	085b      	lsrs	r3, r3, #1
 8009b8e:	3b01      	subs	r3, #1
 8009b90:	041b      	lsls	r3, r3, #16
 8009b92:	431a      	orrs	r2, r3
 8009b94:	687b      	ldr	r3, [r7, #4]
 8009b96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b98:	061b      	lsls	r3, r3, #24
 8009b9a:	431a      	orrs	r2, r3
 8009b9c:	687b      	ldr	r3, [r7, #4]
 8009b9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ba0:	071b      	lsls	r3, r3, #28
 8009ba2:	491b      	ldr	r1, [pc, #108]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009ba4:	4313      	orrs	r3, r2
 8009ba6:	604b      	str	r3, [r1, #4]
 8009ba8:	4b1b      	ldr	r3, [pc, #108]	; (8009c18 <HAL_RCC_OscConfig+0x4b4>)
 8009baa:	2201      	movs	r2, #1
 8009bac:	601a      	str	r2, [r3, #0]
 8009bae:	f7fe ffeb 	bl	8008b88 <HAL_GetTick>
 8009bb2:	6138      	str	r0, [r7, #16]
 8009bb4:	e008      	b.n	8009bc8 <HAL_RCC_OscConfig+0x464>
 8009bb6:	f7fe ffe7 	bl	8008b88 <HAL_GetTick>
 8009bba:	4602      	mov	r2, r0
 8009bbc:	693b      	ldr	r3, [r7, #16]
 8009bbe:	1ad3      	subs	r3, r2, r3
 8009bc0:	2b02      	cmp	r3, #2
 8009bc2:	d901      	bls.n	8009bc8 <HAL_RCC_OscConfig+0x464>
 8009bc4:	2303      	movs	r3, #3
 8009bc6:	e064      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009bc8:	4b11      	ldr	r3, [pc, #68]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009bca:	681b      	ldr	r3, [r3, #0]
 8009bcc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009bd0:	2b00      	cmp	r3, #0
 8009bd2:	d0f0      	beq.n	8009bb6 <HAL_RCC_OscConfig+0x452>
 8009bd4:	e05c      	b.n	8009c90 <HAL_RCC_OscConfig+0x52c>
 8009bd6:	4b10      	ldr	r3, [pc, #64]	; (8009c18 <HAL_RCC_OscConfig+0x4b4>)
 8009bd8:	2200      	movs	r2, #0
 8009bda:	601a      	str	r2, [r3, #0]
 8009bdc:	f7fe ffd4 	bl	8008b88 <HAL_GetTick>
 8009be0:	6138      	str	r0, [r7, #16]
 8009be2:	e008      	b.n	8009bf6 <HAL_RCC_OscConfig+0x492>
 8009be4:	f7fe ffd0 	bl	8008b88 <HAL_GetTick>
 8009be8:	4602      	mov	r2, r0
 8009bea:	693b      	ldr	r3, [r7, #16]
 8009bec:	1ad3      	subs	r3, r2, r3
 8009bee:	2b02      	cmp	r3, #2
 8009bf0:	d901      	bls.n	8009bf6 <HAL_RCC_OscConfig+0x492>
 8009bf2:	2303      	movs	r3, #3
 8009bf4:	e04d      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009bf6:	4b06      	ldr	r3, [pc, #24]	; (8009c10 <HAL_RCC_OscConfig+0x4ac>)
 8009bf8:	681b      	ldr	r3, [r3, #0]
 8009bfa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009bfe:	2b00      	cmp	r3, #0
 8009c00:	d1f0      	bne.n	8009be4 <HAL_RCC_OscConfig+0x480>
 8009c02:	e045      	b.n	8009c90 <HAL_RCC_OscConfig+0x52c>
 8009c04:	687b      	ldr	r3, [r7, #4]
 8009c06:	699b      	ldr	r3, [r3, #24]
 8009c08:	2b01      	cmp	r3, #1
 8009c0a:	d107      	bne.n	8009c1c <HAL_RCC_OscConfig+0x4b8>
 8009c0c:	2301      	movs	r3, #1
 8009c0e:	e040      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009c10:	40023800 	.word	0x40023800
 8009c14:	40007000 	.word	0x40007000
 8009c18:	42470060 	.word	0x42470060
 8009c1c:	4b1f      	ldr	r3, [pc, #124]	; (8009c9c <HAL_RCC_OscConfig+0x538>)
 8009c1e:	685b      	ldr	r3, [r3, #4]
 8009c20:	60fb      	str	r3, [r7, #12]
 8009c22:	687b      	ldr	r3, [r7, #4]
 8009c24:	699b      	ldr	r3, [r3, #24]
 8009c26:	2b01      	cmp	r3, #1
 8009c28:	d030      	beq.n	8009c8c <HAL_RCC_OscConfig+0x528>
 8009c2a:	68fb      	ldr	r3, [r7, #12]
 8009c2c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8009c30:	687b      	ldr	r3, [r7, #4]
 8009c32:	69db      	ldr	r3, [r3, #28]
 8009c34:	429a      	cmp	r2, r3
 8009c36:	d129      	bne.n	8009c8c <HAL_RCC_OscConfig+0x528>
 8009c38:	68fb      	ldr	r3, [r7, #12]
 8009c3a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8009c3e:	687b      	ldr	r3, [r7, #4]
 8009c40:	6a1b      	ldr	r3, [r3, #32]
 8009c42:	429a      	cmp	r2, r3
 8009c44:	d122      	bne.n	8009c8c <HAL_RCC_OscConfig+0x528>
 8009c46:	68fa      	ldr	r2, [r7, #12]
 8009c48:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8009c4c:	4013      	ands	r3, r2
 8009c4e:	687a      	ldr	r2, [r7, #4]
 8009c50:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009c52:	0192      	lsls	r2, r2, #6
 8009c54:	4293      	cmp	r3, r2
 8009c56:	d119      	bne.n	8009c8c <HAL_RCC_OscConfig+0x528>
 8009c58:	68fb      	ldr	r3, [r7, #12]
 8009c5a:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8009c5e:	687b      	ldr	r3, [r7, #4]
 8009c60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009c62:	085b      	lsrs	r3, r3, #1
 8009c64:	3b01      	subs	r3, #1
 8009c66:	041b      	lsls	r3, r3, #16
 8009c68:	429a      	cmp	r2, r3
 8009c6a:	d10f      	bne.n	8009c8c <HAL_RCC_OscConfig+0x528>
 8009c6c:	68fb      	ldr	r3, [r7, #12]
 8009c6e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c76:	061b      	lsls	r3, r3, #24
 8009c78:	429a      	cmp	r2, r3
 8009c7a:	d107      	bne.n	8009c8c <HAL_RCC_OscConfig+0x528>
 8009c7c:	68fb      	ldr	r3, [r7, #12]
 8009c7e:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8009c82:	687b      	ldr	r3, [r7, #4]
 8009c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009c86:	071b      	lsls	r3, r3, #28
 8009c88:	429a      	cmp	r2, r3
 8009c8a:	d001      	beq.n	8009c90 <HAL_RCC_OscConfig+0x52c>
 8009c8c:	2301      	movs	r3, #1
 8009c8e:	e000      	b.n	8009c92 <HAL_RCC_OscConfig+0x52e>
 8009c90:	2300      	movs	r3, #0
 8009c92:	4618      	mov	r0, r3
 8009c94:	3718      	adds	r7, #24
 8009c96:	46bd      	mov	sp, r7
 8009c98:	bd80      	pop	{r7, pc}
 8009c9a:	bf00      	nop
 8009c9c:	40023800 	.word	0x40023800

08009ca0 <HAL_SPI_Init>:
 8009ca0:	b580      	push	{r7, lr}
 8009ca2:	b082      	sub	sp, #8
 8009ca4:	af00      	add	r7, sp, #0
 8009ca6:	6078      	str	r0, [r7, #4]
 8009ca8:	687b      	ldr	r3, [r7, #4]
 8009caa:	2b00      	cmp	r3, #0
 8009cac:	d101      	bne.n	8009cb2 <HAL_SPI_Init+0x12>
 8009cae:	2301      	movs	r3, #1
 8009cb0:	e07b      	b.n	8009daa <HAL_SPI_Init+0x10a>
 8009cb2:	687b      	ldr	r3, [r7, #4]
 8009cb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009cb6:	2b00      	cmp	r3, #0
 8009cb8:	d108      	bne.n	8009ccc <HAL_SPI_Init+0x2c>
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	685b      	ldr	r3, [r3, #4]
 8009cbe:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009cc2:	d009      	beq.n	8009cd8 <HAL_SPI_Init+0x38>
 8009cc4:	687b      	ldr	r3, [r7, #4]
 8009cc6:	2200      	movs	r2, #0
 8009cc8:	61da      	str	r2, [r3, #28]
 8009cca:	e005      	b.n	8009cd8 <HAL_SPI_Init+0x38>
 8009ccc:	687b      	ldr	r3, [r7, #4]
 8009cce:	2200      	movs	r2, #0
 8009cd0:	611a      	str	r2, [r3, #16]
 8009cd2:	687b      	ldr	r3, [r7, #4]
 8009cd4:	2200      	movs	r2, #0
 8009cd6:	615a      	str	r2, [r3, #20]
 8009cd8:	687b      	ldr	r3, [r7, #4]
 8009cda:	2200      	movs	r2, #0
 8009cdc:	629a      	str	r2, [r3, #40]	; 0x28
 8009cde:	687b      	ldr	r3, [r7, #4]
 8009ce0:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8009ce4:	b2db      	uxtb	r3, r3
 8009ce6:	2b00      	cmp	r3, #0
 8009ce8:	d106      	bne.n	8009cf8 <HAL_SPI_Init+0x58>
 8009cea:	687b      	ldr	r3, [r7, #4]
 8009cec:	2200      	movs	r2, #0
 8009cee:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8009cf2:	6878      	ldr	r0, [r7, #4]
 8009cf4:	f7fb fd84 	bl	8005800 <HAL_SPI_MspInit>
 8009cf8:	687b      	ldr	r3, [r7, #4]
 8009cfa:	2202      	movs	r2, #2
 8009cfc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	681b      	ldr	r3, [r3, #0]
 8009d04:	681a      	ldr	r2, [r3, #0]
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	681b      	ldr	r3, [r3, #0]
 8009d0a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009d0e:	601a      	str	r2, [r3, #0]
 8009d10:	687b      	ldr	r3, [r7, #4]
 8009d12:	685b      	ldr	r3, [r3, #4]
 8009d14:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8009d18:	687b      	ldr	r3, [r7, #4]
 8009d1a:	689b      	ldr	r3, [r3, #8]
 8009d1c:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8009d20:	431a      	orrs	r2, r3
 8009d22:	687b      	ldr	r3, [r7, #4]
 8009d24:	68db      	ldr	r3, [r3, #12]
 8009d26:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009d2a:	431a      	orrs	r2, r3
 8009d2c:	687b      	ldr	r3, [r7, #4]
 8009d2e:	691b      	ldr	r3, [r3, #16]
 8009d30:	f003 0302 	and.w	r3, r3, #2
 8009d34:	431a      	orrs	r2, r3
 8009d36:	687b      	ldr	r3, [r7, #4]
 8009d38:	695b      	ldr	r3, [r3, #20]
 8009d3a:	f003 0301 	and.w	r3, r3, #1
 8009d3e:	431a      	orrs	r2, r3
 8009d40:	687b      	ldr	r3, [r7, #4]
 8009d42:	699b      	ldr	r3, [r3, #24]
 8009d44:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8009d48:	431a      	orrs	r2, r3
 8009d4a:	687b      	ldr	r3, [r7, #4]
 8009d4c:	69db      	ldr	r3, [r3, #28]
 8009d4e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8009d52:	431a      	orrs	r2, r3
 8009d54:	687b      	ldr	r3, [r7, #4]
 8009d56:	6a1b      	ldr	r3, [r3, #32]
 8009d58:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009d5c:	ea42 0103 	orr.w	r1, r2, r3
 8009d60:	687b      	ldr	r3, [r7, #4]
 8009d62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d64:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8009d68:	687b      	ldr	r3, [r7, #4]
 8009d6a:	681b      	ldr	r3, [r3, #0]
 8009d6c:	430a      	orrs	r2, r1
 8009d6e:	601a      	str	r2, [r3, #0]
 8009d70:	687b      	ldr	r3, [r7, #4]
 8009d72:	699b      	ldr	r3, [r3, #24]
 8009d74:	0c1b      	lsrs	r3, r3, #16
 8009d76:	f003 0104 	and.w	r1, r3, #4
 8009d7a:	687b      	ldr	r3, [r7, #4]
 8009d7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d7e:	f003 0210 	and.w	r2, r3, #16
 8009d82:	687b      	ldr	r3, [r7, #4]
 8009d84:	681b      	ldr	r3, [r3, #0]
 8009d86:	430a      	orrs	r2, r1
 8009d88:	605a      	str	r2, [r3, #4]
 8009d8a:	687b      	ldr	r3, [r7, #4]
 8009d8c:	681b      	ldr	r3, [r3, #0]
 8009d8e:	69da      	ldr	r2, [r3, #28]
 8009d90:	687b      	ldr	r3, [r7, #4]
 8009d92:	681b      	ldr	r3, [r3, #0]
 8009d94:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009d98:	61da      	str	r2, [r3, #28]
 8009d9a:	687b      	ldr	r3, [r7, #4]
 8009d9c:	2200      	movs	r2, #0
 8009d9e:	655a      	str	r2, [r3, #84]	; 0x54
 8009da0:	687b      	ldr	r3, [r7, #4]
 8009da2:	2201      	movs	r2, #1
 8009da4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009da8:	2300      	movs	r3, #0
 8009daa:	4618      	mov	r0, r3
 8009dac:	3708      	adds	r7, #8
 8009dae:	46bd      	mov	sp, r7
 8009db0:	bd80      	pop	{r7, pc}

08009db2 <HAL_SPI_Transmit>:
 8009db2:	b580      	push	{r7, lr}
 8009db4:	b088      	sub	sp, #32
 8009db6:	af00      	add	r7, sp, #0
 8009db8:	60f8      	str	r0, [r7, #12]
 8009dba:	60b9      	str	r1, [r7, #8]
 8009dbc:	603b      	str	r3, [r7, #0]
 8009dbe:	4613      	mov	r3, r2
 8009dc0:	80fb      	strh	r3, [r7, #6]
 8009dc2:	2300      	movs	r3, #0
 8009dc4:	77fb      	strb	r3, [r7, #31]
 8009dc6:	68fb      	ldr	r3, [r7, #12]
 8009dc8:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8009dcc:	2b01      	cmp	r3, #1
 8009dce:	d101      	bne.n	8009dd4 <HAL_SPI_Transmit+0x22>
 8009dd0:	2302      	movs	r3, #2
 8009dd2:	e126      	b.n	800a022 <HAL_SPI_Transmit+0x270>
 8009dd4:	68fb      	ldr	r3, [r7, #12]
 8009dd6:	2201      	movs	r2, #1
 8009dd8:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8009ddc:	f7fe fed4 	bl	8008b88 <HAL_GetTick>
 8009de0:	61b8      	str	r0, [r7, #24]
 8009de2:	88fb      	ldrh	r3, [r7, #6]
 8009de4:	82fb      	strh	r3, [r7, #22]
 8009de6:	68fb      	ldr	r3, [r7, #12]
 8009de8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8009dec:	b2db      	uxtb	r3, r3
 8009dee:	2b01      	cmp	r3, #1
 8009df0:	d002      	beq.n	8009df8 <HAL_SPI_Transmit+0x46>
 8009df2:	2302      	movs	r3, #2
 8009df4:	77fb      	strb	r3, [r7, #31]
 8009df6:	e10b      	b.n	800a010 <HAL_SPI_Transmit+0x25e>
 8009df8:	68bb      	ldr	r3, [r7, #8]
 8009dfa:	2b00      	cmp	r3, #0
 8009dfc:	d002      	beq.n	8009e04 <HAL_SPI_Transmit+0x52>
 8009dfe:	88fb      	ldrh	r3, [r7, #6]
 8009e00:	2b00      	cmp	r3, #0
 8009e02:	d102      	bne.n	8009e0a <HAL_SPI_Transmit+0x58>
 8009e04:	2301      	movs	r3, #1
 8009e06:	77fb      	strb	r3, [r7, #31]
 8009e08:	e102      	b.n	800a010 <HAL_SPI_Transmit+0x25e>
 8009e0a:	68fb      	ldr	r3, [r7, #12]
 8009e0c:	2203      	movs	r2, #3
 8009e0e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009e12:	68fb      	ldr	r3, [r7, #12]
 8009e14:	2200      	movs	r2, #0
 8009e16:	655a      	str	r2, [r3, #84]	; 0x54
 8009e18:	68fb      	ldr	r3, [r7, #12]
 8009e1a:	68ba      	ldr	r2, [r7, #8]
 8009e1c:	631a      	str	r2, [r3, #48]	; 0x30
 8009e1e:	68fb      	ldr	r3, [r7, #12]
 8009e20:	88fa      	ldrh	r2, [r7, #6]
 8009e22:	869a      	strh	r2, [r3, #52]	; 0x34
 8009e24:	68fb      	ldr	r3, [r7, #12]
 8009e26:	88fa      	ldrh	r2, [r7, #6]
 8009e28:	86da      	strh	r2, [r3, #54]	; 0x36
 8009e2a:	68fb      	ldr	r3, [r7, #12]
 8009e2c:	2200      	movs	r2, #0
 8009e2e:	639a      	str	r2, [r3, #56]	; 0x38
 8009e30:	68fb      	ldr	r3, [r7, #12]
 8009e32:	2200      	movs	r2, #0
 8009e34:	879a      	strh	r2, [r3, #60]	; 0x3c
 8009e36:	68fb      	ldr	r3, [r7, #12]
 8009e38:	2200      	movs	r2, #0
 8009e3a:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009e3c:	68fb      	ldr	r3, [r7, #12]
 8009e3e:	2200      	movs	r2, #0
 8009e40:	645a      	str	r2, [r3, #68]	; 0x44
 8009e42:	68fb      	ldr	r3, [r7, #12]
 8009e44:	2200      	movs	r2, #0
 8009e46:	641a      	str	r2, [r3, #64]	; 0x40
 8009e48:	68fb      	ldr	r3, [r7, #12]
 8009e4a:	689b      	ldr	r3, [r3, #8]
 8009e4c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009e50:	d10f      	bne.n	8009e72 <HAL_SPI_Transmit+0xc0>
 8009e52:	68fb      	ldr	r3, [r7, #12]
 8009e54:	681b      	ldr	r3, [r3, #0]
 8009e56:	681a      	ldr	r2, [r3, #0]
 8009e58:	68fb      	ldr	r3, [r7, #12]
 8009e5a:	681b      	ldr	r3, [r3, #0]
 8009e5c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009e60:	601a      	str	r2, [r3, #0]
 8009e62:	68fb      	ldr	r3, [r7, #12]
 8009e64:	681b      	ldr	r3, [r3, #0]
 8009e66:	681a      	ldr	r2, [r3, #0]
 8009e68:	68fb      	ldr	r3, [r7, #12]
 8009e6a:	681b      	ldr	r3, [r3, #0]
 8009e6c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009e70:	601a      	str	r2, [r3, #0]
 8009e72:	68fb      	ldr	r3, [r7, #12]
 8009e74:	681b      	ldr	r3, [r3, #0]
 8009e76:	681b      	ldr	r3, [r3, #0]
 8009e78:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009e7c:	2b40      	cmp	r3, #64	; 0x40
 8009e7e:	d007      	beq.n	8009e90 <HAL_SPI_Transmit+0xde>
 8009e80:	68fb      	ldr	r3, [r7, #12]
 8009e82:	681b      	ldr	r3, [r3, #0]
 8009e84:	681a      	ldr	r2, [r3, #0]
 8009e86:	68fb      	ldr	r3, [r7, #12]
 8009e88:	681b      	ldr	r3, [r3, #0]
 8009e8a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009e8e:	601a      	str	r2, [r3, #0]
 8009e90:	68fb      	ldr	r3, [r7, #12]
 8009e92:	68db      	ldr	r3, [r3, #12]
 8009e94:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009e98:	d14b      	bne.n	8009f32 <HAL_SPI_Transmit+0x180>
 8009e9a:	68fb      	ldr	r3, [r7, #12]
 8009e9c:	685b      	ldr	r3, [r3, #4]
 8009e9e:	2b00      	cmp	r3, #0
 8009ea0:	d002      	beq.n	8009ea8 <HAL_SPI_Transmit+0xf6>
 8009ea2:	8afb      	ldrh	r3, [r7, #22]
 8009ea4:	2b01      	cmp	r3, #1
 8009ea6:	d13e      	bne.n	8009f26 <HAL_SPI_Transmit+0x174>
 8009ea8:	68fb      	ldr	r3, [r7, #12]
 8009eaa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009eac:	881a      	ldrh	r2, [r3, #0]
 8009eae:	68fb      	ldr	r3, [r7, #12]
 8009eb0:	681b      	ldr	r3, [r3, #0]
 8009eb2:	60da      	str	r2, [r3, #12]
 8009eb4:	68fb      	ldr	r3, [r7, #12]
 8009eb6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009eb8:	1c9a      	adds	r2, r3, #2
 8009eba:	68fb      	ldr	r3, [r7, #12]
 8009ebc:	631a      	str	r2, [r3, #48]	; 0x30
 8009ebe:	68fb      	ldr	r3, [r7, #12]
 8009ec0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009ec2:	b29b      	uxth	r3, r3
 8009ec4:	3b01      	subs	r3, #1
 8009ec6:	b29a      	uxth	r2, r3
 8009ec8:	68fb      	ldr	r3, [r7, #12]
 8009eca:	86da      	strh	r2, [r3, #54]	; 0x36
 8009ecc:	e02b      	b.n	8009f26 <HAL_SPI_Transmit+0x174>
 8009ece:	68fb      	ldr	r3, [r7, #12]
 8009ed0:	681b      	ldr	r3, [r3, #0]
 8009ed2:	689b      	ldr	r3, [r3, #8]
 8009ed4:	f003 0302 	and.w	r3, r3, #2
 8009ed8:	2b02      	cmp	r3, #2
 8009eda:	d112      	bne.n	8009f02 <HAL_SPI_Transmit+0x150>
 8009edc:	68fb      	ldr	r3, [r7, #12]
 8009ede:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ee0:	881a      	ldrh	r2, [r3, #0]
 8009ee2:	68fb      	ldr	r3, [r7, #12]
 8009ee4:	681b      	ldr	r3, [r3, #0]
 8009ee6:	60da      	str	r2, [r3, #12]
 8009ee8:	68fb      	ldr	r3, [r7, #12]
 8009eea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009eec:	1c9a      	adds	r2, r3, #2
 8009eee:	68fb      	ldr	r3, [r7, #12]
 8009ef0:	631a      	str	r2, [r3, #48]	; 0x30
 8009ef2:	68fb      	ldr	r3, [r7, #12]
 8009ef4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009ef6:	b29b      	uxth	r3, r3
 8009ef8:	3b01      	subs	r3, #1
 8009efa:	b29a      	uxth	r2, r3
 8009efc:	68fb      	ldr	r3, [r7, #12]
 8009efe:	86da      	strh	r2, [r3, #54]	; 0x36
 8009f00:	e011      	b.n	8009f26 <HAL_SPI_Transmit+0x174>
 8009f02:	f7fe fe41 	bl	8008b88 <HAL_GetTick>
 8009f06:	4602      	mov	r2, r0
 8009f08:	69bb      	ldr	r3, [r7, #24]
 8009f0a:	1ad3      	subs	r3, r2, r3
 8009f0c:	683a      	ldr	r2, [r7, #0]
 8009f0e:	429a      	cmp	r2, r3
 8009f10:	d803      	bhi.n	8009f1a <HAL_SPI_Transmit+0x168>
 8009f12:	683b      	ldr	r3, [r7, #0]
 8009f14:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009f18:	d102      	bne.n	8009f20 <HAL_SPI_Transmit+0x16e>
 8009f1a:	683b      	ldr	r3, [r7, #0]
 8009f1c:	2b00      	cmp	r3, #0
 8009f1e:	d102      	bne.n	8009f26 <HAL_SPI_Transmit+0x174>
 8009f20:	2303      	movs	r3, #3
 8009f22:	77fb      	strb	r3, [r7, #31]
 8009f24:	e074      	b.n	800a010 <HAL_SPI_Transmit+0x25e>
 8009f26:	68fb      	ldr	r3, [r7, #12]
 8009f28:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009f2a:	b29b      	uxth	r3, r3
 8009f2c:	2b00      	cmp	r3, #0
 8009f2e:	d1ce      	bne.n	8009ece <HAL_SPI_Transmit+0x11c>
 8009f30:	e04c      	b.n	8009fcc <HAL_SPI_Transmit+0x21a>
 8009f32:	68fb      	ldr	r3, [r7, #12]
 8009f34:	685b      	ldr	r3, [r3, #4]
 8009f36:	2b00      	cmp	r3, #0
 8009f38:	d002      	beq.n	8009f40 <HAL_SPI_Transmit+0x18e>
 8009f3a:	8afb      	ldrh	r3, [r7, #22]
 8009f3c:	2b01      	cmp	r3, #1
 8009f3e:	d140      	bne.n	8009fc2 <HAL_SPI_Transmit+0x210>
 8009f40:	68fb      	ldr	r3, [r7, #12]
 8009f42:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009f44:	68fb      	ldr	r3, [r7, #12]
 8009f46:	681b      	ldr	r3, [r3, #0]
 8009f48:	330c      	adds	r3, #12
 8009f4a:	7812      	ldrb	r2, [r2, #0]
 8009f4c:	701a      	strb	r2, [r3, #0]
 8009f4e:	68fb      	ldr	r3, [r7, #12]
 8009f50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f52:	1c5a      	adds	r2, r3, #1
 8009f54:	68fb      	ldr	r3, [r7, #12]
 8009f56:	631a      	str	r2, [r3, #48]	; 0x30
 8009f58:	68fb      	ldr	r3, [r7, #12]
 8009f5a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009f5c:	b29b      	uxth	r3, r3
 8009f5e:	3b01      	subs	r3, #1
 8009f60:	b29a      	uxth	r2, r3
 8009f62:	68fb      	ldr	r3, [r7, #12]
 8009f64:	86da      	strh	r2, [r3, #54]	; 0x36
 8009f66:	e02c      	b.n	8009fc2 <HAL_SPI_Transmit+0x210>
 8009f68:	68fb      	ldr	r3, [r7, #12]
 8009f6a:	681b      	ldr	r3, [r3, #0]
 8009f6c:	689b      	ldr	r3, [r3, #8]
 8009f6e:	f003 0302 	and.w	r3, r3, #2
 8009f72:	2b02      	cmp	r3, #2
 8009f74:	d113      	bne.n	8009f9e <HAL_SPI_Transmit+0x1ec>
 8009f76:	68fb      	ldr	r3, [r7, #12]
 8009f78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009f7a:	68fb      	ldr	r3, [r7, #12]
 8009f7c:	681b      	ldr	r3, [r3, #0]
 8009f7e:	330c      	adds	r3, #12
 8009f80:	7812      	ldrb	r2, [r2, #0]
 8009f82:	701a      	strb	r2, [r3, #0]
 8009f84:	68fb      	ldr	r3, [r7, #12]
 8009f86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f88:	1c5a      	adds	r2, r3, #1
 8009f8a:	68fb      	ldr	r3, [r7, #12]
 8009f8c:	631a      	str	r2, [r3, #48]	; 0x30
 8009f8e:	68fb      	ldr	r3, [r7, #12]
 8009f90:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009f92:	b29b      	uxth	r3, r3
 8009f94:	3b01      	subs	r3, #1
 8009f96:	b29a      	uxth	r2, r3
 8009f98:	68fb      	ldr	r3, [r7, #12]
 8009f9a:	86da      	strh	r2, [r3, #54]	; 0x36
 8009f9c:	e011      	b.n	8009fc2 <HAL_SPI_Transmit+0x210>
 8009f9e:	f7fe fdf3 	bl	8008b88 <HAL_GetTick>
 8009fa2:	4602      	mov	r2, r0
 8009fa4:	69bb      	ldr	r3, [r7, #24]
 8009fa6:	1ad3      	subs	r3, r2, r3
 8009fa8:	683a      	ldr	r2, [r7, #0]
 8009faa:	429a      	cmp	r2, r3
 8009fac:	d803      	bhi.n	8009fb6 <HAL_SPI_Transmit+0x204>
 8009fae:	683b      	ldr	r3, [r7, #0]
 8009fb0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009fb4:	d102      	bne.n	8009fbc <HAL_SPI_Transmit+0x20a>
 8009fb6:	683b      	ldr	r3, [r7, #0]
 8009fb8:	2b00      	cmp	r3, #0
 8009fba:	d102      	bne.n	8009fc2 <HAL_SPI_Transmit+0x210>
 8009fbc:	2303      	movs	r3, #3
 8009fbe:	77fb      	strb	r3, [r7, #31]
 8009fc0:	e026      	b.n	800a010 <HAL_SPI_Transmit+0x25e>
 8009fc2:	68fb      	ldr	r3, [r7, #12]
 8009fc4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009fc6:	b29b      	uxth	r3, r3
 8009fc8:	2b00      	cmp	r3, #0
 8009fca:	d1cd      	bne.n	8009f68 <HAL_SPI_Transmit+0x1b6>
 8009fcc:	69ba      	ldr	r2, [r7, #24]
 8009fce:	6839      	ldr	r1, [r7, #0]
 8009fd0:	68f8      	ldr	r0, [r7, #12]
 8009fd2:	f000 fbcb 	bl	800a76c <SPI_EndRxTxTransaction>
 8009fd6:	4603      	mov	r3, r0
 8009fd8:	2b00      	cmp	r3, #0
 8009fda:	d002      	beq.n	8009fe2 <HAL_SPI_Transmit+0x230>
 8009fdc:	68fb      	ldr	r3, [r7, #12]
 8009fde:	2220      	movs	r2, #32
 8009fe0:	655a      	str	r2, [r3, #84]	; 0x54
 8009fe2:	68fb      	ldr	r3, [r7, #12]
 8009fe4:	689b      	ldr	r3, [r3, #8]
 8009fe6:	2b00      	cmp	r3, #0
 8009fe8:	d10a      	bne.n	800a000 <HAL_SPI_Transmit+0x24e>
 8009fea:	2300      	movs	r3, #0
 8009fec:	613b      	str	r3, [r7, #16]
 8009fee:	68fb      	ldr	r3, [r7, #12]
 8009ff0:	681b      	ldr	r3, [r3, #0]
 8009ff2:	68db      	ldr	r3, [r3, #12]
 8009ff4:	613b      	str	r3, [r7, #16]
 8009ff6:	68fb      	ldr	r3, [r7, #12]
 8009ff8:	681b      	ldr	r3, [r3, #0]
 8009ffa:	689b      	ldr	r3, [r3, #8]
 8009ffc:	613b      	str	r3, [r7, #16]
 8009ffe:	693b      	ldr	r3, [r7, #16]
 800a000:	68fb      	ldr	r3, [r7, #12]
 800a002:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a004:	2b00      	cmp	r3, #0
 800a006:	d002      	beq.n	800a00e <HAL_SPI_Transmit+0x25c>
 800a008:	2301      	movs	r3, #1
 800a00a:	77fb      	strb	r3, [r7, #31]
 800a00c:	e000      	b.n	800a010 <HAL_SPI_Transmit+0x25e>
 800a00e:	bf00      	nop
 800a010:	68fb      	ldr	r3, [r7, #12]
 800a012:	2201      	movs	r2, #1
 800a014:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800a018:	68fb      	ldr	r3, [r7, #12]
 800a01a:	2200      	movs	r2, #0
 800a01c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800a020:	7ffb      	ldrb	r3, [r7, #31]
 800a022:	4618      	mov	r0, r3
 800a024:	3720      	adds	r7, #32
 800a026:	46bd      	mov	sp, r7
 800a028:	bd80      	pop	{r7, pc}

0800a02a <HAL_SPI_Receive>:
 800a02a:	b580      	push	{r7, lr}
 800a02c:	b088      	sub	sp, #32
 800a02e:	af02      	add	r7, sp, #8
 800a030:	60f8      	str	r0, [r7, #12]
 800a032:	60b9      	str	r1, [r7, #8]
 800a034:	603b      	str	r3, [r7, #0]
 800a036:	4613      	mov	r3, r2
 800a038:	80fb      	strh	r3, [r7, #6]
 800a03a:	2300      	movs	r3, #0
 800a03c:	75fb      	strb	r3, [r7, #23]
 800a03e:	68fb      	ldr	r3, [r7, #12]
 800a040:	685b      	ldr	r3, [r3, #4]
 800a042:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a046:	d112      	bne.n	800a06e <HAL_SPI_Receive+0x44>
 800a048:	68fb      	ldr	r3, [r7, #12]
 800a04a:	689b      	ldr	r3, [r3, #8]
 800a04c:	2b00      	cmp	r3, #0
 800a04e:	d10e      	bne.n	800a06e <HAL_SPI_Receive+0x44>
 800a050:	68fb      	ldr	r3, [r7, #12]
 800a052:	2204      	movs	r2, #4
 800a054:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800a058:	88fa      	ldrh	r2, [r7, #6]
 800a05a:	683b      	ldr	r3, [r7, #0]
 800a05c:	9300      	str	r3, [sp, #0]
 800a05e:	4613      	mov	r3, r2
 800a060:	68ba      	ldr	r2, [r7, #8]
 800a062:	68b9      	ldr	r1, [r7, #8]
 800a064:	68f8      	ldr	r0, [r7, #12]
 800a066:	f000 f8f1 	bl	800a24c <HAL_SPI_TransmitReceive>
 800a06a:	4603      	mov	r3, r0
 800a06c:	e0ea      	b.n	800a244 <HAL_SPI_Receive+0x21a>
 800a06e:	68fb      	ldr	r3, [r7, #12]
 800a070:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800a074:	2b01      	cmp	r3, #1
 800a076:	d101      	bne.n	800a07c <HAL_SPI_Receive+0x52>
 800a078:	2302      	movs	r3, #2
 800a07a:	e0e3      	b.n	800a244 <HAL_SPI_Receive+0x21a>
 800a07c:	68fb      	ldr	r3, [r7, #12]
 800a07e:	2201      	movs	r2, #1
 800a080:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800a084:	f7fe fd80 	bl	8008b88 <HAL_GetTick>
 800a088:	6138      	str	r0, [r7, #16]
 800a08a:	68fb      	ldr	r3, [r7, #12]
 800a08c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800a090:	b2db      	uxtb	r3, r3
 800a092:	2b01      	cmp	r3, #1
 800a094:	d002      	beq.n	800a09c <HAL_SPI_Receive+0x72>
 800a096:	2302      	movs	r3, #2
 800a098:	75fb      	strb	r3, [r7, #23]
 800a09a:	e0ca      	b.n	800a232 <HAL_SPI_Receive+0x208>
 800a09c:	68bb      	ldr	r3, [r7, #8]
 800a09e:	2b00      	cmp	r3, #0
 800a0a0:	d002      	beq.n	800a0a8 <HAL_SPI_Receive+0x7e>
 800a0a2:	88fb      	ldrh	r3, [r7, #6]
 800a0a4:	2b00      	cmp	r3, #0
 800a0a6:	d102      	bne.n	800a0ae <HAL_SPI_Receive+0x84>
 800a0a8:	2301      	movs	r3, #1
 800a0aa:	75fb      	strb	r3, [r7, #23]
 800a0ac:	e0c1      	b.n	800a232 <HAL_SPI_Receive+0x208>
 800a0ae:	68fb      	ldr	r3, [r7, #12]
 800a0b0:	2204      	movs	r2, #4
 800a0b2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800a0b6:	68fb      	ldr	r3, [r7, #12]
 800a0b8:	2200      	movs	r2, #0
 800a0ba:	655a      	str	r2, [r3, #84]	; 0x54
 800a0bc:	68fb      	ldr	r3, [r7, #12]
 800a0be:	68ba      	ldr	r2, [r7, #8]
 800a0c0:	639a      	str	r2, [r3, #56]	; 0x38
 800a0c2:	68fb      	ldr	r3, [r7, #12]
 800a0c4:	88fa      	ldrh	r2, [r7, #6]
 800a0c6:	879a      	strh	r2, [r3, #60]	; 0x3c
 800a0c8:	68fb      	ldr	r3, [r7, #12]
 800a0ca:	88fa      	ldrh	r2, [r7, #6]
 800a0cc:	87da      	strh	r2, [r3, #62]	; 0x3e
 800a0ce:	68fb      	ldr	r3, [r7, #12]
 800a0d0:	2200      	movs	r2, #0
 800a0d2:	631a      	str	r2, [r3, #48]	; 0x30
 800a0d4:	68fb      	ldr	r3, [r7, #12]
 800a0d6:	2200      	movs	r2, #0
 800a0d8:	869a      	strh	r2, [r3, #52]	; 0x34
 800a0da:	68fb      	ldr	r3, [r7, #12]
 800a0dc:	2200      	movs	r2, #0
 800a0de:	86da      	strh	r2, [r3, #54]	; 0x36
 800a0e0:	68fb      	ldr	r3, [r7, #12]
 800a0e2:	2200      	movs	r2, #0
 800a0e4:	641a      	str	r2, [r3, #64]	; 0x40
 800a0e6:	68fb      	ldr	r3, [r7, #12]
 800a0e8:	2200      	movs	r2, #0
 800a0ea:	645a      	str	r2, [r3, #68]	; 0x44
 800a0ec:	68fb      	ldr	r3, [r7, #12]
 800a0ee:	689b      	ldr	r3, [r3, #8]
 800a0f0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a0f4:	d10f      	bne.n	800a116 <HAL_SPI_Receive+0xec>
 800a0f6:	68fb      	ldr	r3, [r7, #12]
 800a0f8:	681b      	ldr	r3, [r3, #0]
 800a0fa:	681a      	ldr	r2, [r3, #0]
 800a0fc:	68fb      	ldr	r3, [r7, #12]
 800a0fe:	681b      	ldr	r3, [r3, #0]
 800a100:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a104:	601a      	str	r2, [r3, #0]
 800a106:	68fb      	ldr	r3, [r7, #12]
 800a108:	681b      	ldr	r3, [r3, #0]
 800a10a:	681a      	ldr	r2, [r3, #0]
 800a10c:	68fb      	ldr	r3, [r7, #12]
 800a10e:	681b      	ldr	r3, [r3, #0]
 800a110:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800a114:	601a      	str	r2, [r3, #0]
 800a116:	68fb      	ldr	r3, [r7, #12]
 800a118:	681b      	ldr	r3, [r3, #0]
 800a11a:	681b      	ldr	r3, [r3, #0]
 800a11c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a120:	2b40      	cmp	r3, #64	; 0x40
 800a122:	d007      	beq.n	800a134 <HAL_SPI_Receive+0x10a>
 800a124:	68fb      	ldr	r3, [r7, #12]
 800a126:	681b      	ldr	r3, [r3, #0]
 800a128:	681a      	ldr	r2, [r3, #0]
 800a12a:	68fb      	ldr	r3, [r7, #12]
 800a12c:	681b      	ldr	r3, [r3, #0]
 800a12e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a132:	601a      	str	r2, [r3, #0]
 800a134:	68fb      	ldr	r3, [r7, #12]
 800a136:	68db      	ldr	r3, [r3, #12]
 800a138:	2b00      	cmp	r3, #0
 800a13a:	d162      	bne.n	800a202 <HAL_SPI_Receive+0x1d8>
 800a13c:	e02e      	b.n	800a19c <HAL_SPI_Receive+0x172>
 800a13e:	68fb      	ldr	r3, [r7, #12]
 800a140:	681b      	ldr	r3, [r3, #0]
 800a142:	689b      	ldr	r3, [r3, #8]
 800a144:	f003 0301 	and.w	r3, r3, #1
 800a148:	2b01      	cmp	r3, #1
 800a14a:	d115      	bne.n	800a178 <HAL_SPI_Receive+0x14e>
 800a14c:	68fb      	ldr	r3, [r7, #12]
 800a14e:	681b      	ldr	r3, [r3, #0]
 800a150:	f103 020c 	add.w	r2, r3, #12
 800a154:	68fb      	ldr	r3, [r7, #12]
 800a156:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a158:	7812      	ldrb	r2, [r2, #0]
 800a15a:	b2d2      	uxtb	r2, r2
 800a15c:	701a      	strb	r2, [r3, #0]
 800a15e:	68fb      	ldr	r3, [r7, #12]
 800a160:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a162:	1c5a      	adds	r2, r3, #1
 800a164:	68fb      	ldr	r3, [r7, #12]
 800a166:	639a      	str	r2, [r3, #56]	; 0x38
 800a168:	68fb      	ldr	r3, [r7, #12]
 800a16a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800a16c:	b29b      	uxth	r3, r3
 800a16e:	3b01      	subs	r3, #1
 800a170:	b29a      	uxth	r2, r3
 800a172:	68fb      	ldr	r3, [r7, #12]
 800a174:	87da      	strh	r2, [r3, #62]	; 0x3e
 800a176:	e011      	b.n	800a19c <HAL_SPI_Receive+0x172>
 800a178:	f7fe fd06 	bl	8008b88 <HAL_GetTick>
 800a17c:	4602      	mov	r2, r0
 800a17e:	693b      	ldr	r3, [r7, #16]
 800a180:	1ad3      	subs	r3, r2, r3
 800a182:	683a      	ldr	r2, [r7, #0]
 800a184:	429a      	cmp	r2, r3
 800a186:	d803      	bhi.n	800a190 <HAL_SPI_Receive+0x166>
 800a188:	683b      	ldr	r3, [r7, #0]
 800a18a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a18e:	d102      	bne.n	800a196 <HAL_SPI_Receive+0x16c>
 800a190:	683b      	ldr	r3, [r7, #0]
 800a192:	2b00      	cmp	r3, #0
 800a194:	d102      	bne.n	800a19c <HAL_SPI_Receive+0x172>
 800a196:	2303      	movs	r3, #3
 800a198:	75fb      	strb	r3, [r7, #23]
 800a19a:	e04a      	b.n	800a232 <HAL_SPI_Receive+0x208>
 800a19c:	68fb      	ldr	r3, [r7, #12]
 800a19e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800a1a0:	b29b      	uxth	r3, r3
 800a1a2:	2b00      	cmp	r3, #0
 800a1a4:	d1cb      	bne.n	800a13e <HAL_SPI_Receive+0x114>
 800a1a6:	e031      	b.n	800a20c <HAL_SPI_Receive+0x1e2>
 800a1a8:	68fb      	ldr	r3, [r7, #12]
 800a1aa:	681b      	ldr	r3, [r3, #0]
 800a1ac:	689b      	ldr	r3, [r3, #8]
 800a1ae:	f003 0301 	and.w	r3, r3, #1
 800a1b2:	2b01      	cmp	r3, #1
 800a1b4:	d113      	bne.n	800a1de <HAL_SPI_Receive+0x1b4>
 800a1b6:	68fb      	ldr	r3, [r7, #12]
 800a1b8:	681b      	ldr	r3, [r3, #0]
 800a1ba:	68da      	ldr	r2, [r3, #12]
 800a1bc:	68fb      	ldr	r3, [r7, #12]
 800a1be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a1c0:	b292      	uxth	r2, r2
 800a1c2:	801a      	strh	r2, [r3, #0]
 800a1c4:	68fb      	ldr	r3, [r7, #12]
 800a1c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a1c8:	1c9a      	adds	r2, r3, #2
 800a1ca:	68fb      	ldr	r3, [r7, #12]
 800a1cc:	639a      	str	r2, [r3, #56]	; 0x38
 800a1ce:	68fb      	ldr	r3, [r7, #12]
 800a1d0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800a1d2:	b29b      	uxth	r3, r3
 800a1d4:	3b01      	subs	r3, #1
 800a1d6:	b29a      	uxth	r2, r3
 800a1d8:	68fb      	ldr	r3, [r7, #12]
 800a1da:	87da      	strh	r2, [r3, #62]	; 0x3e
 800a1dc:	e011      	b.n	800a202 <HAL_SPI_Receive+0x1d8>
 800a1de:	f7fe fcd3 	bl	8008b88 <HAL_GetTick>
 800a1e2:	4602      	mov	r2, r0
 800a1e4:	693b      	ldr	r3, [r7, #16]
 800a1e6:	1ad3      	subs	r3, r2, r3
 800a1e8:	683a      	ldr	r2, [r7, #0]
 800a1ea:	429a      	cmp	r2, r3
 800a1ec:	d803      	bhi.n	800a1f6 <HAL_SPI_Receive+0x1cc>
 800a1ee:	683b      	ldr	r3, [r7, #0]
 800a1f0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a1f4:	d102      	bne.n	800a1fc <HAL_SPI_Receive+0x1d2>
 800a1f6:	683b      	ldr	r3, [r7, #0]
 800a1f8:	2b00      	cmp	r3, #0
 800a1fa:	d102      	bne.n	800a202 <HAL_SPI_Receive+0x1d8>
 800a1fc:	2303      	movs	r3, #3
 800a1fe:	75fb      	strb	r3, [r7, #23]
 800a200:	e017      	b.n	800a232 <HAL_SPI_Receive+0x208>
 800a202:	68fb      	ldr	r3, [r7, #12]
 800a204:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800a206:	b29b      	uxth	r3, r3
 800a208:	2b00      	cmp	r3, #0
 800a20a:	d1cd      	bne.n	800a1a8 <HAL_SPI_Receive+0x17e>
 800a20c:	693a      	ldr	r2, [r7, #16]
 800a20e:	6839      	ldr	r1, [r7, #0]
 800a210:	68f8      	ldr	r0, [r7, #12]
 800a212:	f000 fa45 	bl	800a6a0 <SPI_EndRxTransaction>
 800a216:	4603      	mov	r3, r0
 800a218:	2b00      	cmp	r3, #0
 800a21a:	d002      	beq.n	800a222 <HAL_SPI_Receive+0x1f8>
 800a21c:	68fb      	ldr	r3, [r7, #12]
 800a21e:	2220      	movs	r2, #32
 800a220:	655a      	str	r2, [r3, #84]	; 0x54
 800a222:	68fb      	ldr	r3, [r7, #12]
 800a224:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a226:	2b00      	cmp	r3, #0
 800a228:	d002      	beq.n	800a230 <HAL_SPI_Receive+0x206>
 800a22a:	2301      	movs	r3, #1
 800a22c:	75fb      	strb	r3, [r7, #23]
 800a22e:	e000      	b.n	800a232 <HAL_SPI_Receive+0x208>
 800a230:	bf00      	nop
 800a232:	68fb      	ldr	r3, [r7, #12]
 800a234:	2201      	movs	r2, #1
 800a236:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800a23a:	68fb      	ldr	r3, [r7, #12]
 800a23c:	2200      	movs	r2, #0
 800a23e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800a242:	7dfb      	ldrb	r3, [r7, #23]
 800a244:	4618      	mov	r0, r3
 800a246:	3718      	adds	r7, #24
 800a248:	46bd      	mov	sp, r7
 800a24a:	bd80      	pop	{r7, pc}

0800a24c <HAL_SPI_TransmitReceive>:
 800a24c:	b580      	push	{r7, lr}
 800a24e:	b08c      	sub	sp, #48	; 0x30
 800a250:	af00      	add	r7, sp, #0
 800a252:	60f8      	str	r0, [r7, #12]
 800a254:	60b9      	str	r1, [r7, #8]
 800a256:	607a      	str	r2, [r7, #4]
 800a258:	807b      	strh	r3, [r7, #2]
 800a25a:	2301      	movs	r3, #1
 800a25c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a25e:	2300      	movs	r3, #0
 800a260:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800a264:	68fb      	ldr	r3, [r7, #12]
 800a266:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800a26a:	2b01      	cmp	r3, #1
 800a26c:	d101      	bne.n	800a272 <HAL_SPI_TransmitReceive+0x26>
 800a26e:	2302      	movs	r3, #2
 800a270:	e18a      	b.n	800a588 <HAL_SPI_TransmitReceive+0x33c>
 800a272:	68fb      	ldr	r3, [r7, #12]
 800a274:	2201      	movs	r2, #1
 800a276:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800a27a:	f7fe fc85 	bl	8008b88 <HAL_GetTick>
 800a27e:	6278      	str	r0, [r7, #36]	; 0x24
 800a280:	68fb      	ldr	r3, [r7, #12]
 800a282:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800a286:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800a28a:	68fb      	ldr	r3, [r7, #12]
 800a28c:	685b      	ldr	r3, [r3, #4]
 800a28e:	61fb      	str	r3, [r7, #28]
 800a290:	887b      	ldrh	r3, [r7, #2]
 800a292:	837b      	strh	r3, [r7, #26]
 800a294:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800a298:	2b01      	cmp	r3, #1
 800a29a:	d00f      	beq.n	800a2bc <HAL_SPI_TransmitReceive+0x70>
 800a29c:	69fb      	ldr	r3, [r7, #28]
 800a29e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a2a2:	d107      	bne.n	800a2b4 <HAL_SPI_TransmitReceive+0x68>
 800a2a4:	68fb      	ldr	r3, [r7, #12]
 800a2a6:	689b      	ldr	r3, [r3, #8]
 800a2a8:	2b00      	cmp	r3, #0
 800a2aa:	d103      	bne.n	800a2b4 <HAL_SPI_TransmitReceive+0x68>
 800a2ac:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800a2b0:	2b04      	cmp	r3, #4
 800a2b2:	d003      	beq.n	800a2bc <HAL_SPI_TransmitReceive+0x70>
 800a2b4:	2302      	movs	r3, #2
 800a2b6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800a2ba:	e15b      	b.n	800a574 <HAL_SPI_TransmitReceive+0x328>
 800a2bc:	68bb      	ldr	r3, [r7, #8]
 800a2be:	2b00      	cmp	r3, #0
 800a2c0:	d005      	beq.n	800a2ce <HAL_SPI_TransmitReceive+0x82>
 800a2c2:	687b      	ldr	r3, [r7, #4]
 800a2c4:	2b00      	cmp	r3, #0
 800a2c6:	d002      	beq.n	800a2ce <HAL_SPI_TransmitReceive+0x82>
 800a2c8:	887b      	ldrh	r3, [r7, #2]
 800a2ca:	2b00      	cmp	r3, #0
 800a2cc:	d103      	bne.n	800a2d6 <HAL_SPI_TransmitReceive+0x8a>
 800a2ce:	2301      	movs	r3, #1
 800a2d0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800a2d4:	e14e      	b.n	800a574 <HAL_SPI_TransmitReceive+0x328>
 800a2d6:	68fb      	ldr	r3, [r7, #12]
 800a2d8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800a2dc:	b2db      	uxtb	r3, r3
 800a2de:	2b04      	cmp	r3, #4
 800a2e0:	d003      	beq.n	800a2ea <HAL_SPI_TransmitReceive+0x9e>
 800a2e2:	68fb      	ldr	r3, [r7, #12]
 800a2e4:	2205      	movs	r2, #5
 800a2e6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800a2ea:	68fb      	ldr	r3, [r7, #12]
 800a2ec:	2200      	movs	r2, #0
 800a2ee:	655a      	str	r2, [r3, #84]	; 0x54
 800a2f0:	68fb      	ldr	r3, [r7, #12]
 800a2f2:	687a      	ldr	r2, [r7, #4]
 800a2f4:	639a      	str	r2, [r3, #56]	; 0x38
 800a2f6:	68fb      	ldr	r3, [r7, #12]
 800a2f8:	887a      	ldrh	r2, [r7, #2]
 800a2fa:	87da      	strh	r2, [r3, #62]	; 0x3e
 800a2fc:	68fb      	ldr	r3, [r7, #12]
 800a2fe:	887a      	ldrh	r2, [r7, #2]
 800a300:	879a      	strh	r2, [r3, #60]	; 0x3c
 800a302:	68fb      	ldr	r3, [r7, #12]
 800a304:	68ba      	ldr	r2, [r7, #8]
 800a306:	631a      	str	r2, [r3, #48]	; 0x30
 800a308:	68fb      	ldr	r3, [r7, #12]
 800a30a:	887a      	ldrh	r2, [r7, #2]
 800a30c:	86da      	strh	r2, [r3, #54]	; 0x36
 800a30e:	68fb      	ldr	r3, [r7, #12]
 800a310:	887a      	ldrh	r2, [r7, #2]
 800a312:	869a      	strh	r2, [r3, #52]	; 0x34
 800a314:	68fb      	ldr	r3, [r7, #12]
 800a316:	2200      	movs	r2, #0
 800a318:	641a      	str	r2, [r3, #64]	; 0x40
 800a31a:	68fb      	ldr	r3, [r7, #12]
 800a31c:	2200      	movs	r2, #0
 800a31e:	645a      	str	r2, [r3, #68]	; 0x44
 800a320:	68fb      	ldr	r3, [r7, #12]
 800a322:	681b      	ldr	r3, [r3, #0]
 800a324:	681b      	ldr	r3, [r3, #0]
 800a326:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a32a:	2b40      	cmp	r3, #64	; 0x40
 800a32c:	d007      	beq.n	800a33e <HAL_SPI_TransmitReceive+0xf2>
 800a32e:	68fb      	ldr	r3, [r7, #12]
 800a330:	681b      	ldr	r3, [r3, #0]
 800a332:	681a      	ldr	r2, [r3, #0]
 800a334:	68fb      	ldr	r3, [r7, #12]
 800a336:	681b      	ldr	r3, [r3, #0]
 800a338:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a33c:	601a      	str	r2, [r3, #0]
 800a33e:	68fb      	ldr	r3, [r7, #12]
 800a340:	68db      	ldr	r3, [r3, #12]
 800a342:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a346:	d178      	bne.n	800a43a <HAL_SPI_TransmitReceive+0x1ee>
 800a348:	68fb      	ldr	r3, [r7, #12]
 800a34a:	685b      	ldr	r3, [r3, #4]
 800a34c:	2b00      	cmp	r3, #0
 800a34e:	d002      	beq.n	800a356 <HAL_SPI_TransmitReceive+0x10a>
 800a350:	8b7b      	ldrh	r3, [r7, #26]
 800a352:	2b01      	cmp	r3, #1
 800a354:	d166      	bne.n	800a424 <HAL_SPI_TransmitReceive+0x1d8>
 800a356:	68fb      	ldr	r3, [r7, #12]
 800a358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a35a:	881a      	ldrh	r2, [r3, #0]
 800a35c:	68fb      	ldr	r3, [r7, #12]
 800a35e:	681b      	ldr	r3, [r3, #0]
 800a360:	60da      	str	r2, [r3, #12]
 800a362:	68fb      	ldr	r3, [r7, #12]
 800a364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a366:	1c9a      	adds	r2, r3, #2
 800a368:	68fb      	ldr	r3, [r7, #12]
 800a36a:	631a      	str	r2, [r3, #48]	; 0x30
 800a36c:	68fb      	ldr	r3, [r7, #12]
 800a36e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800a370:	b29b      	uxth	r3, r3
 800a372:	3b01      	subs	r3, #1
 800a374:	b29a      	uxth	r2, r3
 800a376:	68fb      	ldr	r3, [r7, #12]
 800a378:	86da      	strh	r2, [r3, #54]	; 0x36
 800a37a:	e053      	b.n	800a424 <HAL_SPI_TransmitReceive+0x1d8>
 800a37c:	68fb      	ldr	r3, [r7, #12]
 800a37e:	681b      	ldr	r3, [r3, #0]
 800a380:	689b      	ldr	r3, [r3, #8]
 800a382:	f003 0302 	and.w	r3, r3, #2
 800a386:	2b02      	cmp	r3, #2
 800a388:	d11b      	bne.n	800a3c2 <HAL_SPI_TransmitReceive+0x176>
 800a38a:	68fb      	ldr	r3, [r7, #12]
 800a38c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800a38e:	b29b      	uxth	r3, r3
 800a390:	2b00      	cmp	r3, #0
 800a392:	d016      	beq.n	800a3c2 <HAL_SPI_TransmitReceive+0x176>
 800a394:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a396:	2b01      	cmp	r3, #1
 800a398:	d113      	bne.n	800a3c2 <HAL_SPI_TransmitReceive+0x176>
 800a39a:	68fb      	ldr	r3, [r7, #12]
 800a39c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a39e:	881a      	ldrh	r2, [r3, #0]
 800a3a0:	68fb      	ldr	r3, [r7, #12]
 800a3a2:	681b      	ldr	r3, [r3, #0]
 800a3a4:	60da      	str	r2, [r3, #12]
 800a3a6:	68fb      	ldr	r3, [r7, #12]
 800a3a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a3aa:	1c9a      	adds	r2, r3, #2
 800a3ac:	68fb      	ldr	r3, [r7, #12]
 800a3ae:	631a      	str	r2, [r3, #48]	; 0x30
 800a3b0:	68fb      	ldr	r3, [r7, #12]
 800a3b2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800a3b4:	b29b      	uxth	r3, r3
 800a3b6:	3b01      	subs	r3, #1
 800a3b8:	b29a      	uxth	r2, r3
 800a3ba:	68fb      	ldr	r3, [r7, #12]
 800a3bc:	86da      	strh	r2, [r3, #54]	; 0x36
 800a3be:	2300      	movs	r3, #0
 800a3c0:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a3c2:	68fb      	ldr	r3, [r7, #12]
 800a3c4:	681b      	ldr	r3, [r3, #0]
 800a3c6:	689b      	ldr	r3, [r3, #8]
 800a3c8:	f003 0301 	and.w	r3, r3, #1
 800a3cc:	2b01      	cmp	r3, #1
 800a3ce:	d119      	bne.n	800a404 <HAL_SPI_TransmitReceive+0x1b8>
 800a3d0:	68fb      	ldr	r3, [r7, #12]
 800a3d2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800a3d4:	b29b      	uxth	r3, r3
 800a3d6:	2b00      	cmp	r3, #0
 800a3d8:	d014      	beq.n	800a404 <HAL_SPI_TransmitReceive+0x1b8>
 800a3da:	68fb      	ldr	r3, [r7, #12]
 800a3dc:	681b      	ldr	r3, [r3, #0]
 800a3de:	68da      	ldr	r2, [r3, #12]
 800a3e0:	68fb      	ldr	r3, [r7, #12]
 800a3e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a3e4:	b292      	uxth	r2, r2
 800a3e6:	801a      	strh	r2, [r3, #0]
 800a3e8:	68fb      	ldr	r3, [r7, #12]
 800a3ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a3ec:	1c9a      	adds	r2, r3, #2
 800a3ee:	68fb      	ldr	r3, [r7, #12]
 800a3f0:	639a      	str	r2, [r3, #56]	; 0x38
 800a3f2:	68fb      	ldr	r3, [r7, #12]
 800a3f4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800a3f6:	b29b      	uxth	r3, r3
 800a3f8:	3b01      	subs	r3, #1
 800a3fa:	b29a      	uxth	r2, r3
 800a3fc:	68fb      	ldr	r3, [r7, #12]
 800a3fe:	87da      	strh	r2, [r3, #62]	; 0x3e
 800a400:	2301      	movs	r3, #1
 800a402:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a404:	f7fe fbc0 	bl	8008b88 <HAL_GetTick>
 800a408:	4602      	mov	r2, r0
 800a40a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a40c:	1ad3      	subs	r3, r2, r3
 800a40e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a410:	429a      	cmp	r2, r3
 800a412:	d807      	bhi.n	800a424 <HAL_SPI_TransmitReceive+0x1d8>
 800a414:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a416:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a41a:	d003      	beq.n	800a424 <HAL_SPI_TransmitReceive+0x1d8>
 800a41c:	2303      	movs	r3, #3
 800a41e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800a422:	e0a7      	b.n	800a574 <HAL_SPI_TransmitReceive+0x328>
 800a424:	68fb      	ldr	r3, [r7, #12]
 800a426:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800a428:	b29b      	uxth	r3, r3
 800a42a:	2b00      	cmp	r3, #0
 800a42c:	d1a6      	bne.n	800a37c <HAL_SPI_TransmitReceive+0x130>
 800a42e:	68fb      	ldr	r3, [r7, #12]
 800a430:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800a432:	b29b      	uxth	r3, r3
 800a434:	2b00      	cmp	r3, #0
 800a436:	d1a1      	bne.n	800a37c <HAL_SPI_TransmitReceive+0x130>
 800a438:	e07c      	b.n	800a534 <HAL_SPI_TransmitReceive+0x2e8>
 800a43a:	68fb      	ldr	r3, [r7, #12]
 800a43c:	685b      	ldr	r3, [r3, #4]
 800a43e:	2b00      	cmp	r3, #0
 800a440:	d002      	beq.n	800a448 <HAL_SPI_TransmitReceive+0x1fc>
 800a442:	8b7b      	ldrh	r3, [r7, #26]
 800a444:	2b01      	cmp	r3, #1
 800a446:	d16b      	bne.n	800a520 <HAL_SPI_TransmitReceive+0x2d4>
 800a448:	68fb      	ldr	r3, [r7, #12]
 800a44a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a44c:	68fb      	ldr	r3, [r7, #12]
 800a44e:	681b      	ldr	r3, [r3, #0]
 800a450:	330c      	adds	r3, #12
 800a452:	7812      	ldrb	r2, [r2, #0]
 800a454:	701a      	strb	r2, [r3, #0]
 800a456:	68fb      	ldr	r3, [r7, #12]
 800a458:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a45a:	1c5a      	adds	r2, r3, #1
 800a45c:	68fb      	ldr	r3, [r7, #12]
 800a45e:	631a      	str	r2, [r3, #48]	; 0x30
 800a460:	68fb      	ldr	r3, [r7, #12]
 800a462:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800a464:	b29b      	uxth	r3, r3
 800a466:	3b01      	subs	r3, #1
 800a468:	b29a      	uxth	r2, r3
 800a46a:	68fb      	ldr	r3, [r7, #12]
 800a46c:	86da      	strh	r2, [r3, #54]	; 0x36
 800a46e:	e057      	b.n	800a520 <HAL_SPI_TransmitReceive+0x2d4>
 800a470:	68fb      	ldr	r3, [r7, #12]
 800a472:	681b      	ldr	r3, [r3, #0]
 800a474:	689b      	ldr	r3, [r3, #8]
 800a476:	f003 0302 	and.w	r3, r3, #2
 800a47a:	2b02      	cmp	r3, #2
 800a47c:	d11c      	bne.n	800a4b8 <HAL_SPI_TransmitReceive+0x26c>
 800a47e:	68fb      	ldr	r3, [r7, #12]
 800a480:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800a482:	b29b      	uxth	r3, r3
 800a484:	2b00      	cmp	r3, #0
 800a486:	d017      	beq.n	800a4b8 <HAL_SPI_TransmitReceive+0x26c>
 800a488:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a48a:	2b01      	cmp	r3, #1
 800a48c:	d114      	bne.n	800a4b8 <HAL_SPI_TransmitReceive+0x26c>
 800a48e:	68fb      	ldr	r3, [r7, #12]
 800a490:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a492:	68fb      	ldr	r3, [r7, #12]
 800a494:	681b      	ldr	r3, [r3, #0]
 800a496:	330c      	adds	r3, #12
 800a498:	7812      	ldrb	r2, [r2, #0]
 800a49a:	701a      	strb	r2, [r3, #0]
 800a49c:	68fb      	ldr	r3, [r7, #12]
 800a49e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a4a0:	1c5a      	adds	r2, r3, #1
 800a4a2:	68fb      	ldr	r3, [r7, #12]
 800a4a4:	631a      	str	r2, [r3, #48]	; 0x30
 800a4a6:	68fb      	ldr	r3, [r7, #12]
 800a4a8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800a4aa:	b29b      	uxth	r3, r3
 800a4ac:	3b01      	subs	r3, #1
 800a4ae:	b29a      	uxth	r2, r3
 800a4b0:	68fb      	ldr	r3, [r7, #12]
 800a4b2:	86da      	strh	r2, [r3, #54]	; 0x36
 800a4b4:	2300      	movs	r3, #0
 800a4b6:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a4b8:	68fb      	ldr	r3, [r7, #12]
 800a4ba:	681b      	ldr	r3, [r3, #0]
 800a4bc:	689b      	ldr	r3, [r3, #8]
 800a4be:	f003 0301 	and.w	r3, r3, #1
 800a4c2:	2b01      	cmp	r3, #1
 800a4c4:	d119      	bne.n	800a4fa <HAL_SPI_TransmitReceive+0x2ae>
 800a4c6:	68fb      	ldr	r3, [r7, #12]
 800a4c8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800a4ca:	b29b      	uxth	r3, r3
 800a4cc:	2b00      	cmp	r3, #0
 800a4ce:	d014      	beq.n	800a4fa <HAL_SPI_TransmitReceive+0x2ae>
 800a4d0:	68fb      	ldr	r3, [r7, #12]
 800a4d2:	681b      	ldr	r3, [r3, #0]
 800a4d4:	68da      	ldr	r2, [r3, #12]
 800a4d6:	68fb      	ldr	r3, [r7, #12]
 800a4d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a4da:	b2d2      	uxtb	r2, r2
 800a4dc:	701a      	strb	r2, [r3, #0]
 800a4de:	68fb      	ldr	r3, [r7, #12]
 800a4e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a4e2:	1c5a      	adds	r2, r3, #1
 800a4e4:	68fb      	ldr	r3, [r7, #12]
 800a4e6:	639a      	str	r2, [r3, #56]	; 0x38
 800a4e8:	68fb      	ldr	r3, [r7, #12]
 800a4ea:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800a4ec:	b29b      	uxth	r3, r3
 800a4ee:	3b01      	subs	r3, #1
 800a4f0:	b29a      	uxth	r2, r3
 800a4f2:	68fb      	ldr	r3, [r7, #12]
 800a4f4:	87da      	strh	r2, [r3, #62]	; 0x3e
 800a4f6:	2301      	movs	r3, #1
 800a4f8:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a4fa:	f7fe fb45 	bl	8008b88 <HAL_GetTick>
 800a4fe:	4602      	mov	r2, r0
 800a500:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a502:	1ad3      	subs	r3, r2, r3
 800a504:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a506:	429a      	cmp	r2, r3
 800a508:	d803      	bhi.n	800a512 <HAL_SPI_TransmitReceive+0x2c6>
 800a50a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a50c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a510:	d102      	bne.n	800a518 <HAL_SPI_TransmitReceive+0x2cc>
 800a512:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a514:	2b00      	cmp	r3, #0
 800a516:	d103      	bne.n	800a520 <HAL_SPI_TransmitReceive+0x2d4>
 800a518:	2303      	movs	r3, #3
 800a51a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800a51e:	e029      	b.n	800a574 <HAL_SPI_TransmitReceive+0x328>
 800a520:	68fb      	ldr	r3, [r7, #12]
 800a522:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800a524:	b29b      	uxth	r3, r3
 800a526:	2b00      	cmp	r3, #0
 800a528:	d1a2      	bne.n	800a470 <HAL_SPI_TransmitReceive+0x224>
 800a52a:	68fb      	ldr	r3, [r7, #12]
 800a52c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800a52e:	b29b      	uxth	r3, r3
 800a530:	2b00      	cmp	r3, #0
 800a532:	d19d      	bne.n	800a470 <HAL_SPI_TransmitReceive+0x224>
 800a534:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a536:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800a538:	68f8      	ldr	r0, [r7, #12]
 800a53a:	f000 f917 	bl	800a76c <SPI_EndRxTxTransaction>
 800a53e:	4603      	mov	r3, r0
 800a540:	2b00      	cmp	r3, #0
 800a542:	d006      	beq.n	800a552 <HAL_SPI_TransmitReceive+0x306>
 800a544:	2301      	movs	r3, #1
 800a546:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800a54a:	68fb      	ldr	r3, [r7, #12]
 800a54c:	2220      	movs	r2, #32
 800a54e:	655a      	str	r2, [r3, #84]	; 0x54
 800a550:	e010      	b.n	800a574 <HAL_SPI_TransmitReceive+0x328>
 800a552:	68fb      	ldr	r3, [r7, #12]
 800a554:	689b      	ldr	r3, [r3, #8]
 800a556:	2b00      	cmp	r3, #0
 800a558:	d10b      	bne.n	800a572 <HAL_SPI_TransmitReceive+0x326>
 800a55a:	2300      	movs	r3, #0
 800a55c:	617b      	str	r3, [r7, #20]
 800a55e:	68fb      	ldr	r3, [r7, #12]
 800a560:	681b      	ldr	r3, [r3, #0]
 800a562:	68db      	ldr	r3, [r3, #12]
 800a564:	617b      	str	r3, [r7, #20]
 800a566:	68fb      	ldr	r3, [r7, #12]
 800a568:	681b      	ldr	r3, [r3, #0]
 800a56a:	689b      	ldr	r3, [r3, #8]
 800a56c:	617b      	str	r3, [r7, #20]
 800a56e:	697b      	ldr	r3, [r7, #20]
 800a570:	e000      	b.n	800a574 <HAL_SPI_TransmitReceive+0x328>
 800a572:	bf00      	nop
 800a574:	68fb      	ldr	r3, [r7, #12]
 800a576:	2201      	movs	r2, #1
 800a578:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800a57c:	68fb      	ldr	r3, [r7, #12]
 800a57e:	2200      	movs	r2, #0
 800a580:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800a584:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800a588:	4618      	mov	r0, r3
 800a58a:	3730      	adds	r7, #48	; 0x30
 800a58c:	46bd      	mov	sp, r7
 800a58e:	bd80      	pop	{r7, pc}

0800a590 <SPI_WaitFlagStateUntilTimeout>:
 800a590:	b580      	push	{r7, lr}
 800a592:	b088      	sub	sp, #32
 800a594:	af00      	add	r7, sp, #0
 800a596:	60f8      	str	r0, [r7, #12]
 800a598:	60b9      	str	r1, [r7, #8]
 800a59a:	603b      	str	r3, [r7, #0]
 800a59c:	4613      	mov	r3, r2
 800a59e:	71fb      	strb	r3, [r7, #7]
 800a5a0:	f7fe faf2 	bl	8008b88 <HAL_GetTick>
 800a5a4:	4602      	mov	r2, r0
 800a5a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a5a8:	1a9b      	subs	r3, r3, r2
 800a5aa:	683a      	ldr	r2, [r7, #0]
 800a5ac:	4413      	add	r3, r2
 800a5ae:	61fb      	str	r3, [r7, #28]
 800a5b0:	f7fe faea 	bl	8008b88 <HAL_GetTick>
 800a5b4:	61b8      	str	r0, [r7, #24]
 800a5b6:	4b39      	ldr	r3, [pc, #228]	; (800a69c <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800a5b8:	681b      	ldr	r3, [r3, #0]
 800a5ba:	015b      	lsls	r3, r3, #5
 800a5bc:	0d1b      	lsrs	r3, r3, #20
 800a5be:	69fa      	ldr	r2, [r7, #28]
 800a5c0:	fb02 f303 	mul.w	r3, r2, r3
 800a5c4:	617b      	str	r3, [r7, #20]
 800a5c6:	e054      	b.n	800a672 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800a5c8:	683b      	ldr	r3, [r7, #0]
 800a5ca:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a5ce:	d050      	beq.n	800a672 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800a5d0:	f7fe fada 	bl	8008b88 <HAL_GetTick>
 800a5d4:	4602      	mov	r2, r0
 800a5d6:	69bb      	ldr	r3, [r7, #24]
 800a5d8:	1ad3      	subs	r3, r2, r3
 800a5da:	69fa      	ldr	r2, [r7, #28]
 800a5dc:	429a      	cmp	r2, r3
 800a5de:	d902      	bls.n	800a5e6 <SPI_WaitFlagStateUntilTimeout+0x56>
 800a5e0:	69fb      	ldr	r3, [r7, #28]
 800a5e2:	2b00      	cmp	r3, #0
 800a5e4:	d13d      	bne.n	800a662 <SPI_WaitFlagStateUntilTimeout+0xd2>
 800a5e6:	68fb      	ldr	r3, [r7, #12]
 800a5e8:	681b      	ldr	r3, [r3, #0]
 800a5ea:	685a      	ldr	r2, [r3, #4]
 800a5ec:	68fb      	ldr	r3, [r7, #12]
 800a5ee:	681b      	ldr	r3, [r3, #0]
 800a5f0:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800a5f4:	605a      	str	r2, [r3, #4]
 800a5f6:	68fb      	ldr	r3, [r7, #12]
 800a5f8:	685b      	ldr	r3, [r3, #4]
 800a5fa:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a5fe:	d111      	bne.n	800a624 <SPI_WaitFlagStateUntilTimeout+0x94>
 800a600:	68fb      	ldr	r3, [r7, #12]
 800a602:	689b      	ldr	r3, [r3, #8]
 800a604:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a608:	d004      	beq.n	800a614 <SPI_WaitFlagStateUntilTimeout+0x84>
 800a60a:	68fb      	ldr	r3, [r7, #12]
 800a60c:	689b      	ldr	r3, [r3, #8]
 800a60e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a612:	d107      	bne.n	800a624 <SPI_WaitFlagStateUntilTimeout+0x94>
 800a614:	68fb      	ldr	r3, [r7, #12]
 800a616:	681b      	ldr	r3, [r3, #0]
 800a618:	681a      	ldr	r2, [r3, #0]
 800a61a:	68fb      	ldr	r3, [r7, #12]
 800a61c:	681b      	ldr	r3, [r3, #0]
 800a61e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a622:	601a      	str	r2, [r3, #0]
 800a624:	68fb      	ldr	r3, [r7, #12]
 800a626:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a628:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800a62c:	d10f      	bne.n	800a64e <SPI_WaitFlagStateUntilTimeout+0xbe>
 800a62e:	68fb      	ldr	r3, [r7, #12]
 800a630:	681b      	ldr	r3, [r3, #0]
 800a632:	681a      	ldr	r2, [r3, #0]
 800a634:	68fb      	ldr	r3, [r7, #12]
 800a636:	681b      	ldr	r3, [r3, #0]
 800a638:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a63c:	601a      	str	r2, [r3, #0]
 800a63e:	68fb      	ldr	r3, [r7, #12]
 800a640:	681b      	ldr	r3, [r3, #0]
 800a642:	681a      	ldr	r2, [r3, #0]
 800a644:	68fb      	ldr	r3, [r7, #12]
 800a646:	681b      	ldr	r3, [r3, #0]
 800a648:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a64c:	601a      	str	r2, [r3, #0]
 800a64e:	68fb      	ldr	r3, [r7, #12]
 800a650:	2201      	movs	r2, #1
 800a652:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800a656:	68fb      	ldr	r3, [r7, #12]
 800a658:	2200      	movs	r2, #0
 800a65a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800a65e:	2303      	movs	r3, #3
 800a660:	e017      	b.n	800a692 <SPI_WaitFlagStateUntilTimeout+0x102>
 800a662:	697b      	ldr	r3, [r7, #20]
 800a664:	2b00      	cmp	r3, #0
 800a666:	d101      	bne.n	800a66c <SPI_WaitFlagStateUntilTimeout+0xdc>
 800a668:	2300      	movs	r3, #0
 800a66a:	61fb      	str	r3, [r7, #28]
 800a66c:	697b      	ldr	r3, [r7, #20]
 800a66e:	3b01      	subs	r3, #1
 800a670:	617b      	str	r3, [r7, #20]
 800a672:	68fb      	ldr	r3, [r7, #12]
 800a674:	681b      	ldr	r3, [r3, #0]
 800a676:	689a      	ldr	r2, [r3, #8]
 800a678:	68bb      	ldr	r3, [r7, #8]
 800a67a:	4013      	ands	r3, r2
 800a67c:	68ba      	ldr	r2, [r7, #8]
 800a67e:	429a      	cmp	r2, r3
 800a680:	bf0c      	ite	eq
 800a682:	2301      	moveq	r3, #1
 800a684:	2300      	movne	r3, #0
 800a686:	b2db      	uxtb	r3, r3
 800a688:	461a      	mov	r2, r3
 800a68a:	79fb      	ldrb	r3, [r7, #7]
 800a68c:	429a      	cmp	r2, r3
 800a68e:	d19b      	bne.n	800a5c8 <SPI_WaitFlagStateUntilTimeout+0x38>
 800a690:	2300      	movs	r3, #0
 800a692:	4618      	mov	r0, r3
 800a694:	3720      	adds	r7, #32
 800a696:	46bd      	mov	sp, r7
 800a698:	bd80      	pop	{r7, pc}
 800a69a:	bf00      	nop
 800a69c:	20000194 	.word	0x20000194

0800a6a0 <SPI_EndRxTransaction>:
 800a6a0:	b580      	push	{r7, lr}
 800a6a2:	b086      	sub	sp, #24
 800a6a4:	af02      	add	r7, sp, #8
 800a6a6:	60f8      	str	r0, [r7, #12]
 800a6a8:	60b9      	str	r1, [r7, #8]
 800a6aa:	607a      	str	r2, [r7, #4]
 800a6ac:	68fb      	ldr	r3, [r7, #12]
 800a6ae:	685b      	ldr	r3, [r3, #4]
 800a6b0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a6b4:	d111      	bne.n	800a6da <SPI_EndRxTransaction+0x3a>
 800a6b6:	68fb      	ldr	r3, [r7, #12]
 800a6b8:	689b      	ldr	r3, [r3, #8]
 800a6ba:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a6be:	d004      	beq.n	800a6ca <SPI_EndRxTransaction+0x2a>
 800a6c0:	68fb      	ldr	r3, [r7, #12]
 800a6c2:	689b      	ldr	r3, [r3, #8]
 800a6c4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a6c8:	d107      	bne.n	800a6da <SPI_EndRxTransaction+0x3a>
 800a6ca:	68fb      	ldr	r3, [r7, #12]
 800a6cc:	681b      	ldr	r3, [r3, #0]
 800a6ce:	681a      	ldr	r2, [r3, #0]
 800a6d0:	68fb      	ldr	r3, [r7, #12]
 800a6d2:	681b      	ldr	r3, [r3, #0]
 800a6d4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a6d8:	601a      	str	r2, [r3, #0]
 800a6da:	68fb      	ldr	r3, [r7, #12]
 800a6dc:	685b      	ldr	r3, [r3, #4]
 800a6de:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a6e2:	d12a      	bne.n	800a73a <SPI_EndRxTransaction+0x9a>
 800a6e4:	68fb      	ldr	r3, [r7, #12]
 800a6e6:	689b      	ldr	r3, [r3, #8]
 800a6e8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a6ec:	d012      	beq.n	800a714 <SPI_EndRxTransaction+0x74>
 800a6ee:	687b      	ldr	r3, [r7, #4]
 800a6f0:	9300      	str	r3, [sp, #0]
 800a6f2:	68bb      	ldr	r3, [r7, #8]
 800a6f4:	2200      	movs	r2, #0
 800a6f6:	2180      	movs	r1, #128	; 0x80
 800a6f8:	68f8      	ldr	r0, [r7, #12]
 800a6fa:	f7ff ff49 	bl	800a590 <SPI_WaitFlagStateUntilTimeout>
 800a6fe:	4603      	mov	r3, r0
 800a700:	2b00      	cmp	r3, #0
 800a702:	d02d      	beq.n	800a760 <SPI_EndRxTransaction+0xc0>
 800a704:	68fb      	ldr	r3, [r7, #12]
 800a706:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a708:	f043 0220 	orr.w	r2, r3, #32
 800a70c:	68fb      	ldr	r3, [r7, #12]
 800a70e:	655a      	str	r2, [r3, #84]	; 0x54
 800a710:	2303      	movs	r3, #3
 800a712:	e026      	b.n	800a762 <SPI_EndRxTransaction+0xc2>
 800a714:	687b      	ldr	r3, [r7, #4]
 800a716:	9300      	str	r3, [sp, #0]
 800a718:	68bb      	ldr	r3, [r7, #8]
 800a71a:	2200      	movs	r2, #0
 800a71c:	2101      	movs	r1, #1
 800a71e:	68f8      	ldr	r0, [r7, #12]
 800a720:	f7ff ff36 	bl	800a590 <SPI_WaitFlagStateUntilTimeout>
 800a724:	4603      	mov	r3, r0
 800a726:	2b00      	cmp	r3, #0
 800a728:	d01a      	beq.n	800a760 <SPI_EndRxTransaction+0xc0>
 800a72a:	68fb      	ldr	r3, [r7, #12]
 800a72c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a72e:	f043 0220 	orr.w	r2, r3, #32
 800a732:	68fb      	ldr	r3, [r7, #12]
 800a734:	655a      	str	r2, [r3, #84]	; 0x54
 800a736:	2303      	movs	r3, #3
 800a738:	e013      	b.n	800a762 <SPI_EndRxTransaction+0xc2>
 800a73a:	687b      	ldr	r3, [r7, #4]
 800a73c:	9300      	str	r3, [sp, #0]
 800a73e:	68bb      	ldr	r3, [r7, #8]
 800a740:	2200      	movs	r2, #0
 800a742:	2101      	movs	r1, #1
 800a744:	68f8      	ldr	r0, [r7, #12]
 800a746:	f7ff ff23 	bl	800a590 <SPI_WaitFlagStateUntilTimeout>
 800a74a:	4603      	mov	r3, r0
 800a74c:	2b00      	cmp	r3, #0
 800a74e:	d007      	beq.n	800a760 <SPI_EndRxTransaction+0xc0>
 800a750:	68fb      	ldr	r3, [r7, #12]
 800a752:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a754:	f043 0220 	orr.w	r2, r3, #32
 800a758:	68fb      	ldr	r3, [r7, #12]
 800a75a:	655a      	str	r2, [r3, #84]	; 0x54
 800a75c:	2303      	movs	r3, #3
 800a75e:	e000      	b.n	800a762 <SPI_EndRxTransaction+0xc2>
 800a760:	2300      	movs	r3, #0
 800a762:	4618      	mov	r0, r3
 800a764:	3710      	adds	r7, #16
 800a766:	46bd      	mov	sp, r7
 800a768:	bd80      	pop	{r7, pc}
	...

0800a76c <SPI_EndRxTxTransaction>:
 800a76c:	b580      	push	{r7, lr}
 800a76e:	b088      	sub	sp, #32
 800a770:	af02      	add	r7, sp, #8
 800a772:	60f8      	str	r0, [r7, #12]
 800a774:	60b9      	str	r1, [r7, #8]
 800a776:	607a      	str	r2, [r7, #4]
 800a778:	4b1b      	ldr	r3, [pc, #108]	; (800a7e8 <SPI_EndRxTxTransaction+0x7c>)
 800a77a:	681b      	ldr	r3, [r3, #0]
 800a77c:	4a1b      	ldr	r2, [pc, #108]	; (800a7ec <SPI_EndRxTxTransaction+0x80>)
 800a77e:	fba2 2303 	umull	r2, r3, r2, r3
 800a782:	0d5b      	lsrs	r3, r3, #21
 800a784:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800a788:	fb02 f303 	mul.w	r3, r2, r3
 800a78c:	617b      	str	r3, [r7, #20]
 800a78e:	68fb      	ldr	r3, [r7, #12]
 800a790:	685b      	ldr	r3, [r3, #4]
 800a792:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a796:	d112      	bne.n	800a7be <SPI_EndRxTxTransaction+0x52>
 800a798:	687b      	ldr	r3, [r7, #4]
 800a79a:	9300      	str	r3, [sp, #0]
 800a79c:	68bb      	ldr	r3, [r7, #8]
 800a79e:	2200      	movs	r2, #0
 800a7a0:	2180      	movs	r1, #128	; 0x80
 800a7a2:	68f8      	ldr	r0, [r7, #12]
 800a7a4:	f7ff fef4 	bl	800a590 <SPI_WaitFlagStateUntilTimeout>
 800a7a8:	4603      	mov	r3, r0
 800a7aa:	2b00      	cmp	r3, #0
 800a7ac:	d016      	beq.n	800a7dc <SPI_EndRxTxTransaction+0x70>
 800a7ae:	68fb      	ldr	r3, [r7, #12]
 800a7b0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a7b2:	f043 0220 	orr.w	r2, r3, #32
 800a7b6:	68fb      	ldr	r3, [r7, #12]
 800a7b8:	655a      	str	r2, [r3, #84]	; 0x54
 800a7ba:	2303      	movs	r3, #3
 800a7bc:	e00f      	b.n	800a7de <SPI_EndRxTxTransaction+0x72>
 800a7be:	697b      	ldr	r3, [r7, #20]
 800a7c0:	2b00      	cmp	r3, #0
 800a7c2:	d00a      	beq.n	800a7da <SPI_EndRxTxTransaction+0x6e>
 800a7c4:	697b      	ldr	r3, [r7, #20]
 800a7c6:	3b01      	subs	r3, #1
 800a7c8:	617b      	str	r3, [r7, #20]
 800a7ca:	68fb      	ldr	r3, [r7, #12]
 800a7cc:	681b      	ldr	r3, [r3, #0]
 800a7ce:	689b      	ldr	r3, [r3, #8]
 800a7d0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a7d4:	2b80      	cmp	r3, #128	; 0x80
 800a7d6:	d0f2      	beq.n	800a7be <SPI_EndRxTxTransaction+0x52>
 800a7d8:	e000      	b.n	800a7dc <SPI_EndRxTxTransaction+0x70>
 800a7da:	bf00      	nop
 800a7dc:	2300      	movs	r3, #0
 800a7de:	4618      	mov	r0, r3
 800a7e0:	3718      	adds	r7, #24
 800a7e2:	46bd      	mov	sp, r7
 800a7e4:	bd80      	pop	{r7, pc}
 800a7e6:	bf00      	nop
 800a7e8:	20000194 	.word	0x20000194
 800a7ec:	165e9f81 	.word	0x165e9f81

0800a7f0 <HAL_TIM_Base_Init>:
 800a7f0:	b580      	push	{r7, lr}
 800a7f2:	b082      	sub	sp, #8
 800a7f4:	af00      	add	r7, sp, #0
 800a7f6:	6078      	str	r0, [r7, #4]
 800a7f8:	687b      	ldr	r3, [r7, #4]
 800a7fa:	2b00      	cmp	r3, #0
 800a7fc:	d101      	bne.n	800a802 <HAL_TIM_Base_Init+0x12>
 800a7fe:	2301      	movs	r3, #1
 800a800:	e041      	b.n	800a886 <HAL_TIM_Base_Init+0x96>
 800a802:	687b      	ldr	r3, [r7, #4]
 800a804:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a808:	b2db      	uxtb	r3, r3
 800a80a:	2b00      	cmp	r3, #0
 800a80c:	d106      	bne.n	800a81c <HAL_TIM_Base_Init+0x2c>
 800a80e:	687b      	ldr	r3, [r7, #4]
 800a810:	2200      	movs	r2, #0
 800a812:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a816:	6878      	ldr	r0, [r7, #4]
 800a818:	f7fb f8de 	bl	80059d8 <HAL_TIM_Base_MspInit>
 800a81c:	687b      	ldr	r3, [r7, #4]
 800a81e:	2202      	movs	r2, #2
 800a820:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a824:	687b      	ldr	r3, [r7, #4]
 800a826:	681a      	ldr	r2, [r3, #0]
 800a828:	687b      	ldr	r3, [r7, #4]
 800a82a:	3304      	adds	r3, #4
 800a82c:	4619      	mov	r1, r3
 800a82e:	4610      	mov	r0, r2
 800a830:	f000 fafa 	bl	800ae28 <TIM_Base_SetConfig>
 800a834:	687b      	ldr	r3, [r7, #4]
 800a836:	2201      	movs	r2, #1
 800a838:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a83c:	687b      	ldr	r3, [r7, #4]
 800a83e:	2201      	movs	r2, #1
 800a840:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a844:	687b      	ldr	r3, [r7, #4]
 800a846:	2201      	movs	r2, #1
 800a848:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a84c:	687b      	ldr	r3, [r7, #4]
 800a84e:	2201      	movs	r2, #1
 800a850:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a854:	687b      	ldr	r3, [r7, #4]
 800a856:	2201      	movs	r2, #1
 800a858:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a85c:	687b      	ldr	r3, [r7, #4]
 800a85e:	2201      	movs	r2, #1
 800a860:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a864:	687b      	ldr	r3, [r7, #4]
 800a866:	2201      	movs	r2, #1
 800a868:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a86c:	687b      	ldr	r3, [r7, #4]
 800a86e:	2201      	movs	r2, #1
 800a870:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a874:	687b      	ldr	r3, [r7, #4]
 800a876:	2201      	movs	r2, #1
 800a878:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a87c:	687b      	ldr	r3, [r7, #4]
 800a87e:	2201      	movs	r2, #1
 800a880:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a884:	2300      	movs	r3, #0
 800a886:	4618      	mov	r0, r3
 800a888:	3708      	adds	r7, #8
 800a88a:	46bd      	mov	sp, r7
 800a88c:	bd80      	pop	{r7, pc}
	...

0800a890 <HAL_TIM_Base_Start>:
 800a890:	b480      	push	{r7}
 800a892:	b085      	sub	sp, #20
 800a894:	af00      	add	r7, sp, #0
 800a896:	6078      	str	r0, [r7, #4]
 800a898:	687b      	ldr	r3, [r7, #4]
 800a89a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a89e:	b2db      	uxtb	r3, r3
 800a8a0:	2b01      	cmp	r3, #1
 800a8a2:	d001      	beq.n	800a8a8 <HAL_TIM_Base_Start+0x18>
 800a8a4:	2301      	movs	r3, #1
 800a8a6:	e046      	b.n	800a936 <HAL_TIM_Base_Start+0xa6>
 800a8a8:	687b      	ldr	r3, [r7, #4]
 800a8aa:	2202      	movs	r2, #2
 800a8ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a8b0:	687b      	ldr	r3, [r7, #4]
 800a8b2:	681b      	ldr	r3, [r3, #0]
 800a8b4:	4a23      	ldr	r2, [pc, #140]	; (800a944 <HAL_TIM_Base_Start+0xb4>)
 800a8b6:	4293      	cmp	r3, r2
 800a8b8:	d022      	beq.n	800a900 <HAL_TIM_Base_Start+0x70>
 800a8ba:	687b      	ldr	r3, [r7, #4]
 800a8bc:	681b      	ldr	r3, [r3, #0]
 800a8be:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a8c2:	d01d      	beq.n	800a900 <HAL_TIM_Base_Start+0x70>
 800a8c4:	687b      	ldr	r3, [r7, #4]
 800a8c6:	681b      	ldr	r3, [r3, #0]
 800a8c8:	4a1f      	ldr	r2, [pc, #124]	; (800a948 <HAL_TIM_Base_Start+0xb8>)
 800a8ca:	4293      	cmp	r3, r2
 800a8cc:	d018      	beq.n	800a900 <HAL_TIM_Base_Start+0x70>
 800a8ce:	687b      	ldr	r3, [r7, #4]
 800a8d0:	681b      	ldr	r3, [r3, #0]
 800a8d2:	4a1e      	ldr	r2, [pc, #120]	; (800a94c <HAL_TIM_Base_Start+0xbc>)
 800a8d4:	4293      	cmp	r3, r2
 800a8d6:	d013      	beq.n	800a900 <HAL_TIM_Base_Start+0x70>
 800a8d8:	687b      	ldr	r3, [r7, #4]
 800a8da:	681b      	ldr	r3, [r3, #0]
 800a8dc:	4a1c      	ldr	r2, [pc, #112]	; (800a950 <HAL_TIM_Base_Start+0xc0>)
 800a8de:	4293      	cmp	r3, r2
 800a8e0:	d00e      	beq.n	800a900 <HAL_TIM_Base_Start+0x70>
 800a8e2:	687b      	ldr	r3, [r7, #4]
 800a8e4:	681b      	ldr	r3, [r3, #0]
 800a8e6:	4a1b      	ldr	r2, [pc, #108]	; (800a954 <HAL_TIM_Base_Start+0xc4>)
 800a8e8:	4293      	cmp	r3, r2
 800a8ea:	d009      	beq.n	800a900 <HAL_TIM_Base_Start+0x70>
 800a8ec:	687b      	ldr	r3, [r7, #4]
 800a8ee:	681b      	ldr	r3, [r3, #0]
 800a8f0:	4a19      	ldr	r2, [pc, #100]	; (800a958 <HAL_TIM_Base_Start+0xc8>)
 800a8f2:	4293      	cmp	r3, r2
 800a8f4:	d004      	beq.n	800a900 <HAL_TIM_Base_Start+0x70>
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	681b      	ldr	r3, [r3, #0]
 800a8fa:	4a18      	ldr	r2, [pc, #96]	; (800a95c <HAL_TIM_Base_Start+0xcc>)
 800a8fc:	4293      	cmp	r3, r2
 800a8fe:	d111      	bne.n	800a924 <HAL_TIM_Base_Start+0x94>
 800a900:	687b      	ldr	r3, [r7, #4]
 800a902:	681b      	ldr	r3, [r3, #0]
 800a904:	689b      	ldr	r3, [r3, #8]
 800a906:	f003 0307 	and.w	r3, r3, #7
 800a90a:	60fb      	str	r3, [r7, #12]
 800a90c:	68fb      	ldr	r3, [r7, #12]
 800a90e:	2b06      	cmp	r3, #6
 800a910:	d010      	beq.n	800a934 <HAL_TIM_Base_Start+0xa4>
 800a912:	687b      	ldr	r3, [r7, #4]
 800a914:	681b      	ldr	r3, [r3, #0]
 800a916:	681a      	ldr	r2, [r3, #0]
 800a918:	687b      	ldr	r3, [r7, #4]
 800a91a:	681b      	ldr	r3, [r3, #0]
 800a91c:	f042 0201 	orr.w	r2, r2, #1
 800a920:	601a      	str	r2, [r3, #0]
 800a922:	e007      	b.n	800a934 <HAL_TIM_Base_Start+0xa4>
 800a924:	687b      	ldr	r3, [r7, #4]
 800a926:	681b      	ldr	r3, [r3, #0]
 800a928:	681a      	ldr	r2, [r3, #0]
 800a92a:	687b      	ldr	r3, [r7, #4]
 800a92c:	681b      	ldr	r3, [r3, #0]
 800a92e:	f042 0201 	orr.w	r2, r2, #1
 800a932:	601a      	str	r2, [r3, #0]
 800a934:	2300      	movs	r3, #0
 800a936:	4618      	mov	r0, r3
 800a938:	3714      	adds	r7, #20
 800a93a:	46bd      	mov	sp, r7
 800a93c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a940:	4770      	bx	lr
 800a942:	bf00      	nop
 800a944:	40010000 	.word	0x40010000
 800a948:	40000400 	.word	0x40000400
 800a94c:	40000800 	.word	0x40000800
 800a950:	40000c00 	.word	0x40000c00
 800a954:	40010400 	.word	0x40010400
 800a958:	40014000 	.word	0x40014000
 800a95c:	40001800 	.word	0x40001800

0800a960 <HAL_TIM_Base_Start_IT>:
 800a960:	b480      	push	{r7}
 800a962:	b085      	sub	sp, #20
 800a964:	af00      	add	r7, sp, #0
 800a966:	6078      	str	r0, [r7, #4]
 800a968:	687b      	ldr	r3, [r7, #4]
 800a96a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a96e:	b2db      	uxtb	r3, r3
 800a970:	2b01      	cmp	r3, #1
 800a972:	d001      	beq.n	800a978 <HAL_TIM_Base_Start_IT+0x18>
 800a974:	2301      	movs	r3, #1
 800a976:	e04e      	b.n	800aa16 <HAL_TIM_Base_Start_IT+0xb6>
 800a978:	687b      	ldr	r3, [r7, #4]
 800a97a:	2202      	movs	r2, #2
 800a97c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a980:	687b      	ldr	r3, [r7, #4]
 800a982:	681b      	ldr	r3, [r3, #0]
 800a984:	68da      	ldr	r2, [r3, #12]
 800a986:	687b      	ldr	r3, [r7, #4]
 800a988:	681b      	ldr	r3, [r3, #0]
 800a98a:	f042 0201 	orr.w	r2, r2, #1
 800a98e:	60da      	str	r2, [r3, #12]
 800a990:	687b      	ldr	r3, [r7, #4]
 800a992:	681b      	ldr	r3, [r3, #0]
 800a994:	4a23      	ldr	r2, [pc, #140]	; (800aa24 <HAL_TIM_Base_Start_IT+0xc4>)
 800a996:	4293      	cmp	r3, r2
 800a998:	d022      	beq.n	800a9e0 <HAL_TIM_Base_Start_IT+0x80>
 800a99a:	687b      	ldr	r3, [r7, #4]
 800a99c:	681b      	ldr	r3, [r3, #0]
 800a99e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a9a2:	d01d      	beq.n	800a9e0 <HAL_TIM_Base_Start_IT+0x80>
 800a9a4:	687b      	ldr	r3, [r7, #4]
 800a9a6:	681b      	ldr	r3, [r3, #0]
 800a9a8:	4a1f      	ldr	r2, [pc, #124]	; (800aa28 <HAL_TIM_Base_Start_IT+0xc8>)
 800a9aa:	4293      	cmp	r3, r2
 800a9ac:	d018      	beq.n	800a9e0 <HAL_TIM_Base_Start_IT+0x80>
 800a9ae:	687b      	ldr	r3, [r7, #4]
 800a9b0:	681b      	ldr	r3, [r3, #0]
 800a9b2:	4a1e      	ldr	r2, [pc, #120]	; (800aa2c <HAL_TIM_Base_Start_IT+0xcc>)
 800a9b4:	4293      	cmp	r3, r2
 800a9b6:	d013      	beq.n	800a9e0 <HAL_TIM_Base_Start_IT+0x80>
 800a9b8:	687b      	ldr	r3, [r7, #4]
 800a9ba:	681b      	ldr	r3, [r3, #0]
 800a9bc:	4a1c      	ldr	r2, [pc, #112]	; (800aa30 <HAL_TIM_Base_Start_IT+0xd0>)
 800a9be:	4293      	cmp	r3, r2
 800a9c0:	d00e      	beq.n	800a9e0 <HAL_TIM_Base_Start_IT+0x80>
 800a9c2:	687b      	ldr	r3, [r7, #4]
 800a9c4:	681b      	ldr	r3, [r3, #0]
 800a9c6:	4a1b      	ldr	r2, [pc, #108]	; (800aa34 <HAL_TIM_Base_Start_IT+0xd4>)
 800a9c8:	4293      	cmp	r3, r2
 800a9ca:	d009      	beq.n	800a9e0 <HAL_TIM_Base_Start_IT+0x80>
 800a9cc:	687b      	ldr	r3, [r7, #4]
 800a9ce:	681b      	ldr	r3, [r3, #0]
 800a9d0:	4a19      	ldr	r2, [pc, #100]	; (800aa38 <HAL_TIM_Base_Start_IT+0xd8>)
 800a9d2:	4293      	cmp	r3, r2
 800a9d4:	d004      	beq.n	800a9e0 <HAL_TIM_Base_Start_IT+0x80>
 800a9d6:	687b      	ldr	r3, [r7, #4]
 800a9d8:	681b      	ldr	r3, [r3, #0]
 800a9da:	4a18      	ldr	r2, [pc, #96]	; (800aa3c <HAL_TIM_Base_Start_IT+0xdc>)
 800a9dc:	4293      	cmp	r3, r2
 800a9de:	d111      	bne.n	800aa04 <HAL_TIM_Base_Start_IT+0xa4>
 800a9e0:	687b      	ldr	r3, [r7, #4]
 800a9e2:	681b      	ldr	r3, [r3, #0]
 800a9e4:	689b      	ldr	r3, [r3, #8]
 800a9e6:	f003 0307 	and.w	r3, r3, #7
 800a9ea:	60fb      	str	r3, [r7, #12]
 800a9ec:	68fb      	ldr	r3, [r7, #12]
 800a9ee:	2b06      	cmp	r3, #6
 800a9f0:	d010      	beq.n	800aa14 <HAL_TIM_Base_Start_IT+0xb4>
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	681b      	ldr	r3, [r3, #0]
 800a9f6:	681a      	ldr	r2, [r3, #0]
 800a9f8:	687b      	ldr	r3, [r7, #4]
 800a9fa:	681b      	ldr	r3, [r3, #0]
 800a9fc:	f042 0201 	orr.w	r2, r2, #1
 800aa00:	601a      	str	r2, [r3, #0]
 800aa02:	e007      	b.n	800aa14 <HAL_TIM_Base_Start_IT+0xb4>
 800aa04:	687b      	ldr	r3, [r7, #4]
 800aa06:	681b      	ldr	r3, [r3, #0]
 800aa08:	681a      	ldr	r2, [r3, #0]
 800aa0a:	687b      	ldr	r3, [r7, #4]
 800aa0c:	681b      	ldr	r3, [r3, #0]
 800aa0e:	f042 0201 	orr.w	r2, r2, #1
 800aa12:	601a      	str	r2, [r3, #0]
 800aa14:	2300      	movs	r3, #0
 800aa16:	4618      	mov	r0, r3
 800aa18:	3714      	adds	r7, #20
 800aa1a:	46bd      	mov	sp, r7
 800aa1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa20:	4770      	bx	lr
 800aa22:	bf00      	nop
 800aa24:	40010000 	.word	0x40010000
 800aa28:	40000400 	.word	0x40000400
 800aa2c:	40000800 	.word	0x40000800
 800aa30:	40000c00 	.word	0x40000c00
 800aa34:	40010400 	.word	0x40010400
 800aa38:	40014000 	.word	0x40014000
 800aa3c:	40001800 	.word	0x40001800

0800aa40 <HAL_TIM_IRQHandler>:
 800aa40:	b580      	push	{r7, lr}
 800aa42:	b082      	sub	sp, #8
 800aa44:	af00      	add	r7, sp, #0
 800aa46:	6078      	str	r0, [r7, #4]
 800aa48:	687b      	ldr	r3, [r7, #4]
 800aa4a:	681b      	ldr	r3, [r3, #0]
 800aa4c:	691b      	ldr	r3, [r3, #16]
 800aa4e:	f003 0302 	and.w	r3, r3, #2
 800aa52:	2b02      	cmp	r3, #2
 800aa54:	d122      	bne.n	800aa9c <HAL_TIM_IRQHandler+0x5c>
 800aa56:	687b      	ldr	r3, [r7, #4]
 800aa58:	681b      	ldr	r3, [r3, #0]
 800aa5a:	68db      	ldr	r3, [r3, #12]
 800aa5c:	f003 0302 	and.w	r3, r3, #2
 800aa60:	2b02      	cmp	r3, #2
 800aa62:	d11b      	bne.n	800aa9c <HAL_TIM_IRQHandler+0x5c>
 800aa64:	687b      	ldr	r3, [r7, #4]
 800aa66:	681b      	ldr	r3, [r3, #0]
 800aa68:	f06f 0202 	mvn.w	r2, #2
 800aa6c:	611a      	str	r2, [r3, #16]
 800aa6e:	687b      	ldr	r3, [r7, #4]
 800aa70:	2201      	movs	r2, #1
 800aa72:	771a      	strb	r2, [r3, #28]
 800aa74:	687b      	ldr	r3, [r7, #4]
 800aa76:	681b      	ldr	r3, [r3, #0]
 800aa78:	699b      	ldr	r3, [r3, #24]
 800aa7a:	f003 0303 	and.w	r3, r3, #3
 800aa7e:	2b00      	cmp	r3, #0
 800aa80:	d003      	beq.n	800aa8a <HAL_TIM_IRQHandler+0x4a>
 800aa82:	6878      	ldr	r0, [r7, #4]
 800aa84:	f000 f9b2 	bl	800adec <HAL_TIM_IC_CaptureCallback>
 800aa88:	e005      	b.n	800aa96 <HAL_TIM_IRQHandler+0x56>
 800aa8a:	6878      	ldr	r0, [r7, #4]
 800aa8c:	f000 f9a4 	bl	800add8 <HAL_TIM_OC_DelayElapsedCallback>
 800aa90:	6878      	ldr	r0, [r7, #4]
 800aa92:	f000 f9b5 	bl	800ae00 <HAL_TIM_PWM_PulseFinishedCallback>
 800aa96:	687b      	ldr	r3, [r7, #4]
 800aa98:	2200      	movs	r2, #0
 800aa9a:	771a      	strb	r2, [r3, #28]
 800aa9c:	687b      	ldr	r3, [r7, #4]
 800aa9e:	681b      	ldr	r3, [r3, #0]
 800aaa0:	691b      	ldr	r3, [r3, #16]
 800aaa2:	f003 0304 	and.w	r3, r3, #4
 800aaa6:	2b04      	cmp	r3, #4
 800aaa8:	d122      	bne.n	800aaf0 <HAL_TIM_IRQHandler+0xb0>
 800aaaa:	687b      	ldr	r3, [r7, #4]
 800aaac:	681b      	ldr	r3, [r3, #0]
 800aaae:	68db      	ldr	r3, [r3, #12]
 800aab0:	f003 0304 	and.w	r3, r3, #4
 800aab4:	2b04      	cmp	r3, #4
 800aab6:	d11b      	bne.n	800aaf0 <HAL_TIM_IRQHandler+0xb0>
 800aab8:	687b      	ldr	r3, [r7, #4]
 800aaba:	681b      	ldr	r3, [r3, #0]
 800aabc:	f06f 0204 	mvn.w	r2, #4
 800aac0:	611a      	str	r2, [r3, #16]
 800aac2:	687b      	ldr	r3, [r7, #4]
 800aac4:	2202      	movs	r2, #2
 800aac6:	771a      	strb	r2, [r3, #28]
 800aac8:	687b      	ldr	r3, [r7, #4]
 800aaca:	681b      	ldr	r3, [r3, #0]
 800aacc:	699b      	ldr	r3, [r3, #24]
 800aace:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800aad2:	2b00      	cmp	r3, #0
 800aad4:	d003      	beq.n	800aade <HAL_TIM_IRQHandler+0x9e>
 800aad6:	6878      	ldr	r0, [r7, #4]
 800aad8:	f000 f988 	bl	800adec <HAL_TIM_IC_CaptureCallback>
 800aadc:	e005      	b.n	800aaea <HAL_TIM_IRQHandler+0xaa>
 800aade:	6878      	ldr	r0, [r7, #4]
 800aae0:	f000 f97a 	bl	800add8 <HAL_TIM_OC_DelayElapsedCallback>
 800aae4:	6878      	ldr	r0, [r7, #4]
 800aae6:	f000 f98b 	bl	800ae00 <HAL_TIM_PWM_PulseFinishedCallback>
 800aaea:	687b      	ldr	r3, [r7, #4]
 800aaec:	2200      	movs	r2, #0
 800aaee:	771a      	strb	r2, [r3, #28]
 800aaf0:	687b      	ldr	r3, [r7, #4]
 800aaf2:	681b      	ldr	r3, [r3, #0]
 800aaf4:	691b      	ldr	r3, [r3, #16]
 800aaf6:	f003 0308 	and.w	r3, r3, #8
 800aafa:	2b08      	cmp	r3, #8
 800aafc:	d122      	bne.n	800ab44 <HAL_TIM_IRQHandler+0x104>
 800aafe:	687b      	ldr	r3, [r7, #4]
 800ab00:	681b      	ldr	r3, [r3, #0]
 800ab02:	68db      	ldr	r3, [r3, #12]
 800ab04:	f003 0308 	and.w	r3, r3, #8
 800ab08:	2b08      	cmp	r3, #8
 800ab0a:	d11b      	bne.n	800ab44 <HAL_TIM_IRQHandler+0x104>
 800ab0c:	687b      	ldr	r3, [r7, #4]
 800ab0e:	681b      	ldr	r3, [r3, #0]
 800ab10:	f06f 0208 	mvn.w	r2, #8
 800ab14:	611a      	str	r2, [r3, #16]
 800ab16:	687b      	ldr	r3, [r7, #4]
 800ab18:	2204      	movs	r2, #4
 800ab1a:	771a      	strb	r2, [r3, #28]
 800ab1c:	687b      	ldr	r3, [r7, #4]
 800ab1e:	681b      	ldr	r3, [r3, #0]
 800ab20:	69db      	ldr	r3, [r3, #28]
 800ab22:	f003 0303 	and.w	r3, r3, #3
 800ab26:	2b00      	cmp	r3, #0
 800ab28:	d003      	beq.n	800ab32 <HAL_TIM_IRQHandler+0xf2>
 800ab2a:	6878      	ldr	r0, [r7, #4]
 800ab2c:	f000 f95e 	bl	800adec <HAL_TIM_IC_CaptureCallback>
 800ab30:	e005      	b.n	800ab3e <HAL_TIM_IRQHandler+0xfe>
 800ab32:	6878      	ldr	r0, [r7, #4]
 800ab34:	f000 f950 	bl	800add8 <HAL_TIM_OC_DelayElapsedCallback>
 800ab38:	6878      	ldr	r0, [r7, #4]
 800ab3a:	f000 f961 	bl	800ae00 <HAL_TIM_PWM_PulseFinishedCallback>
 800ab3e:	687b      	ldr	r3, [r7, #4]
 800ab40:	2200      	movs	r2, #0
 800ab42:	771a      	strb	r2, [r3, #28]
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	681b      	ldr	r3, [r3, #0]
 800ab48:	691b      	ldr	r3, [r3, #16]
 800ab4a:	f003 0310 	and.w	r3, r3, #16
 800ab4e:	2b10      	cmp	r3, #16
 800ab50:	d122      	bne.n	800ab98 <HAL_TIM_IRQHandler+0x158>
 800ab52:	687b      	ldr	r3, [r7, #4]
 800ab54:	681b      	ldr	r3, [r3, #0]
 800ab56:	68db      	ldr	r3, [r3, #12]
 800ab58:	f003 0310 	and.w	r3, r3, #16
 800ab5c:	2b10      	cmp	r3, #16
 800ab5e:	d11b      	bne.n	800ab98 <HAL_TIM_IRQHandler+0x158>
 800ab60:	687b      	ldr	r3, [r7, #4]
 800ab62:	681b      	ldr	r3, [r3, #0]
 800ab64:	f06f 0210 	mvn.w	r2, #16
 800ab68:	611a      	str	r2, [r3, #16]
 800ab6a:	687b      	ldr	r3, [r7, #4]
 800ab6c:	2208      	movs	r2, #8
 800ab6e:	771a      	strb	r2, [r3, #28]
 800ab70:	687b      	ldr	r3, [r7, #4]
 800ab72:	681b      	ldr	r3, [r3, #0]
 800ab74:	69db      	ldr	r3, [r3, #28]
 800ab76:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ab7a:	2b00      	cmp	r3, #0
 800ab7c:	d003      	beq.n	800ab86 <HAL_TIM_IRQHandler+0x146>
 800ab7e:	6878      	ldr	r0, [r7, #4]
 800ab80:	f000 f934 	bl	800adec <HAL_TIM_IC_CaptureCallback>
 800ab84:	e005      	b.n	800ab92 <HAL_TIM_IRQHandler+0x152>
 800ab86:	6878      	ldr	r0, [r7, #4]
 800ab88:	f000 f926 	bl	800add8 <HAL_TIM_OC_DelayElapsedCallback>
 800ab8c:	6878      	ldr	r0, [r7, #4]
 800ab8e:	f000 f937 	bl	800ae00 <HAL_TIM_PWM_PulseFinishedCallback>
 800ab92:	687b      	ldr	r3, [r7, #4]
 800ab94:	2200      	movs	r2, #0
 800ab96:	771a      	strb	r2, [r3, #28]
 800ab98:	687b      	ldr	r3, [r7, #4]
 800ab9a:	681b      	ldr	r3, [r3, #0]
 800ab9c:	691b      	ldr	r3, [r3, #16]
 800ab9e:	f003 0301 	and.w	r3, r3, #1
 800aba2:	2b01      	cmp	r3, #1
 800aba4:	d10e      	bne.n	800abc4 <HAL_TIM_IRQHandler+0x184>
 800aba6:	687b      	ldr	r3, [r7, #4]
 800aba8:	681b      	ldr	r3, [r3, #0]
 800abaa:	68db      	ldr	r3, [r3, #12]
 800abac:	f003 0301 	and.w	r3, r3, #1
 800abb0:	2b01      	cmp	r3, #1
 800abb2:	d107      	bne.n	800abc4 <HAL_TIM_IRQHandler+0x184>
 800abb4:	687b      	ldr	r3, [r7, #4]
 800abb6:	681b      	ldr	r3, [r3, #0]
 800abb8:	f06f 0201 	mvn.w	r2, #1
 800abbc:	611a      	str	r2, [r3, #16]
 800abbe:	6878      	ldr	r0, [r7, #4]
 800abc0:	f7f6 fb38 	bl	8001234 <HAL_TIM_PeriodElapsedCallback>
 800abc4:	687b      	ldr	r3, [r7, #4]
 800abc6:	681b      	ldr	r3, [r3, #0]
 800abc8:	691b      	ldr	r3, [r3, #16]
 800abca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800abce:	2b80      	cmp	r3, #128	; 0x80
 800abd0:	d10e      	bne.n	800abf0 <HAL_TIM_IRQHandler+0x1b0>
 800abd2:	687b      	ldr	r3, [r7, #4]
 800abd4:	681b      	ldr	r3, [r3, #0]
 800abd6:	68db      	ldr	r3, [r3, #12]
 800abd8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800abdc:	2b80      	cmp	r3, #128	; 0x80
 800abde:	d107      	bne.n	800abf0 <HAL_TIM_IRQHandler+0x1b0>
 800abe0:	687b      	ldr	r3, [r7, #4]
 800abe2:	681b      	ldr	r3, [r3, #0]
 800abe4:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800abe8:	611a      	str	r2, [r3, #16]
 800abea:	6878      	ldr	r0, [r7, #4]
 800abec:	f000 fadc 	bl	800b1a8 <HAL_TIMEx_BreakCallback>
 800abf0:	687b      	ldr	r3, [r7, #4]
 800abf2:	681b      	ldr	r3, [r3, #0]
 800abf4:	691b      	ldr	r3, [r3, #16]
 800abf6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800abfa:	2b40      	cmp	r3, #64	; 0x40
 800abfc:	d10e      	bne.n	800ac1c <HAL_TIM_IRQHandler+0x1dc>
 800abfe:	687b      	ldr	r3, [r7, #4]
 800ac00:	681b      	ldr	r3, [r3, #0]
 800ac02:	68db      	ldr	r3, [r3, #12]
 800ac04:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ac08:	2b40      	cmp	r3, #64	; 0x40
 800ac0a:	d107      	bne.n	800ac1c <HAL_TIM_IRQHandler+0x1dc>
 800ac0c:	687b      	ldr	r3, [r7, #4]
 800ac0e:	681b      	ldr	r3, [r3, #0]
 800ac10:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800ac14:	611a      	str	r2, [r3, #16]
 800ac16:	6878      	ldr	r0, [r7, #4]
 800ac18:	f000 f8fc 	bl	800ae14 <HAL_TIM_TriggerCallback>
 800ac1c:	687b      	ldr	r3, [r7, #4]
 800ac1e:	681b      	ldr	r3, [r3, #0]
 800ac20:	691b      	ldr	r3, [r3, #16]
 800ac22:	f003 0320 	and.w	r3, r3, #32
 800ac26:	2b20      	cmp	r3, #32
 800ac28:	d10e      	bne.n	800ac48 <HAL_TIM_IRQHandler+0x208>
 800ac2a:	687b      	ldr	r3, [r7, #4]
 800ac2c:	681b      	ldr	r3, [r3, #0]
 800ac2e:	68db      	ldr	r3, [r3, #12]
 800ac30:	f003 0320 	and.w	r3, r3, #32
 800ac34:	2b20      	cmp	r3, #32
 800ac36:	d107      	bne.n	800ac48 <HAL_TIM_IRQHandler+0x208>
 800ac38:	687b      	ldr	r3, [r7, #4]
 800ac3a:	681b      	ldr	r3, [r3, #0]
 800ac3c:	f06f 0220 	mvn.w	r2, #32
 800ac40:	611a      	str	r2, [r3, #16]
 800ac42:	6878      	ldr	r0, [r7, #4]
 800ac44:	f000 faa6 	bl	800b194 <HAL_TIMEx_CommutCallback>
 800ac48:	bf00      	nop
 800ac4a:	3708      	adds	r7, #8
 800ac4c:	46bd      	mov	sp, r7
 800ac4e:	bd80      	pop	{r7, pc}

0800ac50 <HAL_TIM_ConfigClockSource>:
 800ac50:	b580      	push	{r7, lr}
 800ac52:	b084      	sub	sp, #16
 800ac54:	af00      	add	r7, sp, #0
 800ac56:	6078      	str	r0, [r7, #4]
 800ac58:	6039      	str	r1, [r7, #0]
 800ac5a:	687b      	ldr	r3, [r7, #4]
 800ac5c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ac60:	2b01      	cmp	r3, #1
 800ac62:	d101      	bne.n	800ac68 <HAL_TIM_ConfigClockSource+0x18>
 800ac64:	2302      	movs	r3, #2
 800ac66:	e0b3      	b.n	800add0 <HAL_TIM_ConfigClockSource+0x180>
 800ac68:	687b      	ldr	r3, [r7, #4]
 800ac6a:	2201      	movs	r2, #1
 800ac6c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ac70:	687b      	ldr	r3, [r7, #4]
 800ac72:	2202      	movs	r2, #2
 800ac74:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ac78:	687b      	ldr	r3, [r7, #4]
 800ac7a:	681b      	ldr	r3, [r3, #0]
 800ac7c:	689b      	ldr	r3, [r3, #8]
 800ac7e:	60fb      	str	r3, [r7, #12]
 800ac80:	68fb      	ldr	r3, [r7, #12]
 800ac82:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800ac86:	60fb      	str	r3, [r7, #12]
 800ac88:	68fb      	ldr	r3, [r7, #12]
 800ac8a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800ac8e:	60fb      	str	r3, [r7, #12]
 800ac90:	687b      	ldr	r3, [r7, #4]
 800ac92:	681b      	ldr	r3, [r3, #0]
 800ac94:	68fa      	ldr	r2, [r7, #12]
 800ac96:	609a      	str	r2, [r3, #8]
 800ac98:	683b      	ldr	r3, [r7, #0]
 800ac9a:	681b      	ldr	r3, [r3, #0]
 800ac9c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800aca0:	d03e      	beq.n	800ad20 <HAL_TIM_ConfigClockSource+0xd0>
 800aca2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800aca6:	f200 8087 	bhi.w	800adb8 <HAL_TIM_ConfigClockSource+0x168>
 800acaa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800acae:	f000 8085 	beq.w	800adbc <HAL_TIM_ConfigClockSource+0x16c>
 800acb2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800acb6:	d87f      	bhi.n	800adb8 <HAL_TIM_ConfigClockSource+0x168>
 800acb8:	2b70      	cmp	r3, #112	; 0x70
 800acba:	d01a      	beq.n	800acf2 <HAL_TIM_ConfigClockSource+0xa2>
 800acbc:	2b70      	cmp	r3, #112	; 0x70
 800acbe:	d87b      	bhi.n	800adb8 <HAL_TIM_ConfigClockSource+0x168>
 800acc0:	2b60      	cmp	r3, #96	; 0x60
 800acc2:	d050      	beq.n	800ad66 <HAL_TIM_ConfigClockSource+0x116>
 800acc4:	2b60      	cmp	r3, #96	; 0x60
 800acc6:	d877      	bhi.n	800adb8 <HAL_TIM_ConfigClockSource+0x168>
 800acc8:	2b50      	cmp	r3, #80	; 0x50
 800acca:	d03c      	beq.n	800ad46 <HAL_TIM_ConfigClockSource+0xf6>
 800accc:	2b50      	cmp	r3, #80	; 0x50
 800acce:	d873      	bhi.n	800adb8 <HAL_TIM_ConfigClockSource+0x168>
 800acd0:	2b40      	cmp	r3, #64	; 0x40
 800acd2:	d058      	beq.n	800ad86 <HAL_TIM_ConfigClockSource+0x136>
 800acd4:	2b40      	cmp	r3, #64	; 0x40
 800acd6:	d86f      	bhi.n	800adb8 <HAL_TIM_ConfigClockSource+0x168>
 800acd8:	2b30      	cmp	r3, #48	; 0x30
 800acda:	d064      	beq.n	800ada6 <HAL_TIM_ConfigClockSource+0x156>
 800acdc:	2b30      	cmp	r3, #48	; 0x30
 800acde:	d86b      	bhi.n	800adb8 <HAL_TIM_ConfigClockSource+0x168>
 800ace0:	2b20      	cmp	r3, #32
 800ace2:	d060      	beq.n	800ada6 <HAL_TIM_ConfigClockSource+0x156>
 800ace4:	2b20      	cmp	r3, #32
 800ace6:	d867      	bhi.n	800adb8 <HAL_TIM_ConfigClockSource+0x168>
 800ace8:	2b00      	cmp	r3, #0
 800acea:	d05c      	beq.n	800ada6 <HAL_TIM_ConfigClockSource+0x156>
 800acec:	2b10      	cmp	r3, #16
 800acee:	d05a      	beq.n	800ada6 <HAL_TIM_ConfigClockSource+0x156>
 800acf0:	e062      	b.n	800adb8 <HAL_TIM_ConfigClockSource+0x168>
 800acf2:	687b      	ldr	r3, [r7, #4]
 800acf4:	6818      	ldr	r0, [r3, #0]
 800acf6:	683b      	ldr	r3, [r7, #0]
 800acf8:	6899      	ldr	r1, [r3, #8]
 800acfa:	683b      	ldr	r3, [r7, #0]
 800acfc:	685a      	ldr	r2, [r3, #4]
 800acfe:	683b      	ldr	r3, [r7, #0]
 800ad00:	68db      	ldr	r3, [r3, #12]
 800ad02:	f000 f9ab 	bl	800b05c <TIM_ETR_SetConfig>
 800ad06:	687b      	ldr	r3, [r7, #4]
 800ad08:	681b      	ldr	r3, [r3, #0]
 800ad0a:	689b      	ldr	r3, [r3, #8]
 800ad0c:	60fb      	str	r3, [r7, #12]
 800ad0e:	68fb      	ldr	r3, [r7, #12]
 800ad10:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800ad14:	60fb      	str	r3, [r7, #12]
 800ad16:	687b      	ldr	r3, [r7, #4]
 800ad18:	681b      	ldr	r3, [r3, #0]
 800ad1a:	68fa      	ldr	r2, [r7, #12]
 800ad1c:	609a      	str	r2, [r3, #8]
 800ad1e:	e04e      	b.n	800adbe <HAL_TIM_ConfigClockSource+0x16e>
 800ad20:	687b      	ldr	r3, [r7, #4]
 800ad22:	6818      	ldr	r0, [r3, #0]
 800ad24:	683b      	ldr	r3, [r7, #0]
 800ad26:	6899      	ldr	r1, [r3, #8]
 800ad28:	683b      	ldr	r3, [r7, #0]
 800ad2a:	685a      	ldr	r2, [r3, #4]
 800ad2c:	683b      	ldr	r3, [r7, #0]
 800ad2e:	68db      	ldr	r3, [r3, #12]
 800ad30:	f000 f994 	bl	800b05c <TIM_ETR_SetConfig>
 800ad34:	687b      	ldr	r3, [r7, #4]
 800ad36:	681b      	ldr	r3, [r3, #0]
 800ad38:	689a      	ldr	r2, [r3, #8]
 800ad3a:	687b      	ldr	r3, [r7, #4]
 800ad3c:	681b      	ldr	r3, [r3, #0]
 800ad3e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800ad42:	609a      	str	r2, [r3, #8]
 800ad44:	e03b      	b.n	800adbe <HAL_TIM_ConfigClockSource+0x16e>
 800ad46:	687b      	ldr	r3, [r7, #4]
 800ad48:	6818      	ldr	r0, [r3, #0]
 800ad4a:	683b      	ldr	r3, [r7, #0]
 800ad4c:	6859      	ldr	r1, [r3, #4]
 800ad4e:	683b      	ldr	r3, [r7, #0]
 800ad50:	68db      	ldr	r3, [r3, #12]
 800ad52:	461a      	mov	r2, r3
 800ad54:	f000 f908 	bl	800af68 <TIM_TI1_ConfigInputStage>
 800ad58:	687b      	ldr	r3, [r7, #4]
 800ad5a:	681b      	ldr	r3, [r3, #0]
 800ad5c:	2150      	movs	r1, #80	; 0x50
 800ad5e:	4618      	mov	r0, r3
 800ad60:	f000 f961 	bl	800b026 <TIM_ITRx_SetConfig>
 800ad64:	e02b      	b.n	800adbe <HAL_TIM_ConfigClockSource+0x16e>
 800ad66:	687b      	ldr	r3, [r7, #4]
 800ad68:	6818      	ldr	r0, [r3, #0]
 800ad6a:	683b      	ldr	r3, [r7, #0]
 800ad6c:	6859      	ldr	r1, [r3, #4]
 800ad6e:	683b      	ldr	r3, [r7, #0]
 800ad70:	68db      	ldr	r3, [r3, #12]
 800ad72:	461a      	mov	r2, r3
 800ad74:	f000 f927 	bl	800afc6 <TIM_TI2_ConfigInputStage>
 800ad78:	687b      	ldr	r3, [r7, #4]
 800ad7a:	681b      	ldr	r3, [r3, #0]
 800ad7c:	2160      	movs	r1, #96	; 0x60
 800ad7e:	4618      	mov	r0, r3
 800ad80:	f000 f951 	bl	800b026 <TIM_ITRx_SetConfig>
 800ad84:	e01b      	b.n	800adbe <HAL_TIM_ConfigClockSource+0x16e>
 800ad86:	687b      	ldr	r3, [r7, #4]
 800ad88:	6818      	ldr	r0, [r3, #0]
 800ad8a:	683b      	ldr	r3, [r7, #0]
 800ad8c:	6859      	ldr	r1, [r3, #4]
 800ad8e:	683b      	ldr	r3, [r7, #0]
 800ad90:	68db      	ldr	r3, [r3, #12]
 800ad92:	461a      	mov	r2, r3
 800ad94:	f000 f8e8 	bl	800af68 <TIM_TI1_ConfigInputStage>
 800ad98:	687b      	ldr	r3, [r7, #4]
 800ad9a:	681b      	ldr	r3, [r3, #0]
 800ad9c:	2140      	movs	r1, #64	; 0x40
 800ad9e:	4618      	mov	r0, r3
 800ada0:	f000 f941 	bl	800b026 <TIM_ITRx_SetConfig>
 800ada4:	e00b      	b.n	800adbe <HAL_TIM_ConfigClockSource+0x16e>
 800ada6:	687b      	ldr	r3, [r7, #4]
 800ada8:	681a      	ldr	r2, [r3, #0]
 800adaa:	683b      	ldr	r3, [r7, #0]
 800adac:	681b      	ldr	r3, [r3, #0]
 800adae:	4619      	mov	r1, r3
 800adb0:	4610      	mov	r0, r2
 800adb2:	f000 f938 	bl	800b026 <TIM_ITRx_SetConfig>
 800adb6:	e002      	b.n	800adbe <HAL_TIM_ConfigClockSource+0x16e>
 800adb8:	bf00      	nop
 800adba:	e000      	b.n	800adbe <HAL_TIM_ConfigClockSource+0x16e>
 800adbc:	bf00      	nop
 800adbe:	687b      	ldr	r3, [r7, #4]
 800adc0:	2201      	movs	r2, #1
 800adc2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800adc6:	687b      	ldr	r3, [r7, #4]
 800adc8:	2200      	movs	r2, #0
 800adca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800adce:	2300      	movs	r3, #0
 800add0:	4618      	mov	r0, r3
 800add2:	3710      	adds	r7, #16
 800add4:	46bd      	mov	sp, r7
 800add6:	bd80      	pop	{r7, pc}

0800add8 <HAL_TIM_OC_DelayElapsedCallback>:
 800add8:	b480      	push	{r7}
 800adda:	b083      	sub	sp, #12
 800addc:	af00      	add	r7, sp, #0
 800adde:	6078      	str	r0, [r7, #4]
 800ade0:	bf00      	nop
 800ade2:	370c      	adds	r7, #12
 800ade4:	46bd      	mov	sp, r7
 800ade6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adea:	4770      	bx	lr

0800adec <HAL_TIM_IC_CaptureCallback>:
 800adec:	b480      	push	{r7}
 800adee:	b083      	sub	sp, #12
 800adf0:	af00      	add	r7, sp, #0
 800adf2:	6078      	str	r0, [r7, #4]
 800adf4:	bf00      	nop
 800adf6:	370c      	adds	r7, #12
 800adf8:	46bd      	mov	sp, r7
 800adfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adfe:	4770      	bx	lr

0800ae00 <HAL_TIM_PWM_PulseFinishedCallback>:
 800ae00:	b480      	push	{r7}
 800ae02:	b083      	sub	sp, #12
 800ae04:	af00      	add	r7, sp, #0
 800ae06:	6078      	str	r0, [r7, #4]
 800ae08:	bf00      	nop
 800ae0a:	370c      	adds	r7, #12
 800ae0c:	46bd      	mov	sp, r7
 800ae0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae12:	4770      	bx	lr

0800ae14 <HAL_TIM_TriggerCallback>:
 800ae14:	b480      	push	{r7}
 800ae16:	b083      	sub	sp, #12
 800ae18:	af00      	add	r7, sp, #0
 800ae1a:	6078      	str	r0, [r7, #4]
 800ae1c:	bf00      	nop
 800ae1e:	370c      	adds	r7, #12
 800ae20:	46bd      	mov	sp, r7
 800ae22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae26:	4770      	bx	lr

0800ae28 <TIM_Base_SetConfig>:
 800ae28:	b480      	push	{r7}
 800ae2a:	b085      	sub	sp, #20
 800ae2c:	af00      	add	r7, sp, #0
 800ae2e:	6078      	str	r0, [r7, #4]
 800ae30:	6039      	str	r1, [r7, #0]
 800ae32:	687b      	ldr	r3, [r7, #4]
 800ae34:	681b      	ldr	r3, [r3, #0]
 800ae36:	60fb      	str	r3, [r7, #12]
 800ae38:	687b      	ldr	r3, [r7, #4]
 800ae3a:	4a40      	ldr	r2, [pc, #256]	; (800af3c <TIM_Base_SetConfig+0x114>)
 800ae3c:	4293      	cmp	r3, r2
 800ae3e:	d013      	beq.n	800ae68 <TIM_Base_SetConfig+0x40>
 800ae40:	687b      	ldr	r3, [r7, #4]
 800ae42:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ae46:	d00f      	beq.n	800ae68 <TIM_Base_SetConfig+0x40>
 800ae48:	687b      	ldr	r3, [r7, #4]
 800ae4a:	4a3d      	ldr	r2, [pc, #244]	; (800af40 <TIM_Base_SetConfig+0x118>)
 800ae4c:	4293      	cmp	r3, r2
 800ae4e:	d00b      	beq.n	800ae68 <TIM_Base_SetConfig+0x40>
 800ae50:	687b      	ldr	r3, [r7, #4]
 800ae52:	4a3c      	ldr	r2, [pc, #240]	; (800af44 <TIM_Base_SetConfig+0x11c>)
 800ae54:	4293      	cmp	r3, r2
 800ae56:	d007      	beq.n	800ae68 <TIM_Base_SetConfig+0x40>
 800ae58:	687b      	ldr	r3, [r7, #4]
 800ae5a:	4a3b      	ldr	r2, [pc, #236]	; (800af48 <TIM_Base_SetConfig+0x120>)
 800ae5c:	4293      	cmp	r3, r2
 800ae5e:	d003      	beq.n	800ae68 <TIM_Base_SetConfig+0x40>
 800ae60:	687b      	ldr	r3, [r7, #4]
 800ae62:	4a3a      	ldr	r2, [pc, #232]	; (800af4c <TIM_Base_SetConfig+0x124>)
 800ae64:	4293      	cmp	r3, r2
 800ae66:	d108      	bne.n	800ae7a <TIM_Base_SetConfig+0x52>
 800ae68:	68fb      	ldr	r3, [r7, #12]
 800ae6a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800ae6e:	60fb      	str	r3, [r7, #12]
 800ae70:	683b      	ldr	r3, [r7, #0]
 800ae72:	685b      	ldr	r3, [r3, #4]
 800ae74:	68fa      	ldr	r2, [r7, #12]
 800ae76:	4313      	orrs	r3, r2
 800ae78:	60fb      	str	r3, [r7, #12]
 800ae7a:	687b      	ldr	r3, [r7, #4]
 800ae7c:	4a2f      	ldr	r2, [pc, #188]	; (800af3c <TIM_Base_SetConfig+0x114>)
 800ae7e:	4293      	cmp	r3, r2
 800ae80:	d02b      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800ae82:	687b      	ldr	r3, [r7, #4]
 800ae84:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ae88:	d027      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800ae8a:	687b      	ldr	r3, [r7, #4]
 800ae8c:	4a2c      	ldr	r2, [pc, #176]	; (800af40 <TIM_Base_SetConfig+0x118>)
 800ae8e:	4293      	cmp	r3, r2
 800ae90:	d023      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800ae92:	687b      	ldr	r3, [r7, #4]
 800ae94:	4a2b      	ldr	r2, [pc, #172]	; (800af44 <TIM_Base_SetConfig+0x11c>)
 800ae96:	4293      	cmp	r3, r2
 800ae98:	d01f      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800ae9a:	687b      	ldr	r3, [r7, #4]
 800ae9c:	4a2a      	ldr	r2, [pc, #168]	; (800af48 <TIM_Base_SetConfig+0x120>)
 800ae9e:	4293      	cmp	r3, r2
 800aea0:	d01b      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800aea2:	687b      	ldr	r3, [r7, #4]
 800aea4:	4a29      	ldr	r2, [pc, #164]	; (800af4c <TIM_Base_SetConfig+0x124>)
 800aea6:	4293      	cmp	r3, r2
 800aea8:	d017      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800aeaa:	687b      	ldr	r3, [r7, #4]
 800aeac:	4a28      	ldr	r2, [pc, #160]	; (800af50 <TIM_Base_SetConfig+0x128>)
 800aeae:	4293      	cmp	r3, r2
 800aeb0:	d013      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800aeb2:	687b      	ldr	r3, [r7, #4]
 800aeb4:	4a27      	ldr	r2, [pc, #156]	; (800af54 <TIM_Base_SetConfig+0x12c>)
 800aeb6:	4293      	cmp	r3, r2
 800aeb8:	d00f      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800aeba:	687b      	ldr	r3, [r7, #4]
 800aebc:	4a26      	ldr	r2, [pc, #152]	; (800af58 <TIM_Base_SetConfig+0x130>)
 800aebe:	4293      	cmp	r3, r2
 800aec0:	d00b      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800aec2:	687b      	ldr	r3, [r7, #4]
 800aec4:	4a25      	ldr	r2, [pc, #148]	; (800af5c <TIM_Base_SetConfig+0x134>)
 800aec6:	4293      	cmp	r3, r2
 800aec8:	d007      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800aeca:	687b      	ldr	r3, [r7, #4]
 800aecc:	4a24      	ldr	r2, [pc, #144]	; (800af60 <TIM_Base_SetConfig+0x138>)
 800aece:	4293      	cmp	r3, r2
 800aed0:	d003      	beq.n	800aeda <TIM_Base_SetConfig+0xb2>
 800aed2:	687b      	ldr	r3, [r7, #4]
 800aed4:	4a23      	ldr	r2, [pc, #140]	; (800af64 <TIM_Base_SetConfig+0x13c>)
 800aed6:	4293      	cmp	r3, r2
 800aed8:	d108      	bne.n	800aeec <TIM_Base_SetConfig+0xc4>
 800aeda:	68fb      	ldr	r3, [r7, #12]
 800aedc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800aee0:	60fb      	str	r3, [r7, #12]
 800aee2:	683b      	ldr	r3, [r7, #0]
 800aee4:	68db      	ldr	r3, [r3, #12]
 800aee6:	68fa      	ldr	r2, [r7, #12]
 800aee8:	4313      	orrs	r3, r2
 800aeea:	60fb      	str	r3, [r7, #12]
 800aeec:	68fb      	ldr	r3, [r7, #12]
 800aeee:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800aef2:	683b      	ldr	r3, [r7, #0]
 800aef4:	695b      	ldr	r3, [r3, #20]
 800aef6:	4313      	orrs	r3, r2
 800aef8:	60fb      	str	r3, [r7, #12]
 800aefa:	687b      	ldr	r3, [r7, #4]
 800aefc:	68fa      	ldr	r2, [r7, #12]
 800aefe:	601a      	str	r2, [r3, #0]
 800af00:	683b      	ldr	r3, [r7, #0]
 800af02:	689a      	ldr	r2, [r3, #8]
 800af04:	687b      	ldr	r3, [r7, #4]
 800af06:	62da      	str	r2, [r3, #44]	; 0x2c
 800af08:	683b      	ldr	r3, [r7, #0]
 800af0a:	681a      	ldr	r2, [r3, #0]
 800af0c:	687b      	ldr	r3, [r7, #4]
 800af0e:	629a      	str	r2, [r3, #40]	; 0x28
 800af10:	687b      	ldr	r3, [r7, #4]
 800af12:	4a0a      	ldr	r2, [pc, #40]	; (800af3c <TIM_Base_SetConfig+0x114>)
 800af14:	4293      	cmp	r3, r2
 800af16:	d003      	beq.n	800af20 <TIM_Base_SetConfig+0xf8>
 800af18:	687b      	ldr	r3, [r7, #4]
 800af1a:	4a0c      	ldr	r2, [pc, #48]	; (800af4c <TIM_Base_SetConfig+0x124>)
 800af1c:	4293      	cmp	r3, r2
 800af1e:	d103      	bne.n	800af28 <TIM_Base_SetConfig+0x100>
 800af20:	683b      	ldr	r3, [r7, #0]
 800af22:	691a      	ldr	r2, [r3, #16]
 800af24:	687b      	ldr	r3, [r7, #4]
 800af26:	631a      	str	r2, [r3, #48]	; 0x30
 800af28:	687b      	ldr	r3, [r7, #4]
 800af2a:	2201      	movs	r2, #1
 800af2c:	615a      	str	r2, [r3, #20]
 800af2e:	bf00      	nop
 800af30:	3714      	adds	r7, #20
 800af32:	46bd      	mov	sp, r7
 800af34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af38:	4770      	bx	lr
 800af3a:	bf00      	nop
 800af3c:	40010000 	.word	0x40010000
 800af40:	40000400 	.word	0x40000400
 800af44:	40000800 	.word	0x40000800
 800af48:	40000c00 	.word	0x40000c00
 800af4c:	40010400 	.word	0x40010400
 800af50:	40014000 	.word	0x40014000
 800af54:	40014400 	.word	0x40014400
 800af58:	40014800 	.word	0x40014800
 800af5c:	40001800 	.word	0x40001800
 800af60:	40001c00 	.word	0x40001c00
 800af64:	40002000 	.word	0x40002000

0800af68 <TIM_TI1_ConfigInputStage>:
 800af68:	b480      	push	{r7}
 800af6a:	b087      	sub	sp, #28
 800af6c:	af00      	add	r7, sp, #0
 800af6e:	60f8      	str	r0, [r7, #12]
 800af70:	60b9      	str	r1, [r7, #8]
 800af72:	607a      	str	r2, [r7, #4]
 800af74:	68fb      	ldr	r3, [r7, #12]
 800af76:	6a1b      	ldr	r3, [r3, #32]
 800af78:	617b      	str	r3, [r7, #20]
 800af7a:	68fb      	ldr	r3, [r7, #12]
 800af7c:	6a1b      	ldr	r3, [r3, #32]
 800af7e:	f023 0201 	bic.w	r2, r3, #1
 800af82:	68fb      	ldr	r3, [r7, #12]
 800af84:	621a      	str	r2, [r3, #32]
 800af86:	68fb      	ldr	r3, [r7, #12]
 800af88:	699b      	ldr	r3, [r3, #24]
 800af8a:	613b      	str	r3, [r7, #16]
 800af8c:	693b      	ldr	r3, [r7, #16]
 800af8e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800af92:	613b      	str	r3, [r7, #16]
 800af94:	687b      	ldr	r3, [r7, #4]
 800af96:	011b      	lsls	r3, r3, #4
 800af98:	693a      	ldr	r2, [r7, #16]
 800af9a:	4313      	orrs	r3, r2
 800af9c:	613b      	str	r3, [r7, #16]
 800af9e:	697b      	ldr	r3, [r7, #20]
 800afa0:	f023 030a 	bic.w	r3, r3, #10
 800afa4:	617b      	str	r3, [r7, #20]
 800afa6:	697a      	ldr	r2, [r7, #20]
 800afa8:	68bb      	ldr	r3, [r7, #8]
 800afaa:	4313      	orrs	r3, r2
 800afac:	617b      	str	r3, [r7, #20]
 800afae:	68fb      	ldr	r3, [r7, #12]
 800afb0:	693a      	ldr	r2, [r7, #16]
 800afb2:	619a      	str	r2, [r3, #24]
 800afb4:	68fb      	ldr	r3, [r7, #12]
 800afb6:	697a      	ldr	r2, [r7, #20]
 800afb8:	621a      	str	r2, [r3, #32]
 800afba:	bf00      	nop
 800afbc:	371c      	adds	r7, #28
 800afbe:	46bd      	mov	sp, r7
 800afc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afc4:	4770      	bx	lr

0800afc6 <TIM_TI2_ConfigInputStage>:
 800afc6:	b480      	push	{r7}
 800afc8:	b087      	sub	sp, #28
 800afca:	af00      	add	r7, sp, #0
 800afcc:	60f8      	str	r0, [r7, #12]
 800afce:	60b9      	str	r1, [r7, #8]
 800afd0:	607a      	str	r2, [r7, #4]
 800afd2:	68fb      	ldr	r3, [r7, #12]
 800afd4:	6a1b      	ldr	r3, [r3, #32]
 800afd6:	f023 0210 	bic.w	r2, r3, #16
 800afda:	68fb      	ldr	r3, [r7, #12]
 800afdc:	621a      	str	r2, [r3, #32]
 800afde:	68fb      	ldr	r3, [r7, #12]
 800afe0:	699b      	ldr	r3, [r3, #24]
 800afe2:	617b      	str	r3, [r7, #20]
 800afe4:	68fb      	ldr	r3, [r7, #12]
 800afe6:	6a1b      	ldr	r3, [r3, #32]
 800afe8:	613b      	str	r3, [r7, #16]
 800afea:	697b      	ldr	r3, [r7, #20]
 800afec:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800aff0:	617b      	str	r3, [r7, #20]
 800aff2:	687b      	ldr	r3, [r7, #4]
 800aff4:	031b      	lsls	r3, r3, #12
 800aff6:	697a      	ldr	r2, [r7, #20]
 800aff8:	4313      	orrs	r3, r2
 800affa:	617b      	str	r3, [r7, #20]
 800affc:	693b      	ldr	r3, [r7, #16]
 800affe:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800b002:	613b      	str	r3, [r7, #16]
 800b004:	68bb      	ldr	r3, [r7, #8]
 800b006:	011b      	lsls	r3, r3, #4
 800b008:	693a      	ldr	r2, [r7, #16]
 800b00a:	4313      	orrs	r3, r2
 800b00c:	613b      	str	r3, [r7, #16]
 800b00e:	68fb      	ldr	r3, [r7, #12]
 800b010:	697a      	ldr	r2, [r7, #20]
 800b012:	619a      	str	r2, [r3, #24]
 800b014:	68fb      	ldr	r3, [r7, #12]
 800b016:	693a      	ldr	r2, [r7, #16]
 800b018:	621a      	str	r2, [r3, #32]
 800b01a:	bf00      	nop
 800b01c:	371c      	adds	r7, #28
 800b01e:	46bd      	mov	sp, r7
 800b020:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b024:	4770      	bx	lr

0800b026 <TIM_ITRx_SetConfig>:
 800b026:	b480      	push	{r7}
 800b028:	b085      	sub	sp, #20
 800b02a:	af00      	add	r7, sp, #0
 800b02c:	6078      	str	r0, [r7, #4]
 800b02e:	6039      	str	r1, [r7, #0]
 800b030:	687b      	ldr	r3, [r7, #4]
 800b032:	689b      	ldr	r3, [r3, #8]
 800b034:	60fb      	str	r3, [r7, #12]
 800b036:	68fb      	ldr	r3, [r7, #12]
 800b038:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b03c:	60fb      	str	r3, [r7, #12]
 800b03e:	683a      	ldr	r2, [r7, #0]
 800b040:	68fb      	ldr	r3, [r7, #12]
 800b042:	4313      	orrs	r3, r2
 800b044:	f043 0307 	orr.w	r3, r3, #7
 800b048:	60fb      	str	r3, [r7, #12]
 800b04a:	687b      	ldr	r3, [r7, #4]
 800b04c:	68fa      	ldr	r2, [r7, #12]
 800b04e:	609a      	str	r2, [r3, #8]
 800b050:	bf00      	nop
 800b052:	3714      	adds	r7, #20
 800b054:	46bd      	mov	sp, r7
 800b056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b05a:	4770      	bx	lr

0800b05c <TIM_ETR_SetConfig>:
 800b05c:	b480      	push	{r7}
 800b05e:	b087      	sub	sp, #28
 800b060:	af00      	add	r7, sp, #0
 800b062:	60f8      	str	r0, [r7, #12]
 800b064:	60b9      	str	r1, [r7, #8]
 800b066:	607a      	str	r2, [r7, #4]
 800b068:	603b      	str	r3, [r7, #0]
 800b06a:	68fb      	ldr	r3, [r7, #12]
 800b06c:	689b      	ldr	r3, [r3, #8]
 800b06e:	617b      	str	r3, [r7, #20]
 800b070:	697b      	ldr	r3, [r7, #20]
 800b072:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b076:	617b      	str	r3, [r7, #20]
 800b078:	683b      	ldr	r3, [r7, #0]
 800b07a:	021a      	lsls	r2, r3, #8
 800b07c:	687b      	ldr	r3, [r7, #4]
 800b07e:	431a      	orrs	r2, r3
 800b080:	68bb      	ldr	r3, [r7, #8]
 800b082:	4313      	orrs	r3, r2
 800b084:	697a      	ldr	r2, [r7, #20]
 800b086:	4313      	orrs	r3, r2
 800b088:	617b      	str	r3, [r7, #20]
 800b08a:	68fb      	ldr	r3, [r7, #12]
 800b08c:	697a      	ldr	r2, [r7, #20]
 800b08e:	609a      	str	r2, [r3, #8]
 800b090:	bf00      	nop
 800b092:	371c      	adds	r7, #28
 800b094:	46bd      	mov	sp, r7
 800b096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b09a:	4770      	bx	lr

0800b09c <HAL_TIMEx_MasterConfigSynchronization>:
 800b09c:	b480      	push	{r7}
 800b09e:	b085      	sub	sp, #20
 800b0a0:	af00      	add	r7, sp, #0
 800b0a2:	6078      	str	r0, [r7, #4]
 800b0a4:	6039      	str	r1, [r7, #0]
 800b0a6:	687b      	ldr	r3, [r7, #4]
 800b0a8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b0ac:	2b01      	cmp	r3, #1
 800b0ae:	d101      	bne.n	800b0b4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800b0b0:	2302      	movs	r3, #2
 800b0b2:	e05a      	b.n	800b16a <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800b0b4:	687b      	ldr	r3, [r7, #4]
 800b0b6:	2201      	movs	r2, #1
 800b0b8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b0bc:	687b      	ldr	r3, [r7, #4]
 800b0be:	2202      	movs	r2, #2
 800b0c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b0c4:	687b      	ldr	r3, [r7, #4]
 800b0c6:	681b      	ldr	r3, [r3, #0]
 800b0c8:	685b      	ldr	r3, [r3, #4]
 800b0ca:	60fb      	str	r3, [r7, #12]
 800b0cc:	687b      	ldr	r3, [r7, #4]
 800b0ce:	681b      	ldr	r3, [r3, #0]
 800b0d0:	689b      	ldr	r3, [r3, #8]
 800b0d2:	60bb      	str	r3, [r7, #8]
 800b0d4:	68fb      	ldr	r3, [r7, #12]
 800b0d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b0da:	60fb      	str	r3, [r7, #12]
 800b0dc:	683b      	ldr	r3, [r7, #0]
 800b0de:	681b      	ldr	r3, [r3, #0]
 800b0e0:	68fa      	ldr	r2, [r7, #12]
 800b0e2:	4313      	orrs	r3, r2
 800b0e4:	60fb      	str	r3, [r7, #12]
 800b0e6:	687b      	ldr	r3, [r7, #4]
 800b0e8:	681b      	ldr	r3, [r3, #0]
 800b0ea:	68fa      	ldr	r2, [r7, #12]
 800b0ec:	605a      	str	r2, [r3, #4]
 800b0ee:	687b      	ldr	r3, [r7, #4]
 800b0f0:	681b      	ldr	r3, [r3, #0]
 800b0f2:	4a21      	ldr	r2, [pc, #132]	; (800b178 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800b0f4:	4293      	cmp	r3, r2
 800b0f6:	d022      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b0f8:	687b      	ldr	r3, [r7, #4]
 800b0fa:	681b      	ldr	r3, [r3, #0]
 800b0fc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b100:	d01d      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b102:	687b      	ldr	r3, [r7, #4]
 800b104:	681b      	ldr	r3, [r3, #0]
 800b106:	4a1d      	ldr	r2, [pc, #116]	; (800b17c <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800b108:	4293      	cmp	r3, r2
 800b10a:	d018      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b10c:	687b      	ldr	r3, [r7, #4]
 800b10e:	681b      	ldr	r3, [r3, #0]
 800b110:	4a1b      	ldr	r2, [pc, #108]	; (800b180 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800b112:	4293      	cmp	r3, r2
 800b114:	d013      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b116:	687b      	ldr	r3, [r7, #4]
 800b118:	681b      	ldr	r3, [r3, #0]
 800b11a:	4a1a      	ldr	r2, [pc, #104]	; (800b184 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800b11c:	4293      	cmp	r3, r2
 800b11e:	d00e      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b120:	687b      	ldr	r3, [r7, #4]
 800b122:	681b      	ldr	r3, [r3, #0]
 800b124:	4a18      	ldr	r2, [pc, #96]	; (800b188 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800b126:	4293      	cmp	r3, r2
 800b128:	d009      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b12a:	687b      	ldr	r3, [r7, #4]
 800b12c:	681b      	ldr	r3, [r3, #0]
 800b12e:	4a17      	ldr	r2, [pc, #92]	; (800b18c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800b130:	4293      	cmp	r3, r2
 800b132:	d004      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b134:	687b      	ldr	r3, [r7, #4]
 800b136:	681b      	ldr	r3, [r3, #0]
 800b138:	4a15      	ldr	r2, [pc, #84]	; (800b190 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800b13a:	4293      	cmp	r3, r2
 800b13c:	d10c      	bne.n	800b158 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800b13e:	68bb      	ldr	r3, [r7, #8]
 800b140:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b144:	60bb      	str	r3, [r7, #8]
 800b146:	683b      	ldr	r3, [r7, #0]
 800b148:	685b      	ldr	r3, [r3, #4]
 800b14a:	68ba      	ldr	r2, [r7, #8]
 800b14c:	4313      	orrs	r3, r2
 800b14e:	60bb      	str	r3, [r7, #8]
 800b150:	687b      	ldr	r3, [r7, #4]
 800b152:	681b      	ldr	r3, [r3, #0]
 800b154:	68ba      	ldr	r2, [r7, #8]
 800b156:	609a      	str	r2, [r3, #8]
 800b158:	687b      	ldr	r3, [r7, #4]
 800b15a:	2201      	movs	r2, #1
 800b15c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b160:	687b      	ldr	r3, [r7, #4]
 800b162:	2200      	movs	r2, #0
 800b164:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b168:	2300      	movs	r3, #0
 800b16a:	4618      	mov	r0, r3
 800b16c:	3714      	adds	r7, #20
 800b16e:	46bd      	mov	sp, r7
 800b170:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b174:	4770      	bx	lr
 800b176:	bf00      	nop
 800b178:	40010000 	.word	0x40010000
 800b17c:	40000400 	.word	0x40000400
 800b180:	40000800 	.word	0x40000800
 800b184:	40000c00 	.word	0x40000c00
 800b188:	40010400 	.word	0x40010400
 800b18c:	40014000 	.word	0x40014000
 800b190:	40001800 	.word	0x40001800

0800b194 <HAL_TIMEx_CommutCallback>:
 800b194:	b480      	push	{r7}
 800b196:	b083      	sub	sp, #12
 800b198:	af00      	add	r7, sp, #0
 800b19a:	6078      	str	r0, [r7, #4]
 800b19c:	bf00      	nop
 800b19e:	370c      	adds	r7, #12
 800b1a0:	46bd      	mov	sp, r7
 800b1a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1a6:	4770      	bx	lr

0800b1a8 <HAL_TIMEx_BreakCallback>:
 800b1a8:	b480      	push	{r7}
 800b1aa:	b083      	sub	sp, #12
 800b1ac:	af00      	add	r7, sp, #0
 800b1ae:	6078      	str	r0, [r7, #4]
 800b1b0:	bf00      	nop
 800b1b2:	370c      	adds	r7, #12
 800b1b4:	46bd      	mov	sp, r7
 800b1b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1ba:	4770      	bx	lr

0800b1bc <HAL_UART_Init>:
 800b1bc:	b580      	push	{r7, lr}
 800b1be:	b082      	sub	sp, #8
 800b1c0:	af00      	add	r7, sp, #0
 800b1c2:	6078      	str	r0, [r7, #4]
 800b1c4:	687b      	ldr	r3, [r7, #4]
 800b1c6:	2b00      	cmp	r3, #0
 800b1c8:	d101      	bne.n	800b1ce <HAL_UART_Init+0x12>
 800b1ca:	2301      	movs	r3, #1
 800b1cc:	e03f      	b.n	800b24e <HAL_UART_Init+0x92>
 800b1ce:	687b      	ldr	r3, [r7, #4]
 800b1d0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b1d4:	b2db      	uxtb	r3, r3
 800b1d6:	2b00      	cmp	r3, #0
 800b1d8:	d106      	bne.n	800b1e8 <HAL_UART_Init+0x2c>
 800b1da:	687b      	ldr	r3, [r7, #4]
 800b1dc:	2200      	movs	r2, #0
 800b1de:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b1e2:	6878      	ldr	r0, [r7, #4]
 800b1e4:	f7fa fc72 	bl	8005acc <HAL_UART_MspInit>
 800b1e8:	687b      	ldr	r3, [r7, #4]
 800b1ea:	2224      	movs	r2, #36	; 0x24
 800b1ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b1f0:	687b      	ldr	r3, [r7, #4]
 800b1f2:	681b      	ldr	r3, [r3, #0]
 800b1f4:	68da      	ldr	r2, [r3, #12]
 800b1f6:	687b      	ldr	r3, [r7, #4]
 800b1f8:	681b      	ldr	r3, [r3, #0]
 800b1fa:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b1fe:	60da      	str	r2, [r3, #12]
 800b200:	6878      	ldr	r0, [r7, #4]
 800b202:	f000 fc7b 	bl	800bafc <UART_SetConfig>
 800b206:	687b      	ldr	r3, [r7, #4]
 800b208:	681b      	ldr	r3, [r3, #0]
 800b20a:	691a      	ldr	r2, [r3, #16]
 800b20c:	687b      	ldr	r3, [r7, #4]
 800b20e:	681b      	ldr	r3, [r3, #0]
 800b210:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800b214:	611a      	str	r2, [r3, #16]
 800b216:	687b      	ldr	r3, [r7, #4]
 800b218:	681b      	ldr	r3, [r3, #0]
 800b21a:	695a      	ldr	r2, [r3, #20]
 800b21c:	687b      	ldr	r3, [r7, #4]
 800b21e:	681b      	ldr	r3, [r3, #0]
 800b220:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800b224:	615a      	str	r2, [r3, #20]
 800b226:	687b      	ldr	r3, [r7, #4]
 800b228:	681b      	ldr	r3, [r3, #0]
 800b22a:	68da      	ldr	r2, [r3, #12]
 800b22c:	687b      	ldr	r3, [r7, #4]
 800b22e:	681b      	ldr	r3, [r3, #0]
 800b230:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b234:	60da      	str	r2, [r3, #12]
 800b236:	687b      	ldr	r3, [r7, #4]
 800b238:	2200      	movs	r2, #0
 800b23a:	641a      	str	r2, [r3, #64]	; 0x40
 800b23c:	687b      	ldr	r3, [r7, #4]
 800b23e:	2220      	movs	r2, #32
 800b240:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b244:	687b      	ldr	r3, [r7, #4]
 800b246:	2220      	movs	r2, #32
 800b248:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b24c:	2300      	movs	r3, #0
 800b24e:	4618      	mov	r0, r3
 800b250:	3708      	adds	r7, #8
 800b252:	46bd      	mov	sp, r7
 800b254:	bd80      	pop	{r7, pc}

0800b256 <HAL_UART_Transmit>:
 800b256:	b580      	push	{r7, lr}
 800b258:	b08a      	sub	sp, #40	; 0x28
 800b25a:	af02      	add	r7, sp, #8
 800b25c:	60f8      	str	r0, [r7, #12]
 800b25e:	60b9      	str	r1, [r7, #8]
 800b260:	603b      	str	r3, [r7, #0]
 800b262:	4613      	mov	r3, r2
 800b264:	80fb      	strh	r3, [r7, #6]
 800b266:	2300      	movs	r3, #0
 800b268:	617b      	str	r3, [r7, #20]
 800b26a:	68fb      	ldr	r3, [r7, #12]
 800b26c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b270:	b2db      	uxtb	r3, r3
 800b272:	2b20      	cmp	r3, #32
 800b274:	d17c      	bne.n	800b370 <HAL_UART_Transmit+0x11a>
 800b276:	68bb      	ldr	r3, [r7, #8]
 800b278:	2b00      	cmp	r3, #0
 800b27a:	d002      	beq.n	800b282 <HAL_UART_Transmit+0x2c>
 800b27c:	88fb      	ldrh	r3, [r7, #6]
 800b27e:	2b00      	cmp	r3, #0
 800b280:	d101      	bne.n	800b286 <HAL_UART_Transmit+0x30>
 800b282:	2301      	movs	r3, #1
 800b284:	e075      	b.n	800b372 <HAL_UART_Transmit+0x11c>
 800b286:	68fb      	ldr	r3, [r7, #12]
 800b288:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b28c:	2b01      	cmp	r3, #1
 800b28e:	d101      	bne.n	800b294 <HAL_UART_Transmit+0x3e>
 800b290:	2302      	movs	r3, #2
 800b292:	e06e      	b.n	800b372 <HAL_UART_Transmit+0x11c>
 800b294:	68fb      	ldr	r3, [r7, #12]
 800b296:	2201      	movs	r2, #1
 800b298:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b29c:	68fb      	ldr	r3, [r7, #12]
 800b29e:	2200      	movs	r2, #0
 800b2a0:	641a      	str	r2, [r3, #64]	; 0x40
 800b2a2:	68fb      	ldr	r3, [r7, #12]
 800b2a4:	2221      	movs	r2, #33	; 0x21
 800b2a6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b2aa:	f7fd fc6d 	bl	8008b88 <HAL_GetTick>
 800b2ae:	6178      	str	r0, [r7, #20]
 800b2b0:	68fb      	ldr	r3, [r7, #12]
 800b2b2:	88fa      	ldrh	r2, [r7, #6]
 800b2b4:	849a      	strh	r2, [r3, #36]	; 0x24
 800b2b6:	68fb      	ldr	r3, [r7, #12]
 800b2b8:	88fa      	ldrh	r2, [r7, #6]
 800b2ba:	84da      	strh	r2, [r3, #38]	; 0x26
 800b2bc:	68fb      	ldr	r3, [r7, #12]
 800b2be:	689b      	ldr	r3, [r3, #8]
 800b2c0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b2c4:	d108      	bne.n	800b2d8 <HAL_UART_Transmit+0x82>
 800b2c6:	68fb      	ldr	r3, [r7, #12]
 800b2c8:	691b      	ldr	r3, [r3, #16]
 800b2ca:	2b00      	cmp	r3, #0
 800b2cc:	d104      	bne.n	800b2d8 <HAL_UART_Transmit+0x82>
 800b2ce:	2300      	movs	r3, #0
 800b2d0:	61fb      	str	r3, [r7, #28]
 800b2d2:	68bb      	ldr	r3, [r7, #8]
 800b2d4:	61bb      	str	r3, [r7, #24]
 800b2d6:	e003      	b.n	800b2e0 <HAL_UART_Transmit+0x8a>
 800b2d8:	68bb      	ldr	r3, [r7, #8]
 800b2da:	61fb      	str	r3, [r7, #28]
 800b2dc:	2300      	movs	r3, #0
 800b2de:	61bb      	str	r3, [r7, #24]
 800b2e0:	68fb      	ldr	r3, [r7, #12]
 800b2e2:	2200      	movs	r2, #0
 800b2e4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b2e8:	e02a      	b.n	800b340 <HAL_UART_Transmit+0xea>
 800b2ea:	683b      	ldr	r3, [r7, #0]
 800b2ec:	9300      	str	r3, [sp, #0]
 800b2ee:	697b      	ldr	r3, [r7, #20]
 800b2f0:	2200      	movs	r2, #0
 800b2f2:	2180      	movs	r1, #128	; 0x80
 800b2f4:	68f8      	ldr	r0, [r7, #12]
 800b2f6:	f000 fa3d 	bl	800b774 <UART_WaitOnFlagUntilTimeout>
 800b2fa:	4603      	mov	r3, r0
 800b2fc:	2b00      	cmp	r3, #0
 800b2fe:	d001      	beq.n	800b304 <HAL_UART_Transmit+0xae>
 800b300:	2303      	movs	r3, #3
 800b302:	e036      	b.n	800b372 <HAL_UART_Transmit+0x11c>
 800b304:	69fb      	ldr	r3, [r7, #28]
 800b306:	2b00      	cmp	r3, #0
 800b308:	d10b      	bne.n	800b322 <HAL_UART_Transmit+0xcc>
 800b30a:	69bb      	ldr	r3, [r7, #24]
 800b30c:	881b      	ldrh	r3, [r3, #0]
 800b30e:	461a      	mov	r2, r3
 800b310:	68fb      	ldr	r3, [r7, #12]
 800b312:	681b      	ldr	r3, [r3, #0]
 800b314:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b318:	605a      	str	r2, [r3, #4]
 800b31a:	69bb      	ldr	r3, [r7, #24]
 800b31c:	3302      	adds	r3, #2
 800b31e:	61bb      	str	r3, [r7, #24]
 800b320:	e007      	b.n	800b332 <HAL_UART_Transmit+0xdc>
 800b322:	69fb      	ldr	r3, [r7, #28]
 800b324:	781a      	ldrb	r2, [r3, #0]
 800b326:	68fb      	ldr	r3, [r7, #12]
 800b328:	681b      	ldr	r3, [r3, #0]
 800b32a:	605a      	str	r2, [r3, #4]
 800b32c:	69fb      	ldr	r3, [r7, #28]
 800b32e:	3301      	adds	r3, #1
 800b330:	61fb      	str	r3, [r7, #28]
 800b332:	68fb      	ldr	r3, [r7, #12]
 800b334:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b336:	b29b      	uxth	r3, r3
 800b338:	3b01      	subs	r3, #1
 800b33a:	b29a      	uxth	r2, r3
 800b33c:	68fb      	ldr	r3, [r7, #12]
 800b33e:	84da      	strh	r2, [r3, #38]	; 0x26
 800b340:	68fb      	ldr	r3, [r7, #12]
 800b342:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b344:	b29b      	uxth	r3, r3
 800b346:	2b00      	cmp	r3, #0
 800b348:	d1cf      	bne.n	800b2ea <HAL_UART_Transmit+0x94>
 800b34a:	683b      	ldr	r3, [r7, #0]
 800b34c:	9300      	str	r3, [sp, #0]
 800b34e:	697b      	ldr	r3, [r7, #20]
 800b350:	2200      	movs	r2, #0
 800b352:	2140      	movs	r1, #64	; 0x40
 800b354:	68f8      	ldr	r0, [r7, #12]
 800b356:	f000 fa0d 	bl	800b774 <UART_WaitOnFlagUntilTimeout>
 800b35a:	4603      	mov	r3, r0
 800b35c:	2b00      	cmp	r3, #0
 800b35e:	d001      	beq.n	800b364 <HAL_UART_Transmit+0x10e>
 800b360:	2303      	movs	r3, #3
 800b362:	e006      	b.n	800b372 <HAL_UART_Transmit+0x11c>
 800b364:	68fb      	ldr	r3, [r7, #12]
 800b366:	2220      	movs	r2, #32
 800b368:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b36c:	2300      	movs	r3, #0
 800b36e:	e000      	b.n	800b372 <HAL_UART_Transmit+0x11c>
 800b370:	2302      	movs	r3, #2
 800b372:	4618      	mov	r0, r3
 800b374:	3720      	adds	r7, #32
 800b376:	46bd      	mov	sp, r7
 800b378:	bd80      	pop	{r7, pc}

0800b37a <HAL_UART_Receive_IT>:
 800b37a:	b580      	push	{r7, lr}
 800b37c:	b084      	sub	sp, #16
 800b37e:	af00      	add	r7, sp, #0
 800b380:	60f8      	str	r0, [r7, #12]
 800b382:	60b9      	str	r1, [r7, #8]
 800b384:	4613      	mov	r3, r2
 800b386:	80fb      	strh	r3, [r7, #6]
 800b388:	68fb      	ldr	r3, [r7, #12]
 800b38a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b38e:	b2db      	uxtb	r3, r3
 800b390:	2b20      	cmp	r3, #32
 800b392:	d11d      	bne.n	800b3d0 <HAL_UART_Receive_IT+0x56>
 800b394:	68bb      	ldr	r3, [r7, #8]
 800b396:	2b00      	cmp	r3, #0
 800b398:	d002      	beq.n	800b3a0 <HAL_UART_Receive_IT+0x26>
 800b39a:	88fb      	ldrh	r3, [r7, #6]
 800b39c:	2b00      	cmp	r3, #0
 800b39e:	d101      	bne.n	800b3a4 <HAL_UART_Receive_IT+0x2a>
 800b3a0:	2301      	movs	r3, #1
 800b3a2:	e016      	b.n	800b3d2 <HAL_UART_Receive_IT+0x58>
 800b3a4:	68fb      	ldr	r3, [r7, #12]
 800b3a6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b3aa:	2b01      	cmp	r3, #1
 800b3ac:	d101      	bne.n	800b3b2 <HAL_UART_Receive_IT+0x38>
 800b3ae:	2302      	movs	r3, #2
 800b3b0:	e00f      	b.n	800b3d2 <HAL_UART_Receive_IT+0x58>
 800b3b2:	68fb      	ldr	r3, [r7, #12]
 800b3b4:	2201      	movs	r2, #1
 800b3b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b3ba:	68fb      	ldr	r3, [r7, #12]
 800b3bc:	2200      	movs	r2, #0
 800b3be:	631a      	str	r2, [r3, #48]	; 0x30
 800b3c0:	88fb      	ldrh	r3, [r7, #6]
 800b3c2:	461a      	mov	r2, r3
 800b3c4:	68b9      	ldr	r1, [r7, #8]
 800b3c6:	68f8      	ldr	r0, [r7, #12]
 800b3c8:	f000 fa1e 	bl	800b808 <UART_Start_Receive_IT>
 800b3cc:	4603      	mov	r3, r0
 800b3ce:	e000      	b.n	800b3d2 <HAL_UART_Receive_IT+0x58>
 800b3d0:	2302      	movs	r3, #2
 800b3d2:	4618      	mov	r0, r3
 800b3d4:	3710      	adds	r7, #16
 800b3d6:	46bd      	mov	sp, r7
 800b3d8:	bd80      	pop	{r7, pc}
	...

0800b3dc <HAL_UART_IRQHandler>:
 800b3dc:	b580      	push	{r7, lr}
 800b3de:	b08a      	sub	sp, #40	; 0x28
 800b3e0:	af00      	add	r7, sp, #0
 800b3e2:	6078      	str	r0, [r7, #4]
 800b3e4:	687b      	ldr	r3, [r7, #4]
 800b3e6:	681b      	ldr	r3, [r3, #0]
 800b3e8:	681b      	ldr	r3, [r3, #0]
 800b3ea:	627b      	str	r3, [r7, #36]	; 0x24
 800b3ec:	687b      	ldr	r3, [r7, #4]
 800b3ee:	681b      	ldr	r3, [r3, #0]
 800b3f0:	68db      	ldr	r3, [r3, #12]
 800b3f2:	623b      	str	r3, [r7, #32]
 800b3f4:	687b      	ldr	r3, [r7, #4]
 800b3f6:	681b      	ldr	r3, [r3, #0]
 800b3f8:	695b      	ldr	r3, [r3, #20]
 800b3fa:	61fb      	str	r3, [r7, #28]
 800b3fc:	2300      	movs	r3, #0
 800b3fe:	61bb      	str	r3, [r7, #24]
 800b400:	2300      	movs	r3, #0
 800b402:	617b      	str	r3, [r7, #20]
 800b404:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b406:	f003 030f 	and.w	r3, r3, #15
 800b40a:	61bb      	str	r3, [r7, #24]
 800b40c:	69bb      	ldr	r3, [r7, #24]
 800b40e:	2b00      	cmp	r3, #0
 800b410:	d10d      	bne.n	800b42e <HAL_UART_IRQHandler+0x52>
 800b412:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b414:	f003 0320 	and.w	r3, r3, #32
 800b418:	2b00      	cmp	r3, #0
 800b41a:	d008      	beq.n	800b42e <HAL_UART_IRQHandler+0x52>
 800b41c:	6a3b      	ldr	r3, [r7, #32]
 800b41e:	f003 0320 	and.w	r3, r3, #32
 800b422:	2b00      	cmp	r3, #0
 800b424:	d003      	beq.n	800b42e <HAL_UART_IRQHandler+0x52>
 800b426:	6878      	ldr	r0, [r7, #4]
 800b428:	f000 fad1 	bl	800b9ce <UART_Receive_IT>
 800b42c:	e17c      	b.n	800b728 <HAL_UART_IRQHandler+0x34c>
 800b42e:	69bb      	ldr	r3, [r7, #24]
 800b430:	2b00      	cmp	r3, #0
 800b432:	f000 80b1 	beq.w	800b598 <HAL_UART_IRQHandler+0x1bc>
 800b436:	69fb      	ldr	r3, [r7, #28]
 800b438:	f003 0301 	and.w	r3, r3, #1
 800b43c:	2b00      	cmp	r3, #0
 800b43e:	d105      	bne.n	800b44c <HAL_UART_IRQHandler+0x70>
 800b440:	6a3b      	ldr	r3, [r7, #32]
 800b442:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800b446:	2b00      	cmp	r3, #0
 800b448:	f000 80a6 	beq.w	800b598 <HAL_UART_IRQHandler+0x1bc>
 800b44c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b44e:	f003 0301 	and.w	r3, r3, #1
 800b452:	2b00      	cmp	r3, #0
 800b454:	d00a      	beq.n	800b46c <HAL_UART_IRQHandler+0x90>
 800b456:	6a3b      	ldr	r3, [r7, #32]
 800b458:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b45c:	2b00      	cmp	r3, #0
 800b45e:	d005      	beq.n	800b46c <HAL_UART_IRQHandler+0x90>
 800b460:	687b      	ldr	r3, [r7, #4]
 800b462:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b464:	f043 0201 	orr.w	r2, r3, #1
 800b468:	687b      	ldr	r3, [r7, #4]
 800b46a:	641a      	str	r2, [r3, #64]	; 0x40
 800b46c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b46e:	f003 0304 	and.w	r3, r3, #4
 800b472:	2b00      	cmp	r3, #0
 800b474:	d00a      	beq.n	800b48c <HAL_UART_IRQHandler+0xb0>
 800b476:	69fb      	ldr	r3, [r7, #28]
 800b478:	f003 0301 	and.w	r3, r3, #1
 800b47c:	2b00      	cmp	r3, #0
 800b47e:	d005      	beq.n	800b48c <HAL_UART_IRQHandler+0xb0>
 800b480:	687b      	ldr	r3, [r7, #4]
 800b482:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b484:	f043 0202 	orr.w	r2, r3, #2
 800b488:	687b      	ldr	r3, [r7, #4]
 800b48a:	641a      	str	r2, [r3, #64]	; 0x40
 800b48c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b48e:	f003 0302 	and.w	r3, r3, #2
 800b492:	2b00      	cmp	r3, #0
 800b494:	d00a      	beq.n	800b4ac <HAL_UART_IRQHandler+0xd0>
 800b496:	69fb      	ldr	r3, [r7, #28]
 800b498:	f003 0301 	and.w	r3, r3, #1
 800b49c:	2b00      	cmp	r3, #0
 800b49e:	d005      	beq.n	800b4ac <HAL_UART_IRQHandler+0xd0>
 800b4a0:	687b      	ldr	r3, [r7, #4]
 800b4a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b4a4:	f043 0204 	orr.w	r2, r3, #4
 800b4a8:	687b      	ldr	r3, [r7, #4]
 800b4aa:	641a      	str	r2, [r3, #64]	; 0x40
 800b4ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b4ae:	f003 0308 	and.w	r3, r3, #8
 800b4b2:	2b00      	cmp	r3, #0
 800b4b4:	d00f      	beq.n	800b4d6 <HAL_UART_IRQHandler+0xfa>
 800b4b6:	6a3b      	ldr	r3, [r7, #32]
 800b4b8:	f003 0320 	and.w	r3, r3, #32
 800b4bc:	2b00      	cmp	r3, #0
 800b4be:	d104      	bne.n	800b4ca <HAL_UART_IRQHandler+0xee>
 800b4c0:	69fb      	ldr	r3, [r7, #28]
 800b4c2:	f003 0301 	and.w	r3, r3, #1
 800b4c6:	2b00      	cmp	r3, #0
 800b4c8:	d005      	beq.n	800b4d6 <HAL_UART_IRQHandler+0xfa>
 800b4ca:	687b      	ldr	r3, [r7, #4]
 800b4cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b4ce:	f043 0208 	orr.w	r2, r3, #8
 800b4d2:	687b      	ldr	r3, [r7, #4]
 800b4d4:	641a      	str	r2, [r3, #64]	; 0x40
 800b4d6:	687b      	ldr	r3, [r7, #4]
 800b4d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b4da:	2b00      	cmp	r3, #0
 800b4dc:	f000 811f 	beq.w	800b71e <HAL_UART_IRQHandler+0x342>
 800b4e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b4e2:	f003 0320 	and.w	r3, r3, #32
 800b4e6:	2b00      	cmp	r3, #0
 800b4e8:	d007      	beq.n	800b4fa <HAL_UART_IRQHandler+0x11e>
 800b4ea:	6a3b      	ldr	r3, [r7, #32]
 800b4ec:	f003 0320 	and.w	r3, r3, #32
 800b4f0:	2b00      	cmp	r3, #0
 800b4f2:	d002      	beq.n	800b4fa <HAL_UART_IRQHandler+0x11e>
 800b4f4:	6878      	ldr	r0, [r7, #4]
 800b4f6:	f000 fa6a 	bl	800b9ce <UART_Receive_IT>
 800b4fa:	687b      	ldr	r3, [r7, #4]
 800b4fc:	681b      	ldr	r3, [r3, #0]
 800b4fe:	695b      	ldr	r3, [r3, #20]
 800b500:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b504:	2b40      	cmp	r3, #64	; 0x40
 800b506:	bf0c      	ite	eq
 800b508:	2301      	moveq	r3, #1
 800b50a:	2300      	movne	r3, #0
 800b50c:	b2db      	uxtb	r3, r3
 800b50e:	617b      	str	r3, [r7, #20]
 800b510:	687b      	ldr	r3, [r7, #4]
 800b512:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b514:	f003 0308 	and.w	r3, r3, #8
 800b518:	2b00      	cmp	r3, #0
 800b51a:	d102      	bne.n	800b522 <HAL_UART_IRQHandler+0x146>
 800b51c:	697b      	ldr	r3, [r7, #20]
 800b51e:	2b00      	cmp	r3, #0
 800b520:	d031      	beq.n	800b586 <HAL_UART_IRQHandler+0x1aa>
 800b522:	6878      	ldr	r0, [r7, #4]
 800b524:	f000 f9aa 	bl	800b87c <UART_EndRxTransfer>
 800b528:	687b      	ldr	r3, [r7, #4]
 800b52a:	681b      	ldr	r3, [r3, #0]
 800b52c:	695b      	ldr	r3, [r3, #20]
 800b52e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b532:	2b40      	cmp	r3, #64	; 0x40
 800b534:	d123      	bne.n	800b57e <HAL_UART_IRQHandler+0x1a2>
 800b536:	687b      	ldr	r3, [r7, #4]
 800b538:	681b      	ldr	r3, [r3, #0]
 800b53a:	695a      	ldr	r2, [r3, #20]
 800b53c:	687b      	ldr	r3, [r7, #4]
 800b53e:	681b      	ldr	r3, [r3, #0]
 800b540:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b544:	615a      	str	r2, [r3, #20]
 800b546:	687b      	ldr	r3, [r7, #4]
 800b548:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b54a:	2b00      	cmp	r3, #0
 800b54c:	d013      	beq.n	800b576 <HAL_UART_IRQHandler+0x19a>
 800b54e:	687b      	ldr	r3, [r7, #4]
 800b550:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b552:	4a77      	ldr	r2, [pc, #476]	; (800b730 <HAL_UART_IRQHandler+0x354>)
 800b554:	651a      	str	r2, [r3, #80]	; 0x50
 800b556:	687b      	ldr	r3, [r7, #4]
 800b558:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b55a:	4618      	mov	r0, r3
 800b55c:	f7fd fca1 	bl	8008ea2 <HAL_DMA_Abort_IT>
 800b560:	4603      	mov	r3, r0
 800b562:	2b00      	cmp	r3, #0
 800b564:	d016      	beq.n	800b594 <HAL_UART_IRQHandler+0x1b8>
 800b566:	687b      	ldr	r3, [r7, #4]
 800b568:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b56a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b56c:	687a      	ldr	r2, [r7, #4]
 800b56e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800b570:	4610      	mov	r0, r2
 800b572:	4798      	blx	r3
 800b574:	e00e      	b.n	800b594 <HAL_UART_IRQHandler+0x1b8>
 800b576:	6878      	ldr	r0, [r7, #4]
 800b578:	f000 f8e6 	bl	800b748 <HAL_UART_ErrorCallback>
 800b57c:	e00a      	b.n	800b594 <HAL_UART_IRQHandler+0x1b8>
 800b57e:	6878      	ldr	r0, [r7, #4]
 800b580:	f000 f8e2 	bl	800b748 <HAL_UART_ErrorCallback>
 800b584:	e006      	b.n	800b594 <HAL_UART_IRQHandler+0x1b8>
 800b586:	6878      	ldr	r0, [r7, #4]
 800b588:	f000 f8de 	bl	800b748 <HAL_UART_ErrorCallback>
 800b58c:	687b      	ldr	r3, [r7, #4]
 800b58e:	2200      	movs	r2, #0
 800b590:	641a      	str	r2, [r3, #64]	; 0x40
 800b592:	e0c4      	b.n	800b71e <HAL_UART_IRQHandler+0x342>
 800b594:	bf00      	nop
 800b596:	e0c2      	b.n	800b71e <HAL_UART_IRQHandler+0x342>
 800b598:	687b      	ldr	r3, [r7, #4]
 800b59a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b59c:	2b01      	cmp	r3, #1
 800b59e:	f040 80a2 	bne.w	800b6e6 <HAL_UART_IRQHandler+0x30a>
 800b5a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b5a4:	f003 0310 	and.w	r3, r3, #16
 800b5a8:	2b00      	cmp	r3, #0
 800b5aa:	f000 809c 	beq.w	800b6e6 <HAL_UART_IRQHandler+0x30a>
 800b5ae:	6a3b      	ldr	r3, [r7, #32]
 800b5b0:	f003 0310 	and.w	r3, r3, #16
 800b5b4:	2b00      	cmp	r3, #0
 800b5b6:	f000 8096 	beq.w	800b6e6 <HAL_UART_IRQHandler+0x30a>
 800b5ba:	2300      	movs	r3, #0
 800b5bc:	60fb      	str	r3, [r7, #12]
 800b5be:	687b      	ldr	r3, [r7, #4]
 800b5c0:	681b      	ldr	r3, [r3, #0]
 800b5c2:	681b      	ldr	r3, [r3, #0]
 800b5c4:	60fb      	str	r3, [r7, #12]
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	681b      	ldr	r3, [r3, #0]
 800b5ca:	685b      	ldr	r3, [r3, #4]
 800b5cc:	60fb      	str	r3, [r7, #12]
 800b5ce:	68fb      	ldr	r3, [r7, #12]
 800b5d0:	687b      	ldr	r3, [r7, #4]
 800b5d2:	681b      	ldr	r3, [r3, #0]
 800b5d4:	695b      	ldr	r3, [r3, #20]
 800b5d6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b5da:	2b40      	cmp	r3, #64	; 0x40
 800b5dc:	d14f      	bne.n	800b67e <HAL_UART_IRQHandler+0x2a2>
 800b5de:	687b      	ldr	r3, [r7, #4]
 800b5e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b5e2:	681b      	ldr	r3, [r3, #0]
 800b5e4:	685b      	ldr	r3, [r3, #4]
 800b5e6:	823b      	strh	r3, [r7, #16]
 800b5e8:	8a3b      	ldrh	r3, [r7, #16]
 800b5ea:	2b00      	cmp	r3, #0
 800b5ec:	f000 8099 	beq.w	800b722 <HAL_UART_IRQHandler+0x346>
 800b5f0:	687b      	ldr	r3, [r7, #4]
 800b5f2:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800b5f4:	8a3a      	ldrh	r2, [r7, #16]
 800b5f6:	429a      	cmp	r2, r3
 800b5f8:	f080 8093 	bcs.w	800b722 <HAL_UART_IRQHandler+0x346>
 800b5fc:	687b      	ldr	r3, [r7, #4]
 800b5fe:	8a3a      	ldrh	r2, [r7, #16]
 800b600:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b602:	687b      	ldr	r3, [r7, #4]
 800b604:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b606:	69db      	ldr	r3, [r3, #28]
 800b608:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b60c:	d02b      	beq.n	800b666 <HAL_UART_IRQHandler+0x28a>
 800b60e:	687b      	ldr	r3, [r7, #4]
 800b610:	681b      	ldr	r3, [r3, #0]
 800b612:	68da      	ldr	r2, [r3, #12]
 800b614:	687b      	ldr	r3, [r7, #4]
 800b616:	681b      	ldr	r3, [r3, #0]
 800b618:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800b61c:	60da      	str	r2, [r3, #12]
 800b61e:	687b      	ldr	r3, [r7, #4]
 800b620:	681b      	ldr	r3, [r3, #0]
 800b622:	695a      	ldr	r2, [r3, #20]
 800b624:	687b      	ldr	r3, [r7, #4]
 800b626:	681b      	ldr	r3, [r3, #0]
 800b628:	f022 0201 	bic.w	r2, r2, #1
 800b62c:	615a      	str	r2, [r3, #20]
 800b62e:	687b      	ldr	r3, [r7, #4]
 800b630:	681b      	ldr	r3, [r3, #0]
 800b632:	695a      	ldr	r2, [r3, #20]
 800b634:	687b      	ldr	r3, [r7, #4]
 800b636:	681b      	ldr	r3, [r3, #0]
 800b638:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b63c:	615a      	str	r2, [r3, #20]
 800b63e:	687b      	ldr	r3, [r7, #4]
 800b640:	2220      	movs	r2, #32
 800b642:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b646:	687b      	ldr	r3, [r7, #4]
 800b648:	2200      	movs	r2, #0
 800b64a:	631a      	str	r2, [r3, #48]	; 0x30
 800b64c:	687b      	ldr	r3, [r7, #4]
 800b64e:	681b      	ldr	r3, [r3, #0]
 800b650:	68da      	ldr	r2, [r3, #12]
 800b652:	687b      	ldr	r3, [r7, #4]
 800b654:	681b      	ldr	r3, [r3, #0]
 800b656:	f022 0210 	bic.w	r2, r2, #16
 800b65a:	60da      	str	r2, [r3, #12]
 800b65c:	687b      	ldr	r3, [r7, #4]
 800b65e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b660:	4618      	mov	r0, r3
 800b662:	f7fd fbae 	bl	8008dc2 <HAL_DMA_Abort>
 800b666:	687b      	ldr	r3, [r7, #4]
 800b668:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b66a:	687b      	ldr	r3, [r7, #4]
 800b66c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b66e:	b29b      	uxth	r3, r3
 800b670:	1ad3      	subs	r3, r2, r3
 800b672:	b29b      	uxth	r3, r3
 800b674:	4619      	mov	r1, r3
 800b676:	6878      	ldr	r0, [r7, #4]
 800b678:	f000 f870 	bl	800b75c <HAL_UARTEx_RxEventCallback>
 800b67c:	e051      	b.n	800b722 <HAL_UART_IRQHandler+0x346>
 800b67e:	687b      	ldr	r3, [r7, #4]
 800b680:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b682:	687b      	ldr	r3, [r7, #4]
 800b684:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b686:	b29b      	uxth	r3, r3
 800b688:	1ad3      	subs	r3, r2, r3
 800b68a:	827b      	strh	r3, [r7, #18]
 800b68c:	687b      	ldr	r3, [r7, #4]
 800b68e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b690:	b29b      	uxth	r3, r3
 800b692:	2b00      	cmp	r3, #0
 800b694:	d047      	beq.n	800b726 <HAL_UART_IRQHandler+0x34a>
 800b696:	8a7b      	ldrh	r3, [r7, #18]
 800b698:	2b00      	cmp	r3, #0
 800b69a:	d044      	beq.n	800b726 <HAL_UART_IRQHandler+0x34a>
 800b69c:	687b      	ldr	r3, [r7, #4]
 800b69e:	681b      	ldr	r3, [r3, #0]
 800b6a0:	68da      	ldr	r2, [r3, #12]
 800b6a2:	687b      	ldr	r3, [r7, #4]
 800b6a4:	681b      	ldr	r3, [r3, #0]
 800b6a6:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800b6aa:	60da      	str	r2, [r3, #12]
 800b6ac:	687b      	ldr	r3, [r7, #4]
 800b6ae:	681b      	ldr	r3, [r3, #0]
 800b6b0:	695a      	ldr	r2, [r3, #20]
 800b6b2:	687b      	ldr	r3, [r7, #4]
 800b6b4:	681b      	ldr	r3, [r3, #0]
 800b6b6:	f022 0201 	bic.w	r2, r2, #1
 800b6ba:	615a      	str	r2, [r3, #20]
 800b6bc:	687b      	ldr	r3, [r7, #4]
 800b6be:	2220      	movs	r2, #32
 800b6c0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b6c4:	687b      	ldr	r3, [r7, #4]
 800b6c6:	2200      	movs	r2, #0
 800b6c8:	631a      	str	r2, [r3, #48]	; 0x30
 800b6ca:	687b      	ldr	r3, [r7, #4]
 800b6cc:	681b      	ldr	r3, [r3, #0]
 800b6ce:	68da      	ldr	r2, [r3, #12]
 800b6d0:	687b      	ldr	r3, [r7, #4]
 800b6d2:	681b      	ldr	r3, [r3, #0]
 800b6d4:	f022 0210 	bic.w	r2, r2, #16
 800b6d8:	60da      	str	r2, [r3, #12]
 800b6da:	8a7b      	ldrh	r3, [r7, #18]
 800b6dc:	4619      	mov	r1, r3
 800b6de:	6878      	ldr	r0, [r7, #4]
 800b6e0:	f000 f83c 	bl	800b75c <HAL_UARTEx_RxEventCallback>
 800b6e4:	e01f      	b.n	800b726 <HAL_UART_IRQHandler+0x34a>
 800b6e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b6e8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b6ec:	2b00      	cmp	r3, #0
 800b6ee:	d008      	beq.n	800b702 <HAL_UART_IRQHandler+0x326>
 800b6f0:	6a3b      	ldr	r3, [r7, #32]
 800b6f2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b6f6:	2b00      	cmp	r3, #0
 800b6f8:	d003      	beq.n	800b702 <HAL_UART_IRQHandler+0x326>
 800b6fa:	6878      	ldr	r0, [r7, #4]
 800b6fc:	f000 f8ff 	bl	800b8fe <UART_Transmit_IT>
 800b700:	e012      	b.n	800b728 <HAL_UART_IRQHandler+0x34c>
 800b702:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b704:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b708:	2b00      	cmp	r3, #0
 800b70a:	d00d      	beq.n	800b728 <HAL_UART_IRQHandler+0x34c>
 800b70c:	6a3b      	ldr	r3, [r7, #32]
 800b70e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b712:	2b00      	cmp	r3, #0
 800b714:	d008      	beq.n	800b728 <HAL_UART_IRQHandler+0x34c>
 800b716:	6878      	ldr	r0, [r7, #4]
 800b718:	f000 f941 	bl	800b99e <UART_EndTransmit_IT>
 800b71c:	e004      	b.n	800b728 <HAL_UART_IRQHandler+0x34c>
 800b71e:	bf00      	nop
 800b720:	e002      	b.n	800b728 <HAL_UART_IRQHandler+0x34c>
 800b722:	bf00      	nop
 800b724:	e000      	b.n	800b728 <HAL_UART_IRQHandler+0x34c>
 800b726:	bf00      	nop
 800b728:	3728      	adds	r7, #40	; 0x28
 800b72a:	46bd      	mov	sp, r7
 800b72c:	bd80      	pop	{r7, pc}
 800b72e:	bf00      	nop
 800b730:	0800b8d7 	.word	0x0800b8d7

0800b734 <HAL_UART_TxCpltCallback>:
 800b734:	b480      	push	{r7}
 800b736:	b083      	sub	sp, #12
 800b738:	af00      	add	r7, sp, #0
 800b73a:	6078      	str	r0, [r7, #4]
 800b73c:	bf00      	nop
 800b73e:	370c      	adds	r7, #12
 800b740:	46bd      	mov	sp, r7
 800b742:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b746:	4770      	bx	lr

0800b748 <HAL_UART_ErrorCallback>:
 800b748:	b480      	push	{r7}
 800b74a:	b083      	sub	sp, #12
 800b74c:	af00      	add	r7, sp, #0
 800b74e:	6078      	str	r0, [r7, #4]
 800b750:	bf00      	nop
 800b752:	370c      	adds	r7, #12
 800b754:	46bd      	mov	sp, r7
 800b756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b75a:	4770      	bx	lr

0800b75c <HAL_UARTEx_RxEventCallback>:
 800b75c:	b480      	push	{r7}
 800b75e:	b083      	sub	sp, #12
 800b760:	af00      	add	r7, sp, #0
 800b762:	6078      	str	r0, [r7, #4]
 800b764:	460b      	mov	r3, r1
 800b766:	807b      	strh	r3, [r7, #2]
 800b768:	bf00      	nop
 800b76a:	370c      	adds	r7, #12
 800b76c:	46bd      	mov	sp, r7
 800b76e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b772:	4770      	bx	lr

0800b774 <UART_WaitOnFlagUntilTimeout>:
 800b774:	b580      	push	{r7, lr}
 800b776:	b084      	sub	sp, #16
 800b778:	af00      	add	r7, sp, #0
 800b77a:	60f8      	str	r0, [r7, #12]
 800b77c:	60b9      	str	r1, [r7, #8]
 800b77e:	603b      	str	r3, [r7, #0]
 800b780:	4613      	mov	r3, r2
 800b782:	71fb      	strb	r3, [r7, #7]
 800b784:	e02c      	b.n	800b7e0 <UART_WaitOnFlagUntilTimeout+0x6c>
 800b786:	69bb      	ldr	r3, [r7, #24]
 800b788:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b78c:	d028      	beq.n	800b7e0 <UART_WaitOnFlagUntilTimeout+0x6c>
 800b78e:	69bb      	ldr	r3, [r7, #24]
 800b790:	2b00      	cmp	r3, #0
 800b792:	d007      	beq.n	800b7a4 <UART_WaitOnFlagUntilTimeout+0x30>
 800b794:	f7fd f9f8 	bl	8008b88 <HAL_GetTick>
 800b798:	4602      	mov	r2, r0
 800b79a:	683b      	ldr	r3, [r7, #0]
 800b79c:	1ad3      	subs	r3, r2, r3
 800b79e:	69ba      	ldr	r2, [r7, #24]
 800b7a0:	429a      	cmp	r2, r3
 800b7a2:	d21d      	bcs.n	800b7e0 <UART_WaitOnFlagUntilTimeout+0x6c>
 800b7a4:	68fb      	ldr	r3, [r7, #12]
 800b7a6:	681b      	ldr	r3, [r3, #0]
 800b7a8:	68da      	ldr	r2, [r3, #12]
 800b7aa:	68fb      	ldr	r3, [r7, #12]
 800b7ac:	681b      	ldr	r3, [r3, #0]
 800b7ae:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800b7b2:	60da      	str	r2, [r3, #12]
 800b7b4:	68fb      	ldr	r3, [r7, #12]
 800b7b6:	681b      	ldr	r3, [r3, #0]
 800b7b8:	695a      	ldr	r2, [r3, #20]
 800b7ba:	68fb      	ldr	r3, [r7, #12]
 800b7bc:	681b      	ldr	r3, [r3, #0]
 800b7be:	f022 0201 	bic.w	r2, r2, #1
 800b7c2:	615a      	str	r2, [r3, #20]
 800b7c4:	68fb      	ldr	r3, [r7, #12]
 800b7c6:	2220      	movs	r2, #32
 800b7c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b7cc:	68fb      	ldr	r3, [r7, #12]
 800b7ce:	2220      	movs	r2, #32
 800b7d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b7d4:	68fb      	ldr	r3, [r7, #12]
 800b7d6:	2200      	movs	r2, #0
 800b7d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b7dc:	2303      	movs	r3, #3
 800b7de:	e00f      	b.n	800b800 <UART_WaitOnFlagUntilTimeout+0x8c>
 800b7e0:	68fb      	ldr	r3, [r7, #12]
 800b7e2:	681b      	ldr	r3, [r3, #0]
 800b7e4:	681a      	ldr	r2, [r3, #0]
 800b7e6:	68bb      	ldr	r3, [r7, #8]
 800b7e8:	4013      	ands	r3, r2
 800b7ea:	68ba      	ldr	r2, [r7, #8]
 800b7ec:	429a      	cmp	r2, r3
 800b7ee:	bf0c      	ite	eq
 800b7f0:	2301      	moveq	r3, #1
 800b7f2:	2300      	movne	r3, #0
 800b7f4:	b2db      	uxtb	r3, r3
 800b7f6:	461a      	mov	r2, r3
 800b7f8:	79fb      	ldrb	r3, [r7, #7]
 800b7fa:	429a      	cmp	r2, r3
 800b7fc:	d0c3      	beq.n	800b786 <UART_WaitOnFlagUntilTimeout+0x12>
 800b7fe:	2300      	movs	r3, #0
 800b800:	4618      	mov	r0, r3
 800b802:	3710      	adds	r7, #16
 800b804:	46bd      	mov	sp, r7
 800b806:	bd80      	pop	{r7, pc}

0800b808 <UART_Start_Receive_IT>:
 800b808:	b480      	push	{r7}
 800b80a:	b085      	sub	sp, #20
 800b80c:	af00      	add	r7, sp, #0
 800b80e:	60f8      	str	r0, [r7, #12]
 800b810:	60b9      	str	r1, [r7, #8]
 800b812:	4613      	mov	r3, r2
 800b814:	80fb      	strh	r3, [r7, #6]
 800b816:	68fb      	ldr	r3, [r7, #12]
 800b818:	68ba      	ldr	r2, [r7, #8]
 800b81a:	629a      	str	r2, [r3, #40]	; 0x28
 800b81c:	68fb      	ldr	r3, [r7, #12]
 800b81e:	88fa      	ldrh	r2, [r7, #6]
 800b820:	859a      	strh	r2, [r3, #44]	; 0x2c
 800b822:	68fb      	ldr	r3, [r7, #12]
 800b824:	88fa      	ldrh	r2, [r7, #6]
 800b826:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b828:	68fb      	ldr	r3, [r7, #12]
 800b82a:	2200      	movs	r2, #0
 800b82c:	641a      	str	r2, [r3, #64]	; 0x40
 800b82e:	68fb      	ldr	r3, [r7, #12]
 800b830:	2222      	movs	r2, #34	; 0x22
 800b832:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b836:	68fb      	ldr	r3, [r7, #12]
 800b838:	2200      	movs	r2, #0
 800b83a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b83e:	68fb      	ldr	r3, [r7, #12]
 800b840:	681b      	ldr	r3, [r3, #0]
 800b842:	68da      	ldr	r2, [r3, #12]
 800b844:	68fb      	ldr	r3, [r7, #12]
 800b846:	681b      	ldr	r3, [r3, #0]
 800b848:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b84c:	60da      	str	r2, [r3, #12]
 800b84e:	68fb      	ldr	r3, [r7, #12]
 800b850:	681b      	ldr	r3, [r3, #0]
 800b852:	695a      	ldr	r2, [r3, #20]
 800b854:	68fb      	ldr	r3, [r7, #12]
 800b856:	681b      	ldr	r3, [r3, #0]
 800b858:	f042 0201 	orr.w	r2, r2, #1
 800b85c:	615a      	str	r2, [r3, #20]
 800b85e:	68fb      	ldr	r3, [r7, #12]
 800b860:	681b      	ldr	r3, [r3, #0]
 800b862:	68da      	ldr	r2, [r3, #12]
 800b864:	68fb      	ldr	r3, [r7, #12]
 800b866:	681b      	ldr	r3, [r3, #0]
 800b868:	f042 0220 	orr.w	r2, r2, #32
 800b86c:	60da      	str	r2, [r3, #12]
 800b86e:	2300      	movs	r3, #0
 800b870:	4618      	mov	r0, r3
 800b872:	3714      	adds	r7, #20
 800b874:	46bd      	mov	sp, r7
 800b876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b87a:	4770      	bx	lr

0800b87c <UART_EndRxTransfer>:
 800b87c:	b480      	push	{r7}
 800b87e:	b083      	sub	sp, #12
 800b880:	af00      	add	r7, sp, #0
 800b882:	6078      	str	r0, [r7, #4]
 800b884:	687b      	ldr	r3, [r7, #4]
 800b886:	681b      	ldr	r3, [r3, #0]
 800b888:	68da      	ldr	r2, [r3, #12]
 800b88a:	687b      	ldr	r3, [r7, #4]
 800b88c:	681b      	ldr	r3, [r3, #0]
 800b88e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800b892:	60da      	str	r2, [r3, #12]
 800b894:	687b      	ldr	r3, [r7, #4]
 800b896:	681b      	ldr	r3, [r3, #0]
 800b898:	695a      	ldr	r2, [r3, #20]
 800b89a:	687b      	ldr	r3, [r7, #4]
 800b89c:	681b      	ldr	r3, [r3, #0]
 800b89e:	f022 0201 	bic.w	r2, r2, #1
 800b8a2:	615a      	str	r2, [r3, #20]
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b8a8:	2b01      	cmp	r3, #1
 800b8aa:	d107      	bne.n	800b8bc <UART_EndRxTransfer+0x40>
 800b8ac:	687b      	ldr	r3, [r7, #4]
 800b8ae:	681b      	ldr	r3, [r3, #0]
 800b8b0:	68da      	ldr	r2, [r3, #12]
 800b8b2:	687b      	ldr	r3, [r7, #4]
 800b8b4:	681b      	ldr	r3, [r3, #0]
 800b8b6:	f022 0210 	bic.w	r2, r2, #16
 800b8ba:	60da      	str	r2, [r3, #12]
 800b8bc:	687b      	ldr	r3, [r7, #4]
 800b8be:	2220      	movs	r2, #32
 800b8c0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b8c4:	687b      	ldr	r3, [r7, #4]
 800b8c6:	2200      	movs	r2, #0
 800b8c8:	631a      	str	r2, [r3, #48]	; 0x30
 800b8ca:	bf00      	nop
 800b8cc:	370c      	adds	r7, #12
 800b8ce:	46bd      	mov	sp, r7
 800b8d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8d4:	4770      	bx	lr

0800b8d6 <UART_DMAAbortOnError>:
 800b8d6:	b580      	push	{r7, lr}
 800b8d8:	b084      	sub	sp, #16
 800b8da:	af00      	add	r7, sp, #0
 800b8dc:	6078      	str	r0, [r7, #4]
 800b8de:	687b      	ldr	r3, [r7, #4]
 800b8e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b8e2:	60fb      	str	r3, [r7, #12]
 800b8e4:	68fb      	ldr	r3, [r7, #12]
 800b8e6:	2200      	movs	r2, #0
 800b8e8:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b8ea:	68fb      	ldr	r3, [r7, #12]
 800b8ec:	2200      	movs	r2, #0
 800b8ee:	84da      	strh	r2, [r3, #38]	; 0x26
 800b8f0:	68f8      	ldr	r0, [r7, #12]
 800b8f2:	f7ff ff29 	bl	800b748 <HAL_UART_ErrorCallback>
 800b8f6:	bf00      	nop
 800b8f8:	3710      	adds	r7, #16
 800b8fa:	46bd      	mov	sp, r7
 800b8fc:	bd80      	pop	{r7, pc}

0800b8fe <UART_Transmit_IT>:
 800b8fe:	b480      	push	{r7}
 800b900:	b085      	sub	sp, #20
 800b902:	af00      	add	r7, sp, #0
 800b904:	6078      	str	r0, [r7, #4]
 800b906:	687b      	ldr	r3, [r7, #4]
 800b908:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b90c:	b2db      	uxtb	r3, r3
 800b90e:	2b21      	cmp	r3, #33	; 0x21
 800b910:	d13e      	bne.n	800b990 <UART_Transmit_IT+0x92>
 800b912:	687b      	ldr	r3, [r7, #4]
 800b914:	689b      	ldr	r3, [r3, #8]
 800b916:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b91a:	d114      	bne.n	800b946 <UART_Transmit_IT+0x48>
 800b91c:	687b      	ldr	r3, [r7, #4]
 800b91e:	691b      	ldr	r3, [r3, #16]
 800b920:	2b00      	cmp	r3, #0
 800b922:	d110      	bne.n	800b946 <UART_Transmit_IT+0x48>
 800b924:	687b      	ldr	r3, [r7, #4]
 800b926:	6a1b      	ldr	r3, [r3, #32]
 800b928:	60fb      	str	r3, [r7, #12]
 800b92a:	68fb      	ldr	r3, [r7, #12]
 800b92c:	881b      	ldrh	r3, [r3, #0]
 800b92e:	461a      	mov	r2, r3
 800b930:	687b      	ldr	r3, [r7, #4]
 800b932:	681b      	ldr	r3, [r3, #0]
 800b934:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b938:	605a      	str	r2, [r3, #4]
 800b93a:	687b      	ldr	r3, [r7, #4]
 800b93c:	6a1b      	ldr	r3, [r3, #32]
 800b93e:	1c9a      	adds	r2, r3, #2
 800b940:	687b      	ldr	r3, [r7, #4]
 800b942:	621a      	str	r2, [r3, #32]
 800b944:	e008      	b.n	800b958 <UART_Transmit_IT+0x5a>
 800b946:	687b      	ldr	r3, [r7, #4]
 800b948:	6a1b      	ldr	r3, [r3, #32]
 800b94a:	1c59      	adds	r1, r3, #1
 800b94c:	687a      	ldr	r2, [r7, #4]
 800b94e:	6211      	str	r1, [r2, #32]
 800b950:	781a      	ldrb	r2, [r3, #0]
 800b952:	687b      	ldr	r3, [r7, #4]
 800b954:	681b      	ldr	r3, [r3, #0]
 800b956:	605a      	str	r2, [r3, #4]
 800b958:	687b      	ldr	r3, [r7, #4]
 800b95a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b95c:	b29b      	uxth	r3, r3
 800b95e:	3b01      	subs	r3, #1
 800b960:	b29b      	uxth	r3, r3
 800b962:	687a      	ldr	r2, [r7, #4]
 800b964:	4619      	mov	r1, r3
 800b966:	84d1      	strh	r1, [r2, #38]	; 0x26
 800b968:	2b00      	cmp	r3, #0
 800b96a:	d10f      	bne.n	800b98c <UART_Transmit_IT+0x8e>
 800b96c:	687b      	ldr	r3, [r7, #4]
 800b96e:	681b      	ldr	r3, [r3, #0]
 800b970:	68da      	ldr	r2, [r3, #12]
 800b972:	687b      	ldr	r3, [r7, #4]
 800b974:	681b      	ldr	r3, [r3, #0]
 800b976:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800b97a:	60da      	str	r2, [r3, #12]
 800b97c:	687b      	ldr	r3, [r7, #4]
 800b97e:	681b      	ldr	r3, [r3, #0]
 800b980:	68da      	ldr	r2, [r3, #12]
 800b982:	687b      	ldr	r3, [r7, #4]
 800b984:	681b      	ldr	r3, [r3, #0]
 800b986:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800b98a:	60da      	str	r2, [r3, #12]
 800b98c:	2300      	movs	r3, #0
 800b98e:	e000      	b.n	800b992 <UART_Transmit_IT+0x94>
 800b990:	2302      	movs	r3, #2
 800b992:	4618      	mov	r0, r3
 800b994:	3714      	adds	r7, #20
 800b996:	46bd      	mov	sp, r7
 800b998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b99c:	4770      	bx	lr

0800b99e <UART_EndTransmit_IT>:
 800b99e:	b580      	push	{r7, lr}
 800b9a0:	b082      	sub	sp, #8
 800b9a2:	af00      	add	r7, sp, #0
 800b9a4:	6078      	str	r0, [r7, #4]
 800b9a6:	687b      	ldr	r3, [r7, #4]
 800b9a8:	681b      	ldr	r3, [r3, #0]
 800b9aa:	68da      	ldr	r2, [r3, #12]
 800b9ac:	687b      	ldr	r3, [r7, #4]
 800b9ae:	681b      	ldr	r3, [r3, #0]
 800b9b0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b9b4:	60da      	str	r2, [r3, #12]
 800b9b6:	687b      	ldr	r3, [r7, #4]
 800b9b8:	2220      	movs	r2, #32
 800b9ba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b9be:	6878      	ldr	r0, [r7, #4]
 800b9c0:	f7ff feb8 	bl	800b734 <HAL_UART_TxCpltCallback>
 800b9c4:	2300      	movs	r3, #0
 800b9c6:	4618      	mov	r0, r3
 800b9c8:	3708      	adds	r7, #8
 800b9ca:	46bd      	mov	sp, r7
 800b9cc:	bd80      	pop	{r7, pc}

0800b9ce <UART_Receive_IT>:
 800b9ce:	b580      	push	{r7, lr}
 800b9d0:	b084      	sub	sp, #16
 800b9d2:	af00      	add	r7, sp, #0
 800b9d4:	6078      	str	r0, [r7, #4]
 800b9d6:	687b      	ldr	r3, [r7, #4]
 800b9d8:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b9dc:	b2db      	uxtb	r3, r3
 800b9de:	2b22      	cmp	r3, #34	; 0x22
 800b9e0:	f040 8087 	bne.w	800baf2 <UART_Receive_IT+0x124>
 800b9e4:	687b      	ldr	r3, [r7, #4]
 800b9e6:	689b      	ldr	r3, [r3, #8]
 800b9e8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b9ec:	d117      	bne.n	800ba1e <UART_Receive_IT+0x50>
 800b9ee:	687b      	ldr	r3, [r7, #4]
 800b9f0:	691b      	ldr	r3, [r3, #16]
 800b9f2:	2b00      	cmp	r3, #0
 800b9f4:	d113      	bne.n	800ba1e <UART_Receive_IT+0x50>
 800b9f6:	2300      	movs	r3, #0
 800b9f8:	60fb      	str	r3, [r7, #12]
 800b9fa:	687b      	ldr	r3, [r7, #4]
 800b9fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b9fe:	60bb      	str	r3, [r7, #8]
 800ba00:	687b      	ldr	r3, [r7, #4]
 800ba02:	681b      	ldr	r3, [r3, #0]
 800ba04:	685b      	ldr	r3, [r3, #4]
 800ba06:	b29b      	uxth	r3, r3
 800ba08:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800ba0c:	b29a      	uxth	r2, r3
 800ba0e:	68bb      	ldr	r3, [r7, #8]
 800ba10:	801a      	strh	r2, [r3, #0]
 800ba12:	687b      	ldr	r3, [r7, #4]
 800ba14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ba16:	1c9a      	adds	r2, r3, #2
 800ba18:	687b      	ldr	r3, [r7, #4]
 800ba1a:	629a      	str	r2, [r3, #40]	; 0x28
 800ba1c:	e026      	b.n	800ba6c <UART_Receive_IT+0x9e>
 800ba1e:	687b      	ldr	r3, [r7, #4]
 800ba20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ba22:	60fb      	str	r3, [r7, #12]
 800ba24:	2300      	movs	r3, #0
 800ba26:	60bb      	str	r3, [r7, #8]
 800ba28:	687b      	ldr	r3, [r7, #4]
 800ba2a:	689b      	ldr	r3, [r3, #8]
 800ba2c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ba30:	d007      	beq.n	800ba42 <UART_Receive_IT+0x74>
 800ba32:	687b      	ldr	r3, [r7, #4]
 800ba34:	689b      	ldr	r3, [r3, #8]
 800ba36:	2b00      	cmp	r3, #0
 800ba38:	d10a      	bne.n	800ba50 <UART_Receive_IT+0x82>
 800ba3a:	687b      	ldr	r3, [r7, #4]
 800ba3c:	691b      	ldr	r3, [r3, #16]
 800ba3e:	2b00      	cmp	r3, #0
 800ba40:	d106      	bne.n	800ba50 <UART_Receive_IT+0x82>
 800ba42:	687b      	ldr	r3, [r7, #4]
 800ba44:	681b      	ldr	r3, [r3, #0]
 800ba46:	685b      	ldr	r3, [r3, #4]
 800ba48:	b2da      	uxtb	r2, r3
 800ba4a:	68fb      	ldr	r3, [r7, #12]
 800ba4c:	701a      	strb	r2, [r3, #0]
 800ba4e:	e008      	b.n	800ba62 <UART_Receive_IT+0x94>
 800ba50:	687b      	ldr	r3, [r7, #4]
 800ba52:	681b      	ldr	r3, [r3, #0]
 800ba54:	685b      	ldr	r3, [r3, #4]
 800ba56:	b2db      	uxtb	r3, r3
 800ba58:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800ba5c:	b2da      	uxtb	r2, r3
 800ba5e:	68fb      	ldr	r3, [r7, #12]
 800ba60:	701a      	strb	r2, [r3, #0]
 800ba62:	687b      	ldr	r3, [r7, #4]
 800ba64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ba66:	1c5a      	adds	r2, r3, #1
 800ba68:	687b      	ldr	r3, [r7, #4]
 800ba6a:	629a      	str	r2, [r3, #40]	; 0x28
 800ba6c:	687b      	ldr	r3, [r7, #4]
 800ba6e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800ba70:	b29b      	uxth	r3, r3
 800ba72:	3b01      	subs	r3, #1
 800ba74:	b29b      	uxth	r3, r3
 800ba76:	687a      	ldr	r2, [r7, #4]
 800ba78:	4619      	mov	r1, r3
 800ba7a:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800ba7c:	2b00      	cmp	r3, #0
 800ba7e:	d136      	bne.n	800baee <UART_Receive_IT+0x120>
 800ba80:	687b      	ldr	r3, [r7, #4]
 800ba82:	681b      	ldr	r3, [r3, #0]
 800ba84:	68da      	ldr	r2, [r3, #12]
 800ba86:	687b      	ldr	r3, [r7, #4]
 800ba88:	681b      	ldr	r3, [r3, #0]
 800ba8a:	f022 0220 	bic.w	r2, r2, #32
 800ba8e:	60da      	str	r2, [r3, #12]
 800ba90:	687b      	ldr	r3, [r7, #4]
 800ba92:	681b      	ldr	r3, [r3, #0]
 800ba94:	68da      	ldr	r2, [r3, #12]
 800ba96:	687b      	ldr	r3, [r7, #4]
 800ba98:	681b      	ldr	r3, [r3, #0]
 800ba9a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800ba9e:	60da      	str	r2, [r3, #12]
 800baa0:	687b      	ldr	r3, [r7, #4]
 800baa2:	681b      	ldr	r3, [r3, #0]
 800baa4:	695a      	ldr	r2, [r3, #20]
 800baa6:	687b      	ldr	r3, [r7, #4]
 800baa8:	681b      	ldr	r3, [r3, #0]
 800baaa:	f022 0201 	bic.w	r2, r2, #1
 800baae:	615a      	str	r2, [r3, #20]
 800bab0:	687b      	ldr	r3, [r7, #4]
 800bab2:	2220      	movs	r2, #32
 800bab4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800bab8:	687b      	ldr	r3, [r7, #4]
 800baba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800babc:	2b01      	cmp	r3, #1
 800babe:	d10e      	bne.n	800bade <UART_Receive_IT+0x110>
 800bac0:	687b      	ldr	r3, [r7, #4]
 800bac2:	681b      	ldr	r3, [r3, #0]
 800bac4:	68da      	ldr	r2, [r3, #12]
 800bac6:	687b      	ldr	r3, [r7, #4]
 800bac8:	681b      	ldr	r3, [r3, #0]
 800baca:	f022 0210 	bic.w	r2, r2, #16
 800bace:	60da      	str	r2, [r3, #12]
 800bad0:	687b      	ldr	r3, [r7, #4]
 800bad2:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800bad4:	4619      	mov	r1, r3
 800bad6:	6878      	ldr	r0, [r7, #4]
 800bad8:	f7ff fe40 	bl	800b75c <HAL_UARTEx_RxEventCallback>
 800badc:	e002      	b.n	800bae4 <UART_Receive_IT+0x116>
 800bade:	6878      	ldr	r0, [r7, #4]
 800bae0:	f7f5 fbd6 	bl	8001290 <HAL_UART_RxCpltCallback>
 800bae4:	687b      	ldr	r3, [r7, #4]
 800bae6:	2200      	movs	r2, #0
 800bae8:	631a      	str	r2, [r3, #48]	; 0x30
 800baea:	2300      	movs	r3, #0
 800baec:	e002      	b.n	800baf4 <UART_Receive_IT+0x126>
 800baee:	2300      	movs	r3, #0
 800baf0:	e000      	b.n	800baf4 <UART_Receive_IT+0x126>
 800baf2:	2302      	movs	r3, #2
 800baf4:	4618      	mov	r0, r3
 800baf6:	3710      	adds	r7, #16
 800baf8:	46bd      	mov	sp, r7
 800bafa:	bd80      	pop	{r7, pc}

0800bafc <UART_SetConfig>:
 800bafc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb00:	b09f      	sub	sp, #124	; 0x7c
 800bb02:	af00      	add	r7, sp, #0
 800bb04:	66f8      	str	r0, [r7, #108]	; 0x6c
 800bb06:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb08:	681b      	ldr	r3, [r3, #0]
 800bb0a:	691b      	ldr	r3, [r3, #16]
 800bb0c:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800bb10:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb12:	68d9      	ldr	r1, [r3, #12]
 800bb14:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb16:	681a      	ldr	r2, [r3, #0]
 800bb18:	ea40 0301 	orr.w	r3, r0, r1
 800bb1c:	6113      	str	r3, [r2, #16]
 800bb1e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb20:	689a      	ldr	r2, [r3, #8]
 800bb22:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb24:	691b      	ldr	r3, [r3, #16]
 800bb26:	431a      	orrs	r2, r3
 800bb28:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb2a:	695b      	ldr	r3, [r3, #20]
 800bb2c:	431a      	orrs	r2, r3
 800bb2e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb30:	69db      	ldr	r3, [r3, #28]
 800bb32:	4313      	orrs	r3, r2
 800bb34:	673b      	str	r3, [r7, #112]	; 0x70
 800bb36:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb38:	681b      	ldr	r3, [r3, #0]
 800bb3a:	68db      	ldr	r3, [r3, #12]
 800bb3c:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800bb40:	f021 010c 	bic.w	r1, r1, #12
 800bb44:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb46:	681a      	ldr	r2, [r3, #0]
 800bb48:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800bb4a:	430b      	orrs	r3, r1
 800bb4c:	60d3      	str	r3, [r2, #12]
 800bb4e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb50:	681b      	ldr	r3, [r3, #0]
 800bb52:	695b      	ldr	r3, [r3, #20]
 800bb54:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800bb58:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb5a:	6999      	ldr	r1, [r3, #24]
 800bb5c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb5e:	681a      	ldr	r2, [r3, #0]
 800bb60:	ea40 0301 	orr.w	r3, r0, r1
 800bb64:	6153      	str	r3, [r2, #20]
 800bb66:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb68:	681a      	ldr	r2, [r3, #0]
 800bb6a:	4bc5      	ldr	r3, [pc, #788]	; (800be80 <UART_SetConfig+0x384>)
 800bb6c:	429a      	cmp	r2, r3
 800bb6e:	d004      	beq.n	800bb7a <UART_SetConfig+0x7e>
 800bb70:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb72:	681a      	ldr	r2, [r3, #0]
 800bb74:	4bc3      	ldr	r3, [pc, #780]	; (800be84 <UART_SetConfig+0x388>)
 800bb76:	429a      	cmp	r2, r3
 800bb78:	d103      	bne.n	800bb82 <UART_SetConfig+0x86>
 800bb7a:	f7fd fc83 	bl	8009484 <HAL_RCC_GetPCLK2Freq>
 800bb7e:	6778      	str	r0, [r7, #116]	; 0x74
 800bb80:	e002      	b.n	800bb88 <UART_SetConfig+0x8c>
 800bb82:	f7fd fc6b 	bl	800945c <HAL_RCC_GetPCLK1Freq>
 800bb86:	6778      	str	r0, [r7, #116]	; 0x74
 800bb88:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bb8a:	69db      	ldr	r3, [r3, #28]
 800bb8c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800bb90:	f040 80b6 	bne.w	800bd00 <UART_SetConfig+0x204>
 800bb94:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800bb96:	461c      	mov	r4, r3
 800bb98:	f04f 0500 	mov.w	r5, #0
 800bb9c:	4622      	mov	r2, r4
 800bb9e:	462b      	mov	r3, r5
 800bba0:	1891      	adds	r1, r2, r2
 800bba2:	6439      	str	r1, [r7, #64]	; 0x40
 800bba4:	415b      	adcs	r3, r3
 800bba6:	647b      	str	r3, [r7, #68]	; 0x44
 800bba8:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800bbac:	1912      	adds	r2, r2, r4
 800bbae:	eb45 0303 	adc.w	r3, r5, r3
 800bbb2:	f04f 0000 	mov.w	r0, #0
 800bbb6:	f04f 0100 	mov.w	r1, #0
 800bbba:	00d9      	lsls	r1, r3, #3
 800bbbc:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800bbc0:	00d0      	lsls	r0, r2, #3
 800bbc2:	4602      	mov	r2, r0
 800bbc4:	460b      	mov	r3, r1
 800bbc6:	1911      	adds	r1, r2, r4
 800bbc8:	6639      	str	r1, [r7, #96]	; 0x60
 800bbca:	416b      	adcs	r3, r5
 800bbcc:	667b      	str	r3, [r7, #100]	; 0x64
 800bbce:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bbd0:	685b      	ldr	r3, [r3, #4]
 800bbd2:	461a      	mov	r2, r3
 800bbd4:	f04f 0300 	mov.w	r3, #0
 800bbd8:	1891      	adds	r1, r2, r2
 800bbda:	63b9      	str	r1, [r7, #56]	; 0x38
 800bbdc:	415b      	adcs	r3, r3
 800bbde:	63fb      	str	r3, [r7, #60]	; 0x3c
 800bbe0:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800bbe4:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800bbe8:	f7f4 ffea 	bl	8000bc0 <__aeabi_uldivmod>
 800bbec:	4602      	mov	r2, r0
 800bbee:	460b      	mov	r3, r1
 800bbf0:	4ba5      	ldr	r3, [pc, #660]	; (800be88 <UART_SetConfig+0x38c>)
 800bbf2:	fba3 2302 	umull	r2, r3, r3, r2
 800bbf6:	095b      	lsrs	r3, r3, #5
 800bbf8:	011e      	lsls	r6, r3, #4
 800bbfa:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800bbfc:	461c      	mov	r4, r3
 800bbfe:	f04f 0500 	mov.w	r5, #0
 800bc02:	4622      	mov	r2, r4
 800bc04:	462b      	mov	r3, r5
 800bc06:	1891      	adds	r1, r2, r2
 800bc08:	6339      	str	r1, [r7, #48]	; 0x30
 800bc0a:	415b      	adcs	r3, r3
 800bc0c:	637b      	str	r3, [r7, #52]	; 0x34
 800bc0e:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800bc12:	1912      	adds	r2, r2, r4
 800bc14:	eb45 0303 	adc.w	r3, r5, r3
 800bc18:	f04f 0000 	mov.w	r0, #0
 800bc1c:	f04f 0100 	mov.w	r1, #0
 800bc20:	00d9      	lsls	r1, r3, #3
 800bc22:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800bc26:	00d0      	lsls	r0, r2, #3
 800bc28:	4602      	mov	r2, r0
 800bc2a:	460b      	mov	r3, r1
 800bc2c:	1911      	adds	r1, r2, r4
 800bc2e:	65b9      	str	r1, [r7, #88]	; 0x58
 800bc30:	416b      	adcs	r3, r5
 800bc32:	65fb      	str	r3, [r7, #92]	; 0x5c
 800bc34:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bc36:	685b      	ldr	r3, [r3, #4]
 800bc38:	461a      	mov	r2, r3
 800bc3a:	f04f 0300 	mov.w	r3, #0
 800bc3e:	1891      	adds	r1, r2, r2
 800bc40:	62b9      	str	r1, [r7, #40]	; 0x28
 800bc42:	415b      	adcs	r3, r3
 800bc44:	62fb      	str	r3, [r7, #44]	; 0x2c
 800bc46:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800bc4a:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800bc4e:	f7f4 ffb7 	bl	8000bc0 <__aeabi_uldivmod>
 800bc52:	4602      	mov	r2, r0
 800bc54:	460b      	mov	r3, r1
 800bc56:	4b8c      	ldr	r3, [pc, #560]	; (800be88 <UART_SetConfig+0x38c>)
 800bc58:	fba3 1302 	umull	r1, r3, r3, r2
 800bc5c:	095b      	lsrs	r3, r3, #5
 800bc5e:	2164      	movs	r1, #100	; 0x64
 800bc60:	fb01 f303 	mul.w	r3, r1, r3
 800bc64:	1ad3      	subs	r3, r2, r3
 800bc66:	00db      	lsls	r3, r3, #3
 800bc68:	3332      	adds	r3, #50	; 0x32
 800bc6a:	4a87      	ldr	r2, [pc, #540]	; (800be88 <UART_SetConfig+0x38c>)
 800bc6c:	fba2 2303 	umull	r2, r3, r2, r3
 800bc70:	095b      	lsrs	r3, r3, #5
 800bc72:	005b      	lsls	r3, r3, #1
 800bc74:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800bc78:	441e      	add	r6, r3
 800bc7a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800bc7c:	4618      	mov	r0, r3
 800bc7e:	f04f 0100 	mov.w	r1, #0
 800bc82:	4602      	mov	r2, r0
 800bc84:	460b      	mov	r3, r1
 800bc86:	1894      	adds	r4, r2, r2
 800bc88:	623c      	str	r4, [r7, #32]
 800bc8a:	415b      	adcs	r3, r3
 800bc8c:	627b      	str	r3, [r7, #36]	; 0x24
 800bc8e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800bc92:	1812      	adds	r2, r2, r0
 800bc94:	eb41 0303 	adc.w	r3, r1, r3
 800bc98:	f04f 0400 	mov.w	r4, #0
 800bc9c:	f04f 0500 	mov.w	r5, #0
 800bca0:	00dd      	lsls	r5, r3, #3
 800bca2:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800bca6:	00d4      	lsls	r4, r2, #3
 800bca8:	4622      	mov	r2, r4
 800bcaa:	462b      	mov	r3, r5
 800bcac:	1814      	adds	r4, r2, r0
 800bcae:	653c      	str	r4, [r7, #80]	; 0x50
 800bcb0:	414b      	adcs	r3, r1
 800bcb2:	657b      	str	r3, [r7, #84]	; 0x54
 800bcb4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bcb6:	685b      	ldr	r3, [r3, #4]
 800bcb8:	461a      	mov	r2, r3
 800bcba:	f04f 0300 	mov.w	r3, #0
 800bcbe:	1891      	adds	r1, r2, r2
 800bcc0:	61b9      	str	r1, [r7, #24]
 800bcc2:	415b      	adcs	r3, r3
 800bcc4:	61fb      	str	r3, [r7, #28]
 800bcc6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800bcca:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800bcce:	f7f4 ff77 	bl	8000bc0 <__aeabi_uldivmod>
 800bcd2:	4602      	mov	r2, r0
 800bcd4:	460b      	mov	r3, r1
 800bcd6:	4b6c      	ldr	r3, [pc, #432]	; (800be88 <UART_SetConfig+0x38c>)
 800bcd8:	fba3 1302 	umull	r1, r3, r3, r2
 800bcdc:	095b      	lsrs	r3, r3, #5
 800bcde:	2164      	movs	r1, #100	; 0x64
 800bce0:	fb01 f303 	mul.w	r3, r1, r3
 800bce4:	1ad3      	subs	r3, r2, r3
 800bce6:	00db      	lsls	r3, r3, #3
 800bce8:	3332      	adds	r3, #50	; 0x32
 800bcea:	4a67      	ldr	r2, [pc, #412]	; (800be88 <UART_SetConfig+0x38c>)
 800bcec:	fba2 2303 	umull	r2, r3, r2, r3
 800bcf0:	095b      	lsrs	r3, r3, #5
 800bcf2:	f003 0207 	and.w	r2, r3, #7
 800bcf6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bcf8:	681b      	ldr	r3, [r3, #0]
 800bcfa:	4432      	add	r2, r6
 800bcfc:	609a      	str	r2, [r3, #8]
 800bcfe:	e0b9      	b.n	800be74 <UART_SetConfig+0x378>
 800bd00:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800bd02:	461c      	mov	r4, r3
 800bd04:	f04f 0500 	mov.w	r5, #0
 800bd08:	4622      	mov	r2, r4
 800bd0a:	462b      	mov	r3, r5
 800bd0c:	1891      	adds	r1, r2, r2
 800bd0e:	6139      	str	r1, [r7, #16]
 800bd10:	415b      	adcs	r3, r3
 800bd12:	617b      	str	r3, [r7, #20]
 800bd14:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800bd18:	1912      	adds	r2, r2, r4
 800bd1a:	eb45 0303 	adc.w	r3, r5, r3
 800bd1e:	f04f 0000 	mov.w	r0, #0
 800bd22:	f04f 0100 	mov.w	r1, #0
 800bd26:	00d9      	lsls	r1, r3, #3
 800bd28:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800bd2c:	00d0      	lsls	r0, r2, #3
 800bd2e:	4602      	mov	r2, r0
 800bd30:	460b      	mov	r3, r1
 800bd32:	eb12 0804 	adds.w	r8, r2, r4
 800bd36:	eb43 0905 	adc.w	r9, r3, r5
 800bd3a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bd3c:	685b      	ldr	r3, [r3, #4]
 800bd3e:	4618      	mov	r0, r3
 800bd40:	f04f 0100 	mov.w	r1, #0
 800bd44:	f04f 0200 	mov.w	r2, #0
 800bd48:	f04f 0300 	mov.w	r3, #0
 800bd4c:	008b      	lsls	r3, r1, #2
 800bd4e:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 800bd52:	0082      	lsls	r2, r0, #2
 800bd54:	4640      	mov	r0, r8
 800bd56:	4649      	mov	r1, r9
 800bd58:	f7f4 ff32 	bl	8000bc0 <__aeabi_uldivmod>
 800bd5c:	4602      	mov	r2, r0
 800bd5e:	460b      	mov	r3, r1
 800bd60:	4b49      	ldr	r3, [pc, #292]	; (800be88 <UART_SetConfig+0x38c>)
 800bd62:	fba3 2302 	umull	r2, r3, r3, r2
 800bd66:	095b      	lsrs	r3, r3, #5
 800bd68:	011e      	lsls	r6, r3, #4
 800bd6a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800bd6c:	4618      	mov	r0, r3
 800bd6e:	f04f 0100 	mov.w	r1, #0
 800bd72:	4602      	mov	r2, r0
 800bd74:	460b      	mov	r3, r1
 800bd76:	1894      	adds	r4, r2, r2
 800bd78:	60bc      	str	r4, [r7, #8]
 800bd7a:	415b      	adcs	r3, r3
 800bd7c:	60fb      	str	r3, [r7, #12]
 800bd7e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800bd82:	1812      	adds	r2, r2, r0
 800bd84:	eb41 0303 	adc.w	r3, r1, r3
 800bd88:	f04f 0400 	mov.w	r4, #0
 800bd8c:	f04f 0500 	mov.w	r5, #0
 800bd90:	00dd      	lsls	r5, r3, #3
 800bd92:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800bd96:	00d4      	lsls	r4, r2, #3
 800bd98:	4622      	mov	r2, r4
 800bd9a:	462b      	mov	r3, r5
 800bd9c:	1814      	adds	r4, r2, r0
 800bd9e:	64bc      	str	r4, [r7, #72]	; 0x48
 800bda0:	414b      	adcs	r3, r1
 800bda2:	64fb      	str	r3, [r7, #76]	; 0x4c
 800bda4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bda6:	685b      	ldr	r3, [r3, #4]
 800bda8:	4618      	mov	r0, r3
 800bdaa:	f04f 0100 	mov.w	r1, #0
 800bdae:	f04f 0200 	mov.w	r2, #0
 800bdb2:	f04f 0300 	mov.w	r3, #0
 800bdb6:	008b      	lsls	r3, r1, #2
 800bdb8:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 800bdbc:	0082      	lsls	r2, r0, #2
 800bdbe:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800bdc2:	f7f4 fefd 	bl	8000bc0 <__aeabi_uldivmod>
 800bdc6:	4602      	mov	r2, r0
 800bdc8:	460b      	mov	r3, r1
 800bdca:	4b2f      	ldr	r3, [pc, #188]	; (800be88 <UART_SetConfig+0x38c>)
 800bdcc:	fba3 1302 	umull	r1, r3, r3, r2
 800bdd0:	095b      	lsrs	r3, r3, #5
 800bdd2:	2164      	movs	r1, #100	; 0x64
 800bdd4:	fb01 f303 	mul.w	r3, r1, r3
 800bdd8:	1ad3      	subs	r3, r2, r3
 800bdda:	011b      	lsls	r3, r3, #4
 800bddc:	3332      	adds	r3, #50	; 0x32
 800bdde:	4a2a      	ldr	r2, [pc, #168]	; (800be88 <UART_SetConfig+0x38c>)
 800bde0:	fba2 2303 	umull	r2, r3, r2, r3
 800bde4:	095b      	lsrs	r3, r3, #5
 800bde6:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800bdea:	441e      	add	r6, r3
 800bdec:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800bdee:	4618      	mov	r0, r3
 800bdf0:	f04f 0100 	mov.w	r1, #0
 800bdf4:	4602      	mov	r2, r0
 800bdf6:	460b      	mov	r3, r1
 800bdf8:	1894      	adds	r4, r2, r2
 800bdfa:	603c      	str	r4, [r7, #0]
 800bdfc:	415b      	adcs	r3, r3
 800bdfe:	607b      	str	r3, [r7, #4]
 800be00:	e9d7 2300 	ldrd	r2, r3, [r7]
 800be04:	1812      	adds	r2, r2, r0
 800be06:	eb41 0303 	adc.w	r3, r1, r3
 800be0a:	f04f 0400 	mov.w	r4, #0
 800be0e:	f04f 0500 	mov.w	r5, #0
 800be12:	00dd      	lsls	r5, r3, #3
 800be14:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800be18:	00d4      	lsls	r4, r2, #3
 800be1a:	4622      	mov	r2, r4
 800be1c:	462b      	mov	r3, r5
 800be1e:	eb12 0a00 	adds.w	sl, r2, r0
 800be22:	eb43 0b01 	adc.w	fp, r3, r1
 800be26:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800be28:	685b      	ldr	r3, [r3, #4]
 800be2a:	4618      	mov	r0, r3
 800be2c:	f04f 0100 	mov.w	r1, #0
 800be30:	f04f 0200 	mov.w	r2, #0
 800be34:	f04f 0300 	mov.w	r3, #0
 800be38:	008b      	lsls	r3, r1, #2
 800be3a:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 800be3e:	0082      	lsls	r2, r0, #2
 800be40:	4650      	mov	r0, sl
 800be42:	4659      	mov	r1, fp
 800be44:	f7f4 febc 	bl	8000bc0 <__aeabi_uldivmod>
 800be48:	4602      	mov	r2, r0
 800be4a:	460b      	mov	r3, r1
 800be4c:	4b0e      	ldr	r3, [pc, #56]	; (800be88 <UART_SetConfig+0x38c>)
 800be4e:	fba3 1302 	umull	r1, r3, r3, r2
 800be52:	095b      	lsrs	r3, r3, #5
 800be54:	2164      	movs	r1, #100	; 0x64
 800be56:	fb01 f303 	mul.w	r3, r1, r3
 800be5a:	1ad3      	subs	r3, r2, r3
 800be5c:	011b      	lsls	r3, r3, #4
 800be5e:	3332      	adds	r3, #50	; 0x32
 800be60:	4a09      	ldr	r2, [pc, #36]	; (800be88 <UART_SetConfig+0x38c>)
 800be62:	fba2 2303 	umull	r2, r3, r2, r3
 800be66:	095b      	lsrs	r3, r3, #5
 800be68:	f003 020f 	and.w	r2, r3, #15
 800be6c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800be6e:	681b      	ldr	r3, [r3, #0]
 800be70:	4432      	add	r2, r6
 800be72:	609a      	str	r2, [r3, #8]
 800be74:	bf00      	nop
 800be76:	377c      	adds	r7, #124	; 0x7c
 800be78:	46bd      	mov	sp, r7
 800be7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be7e:	bf00      	nop
 800be80:	40011000 	.word	0x40011000
 800be84:	40011400 	.word	0x40011400
 800be88:	51eb851f 	.word	0x51eb851f

0800be8c <__errno>:
 800be8c:	4b01      	ldr	r3, [pc, #4]	; (800be94 <__errno+0x8>)
 800be8e:	6818      	ldr	r0, [r3, #0]
 800be90:	4770      	bx	lr
 800be92:	bf00      	nop
 800be94:	20000224 	.word	0x20000224

0800be98 <__libc_init_array>:
 800be98:	b570      	push	{r4, r5, r6, lr}
 800be9a:	4d0d      	ldr	r5, [pc, #52]	; (800bed0 <__libc_init_array+0x38>)
 800be9c:	4c0d      	ldr	r4, [pc, #52]	; (800bed4 <__libc_init_array+0x3c>)
 800be9e:	1b64      	subs	r4, r4, r5
 800bea0:	10a4      	asrs	r4, r4, #2
 800bea2:	2600      	movs	r6, #0
 800bea4:	42a6      	cmp	r6, r4
 800bea6:	d109      	bne.n	800bebc <__libc_init_array+0x24>
 800bea8:	4d0b      	ldr	r5, [pc, #44]	; (800bed8 <__libc_init_array+0x40>)
 800beaa:	4c0c      	ldr	r4, [pc, #48]	; (800bedc <__libc_init_array+0x44>)
 800beac:	f001 f88e 	bl	800cfcc <_init>
 800beb0:	1b64      	subs	r4, r4, r5
 800beb2:	10a4      	asrs	r4, r4, #2
 800beb4:	2600      	movs	r6, #0
 800beb6:	42a6      	cmp	r6, r4
 800beb8:	d105      	bne.n	800bec6 <__libc_init_array+0x2e>
 800beba:	bd70      	pop	{r4, r5, r6, pc}
 800bebc:	f855 3b04 	ldr.w	r3, [r5], #4
 800bec0:	4798      	blx	r3
 800bec2:	3601      	adds	r6, #1
 800bec4:	e7ee      	b.n	800bea4 <__libc_init_array+0xc>
 800bec6:	f855 3b04 	ldr.w	r3, [r5], #4
 800beca:	4798      	blx	r3
 800becc:	3601      	adds	r6, #1
 800bece:	e7f2      	b.n	800beb6 <__libc_init_array+0x1e>
 800bed0:	0800d050 	.word	0x0800d050
 800bed4:	0800d050 	.word	0x0800d050
 800bed8:	0800d050 	.word	0x0800d050
 800bedc:	0800d054 	.word	0x0800d054

0800bee0 <memset>:
 800bee0:	4402      	add	r2, r0
 800bee2:	4603      	mov	r3, r0
 800bee4:	4293      	cmp	r3, r2
 800bee6:	d100      	bne.n	800beea <memset+0xa>
 800bee8:	4770      	bx	lr
 800beea:	f803 1b01 	strb.w	r1, [r3], #1
 800beee:	e7f9      	b.n	800bee4 <memset+0x4>

0800bef0 <ceil>:
 800bef0:	ec51 0b10 	vmov	r0, r1, d0
 800bef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bef8:	f3c1 570a 	ubfx	r7, r1, #20, #11
 800befc:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 800bf00:	2e13      	cmp	r6, #19
 800bf02:	ee10 5a10 	vmov	r5, s0
 800bf06:	ee10 8a10 	vmov	r8, s0
 800bf0a:	460c      	mov	r4, r1
 800bf0c:	dc30      	bgt.n	800bf70 <ceil+0x80>
 800bf0e:	2e00      	cmp	r6, #0
 800bf10:	da12      	bge.n	800bf38 <ceil+0x48>
 800bf12:	a335      	add	r3, pc, #212	; (adr r3, 800bfe8 <ceil+0xf8>)
 800bf14:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bf18:	f7f4 f97c 	bl	8000214 <__adddf3>
 800bf1c:	2200      	movs	r2, #0
 800bf1e:	2300      	movs	r3, #0
 800bf20:	f7f4 fdbe 	bl	8000aa0 <__aeabi_dcmpgt>
 800bf24:	b128      	cbz	r0, 800bf32 <ceil+0x42>
 800bf26:	2c00      	cmp	r4, #0
 800bf28:	db55      	blt.n	800bfd6 <ceil+0xe6>
 800bf2a:	432c      	orrs	r4, r5
 800bf2c:	d057      	beq.n	800bfde <ceil+0xee>
 800bf2e:	4c30      	ldr	r4, [pc, #192]	; (800bff0 <ceil+0x100>)
 800bf30:	2500      	movs	r5, #0
 800bf32:	4621      	mov	r1, r4
 800bf34:	4628      	mov	r0, r5
 800bf36:	e025      	b.n	800bf84 <ceil+0x94>
 800bf38:	4f2e      	ldr	r7, [pc, #184]	; (800bff4 <ceil+0x104>)
 800bf3a:	4137      	asrs	r7, r6
 800bf3c:	ea01 0307 	and.w	r3, r1, r7
 800bf40:	4303      	orrs	r3, r0
 800bf42:	d01f      	beq.n	800bf84 <ceil+0x94>
 800bf44:	a328      	add	r3, pc, #160	; (adr r3, 800bfe8 <ceil+0xf8>)
 800bf46:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bf4a:	f7f4 f963 	bl	8000214 <__adddf3>
 800bf4e:	2200      	movs	r2, #0
 800bf50:	2300      	movs	r3, #0
 800bf52:	f7f4 fda5 	bl	8000aa0 <__aeabi_dcmpgt>
 800bf56:	2800      	cmp	r0, #0
 800bf58:	d0eb      	beq.n	800bf32 <ceil+0x42>
 800bf5a:	2c00      	cmp	r4, #0
 800bf5c:	bfc2      	ittt	gt
 800bf5e:	f44f 1380 	movgt.w	r3, #1048576	; 0x100000
 800bf62:	fa43 f606 	asrgt.w	r6, r3, r6
 800bf66:	19a4      	addgt	r4, r4, r6
 800bf68:	ea24 0407 	bic.w	r4, r4, r7
 800bf6c:	2500      	movs	r5, #0
 800bf6e:	e7e0      	b.n	800bf32 <ceil+0x42>
 800bf70:	2e33      	cmp	r6, #51	; 0x33
 800bf72:	dd0b      	ble.n	800bf8c <ceil+0x9c>
 800bf74:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800bf78:	d104      	bne.n	800bf84 <ceil+0x94>
 800bf7a:	ee10 2a10 	vmov	r2, s0
 800bf7e:	460b      	mov	r3, r1
 800bf80:	f7f4 f948 	bl	8000214 <__adddf3>
 800bf84:	ec41 0b10 	vmov	d0, r0, r1
 800bf88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bf8c:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 800bf90:	f04f 33ff 	mov.w	r3, #4294967295
 800bf94:	fa23 f707 	lsr.w	r7, r3, r7
 800bf98:	4207      	tst	r7, r0
 800bf9a:	d0f3      	beq.n	800bf84 <ceil+0x94>
 800bf9c:	a312      	add	r3, pc, #72	; (adr r3, 800bfe8 <ceil+0xf8>)
 800bf9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bfa2:	f7f4 f937 	bl	8000214 <__adddf3>
 800bfa6:	2200      	movs	r2, #0
 800bfa8:	2300      	movs	r3, #0
 800bfaa:	f7f4 fd79 	bl	8000aa0 <__aeabi_dcmpgt>
 800bfae:	2800      	cmp	r0, #0
 800bfb0:	d0bf      	beq.n	800bf32 <ceil+0x42>
 800bfb2:	2c00      	cmp	r4, #0
 800bfb4:	dd02      	ble.n	800bfbc <ceil+0xcc>
 800bfb6:	2e14      	cmp	r6, #20
 800bfb8:	d103      	bne.n	800bfc2 <ceil+0xd2>
 800bfba:	3401      	adds	r4, #1
 800bfbc:	ea25 0507 	bic.w	r5, r5, r7
 800bfc0:	e7b7      	b.n	800bf32 <ceil+0x42>
 800bfc2:	2301      	movs	r3, #1
 800bfc4:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 800bfc8:	fa03 f606 	lsl.w	r6, r3, r6
 800bfcc:	4435      	add	r5, r6
 800bfce:	4545      	cmp	r5, r8
 800bfd0:	bf38      	it	cc
 800bfd2:	18e4      	addcc	r4, r4, r3
 800bfd4:	e7f2      	b.n	800bfbc <ceil+0xcc>
 800bfd6:	2500      	movs	r5, #0
 800bfd8:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 800bfdc:	e7a9      	b.n	800bf32 <ceil+0x42>
 800bfde:	4625      	mov	r5, r4
 800bfe0:	e7a7      	b.n	800bf32 <ceil+0x42>
 800bfe2:	bf00      	nop
 800bfe4:	f3af 8000 	nop.w
 800bfe8:	8800759c 	.word	0x8800759c
 800bfec:	7e37e43c 	.word	0x7e37e43c
 800bff0:	3ff00000 	.word	0x3ff00000
 800bff4:	000fffff 	.word	0x000fffff

0800bff8 <pow>:
 800bff8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bffc:	ec59 8b10 	vmov	r8, r9, d0
 800c000:	ec57 6b11 	vmov	r6, r7, d1
 800c004:	f000 f8dc 	bl	800c1c0 <__ieee754_pow>
 800c008:	4b4e      	ldr	r3, [pc, #312]	; (800c144 <pow+0x14c>)
 800c00a:	f993 3000 	ldrsb.w	r3, [r3]
 800c00e:	3301      	adds	r3, #1
 800c010:	ec55 4b10 	vmov	r4, r5, d0
 800c014:	d015      	beq.n	800c042 <pow+0x4a>
 800c016:	4632      	mov	r2, r6
 800c018:	463b      	mov	r3, r7
 800c01a:	4630      	mov	r0, r6
 800c01c:	4639      	mov	r1, r7
 800c01e:	f7f4 fd49 	bl	8000ab4 <__aeabi_dcmpun>
 800c022:	b970      	cbnz	r0, 800c042 <pow+0x4a>
 800c024:	4642      	mov	r2, r8
 800c026:	464b      	mov	r3, r9
 800c028:	4640      	mov	r0, r8
 800c02a:	4649      	mov	r1, r9
 800c02c:	f7f4 fd42 	bl	8000ab4 <__aeabi_dcmpun>
 800c030:	2200      	movs	r2, #0
 800c032:	2300      	movs	r3, #0
 800c034:	b148      	cbz	r0, 800c04a <pow+0x52>
 800c036:	4630      	mov	r0, r6
 800c038:	4639      	mov	r1, r7
 800c03a:	f7f4 fd09 	bl	8000a50 <__aeabi_dcmpeq>
 800c03e:	2800      	cmp	r0, #0
 800c040:	d17d      	bne.n	800c13e <pow+0x146>
 800c042:	ec45 4b10 	vmov	d0, r4, r5
 800c046:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c04a:	4640      	mov	r0, r8
 800c04c:	4649      	mov	r1, r9
 800c04e:	f7f4 fcff 	bl	8000a50 <__aeabi_dcmpeq>
 800c052:	b1e0      	cbz	r0, 800c08e <pow+0x96>
 800c054:	2200      	movs	r2, #0
 800c056:	2300      	movs	r3, #0
 800c058:	4630      	mov	r0, r6
 800c05a:	4639      	mov	r1, r7
 800c05c:	f7f4 fcf8 	bl	8000a50 <__aeabi_dcmpeq>
 800c060:	2800      	cmp	r0, #0
 800c062:	d16c      	bne.n	800c13e <pow+0x146>
 800c064:	ec47 6b10 	vmov	d0, r6, r7
 800c068:	f000 fe89 	bl	800cd7e <finite>
 800c06c:	2800      	cmp	r0, #0
 800c06e:	d0e8      	beq.n	800c042 <pow+0x4a>
 800c070:	2200      	movs	r2, #0
 800c072:	2300      	movs	r3, #0
 800c074:	4630      	mov	r0, r6
 800c076:	4639      	mov	r1, r7
 800c078:	f7f4 fcf4 	bl	8000a64 <__aeabi_dcmplt>
 800c07c:	2800      	cmp	r0, #0
 800c07e:	d0e0      	beq.n	800c042 <pow+0x4a>
 800c080:	f7ff ff04 	bl	800be8c <__errno>
 800c084:	2321      	movs	r3, #33	; 0x21
 800c086:	6003      	str	r3, [r0, #0]
 800c088:	2400      	movs	r4, #0
 800c08a:	4d2f      	ldr	r5, [pc, #188]	; (800c148 <pow+0x150>)
 800c08c:	e7d9      	b.n	800c042 <pow+0x4a>
 800c08e:	ec45 4b10 	vmov	d0, r4, r5
 800c092:	f000 fe74 	bl	800cd7e <finite>
 800c096:	bbb8      	cbnz	r0, 800c108 <pow+0x110>
 800c098:	ec49 8b10 	vmov	d0, r8, r9
 800c09c:	f000 fe6f 	bl	800cd7e <finite>
 800c0a0:	b390      	cbz	r0, 800c108 <pow+0x110>
 800c0a2:	ec47 6b10 	vmov	d0, r6, r7
 800c0a6:	f000 fe6a 	bl	800cd7e <finite>
 800c0aa:	b368      	cbz	r0, 800c108 <pow+0x110>
 800c0ac:	4622      	mov	r2, r4
 800c0ae:	462b      	mov	r3, r5
 800c0b0:	4620      	mov	r0, r4
 800c0b2:	4629      	mov	r1, r5
 800c0b4:	f7f4 fcfe 	bl	8000ab4 <__aeabi_dcmpun>
 800c0b8:	b160      	cbz	r0, 800c0d4 <pow+0xdc>
 800c0ba:	f7ff fee7 	bl	800be8c <__errno>
 800c0be:	2321      	movs	r3, #33	; 0x21
 800c0c0:	6003      	str	r3, [r0, #0]
 800c0c2:	2200      	movs	r2, #0
 800c0c4:	2300      	movs	r3, #0
 800c0c6:	4610      	mov	r0, r2
 800c0c8:	4619      	mov	r1, r3
 800c0ca:	f7f4 fb83 	bl	80007d4 <__aeabi_ddiv>
 800c0ce:	4604      	mov	r4, r0
 800c0d0:	460d      	mov	r5, r1
 800c0d2:	e7b6      	b.n	800c042 <pow+0x4a>
 800c0d4:	f7ff feda 	bl	800be8c <__errno>
 800c0d8:	2322      	movs	r3, #34	; 0x22
 800c0da:	6003      	str	r3, [r0, #0]
 800c0dc:	2200      	movs	r2, #0
 800c0de:	2300      	movs	r3, #0
 800c0e0:	4640      	mov	r0, r8
 800c0e2:	4649      	mov	r1, r9
 800c0e4:	f7f4 fcbe 	bl	8000a64 <__aeabi_dcmplt>
 800c0e8:	2400      	movs	r4, #0
 800c0ea:	b158      	cbz	r0, 800c104 <pow+0x10c>
 800c0ec:	ec47 6b10 	vmov	d0, r6, r7
 800c0f0:	f000 fe5a 	bl	800cda8 <rint>
 800c0f4:	4632      	mov	r2, r6
 800c0f6:	ec51 0b10 	vmov	r0, r1, d0
 800c0fa:	463b      	mov	r3, r7
 800c0fc:	f7f4 fca8 	bl	8000a50 <__aeabi_dcmpeq>
 800c100:	2800      	cmp	r0, #0
 800c102:	d0c2      	beq.n	800c08a <pow+0x92>
 800c104:	4d11      	ldr	r5, [pc, #68]	; (800c14c <pow+0x154>)
 800c106:	e79c      	b.n	800c042 <pow+0x4a>
 800c108:	2200      	movs	r2, #0
 800c10a:	2300      	movs	r3, #0
 800c10c:	4620      	mov	r0, r4
 800c10e:	4629      	mov	r1, r5
 800c110:	f7f4 fc9e 	bl	8000a50 <__aeabi_dcmpeq>
 800c114:	2800      	cmp	r0, #0
 800c116:	d094      	beq.n	800c042 <pow+0x4a>
 800c118:	ec49 8b10 	vmov	d0, r8, r9
 800c11c:	f000 fe2f 	bl	800cd7e <finite>
 800c120:	2800      	cmp	r0, #0
 800c122:	d08e      	beq.n	800c042 <pow+0x4a>
 800c124:	ec47 6b10 	vmov	d0, r6, r7
 800c128:	f000 fe29 	bl	800cd7e <finite>
 800c12c:	2800      	cmp	r0, #0
 800c12e:	d088      	beq.n	800c042 <pow+0x4a>
 800c130:	f7ff feac 	bl	800be8c <__errno>
 800c134:	2322      	movs	r3, #34	; 0x22
 800c136:	6003      	str	r3, [r0, #0]
 800c138:	2400      	movs	r4, #0
 800c13a:	2500      	movs	r5, #0
 800c13c:	e781      	b.n	800c042 <pow+0x4a>
 800c13e:	4d04      	ldr	r5, [pc, #16]	; (800c150 <pow+0x158>)
 800c140:	2400      	movs	r4, #0
 800c142:	e77e      	b.n	800c042 <pow+0x4a>
 800c144:	20000288 	.word	0x20000288
 800c148:	fff00000 	.word	0xfff00000
 800c14c:	7ff00000 	.word	0x7ff00000
 800c150:	3ff00000 	.word	0x3ff00000

0800c154 <sqrt>:
 800c154:	b538      	push	{r3, r4, r5, lr}
 800c156:	ed2d 8b02 	vpush	{d8}
 800c15a:	ec55 4b10 	vmov	r4, r5, d0
 800c15e:	f000 fd51 	bl	800cc04 <__ieee754_sqrt>
 800c162:	4b15      	ldr	r3, [pc, #84]	; (800c1b8 <sqrt+0x64>)
 800c164:	eeb0 8a40 	vmov.f32	s16, s0
 800c168:	eef0 8a60 	vmov.f32	s17, s1
 800c16c:	f993 3000 	ldrsb.w	r3, [r3]
 800c170:	3301      	adds	r3, #1
 800c172:	d019      	beq.n	800c1a8 <sqrt+0x54>
 800c174:	4622      	mov	r2, r4
 800c176:	462b      	mov	r3, r5
 800c178:	4620      	mov	r0, r4
 800c17a:	4629      	mov	r1, r5
 800c17c:	f7f4 fc9a 	bl	8000ab4 <__aeabi_dcmpun>
 800c180:	b990      	cbnz	r0, 800c1a8 <sqrt+0x54>
 800c182:	2200      	movs	r2, #0
 800c184:	2300      	movs	r3, #0
 800c186:	4620      	mov	r0, r4
 800c188:	4629      	mov	r1, r5
 800c18a:	f7f4 fc6b 	bl	8000a64 <__aeabi_dcmplt>
 800c18e:	b158      	cbz	r0, 800c1a8 <sqrt+0x54>
 800c190:	f7ff fe7c 	bl	800be8c <__errno>
 800c194:	2321      	movs	r3, #33	; 0x21
 800c196:	6003      	str	r3, [r0, #0]
 800c198:	2200      	movs	r2, #0
 800c19a:	2300      	movs	r3, #0
 800c19c:	4610      	mov	r0, r2
 800c19e:	4619      	mov	r1, r3
 800c1a0:	f7f4 fb18 	bl	80007d4 <__aeabi_ddiv>
 800c1a4:	ec41 0b18 	vmov	d8, r0, r1
 800c1a8:	eeb0 0a48 	vmov.f32	s0, s16
 800c1ac:	eef0 0a68 	vmov.f32	s1, s17
 800c1b0:	ecbd 8b02 	vpop	{d8}
 800c1b4:	bd38      	pop	{r3, r4, r5, pc}
 800c1b6:	bf00      	nop
 800c1b8:	20000288 	.word	0x20000288
 800c1bc:	00000000 	.word	0x00000000

0800c1c0 <__ieee754_pow>:
 800c1c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1c4:	ed2d 8b06 	vpush	{d8-d10}
 800c1c8:	b08d      	sub	sp, #52	; 0x34
 800c1ca:	ed8d 1b02 	vstr	d1, [sp, #8]
 800c1ce:	e9dd 0702 	ldrd	r0, r7, [sp, #8]
 800c1d2:	f027 4600 	bic.w	r6, r7, #2147483648	; 0x80000000
 800c1d6:	ea56 0100 	orrs.w	r1, r6, r0
 800c1da:	ec53 2b10 	vmov	r2, r3, d0
 800c1de:	f000 84d1 	beq.w	800cb84 <__ieee754_pow+0x9c4>
 800c1e2:	497f      	ldr	r1, [pc, #508]	; (800c3e0 <__ieee754_pow+0x220>)
 800c1e4:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
 800c1e8:	428c      	cmp	r4, r1
 800c1ea:	ee10 8a10 	vmov	r8, s0
 800c1ee:	4699      	mov	r9, r3
 800c1f0:	dc09      	bgt.n	800c206 <__ieee754_pow+0x46>
 800c1f2:	d103      	bne.n	800c1fc <__ieee754_pow+0x3c>
 800c1f4:	b97a      	cbnz	r2, 800c216 <__ieee754_pow+0x56>
 800c1f6:	42a6      	cmp	r6, r4
 800c1f8:	dd02      	ble.n	800c200 <__ieee754_pow+0x40>
 800c1fa:	e00c      	b.n	800c216 <__ieee754_pow+0x56>
 800c1fc:	428e      	cmp	r6, r1
 800c1fe:	dc02      	bgt.n	800c206 <__ieee754_pow+0x46>
 800c200:	428e      	cmp	r6, r1
 800c202:	d110      	bne.n	800c226 <__ieee754_pow+0x66>
 800c204:	b178      	cbz	r0, 800c226 <__ieee754_pow+0x66>
 800c206:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 800c20a:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 800c20e:	ea54 0308 	orrs.w	r3, r4, r8
 800c212:	f000 84b7 	beq.w	800cb84 <__ieee754_pow+0x9c4>
 800c216:	4873      	ldr	r0, [pc, #460]	; (800c3e4 <__ieee754_pow+0x224>)
 800c218:	b00d      	add	sp, #52	; 0x34
 800c21a:	ecbd 8b06 	vpop	{d8-d10}
 800c21e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c222:	f000 bdb9 	b.w	800cd98 <nan>
 800c226:	f1b9 0f00 	cmp.w	r9, #0
 800c22a:	da36      	bge.n	800c29a <__ieee754_pow+0xda>
 800c22c:	496e      	ldr	r1, [pc, #440]	; (800c3e8 <__ieee754_pow+0x228>)
 800c22e:	428e      	cmp	r6, r1
 800c230:	dc51      	bgt.n	800c2d6 <__ieee754_pow+0x116>
 800c232:	f1a1 7154 	sub.w	r1, r1, #55574528	; 0x3500000
 800c236:	428e      	cmp	r6, r1
 800c238:	f340 84af 	ble.w	800cb9a <__ieee754_pow+0x9da>
 800c23c:	1531      	asrs	r1, r6, #20
 800c23e:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 800c242:	2914      	cmp	r1, #20
 800c244:	dd0f      	ble.n	800c266 <__ieee754_pow+0xa6>
 800c246:	f1c1 0134 	rsb	r1, r1, #52	; 0x34
 800c24a:	fa20 fc01 	lsr.w	ip, r0, r1
 800c24e:	fa0c f101 	lsl.w	r1, ip, r1
 800c252:	4281      	cmp	r1, r0
 800c254:	f040 84a1 	bne.w	800cb9a <__ieee754_pow+0x9da>
 800c258:	f00c 0c01 	and.w	ip, ip, #1
 800c25c:	f1cc 0102 	rsb	r1, ip, #2
 800c260:	9100      	str	r1, [sp, #0]
 800c262:	b180      	cbz	r0, 800c286 <__ieee754_pow+0xc6>
 800c264:	e059      	b.n	800c31a <__ieee754_pow+0x15a>
 800c266:	2800      	cmp	r0, #0
 800c268:	d155      	bne.n	800c316 <__ieee754_pow+0x156>
 800c26a:	f1c1 0114 	rsb	r1, r1, #20
 800c26e:	fa46 fc01 	asr.w	ip, r6, r1
 800c272:	fa0c f101 	lsl.w	r1, ip, r1
 800c276:	42b1      	cmp	r1, r6
 800c278:	f040 848c 	bne.w	800cb94 <__ieee754_pow+0x9d4>
 800c27c:	f00c 0c01 	and.w	ip, ip, #1
 800c280:	f1cc 0102 	rsb	r1, ip, #2
 800c284:	9100      	str	r1, [sp, #0]
 800c286:	4959      	ldr	r1, [pc, #356]	; (800c3ec <__ieee754_pow+0x22c>)
 800c288:	428e      	cmp	r6, r1
 800c28a:	d12d      	bne.n	800c2e8 <__ieee754_pow+0x128>
 800c28c:	2f00      	cmp	r7, #0
 800c28e:	da79      	bge.n	800c384 <__ieee754_pow+0x1c4>
 800c290:	4956      	ldr	r1, [pc, #344]	; (800c3ec <__ieee754_pow+0x22c>)
 800c292:	2000      	movs	r0, #0
 800c294:	f7f4 fa9e 	bl	80007d4 <__aeabi_ddiv>
 800c298:	e016      	b.n	800c2c8 <__ieee754_pow+0x108>
 800c29a:	2100      	movs	r1, #0
 800c29c:	9100      	str	r1, [sp, #0]
 800c29e:	2800      	cmp	r0, #0
 800c2a0:	d13b      	bne.n	800c31a <__ieee754_pow+0x15a>
 800c2a2:	494f      	ldr	r1, [pc, #316]	; (800c3e0 <__ieee754_pow+0x220>)
 800c2a4:	428e      	cmp	r6, r1
 800c2a6:	d1ee      	bne.n	800c286 <__ieee754_pow+0xc6>
 800c2a8:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 800c2ac:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 800c2b0:	ea53 0308 	orrs.w	r3, r3, r8
 800c2b4:	f000 8466 	beq.w	800cb84 <__ieee754_pow+0x9c4>
 800c2b8:	4b4d      	ldr	r3, [pc, #308]	; (800c3f0 <__ieee754_pow+0x230>)
 800c2ba:	429c      	cmp	r4, r3
 800c2bc:	dd0d      	ble.n	800c2da <__ieee754_pow+0x11a>
 800c2be:	2f00      	cmp	r7, #0
 800c2c0:	f280 8464 	bge.w	800cb8c <__ieee754_pow+0x9cc>
 800c2c4:	2000      	movs	r0, #0
 800c2c6:	2100      	movs	r1, #0
 800c2c8:	ec41 0b10 	vmov	d0, r0, r1
 800c2cc:	b00d      	add	sp, #52	; 0x34
 800c2ce:	ecbd 8b06 	vpop	{d8-d10}
 800c2d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2d6:	2102      	movs	r1, #2
 800c2d8:	e7e0      	b.n	800c29c <__ieee754_pow+0xdc>
 800c2da:	2f00      	cmp	r7, #0
 800c2dc:	daf2      	bge.n	800c2c4 <__ieee754_pow+0x104>
 800c2de:	e9dd 0302 	ldrd	r0, r3, [sp, #8]
 800c2e2:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800c2e6:	e7ef      	b.n	800c2c8 <__ieee754_pow+0x108>
 800c2e8:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 800c2ec:	d104      	bne.n	800c2f8 <__ieee754_pow+0x138>
 800c2ee:	4610      	mov	r0, r2
 800c2f0:	4619      	mov	r1, r3
 800c2f2:	f7f4 f945 	bl	8000580 <__aeabi_dmul>
 800c2f6:	e7e7      	b.n	800c2c8 <__ieee754_pow+0x108>
 800c2f8:	493e      	ldr	r1, [pc, #248]	; (800c3f4 <__ieee754_pow+0x234>)
 800c2fa:	428f      	cmp	r7, r1
 800c2fc:	d10d      	bne.n	800c31a <__ieee754_pow+0x15a>
 800c2fe:	f1b9 0f00 	cmp.w	r9, #0
 800c302:	db0a      	blt.n	800c31a <__ieee754_pow+0x15a>
 800c304:	ec43 2b10 	vmov	d0, r2, r3
 800c308:	b00d      	add	sp, #52	; 0x34
 800c30a:	ecbd 8b06 	vpop	{d8-d10}
 800c30e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c312:	f000 bc77 	b.w	800cc04 <__ieee754_sqrt>
 800c316:	2100      	movs	r1, #0
 800c318:	9100      	str	r1, [sp, #0]
 800c31a:	ec43 2b10 	vmov	d0, r2, r3
 800c31e:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800c322:	f000 fd23 	bl	800cd6c <fabs>
 800c326:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800c32a:	ec51 0b10 	vmov	r0, r1, d0
 800c32e:	f1b8 0f00 	cmp.w	r8, #0
 800c332:	d12a      	bne.n	800c38a <__ieee754_pow+0x1ca>
 800c334:	b12c      	cbz	r4, 800c342 <__ieee754_pow+0x182>
 800c336:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 800c3ec <__ieee754_pow+0x22c>
 800c33a:	f029 4e40 	bic.w	lr, r9, #3221225472	; 0xc0000000
 800c33e:	45e6      	cmp	lr, ip
 800c340:	d123      	bne.n	800c38a <__ieee754_pow+0x1ca>
 800c342:	2f00      	cmp	r7, #0
 800c344:	da05      	bge.n	800c352 <__ieee754_pow+0x192>
 800c346:	4602      	mov	r2, r0
 800c348:	460b      	mov	r3, r1
 800c34a:	2000      	movs	r0, #0
 800c34c:	4927      	ldr	r1, [pc, #156]	; (800c3ec <__ieee754_pow+0x22c>)
 800c34e:	f7f4 fa41 	bl	80007d4 <__aeabi_ddiv>
 800c352:	f1b9 0f00 	cmp.w	r9, #0
 800c356:	dab7      	bge.n	800c2c8 <__ieee754_pow+0x108>
 800c358:	9b00      	ldr	r3, [sp, #0]
 800c35a:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 800c35e:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 800c362:	4323      	orrs	r3, r4
 800c364:	d108      	bne.n	800c378 <__ieee754_pow+0x1b8>
 800c366:	4602      	mov	r2, r0
 800c368:	460b      	mov	r3, r1
 800c36a:	4610      	mov	r0, r2
 800c36c:	4619      	mov	r1, r3
 800c36e:	f7f3 ff4f 	bl	8000210 <__aeabi_dsub>
 800c372:	4602      	mov	r2, r0
 800c374:	460b      	mov	r3, r1
 800c376:	e78d      	b.n	800c294 <__ieee754_pow+0xd4>
 800c378:	9b00      	ldr	r3, [sp, #0]
 800c37a:	2b01      	cmp	r3, #1
 800c37c:	d1a4      	bne.n	800c2c8 <__ieee754_pow+0x108>
 800c37e:	4602      	mov	r2, r0
 800c380:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800c384:	4610      	mov	r0, r2
 800c386:	4619      	mov	r1, r3
 800c388:	e79e      	b.n	800c2c8 <__ieee754_pow+0x108>
 800c38a:	ea4f 7cd9 	mov.w	ip, r9, lsr #31
 800c38e:	f10c 35ff 	add.w	r5, ip, #4294967295
 800c392:	950a      	str	r5, [sp, #40]	; 0x28
 800c394:	9d00      	ldr	r5, [sp, #0]
 800c396:	46ac      	mov	ip, r5
 800c398:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800c39a:	ea5c 0505 	orrs.w	r5, ip, r5
 800c39e:	d0e4      	beq.n	800c36a <__ieee754_pow+0x1aa>
 800c3a0:	4b15      	ldr	r3, [pc, #84]	; (800c3f8 <__ieee754_pow+0x238>)
 800c3a2:	429e      	cmp	r6, r3
 800c3a4:	f340 80fc 	ble.w	800c5a0 <__ieee754_pow+0x3e0>
 800c3a8:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 800c3ac:	429e      	cmp	r6, r3
 800c3ae:	4b10      	ldr	r3, [pc, #64]	; (800c3f0 <__ieee754_pow+0x230>)
 800c3b0:	dd07      	ble.n	800c3c2 <__ieee754_pow+0x202>
 800c3b2:	429c      	cmp	r4, r3
 800c3b4:	dc0a      	bgt.n	800c3cc <__ieee754_pow+0x20c>
 800c3b6:	2f00      	cmp	r7, #0
 800c3b8:	da84      	bge.n	800c2c4 <__ieee754_pow+0x104>
 800c3ba:	a307      	add	r3, pc, #28	; (adr r3, 800c3d8 <__ieee754_pow+0x218>)
 800c3bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c3c0:	e795      	b.n	800c2ee <__ieee754_pow+0x12e>
 800c3c2:	429c      	cmp	r4, r3
 800c3c4:	dbf7      	blt.n	800c3b6 <__ieee754_pow+0x1f6>
 800c3c6:	4b09      	ldr	r3, [pc, #36]	; (800c3ec <__ieee754_pow+0x22c>)
 800c3c8:	429c      	cmp	r4, r3
 800c3ca:	dd17      	ble.n	800c3fc <__ieee754_pow+0x23c>
 800c3cc:	2f00      	cmp	r7, #0
 800c3ce:	dcf4      	bgt.n	800c3ba <__ieee754_pow+0x1fa>
 800c3d0:	e778      	b.n	800c2c4 <__ieee754_pow+0x104>
 800c3d2:	bf00      	nop
 800c3d4:	f3af 8000 	nop.w
 800c3d8:	8800759c 	.word	0x8800759c
 800c3dc:	7e37e43c 	.word	0x7e37e43c
 800c3e0:	7ff00000 	.word	0x7ff00000
 800c3e4:	0800d000 	.word	0x0800d000
 800c3e8:	433fffff 	.word	0x433fffff
 800c3ec:	3ff00000 	.word	0x3ff00000
 800c3f0:	3fefffff 	.word	0x3fefffff
 800c3f4:	3fe00000 	.word	0x3fe00000
 800c3f8:	41e00000 	.word	0x41e00000
 800c3fc:	4b64      	ldr	r3, [pc, #400]	; (800c590 <__ieee754_pow+0x3d0>)
 800c3fe:	2200      	movs	r2, #0
 800c400:	f7f3 ff06 	bl	8000210 <__aeabi_dsub>
 800c404:	a356      	add	r3, pc, #344	; (adr r3, 800c560 <__ieee754_pow+0x3a0>)
 800c406:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c40a:	4604      	mov	r4, r0
 800c40c:	460d      	mov	r5, r1
 800c40e:	f7f4 f8b7 	bl	8000580 <__aeabi_dmul>
 800c412:	a355      	add	r3, pc, #340	; (adr r3, 800c568 <__ieee754_pow+0x3a8>)
 800c414:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c418:	4606      	mov	r6, r0
 800c41a:	460f      	mov	r7, r1
 800c41c:	4620      	mov	r0, r4
 800c41e:	4629      	mov	r1, r5
 800c420:	f7f4 f8ae 	bl	8000580 <__aeabi_dmul>
 800c424:	4b5b      	ldr	r3, [pc, #364]	; (800c594 <__ieee754_pow+0x3d4>)
 800c426:	4682      	mov	sl, r0
 800c428:	468b      	mov	fp, r1
 800c42a:	2200      	movs	r2, #0
 800c42c:	4620      	mov	r0, r4
 800c42e:	4629      	mov	r1, r5
 800c430:	f7f4 f8a6 	bl	8000580 <__aeabi_dmul>
 800c434:	4602      	mov	r2, r0
 800c436:	460b      	mov	r3, r1
 800c438:	a14d      	add	r1, pc, #308	; (adr r1, 800c570 <__ieee754_pow+0x3b0>)
 800c43a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c43e:	f7f3 fee7 	bl	8000210 <__aeabi_dsub>
 800c442:	4622      	mov	r2, r4
 800c444:	462b      	mov	r3, r5
 800c446:	f7f4 f89b 	bl	8000580 <__aeabi_dmul>
 800c44a:	4602      	mov	r2, r0
 800c44c:	460b      	mov	r3, r1
 800c44e:	2000      	movs	r0, #0
 800c450:	4951      	ldr	r1, [pc, #324]	; (800c598 <__ieee754_pow+0x3d8>)
 800c452:	f7f3 fedd 	bl	8000210 <__aeabi_dsub>
 800c456:	4622      	mov	r2, r4
 800c458:	4680      	mov	r8, r0
 800c45a:	4689      	mov	r9, r1
 800c45c:	462b      	mov	r3, r5
 800c45e:	4620      	mov	r0, r4
 800c460:	4629      	mov	r1, r5
 800c462:	f7f4 f88d 	bl	8000580 <__aeabi_dmul>
 800c466:	4602      	mov	r2, r0
 800c468:	460b      	mov	r3, r1
 800c46a:	4640      	mov	r0, r8
 800c46c:	4649      	mov	r1, r9
 800c46e:	f7f4 f887 	bl	8000580 <__aeabi_dmul>
 800c472:	a341      	add	r3, pc, #260	; (adr r3, 800c578 <__ieee754_pow+0x3b8>)
 800c474:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c478:	f7f4 f882 	bl	8000580 <__aeabi_dmul>
 800c47c:	4602      	mov	r2, r0
 800c47e:	460b      	mov	r3, r1
 800c480:	4650      	mov	r0, sl
 800c482:	4659      	mov	r1, fp
 800c484:	f7f3 fec4 	bl	8000210 <__aeabi_dsub>
 800c488:	4602      	mov	r2, r0
 800c48a:	460b      	mov	r3, r1
 800c48c:	4680      	mov	r8, r0
 800c48e:	4689      	mov	r9, r1
 800c490:	4630      	mov	r0, r6
 800c492:	4639      	mov	r1, r7
 800c494:	f7f3 febe 	bl	8000214 <__adddf3>
 800c498:	2400      	movs	r4, #0
 800c49a:	4632      	mov	r2, r6
 800c49c:	463b      	mov	r3, r7
 800c49e:	4620      	mov	r0, r4
 800c4a0:	460d      	mov	r5, r1
 800c4a2:	f7f3 feb5 	bl	8000210 <__aeabi_dsub>
 800c4a6:	4602      	mov	r2, r0
 800c4a8:	460b      	mov	r3, r1
 800c4aa:	4640      	mov	r0, r8
 800c4ac:	4649      	mov	r1, r9
 800c4ae:	f7f3 feaf 	bl	8000210 <__aeabi_dsub>
 800c4b2:	9b00      	ldr	r3, [sp, #0]
 800c4b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c4b6:	3b01      	subs	r3, #1
 800c4b8:	4313      	orrs	r3, r2
 800c4ba:	4682      	mov	sl, r0
 800c4bc:	468b      	mov	fp, r1
 800c4be:	f040 81f1 	bne.w	800c8a4 <__ieee754_pow+0x6e4>
 800c4c2:	ed9f 7b2f 	vldr	d7, [pc, #188]	; 800c580 <__ieee754_pow+0x3c0>
 800c4c6:	eeb0 8a47 	vmov.f32	s16, s14
 800c4ca:	eef0 8a67 	vmov.f32	s17, s15
 800c4ce:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800c4d2:	2600      	movs	r6, #0
 800c4d4:	4632      	mov	r2, r6
 800c4d6:	463b      	mov	r3, r7
 800c4d8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800c4dc:	f7f3 fe98 	bl	8000210 <__aeabi_dsub>
 800c4e0:	4622      	mov	r2, r4
 800c4e2:	462b      	mov	r3, r5
 800c4e4:	f7f4 f84c 	bl	8000580 <__aeabi_dmul>
 800c4e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800c4ec:	4680      	mov	r8, r0
 800c4ee:	4689      	mov	r9, r1
 800c4f0:	4650      	mov	r0, sl
 800c4f2:	4659      	mov	r1, fp
 800c4f4:	f7f4 f844 	bl	8000580 <__aeabi_dmul>
 800c4f8:	4602      	mov	r2, r0
 800c4fa:	460b      	mov	r3, r1
 800c4fc:	4640      	mov	r0, r8
 800c4fe:	4649      	mov	r1, r9
 800c500:	f7f3 fe88 	bl	8000214 <__adddf3>
 800c504:	4632      	mov	r2, r6
 800c506:	463b      	mov	r3, r7
 800c508:	4680      	mov	r8, r0
 800c50a:	4689      	mov	r9, r1
 800c50c:	4620      	mov	r0, r4
 800c50e:	4629      	mov	r1, r5
 800c510:	f7f4 f836 	bl	8000580 <__aeabi_dmul>
 800c514:	460b      	mov	r3, r1
 800c516:	4604      	mov	r4, r0
 800c518:	460d      	mov	r5, r1
 800c51a:	4602      	mov	r2, r0
 800c51c:	4649      	mov	r1, r9
 800c51e:	4640      	mov	r0, r8
 800c520:	f7f3 fe78 	bl	8000214 <__adddf3>
 800c524:	4b1d      	ldr	r3, [pc, #116]	; (800c59c <__ieee754_pow+0x3dc>)
 800c526:	4299      	cmp	r1, r3
 800c528:	ec45 4b19 	vmov	d9, r4, r5
 800c52c:	4606      	mov	r6, r0
 800c52e:	460f      	mov	r7, r1
 800c530:	468b      	mov	fp, r1
 800c532:	f340 82fe 	ble.w	800cb32 <__ieee754_pow+0x972>
 800c536:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 800c53a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 800c53e:	4303      	orrs	r3, r0
 800c540:	f000 81f0 	beq.w	800c924 <__ieee754_pow+0x764>
 800c544:	a310      	add	r3, pc, #64	; (adr r3, 800c588 <__ieee754_pow+0x3c8>)
 800c546:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c54a:	ec51 0b18 	vmov	r0, r1, d8
 800c54e:	f7f4 f817 	bl	8000580 <__aeabi_dmul>
 800c552:	a30d      	add	r3, pc, #52	; (adr r3, 800c588 <__ieee754_pow+0x3c8>)
 800c554:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c558:	e6cb      	b.n	800c2f2 <__ieee754_pow+0x132>
 800c55a:	bf00      	nop
 800c55c:	f3af 8000 	nop.w
 800c560:	60000000 	.word	0x60000000
 800c564:	3ff71547 	.word	0x3ff71547
 800c568:	f85ddf44 	.word	0xf85ddf44
 800c56c:	3e54ae0b 	.word	0x3e54ae0b
 800c570:	55555555 	.word	0x55555555
 800c574:	3fd55555 	.word	0x3fd55555
 800c578:	652b82fe 	.word	0x652b82fe
 800c57c:	3ff71547 	.word	0x3ff71547
 800c580:	00000000 	.word	0x00000000
 800c584:	bff00000 	.word	0xbff00000
 800c588:	8800759c 	.word	0x8800759c
 800c58c:	7e37e43c 	.word	0x7e37e43c
 800c590:	3ff00000 	.word	0x3ff00000
 800c594:	3fd00000 	.word	0x3fd00000
 800c598:	3fe00000 	.word	0x3fe00000
 800c59c:	408fffff 	.word	0x408fffff
 800c5a0:	4bd7      	ldr	r3, [pc, #860]	; (800c900 <__ieee754_pow+0x740>)
 800c5a2:	ea03 0309 	and.w	r3, r3, r9
 800c5a6:	2200      	movs	r2, #0
 800c5a8:	b92b      	cbnz	r3, 800c5b6 <__ieee754_pow+0x3f6>
 800c5aa:	4bd6      	ldr	r3, [pc, #856]	; (800c904 <__ieee754_pow+0x744>)
 800c5ac:	f7f3 ffe8 	bl	8000580 <__aeabi_dmul>
 800c5b0:	f06f 0234 	mvn.w	r2, #52	; 0x34
 800c5b4:	460c      	mov	r4, r1
 800c5b6:	1523      	asrs	r3, r4, #20
 800c5b8:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 800c5bc:	4413      	add	r3, r2
 800c5be:	9309      	str	r3, [sp, #36]	; 0x24
 800c5c0:	4bd1      	ldr	r3, [pc, #836]	; (800c908 <__ieee754_pow+0x748>)
 800c5c2:	f3c4 0413 	ubfx	r4, r4, #0, #20
 800c5c6:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 800c5ca:	429c      	cmp	r4, r3
 800c5cc:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800c5d0:	dd08      	ble.n	800c5e4 <__ieee754_pow+0x424>
 800c5d2:	4bce      	ldr	r3, [pc, #824]	; (800c90c <__ieee754_pow+0x74c>)
 800c5d4:	429c      	cmp	r4, r3
 800c5d6:	f340 8163 	ble.w	800c8a0 <__ieee754_pow+0x6e0>
 800c5da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c5dc:	3301      	adds	r3, #1
 800c5de:	9309      	str	r3, [sp, #36]	; 0x24
 800c5e0:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 800c5e4:	2400      	movs	r4, #0
 800c5e6:	00e3      	lsls	r3, r4, #3
 800c5e8:	930b      	str	r3, [sp, #44]	; 0x2c
 800c5ea:	4bc9      	ldr	r3, [pc, #804]	; (800c910 <__ieee754_pow+0x750>)
 800c5ec:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800c5f0:	ed93 7b00 	vldr	d7, [r3]
 800c5f4:	4629      	mov	r1, r5
 800c5f6:	ec53 2b17 	vmov	r2, r3, d7
 800c5fa:	eeb0 8a47 	vmov.f32	s16, s14
 800c5fe:	eef0 8a67 	vmov.f32	s17, s15
 800c602:	4682      	mov	sl, r0
 800c604:	f7f3 fe04 	bl	8000210 <__aeabi_dsub>
 800c608:	4652      	mov	r2, sl
 800c60a:	4606      	mov	r6, r0
 800c60c:	460f      	mov	r7, r1
 800c60e:	462b      	mov	r3, r5
 800c610:	ec51 0b18 	vmov	r0, r1, d8
 800c614:	f7f3 fdfe 	bl	8000214 <__adddf3>
 800c618:	4602      	mov	r2, r0
 800c61a:	460b      	mov	r3, r1
 800c61c:	2000      	movs	r0, #0
 800c61e:	49bd      	ldr	r1, [pc, #756]	; (800c914 <__ieee754_pow+0x754>)
 800c620:	f7f4 f8d8 	bl	80007d4 <__aeabi_ddiv>
 800c624:	ec41 0b19 	vmov	d9, r0, r1
 800c628:	4602      	mov	r2, r0
 800c62a:	460b      	mov	r3, r1
 800c62c:	4630      	mov	r0, r6
 800c62e:	4639      	mov	r1, r7
 800c630:	f7f3 ffa6 	bl	8000580 <__aeabi_dmul>
 800c634:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800c638:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c63c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800c640:	2300      	movs	r3, #0
 800c642:	9304      	str	r3, [sp, #16]
 800c644:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800c648:	46ab      	mov	fp, r5
 800c64a:	106d      	asrs	r5, r5, #1
 800c64c:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 800c650:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 800c654:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 800c658:	2200      	movs	r2, #0
 800c65a:	4640      	mov	r0, r8
 800c65c:	4649      	mov	r1, r9
 800c65e:	4614      	mov	r4, r2
 800c660:	461d      	mov	r5, r3
 800c662:	f7f3 ff8d 	bl	8000580 <__aeabi_dmul>
 800c666:	4602      	mov	r2, r0
 800c668:	460b      	mov	r3, r1
 800c66a:	4630      	mov	r0, r6
 800c66c:	4639      	mov	r1, r7
 800c66e:	f7f3 fdcf 	bl	8000210 <__aeabi_dsub>
 800c672:	ec53 2b18 	vmov	r2, r3, d8
 800c676:	4606      	mov	r6, r0
 800c678:	460f      	mov	r7, r1
 800c67a:	4620      	mov	r0, r4
 800c67c:	4629      	mov	r1, r5
 800c67e:	f7f3 fdc7 	bl	8000210 <__aeabi_dsub>
 800c682:	4602      	mov	r2, r0
 800c684:	460b      	mov	r3, r1
 800c686:	4650      	mov	r0, sl
 800c688:	4659      	mov	r1, fp
 800c68a:	f7f3 fdc1 	bl	8000210 <__aeabi_dsub>
 800c68e:	4642      	mov	r2, r8
 800c690:	464b      	mov	r3, r9
 800c692:	f7f3 ff75 	bl	8000580 <__aeabi_dmul>
 800c696:	4602      	mov	r2, r0
 800c698:	460b      	mov	r3, r1
 800c69a:	4630      	mov	r0, r6
 800c69c:	4639      	mov	r1, r7
 800c69e:	f7f3 fdb7 	bl	8000210 <__aeabi_dsub>
 800c6a2:	ec53 2b19 	vmov	r2, r3, d9
 800c6a6:	f7f3 ff6b 	bl	8000580 <__aeabi_dmul>
 800c6aa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c6ae:	ec41 0b18 	vmov	d8, r0, r1
 800c6b2:	4610      	mov	r0, r2
 800c6b4:	4619      	mov	r1, r3
 800c6b6:	f7f3 ff63 	bl	8000580 <__aeabi_dmul>
 800c6ba:	a37d      	add	r3, pc, #500	; (adr r3, 800c8b0 <__ieee754_pow+0x6f0>)
 800c6bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c6c0:	4604      	mov	r4, r0
 800c6c2:	460d      	mov	r5, r1
 800c6c4:	f7f3 ff5c 	bl	8000580 <__aeabi_dmul>
 800c6c8:	a37b      	add	r3, pc, #492	; (adr r3, 800c8b8 <__ieee754_pow+0x6f8>)
 800c6ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c6ce:	f7f3 fda1 	bl	8000214 <__adddf3>
 800c6d2:	4622      	mov	r2, r4
 800c6d4:	462b      	mov	r3, r5
 800c6d6:	f7f3 ff53 	bl	8000580 <__aeabi_dmul>
 800c6da:	a379      	add	r3, pc, #484	; (adr r3, 800c8c0 <__ieee754_pow+0x700>)
 800c6dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c6e0:	f7f3 fd98 	bl	8000214 <__adddf3>
 800c6e4:	4622      	mov	r2, r4
 800c6e6:	462b      	mov	r3, r5
 800c6e8:	f7f3 ff4a 	bl	8000580 <__aeabi_dmul>
 800c6ec:	a376      	add	r3, pc, #472	; (adr r3, 800c8c8 <__ieee754_pow+0x708>)
 800c6ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c6f2:	f7f3 fd8f 	bl	8000214 <__adddf3>
 800c6f6:	4622      	mov	r2, r4
 800c6f8:	462b      	mov	r3, r5
 800c6fa:	f7f3 ff41 	bl	8000580 <__aeabi_dmul>
 800c6fe:	a374      	add	r3, pc, #464	; (adr r3, 800c8d0 <__ieee754_pow+0x710>)
 800c700:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c704:	f7f3 fd86 	bl	8000214 <__adddf3>
 800c708:	4622      	mov	r2, r4
 800c70a:	462b      	mov	r3, r5
 800c70c:	f7f3 ff38 	bl	8000580 <__aeabi_dmul>
 800c710:	a371      	add	r3, pc, #452	; (adr r3, 800c8d8 <__ieee754_pow+0x718>)
 800c712:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c716:	f7f3 fd7d 	bl	8000214 <__adddf3>
 800c71a:	4622      	mov	r2, r4
 800c71c:	4606      	mov	r6, r0
 800c71e:	460f      	mov	r7, r1
 800c720:	462b      	mov	r3, r5
 800c722:	4620      	mov	r0, r4
 800c724:	4629      	mov	r1, r5
 800c726:	f7f3 ff2b 	bl	8000580 <__aeabi_dmul>
 800c72a:	4602      	mov	r2, r0
 800c72c:	460b      	mov	r3, r1
 800c72e:	4630      	mov	r0, r6
 800c730:	4639      	mov	r1, r7
 800c732:	f7f3 ff25 	bl	8000580 <__aeabi_dmul>
 800c736:	4642      	mov	r2, r8
 800c738:	4604      	mov	r4, r0
 800c73a:	460d      	mov	r5, r1
 800c73c:	464b      	mov	r3, r9
 800c73e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800c742:	f7f3 fd67 	bl	8000214 <__adddf3>
 800c746:	ec53 2b18 	vmov	r2, r3, d8
 800c74a:	f7f3 ff19 	bl	8000580 <__aeabi_dmul>
 800c74e:	4622      	mov	r2, r4
 800c750:	462b      	mov	r3, r5
 800c752:	f7f3 fd5f 	bl	8000214 <__adddf3>
 800c756:	4642      	mov	r2, r8
 800c758:	4682      	mov	sl, r0
 800c75a:	468b      	mov	fp, r1
 800c75c:	464b      	mov	r3, r9
 800c75e:	4640      	mov	r0, r8
 800c760:	4649      	mov	r1, r9
 800c762:	f7f3 ff0d 	bl	8000580 <__aeabi_dmul>
 800c766:	4b6c      	ldr	r3, [pc, #432]	; (800c918 <__ieee754_pow+0x758>)
 800c768:	2200      	movs	r2, #0
 800c76a:	4606      	mov	r6, r0
 800c76c:	460f      	mov	r7, r1
 800c76e:	f7f3 fd51 	bl	8000214 <__adddf3>
 800c772:	4652      	mov	r2, sl
 800c774:	465b      	mov	r3, fp
 800c776:	f7f3 fd4d 	bl	8000214 <__adddf3>
 800c77a:	9c04      	ldr	r4, [sp, #16]
 800c77c:	460d      	mov	r5, r1
 800c77e:	4622      	mov	r2, r4
 800c780:	460b      	mov	r3, r1
 800c782:	4640      	mov	r0, r8
 800c784:	4649      	mov	r1, r9
 800c786:	f7f3 fefb 	bl	8000580 <__aeabi_dmul>
 800c78a:	4b63      	ldr	r3, [pc, #396]	; (800c918 <__ieee754_pow+0x758>)
 800c78c:	4680      	mov	r8, r0
 800c78e:	4689      	mov	r9, r1
 800c790:	2200      	movs	r2, #0
 800c792:	4620      	mov	r0, r4
 800c794:	4629      	mov	r1, r5
 800c796:	f7f3 fd3b 	bl	8000210 <__aeabi_dsub>
 800c79a:	4632      	mov	r2, r6
 800c79c:	463b      	mov	r3, r7
 800c79e:	f7f3 fd37 	bl	8000210 <__aeabi_dsub>
 800c7a2:	4602      	mov	r2, r0
 800c7a4:	460b      	mov	r3, r1
 800c7a6:	4650      	mov	r0, sl
 800c7a8:	4659      	mov	r1, fp
 800c7aa:	f7f3 fd31 	bl	8000210 <__aeabi_dsub>
 800c7ae:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c7b2:	f7f3 fee5 	bl	8000580 <__aeabi_dmul>
 800c7b6:	4622      	mov	r2, r4
 800c7b8:	4606      	mov	r6, r0
 800c7ba:	460f      	mov	r7, r1
 800c7bc:	462b      	mov	r3, r5
 800c7be:	ec51 0b18 	vmov	r0, r1, d8
 800c7c2:	f7f3 fedd 	bl	8000580 <__aeabi_dmul>
 800c7c6:	4602      	mov	r2, r0
 800c7c8:	460b      	mov	r3, r1
 800c7ca:	4630      	mov	r0, r6
 800c7cc:	4639      	mov	r1, r7
 800c7ce:	f7f3 fd21 	bl	8000214 <__adddf3>
 800c7d2:	4606      	mov	r6, r0
 800c7d4:	460f      	mov	r7, r1
 800c7d6:	4602      	mov	r2, r0
 800c7d8:	460b      	mov	r3, r1
 800c7da:	4640      	mov	r0, r8
 800c7dc:	4649      	mov	r1, r9
 800c7de:	f7f3 fd19 	bl	8000214 <__adddf3>
 800c7e2:	9c04      	ldr	r4, [sp, #16]
 800c7e4:	a33e      	add	r3, pc, #248	; (adr r3, 800c8e0 <__ieee754_pow+0x720>)
 800c7e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c7ea:	4620      	mov	r0, r4
 800c7ec:	460d      	mov	r5, r1
 800c7ee:	f7f3 fec7 	bl	8000580 <__aeabi_dmul>
 800c7f2:	4642      	mov	r2, r8
 800c7f4:	ec41 0b18 	vmov	d8, r0, r1
 800c7f8:	464b      	mov	r3, r9
 800c7fa:	4620      	mov	r0, r4
 800c7fc:	4629      	mov	r1, r5
 800c7fe:	f7f3 fd07 	bl	8000210 <__aeabi_dsub>
 800c802:	4602      	mov	r2, r0
 800c804:	460b      	mov	r3, r1
 800c806:	4630      	mov	r0, r6
 800c808:	4639      	mov	r1, r7
 800c80a:	f7f3 fd01 	bl	8000210 <__aeabi_dsub>
 800c80e:	a336      	add	r3, pc, #216	; (adr r3, 800c8e8 <__ieee754_pow+0x728>)
 800c810:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c814:	f7f3 feb4 	bl	8000580 <__aeabi_dmul>
 800c818:	a335      	add	r3, pc, #212	; (adr r3, 800c8f0 <__ieee754_pow+0x730>)
 800c81a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c81e:	4606      	mov	r6, r0
 800c820:	460f      	mov	r7, r1
 800c822:	4620      	mov	r0, r4
 800c824:	4629      	mov	r1, r5
 800c826:	f7f3 feab 	bl	8000580 <__aeabi_dmul>
 800c82a:	4602      	mov	r2, r0
 800c82c:	460b      	mov	r3, r1
 800c82e:	4630      	mov	r0, r6
 800c830:	4639      	mov	r1, r7
 800c832:	f7f3 fcef 	bl	8000214 <__adddf3>
 800c836:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c838:	4b38      	ldr	r3, [pc, #224]	; (800c91c <__ieee754_pow+0x75c>)
 800c83a:	4413      	add	r3, r2
 800c83c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c840:	f7f3 fce8 	bl	8000214 <__adddf3>
 800c844:	4682      	mov	sl, r0
 800c846:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c848:	468b      	mov	fp, r1
 800c84a:	f7f3 fe2f 	bl	80004ac <__aeabi_i2d>
 800c84e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c850:	4b33      	ldr	r3, [pc, #204]	; (800c920 <__ieee754_pow+0x760>)
 800c852:	4413      	add	r3, r2
 800c854:	e9d3 8900 	ldrd	r8, r9, [r3]
 800c858:	4606      	mov	r6, r0
 800c85a:	460f      	mov	r7, r1
 800c85c:	4652      	mov	r2, sl
 800c85e:	465b      	mov	r3, fp
 800c860:	ec51 0b18 	vmov	r0, r1, d8
 800c864:	f7f3 fcd6 	bl	8000214 <__adddf3>
 800c868:	4642      	mov	r2, r8
 800c86a:	464b      	mov	r3, r9
 800c86c:	f7f3 fcd2 	bl	8000214 <__adddf3>
 800c870:	4632      	mov	r2, r6
 800c872:	463b      	mov	r3, r7
 800c874:	f7f3 fcce 	bl	8000214 <__adddf3>
 800c878:	9c04      	ldr	r4, [sp, #16]
 800c87a:	4632      	mov	r2, r6
 800c87c:	463b      	mov	r3, r7
 800c87e:	4620      	mov	r0, r4
 800c880:	460d      	mov	r5, r1
 800c882:	f7f3 fcc5 	bl	8000210 <__aeabi_dsub>
 800c886:	4642      	mov	r2, r8
 800c888:	464b      	mov	r3, r9
 800c88a:	f7f3 fcc1 	bl	8000210 <__aeabi_dsub>
 800c88e:	ec53 2b18 	vmov	r2, r3, d8
 800c892:	f7f3 fcbd 	bl	8000210 <__aeabi_dsub>
 800c896:	4602      	mov	r2, r0
 800c898:	460b      	mov	r3, r1
 800c89a:	4650      	mov	r0, sl
 800c89c:	4659      	mov	r1, fp
 800c89e:	e606      	b.n	800c4ae <__ieee754_pow+0x2ee>
 800c8a0:	2401      	movs	r4, #1
 800c8a2:	e6a0      	b.n	800c5e6 <__ieee754_pow+0x426>
 800c8a4:	ed9f 7b14 	vldr	d7, [pc, #80]	; 800c8f8 <__ieee754_pow+0x738>
 800c8a8:	e60d      	b.n	800c4c6 <__ieee754_pow+0x306>
 800c8aa:	bf00      	nop
 800c8ac:	f3af 8000 	nop.w
 800c8b0:	4a454eef 	.word	0x4a454eef
 800c8b4:	3fca7e28 	.word	0x3fca7e28
 800c8b8:	93c9db65 	.word	0x93c9db65
 800c8bc:	3fcd864a 	.word	0x3fcd864a
 800c8c0:	a91d4101 	.word	0xa91d4101
 800c8c4:	3fd17460 	.word	0x3fd17460
 800c8c8:	518f264d 	.word	0x518f264d
 800c8cc:	3fd55555 	.word	0x3fd55555
 800c8d0:	db6fabff 	.word	0xdb6fabff
 800c8d4:	3fdb6db6 	.word	0x3fdb6db6
 800c8d8:	33333303 	.word	0x33333303
 800c8dc:	3fe33333 	.word	0x3fe33333
 800c8e0:	e0000000 	.word	0xe0000000
 800c8e4:	3feec709 	.word	0x3feec709
 800c8e8:	dc3a03fd 	.word	0xdc3a03fd
 800c8ec:	3feec709 	.word	0x3feec709
 800c8f0:	145b01f5 	.word	0x145b01f5
 800c8f4:	be3e2fe0 	.word	0xbe3e2fe0
 800c8f8:	00000000 	.word	0x00000000
 800c8fc:	3ff00000 	.word	0x3ff00000
 800c900:	7ff00000 	.word	0x7ff00000
 800c904:	43400000 	.word	0x43400000
 800c908:	0003988e 	.word	0x0003988e
 800c90c:	000bb679 	.word	0x000bb679
 800c910:	0800d008 	.word	0x0800d008
 800c914:	3ff00000 	.word	0x3ff00000
 800c918:	40080000 	.word	0x40080000
 800c91c:	0800d028 	.word	0x0800d028
 800c920:	0800d018 	.word	0x0800d018
 800c924:	a3b5      	add	r3, pc, #724	; (adr r3, 800cbfc <__ieee754_pow+0xa3c>)
 800c926:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c92a:	4640      	mov	r0, r8
 800c92c:	4649      	mov	r1, r9
 800c92e:	f7f3 fc71 	bl	8000214 <__adddf3>
 800c932:	4622      	mov	r2, r4
 800c934:	ec41 0b1a 	vmov	d10, r0, r1
 800c938:	462b      	mov	r3, r5
 800c93a:	4630      	mov	r0, r6
 800c93c:	4639      	mov	r1, r7
 800c93e:	f7f3 fc67 	bl	8000210 <__aeabi_dsub>
 800c942:	4602      	mov	r2, r0
 800c944:	460b      	mov	r3, r1
 800c946:	ec51 0b1a 	vmov	r0, r1, d10
 800c94a:	f7f4 f8a9 	bl	8000aa0 <__aeabi_dcmpgt>
 800c94e:	2800      	cmp	r0, #0
 800c950:	f47f adf8 	bne.w	800c544 <__ieee754_pow+0x384>
 800c954:	4aa4      	ldr	r2, [pc, #656]	; (800cbe8 <__ieee754_pow+0xa28>)
 800c956:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800c95a:	4293      	cmp	r3, r2
 800c95c:	f340 810b 	ble.w	800cb76 <__ieee754_pow+0x9b6>
 800c960:	151b      	asrs	r3, r3, #20
 800c962:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 800c966:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 800c96a:	fa4a f303 	asr.w	r3, sl, r3
 800c96e:	445b      	add	r3, fp
 800c970:	f3c3 520a 	ubfx	r2, r3, #20, #11
 800c974:	4e9d      	ldr	r6, [pc, #628]	; (800cbec <__ieee754_pow+0xa2c>)
 800c976:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 800c97a:	4116      	asrs	r6, r2
 800c97c:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 800c980:	2000      	movs	r0, #0
 800c982:	ea23 0106 	bic.w	r1, r3, r6
 800c986:	f1c2 0214 	rsb	r2, r2, #20
 800c98a:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 800c98e:	fa4a fa02 	asr.w	sl, sl, r2
 800c992:	f1bb 0f00 	cmp.w	fp, #0
 800c996:	4602      	mov	r2, r0
 800c998:	460b      	mov	r3, r1
 800c99a:	4620      	mov	r0, r4
 800c99c:	4629      	mov	r1, r5
 800c99e:	bfb8      	it	lt
 800c9a0:	f1ca 0a00 	rsblt	sl, sl, #0
 800c9a4:	f7f3 fc34 	bl	8000210 <__aeabi_dsub>
 800c9a8:	ec41 0b19 	vmov	d9, r0, r1
 800c9ac:	4642      	mov	r2, r8
 800c9ae:	464b      	mov	r3, r9
 800c9b0:	ec51 0b19 	vmov	r0, r1, d9
 800c9b4:	f7f3 fc2e 	bl	8000214 <__adddf3>
 800c9b8:	2400      	movs	r4, #0
 800c9ba:	a379      	add	r3, pc, #484	; (adr r3, 800cba0 <__ieee754_pow+0x9e0>)
 800c9bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c9c0:	4620      	mov	r0, r4
 800c9c2:	460d      	mov	r5, r1
 800c9c4:	f7f3 fddc 	bl	8000580 <__aeabi_dmul>
 800c9c8:	ec53 2b19 	vmov	r2, r3, d9
 800c9cc:	4606      	mov	r6, r0
 800c9ce:	460f      	mov	r7, r1
 800c9d0:	4620      	mov	r0, r4
 800c9d2:	4629      	mov	r1, r5
 800c9d4:	f7f3 fc1c 	bl	8000210 <__aeabi_dsub>
 800c9d8:	4602      	mov	r2, r0
 800c9da:	460b      	mov	r3, r1
 800c9dc:	4640      	mov	r0, r8
 800c9de:	4649      	mov	r1, r9
 800c9e0:	f7f3 fc16 	bl	8000210 <__aeabi_dsub>
 800c9e4:	a370      	add	r3, pc, #448	; (adr r3, 800cba8 <__ieee754_pow+0x9e8>)
 800c9e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c9ea:	f7f3 fdc9 	bl	8000580 <__aeabi_dmul>
 800c9ee:	a370      	add	r3, pc, #448	; (adr r3, 800cbb0 <__ieee754_pow+0x9f0>)
 800c9f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c9f4:	4680      	mov	r8, r0
 800c9f6:	4689      	mov	r9, r1
 800c9f8:	4620      	mov	r0, r4
 800c9fa:	4629      	mov	r1, r5
 800c9fc:	f7f3 fdc0 	bl	8000580 <__aeabi_dmul>
 800ca00:	4602      	mov	r2, r0
 800ca02:	460b      	mov	r3, r1
 800ca04:	4640      	mov	r0, r8
 800ca06:	4649      	mov	r1, r9
 800ca08:	f7f3 fc04 	bl	8000214 <__adddf3>
 800ca0c:	4604      	mov	r4, r0
 800ca0e:	460d      	mov	r5, r1
 800ca10:	4602      	mov	r2, r0
 800ca12:	460b      	mov	r3, r1
 800ca14:	4630      	mov	r0, r6
 800ca16:	4639      	mov	r1, r7
 800ca18:	f7f3 fbfc 	bl	8000214 <__adddf3>
 800ca1c:	4632      	mov	r2, r6
 800ca1e:	463b      	mov	r3, r7
 800ca20:	4680      	mov	r8, r0
 800ca22:	4689      	mov	r9, r1
 800ca24:	f7f3 fbf4 	bl	8000210 <__aeabi_dsub>
 800ca28:	4602      	mov	r2, r0
 800ca2a:	460b      	mov	r3, r1
 800ca2c:	4620      	mov	r0, r4
 800ca2e:	4629      	mov	r1, r5
 800ca30:	f7f3 fbee 	bl	8000210 <__aeabi_dsub>
 800ca34:	4642      	mov	r2, r8
 800ca36:	4606      	mov	r6, r0
 800ca38:	460f      	mov	r7, r1
 800ca3a:	464b      	mov	r3, r9
 800ca3c:	4640      	mov	r0, r8
 800ca3e:	4649      	mov	r1, r9
 800ca40:	f7f3 fd9e 	bl	8000580 <__aeabi_dmul>
 800ca44:	a35c      	add	r3, pc, #368	; (adr r3, 800cbb8 <__ieee754_pow+0x9f8>)
 800ca46:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca4a:	4604      	mov	r4, r0
 800ca4c:	460d      	mov	r5, r1
 800ca4e:	f7f3 fd97 	bl	8000580 <__aeabi_dmul>
 800ca52:	a35b      	add	r3, pc, #364	; (adr r3, 800cbc0 <__ieee754_pow+0xa00>)
 800ca54:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca58:	f7f3 fbda 	bl	8000210 <__aeabi_dsub>
 800ca5c:	4622      	mov	r2, r4
 800ca5e:	462b      	mov	r3, r5
 800ca60:	f7f3 fd8e 	bl	8000580 <__aeabi_dmul>
 800ca64:	a358      	add	r3, pc, #352	; (adr r3, 800cbc8 <__ieee754_pow+0xa08>)
 800ca66:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca6a:	f7f3 fbd3 	bl	8000214 <__adddf3>
 800ca6e:	4622      	mov	r2, r4
 800ca70:	462b      	mov	r3, r5
 800ca72:	f7f3 fd85 	bl	8000580 <__aeabi_dmul>
 800ca76:	a356      	add	r3, pc, #344	; (adr r3, 800cbd0 <__ieee754_pow+0xa10>)
 800ca78:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca7c:	f7f3 fbc8 	bl	8000210 <__aeabi_dsub>
 800ca80:	4622      	mov	r2, r4
 800ca82:	462b      	mov	r3, r5
 800ca84:	f7f3 fd7c 	bl	8000580 <__aeabi_dmul>
 800ca88:	a353      	add	r3, pc, #332	; (adr r3, 800cbd8 <__ieee754_pow+0xa18>)
 800ca8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca8e:	f7f3 fbc1 	bl	8000214 <__adddf3>
 800ca92:	4622      	mov	r2, r4
 800ca94:	462b      	mov	r3, r5
 800ca96:	f7f3 fd73 	bl	8000580 <__aeabi_dmul>
 800ca9a:	4602      	mov	r2, r0
 800ca9c:	460b      	mov	r3, r1
 800ca9e:	4640      	mov	r0, r8
 800caa0:	4649      	mov	r1, r9
 800caa2:	f7f3 fbb5 	bl	8000210 <__aeabi_dsub>
 800caa6:	4604      	mov	r4, r0
 800caa8:	460d      	mov	r5, r1
 800caaa:	4602      	mov	r2, r0
 800caac:	460b      	mov	r3, r1
 800caae:	4640      	mov	r0, r8
 800cab0:	4649      	mov	r1, r9
 800cab2:	f7f3 fd65 	bl	8000580 <__aeabi_dmul>
 800cab6:	2200      	movs	r2, #0
 800cab8:	ec41 0b19 	vmov	d9, r0, r1
 800cabc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800cac0:	4620      	mov	r0, r4
 800cac2:	4629      	mov	r1, r5
 800cac4:	f7f3 fba4 	bl	8000210 <__aeabi_dsub>
 800cac8:	4602      	mov	r2, r0
 800caca:	460b      	mov	r3, r1
 800cacc:	ec51 0b19 	vmov	r0, r1, d9
 800cad0:	f7f3 fe80 	bl	80007d4 <__aeabi_ddiv>
 800cad4:	4632      	mov	r2, r6
 800cad6:	4604      	mov	r4, r0
 800cad8:	460d      	mov	r5, r1
 800cada:	463b      	mov	r3, r7
 800cadc:	4640      	mov	r0, r8
 800cade:	4649      	mov	r1, r9
 800cae0:	f7f3 fd4e 	bl	8000580 <__aeabi_dmul>
 800cae4:	4632      	mov	r2, r6
 800cae6:	463b      	mov	r3, r7
 800cae8:	f7f3 fb94 	bl	8000214 <__adddf3>
 800caec:	4602      	mov	r2, r0
 800caee:	460b      	mov	r3, r1
 800caf0:	4620      	mov	r0, r4
 800caf2:	4629      	mov	r1, r5
 800caf4:	f7f3 fb8c 	bl	8000210 <__aeabi_dsub>
 800caf8:	4642      	mov	r2, r8
 800cafa:	464b      	mov	r3, r9
 800cafc:	f7f3 fb88 	bl	8000210 <__aeabi_dsub>
 800cb00:	460b      	mov	r3, r1
 800cb02:	4602      	mov	r2, r0
 800cb04:	493a      	ldr	r1, [pc, #232]	; (800cbf0 <__ieee754_pow+0xa30>)
 800cb06:	2000      	movs	r0, #0
 800cb08:	f7f3 fb82 	bl	8000210 <__aeabi_dsub>
 800cb0c:	e9cd 0100 	strd	r0, r1, [sp]
 800cb10:	9b01      	ldr	r3, [sp, #4]
 800cb12:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 800cb16:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800cb1a:	da2f      	bge.n	800cb7c <__ieee754_pow+0x9bc>
 800cb1c:	4650      	mov	r0, sl
 800cb1e:	ed9d 0b00 	vldr	d0, [sp]
 800cb22:	f000 f9cd 	bl	800cec0 <scalbn>
 800cb26:	ec51 0b10 	vmov	r0, r1, d0
 800cb2a:	ec53 2b18 	vmov	r2, r3, d8
 800cb2e:	f7ff bbe0 	b.w	800c2f2 <__ieee754_pow+0x132>
 800cb32:	4b30      	ldr	r3, [pc, #192]	; (800cbf4 <__ieee754_pow+0xa34>)
 800cb34:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 800cb38:	429e      	cmp	r6, r3
 800cb3a:	f77f af0b 	ble.w	800c954 <__ieee754_pow+0x794>
 800cb3e:	4b2e      	ldr	r3, [pc, #184]	; (800cbf8 <__ieee754_pow+0xa38>)
 800cb40:	440b      	add	r3, r1
 800cb42:	4303      	orrs	r3, r0
 800cb44:	d00b      	beq.n	800cb5e <__ieee754_pow+0x99e>
 800cb46:	a326      	add	r3, pc, #152	; (adr r3, 800cbe0 <__ieee754_pow+0xa20>)
 800cb48:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cb4c:	ec51 0b18 	vmov	r0, r1, d8
 800cb50:	f7f3 fd16 	bl	8000580 <__aeabi_dmul>
 800cb54:	a322      	add	r3, pc, #136	; (adr r3, 800cbe0 <__ieee754_pow+0xa20>)
 800cb56:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cb5a:	f7ff bbca 	b.w	800c2f2 <__ieee754_pow+0x132>
 800cb5e:	4622      	mov	r2, r4
 800cb60:	462b      	mov	r3, r5
 800cb62:	f7f3 fb55 	bl	8000210 <__aeabi_dsub>
 800cb66:	4642      	mov	r2, r8
 800cb68:	464b      	mov	r3, r9
 800cb6a:	f7f3 ff8f 	bl	8000a8c <__aeabi_dcmpge>
 800cb6e:	2800      	cmp	r0, #0
 800cb70:	f43f aef0 	beq.w	800c954 <__ieee754_pow+0x794>
 800cb74:	e7e7      	b.n	800cb46 <__ieee754_pow+0x986>
 800cb76:	f04f 0a00 	mov.w	sl, #0
 800cb7a:	e717      	b.n	800c9ac <__ieee754_pow+0x7ec>
 800cb7c:	e9dd 0100 	ldrd	r0, r1, [sp]
 800cb80:	4619      	mov	r1, r3
 800cb82:	e7d2      	b.n	800cb2a <__ieee754_pow+0x96a>
 800cb84:	491a      	ldr	r1, [pc, #104]	; (800cbf0 <__ieee754_pow+0xa30>)
 800cb86:	2000      	movs	r0, #0
 800cb88:	f7ff bb9e 	b.w	800c2c8 <__ieee754_pow+0x108>
 800cb8c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800cb90:	f7ff bb9a 	b.w	800c2c8 <__ieee754_pow+0x108>
 800cb94:	9000      	str	r0, [sp, #0]
 800cb96:	f7ff bb76 	b.w	800c286 <__ieee754_pow+0xc6>
 800cb9a:	2100      	movs	r1, #0
 800cb9c:	f7ff bb60 	b.w	800c260 <__ieee754_pow+0xa0>
 800cba0:	00000000 	.word	0x00000000
 800cba4:	3fe62e43 	.word	0x3fe62e43
 800cba8:	fefa39ef 	.word	0xfefa39ef
 800cbac:	3fe62e42 	.word	0x3fe62e42
 800cbb0:	0ca86c39 	.word	0x0ca86c39
 800cbb4:	be205c61 	.word	0xbe205c61
 800cbb8:	72bea4d0 	.word	0x72bea4d0
 800cbbc:	3e663769 	.word	0x3e663769
 800cbc0:	c5d26bf1 	.word	0xc5d26bf1
 800cbc4:	3ebbbd41 	.word	0x3ebbbd41
 800cbc8:	af25de2c 	.word	0xaf25de2c
 800cbcc:	3f11566a 	.word	0x3f11566a
 800cbd0:	16bebd93 	.word	0x16bebd93
 800cbd4:	3f66c16c 	.word	0x3f66c16c
 800cbd8:	5555553e 	.word	0x5555553e
 800cbdc:	3fc55555 	.word	0x3fc55555
 800cbe0:	c2f8f359 	.word	0xc2f8f359
 800cbe4:	01a56e1f 	.word	0x01a56e1f
 800cbe8:	3fe00000 	.word	0x3fe00000
 800cbec:	000fffff 	.word	0x000fffff
 800cbf0:	3ff00000 	.word	0x3ff00000
 800cbf4:	4090cbff 	.word	0x4090cbff
 800cbf8:	3f6f3400 	.word	0x3f6f3400
 800cbfc:	652b82fe 	.word	0x652b82fe
 800cc00:	3c971547 	.word	0x3c971547

0800cc04 <__ieee754_sqrt>:
 800cc04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc08:	ec55 4b10 	vmov	r4, r5, d0
 800cc0c:	4e56      	ldr	r6, [pc, #344]	; (800cd68 <__ieee754_sqrt+0x164>)
 800cc0e:	43ae      	bics	r6, r5
 800cc10:	ee10 0a10 	vmov	r0, s0
 800cc14:	ee10 3a10 	vmov	r3, s0
 800cc18:	4629      	mov	r1, r5
 800cc1a:	462a      	mov	r2, r5
 800cc1c:	d110      	bne.n	800cc40 <__ieee754_sqrt+0x3c>
 800cc1e:	ee10 2a10 	vmov	r2, s0
 800cc22:	462b      	mov	r3, r5
 800cc24:	f7f3 fcac 	bl	8000580 <__aeabi_dmul>
 800cc28:	4602      	mov	r2, r0
 800cc2a:	460b      	mov	r3, r1
 800cc2c:	4620      	mov	r0, r4
 800cc2e:	4629      	mov	r1, r5
 800cc30:	f7f3 faf0 	bl	8000214 <__adddf3>
 800cc34:	4604      	mov	r4, r0
 800cc36:	460d      	mov	r5, r1
 800cc38:	ec45 4b10 	vmov	d0, r4, r5
 800cc3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc40:	2d00      	cmp	r5, #0
 800cc42:	dc10      	bgt.n	800cc66 <__ieee754_sqrt+0x62>
 800cc44:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800cc48:	4330      	orrs	r0, r6
 800cc4a:	d0f5      	beq.n	800cc38 <__ieee754_sqrt+0x34>
 800cc4c:	b15d      	cbz	r5, 800cc66 <__ieee754_sqrt+0x62>
 800cc4e:	ee10 2a10 	vmov	r2, s0
 800cc52:	462b      	mov	r3, r5
 800cc54:	ee10 0a10 	vmov	r0, s0
 800cc58:	f7f3 fada 	bl	8000210 <__aeabi_dsub>
 800cc5c:	4602      	mov	r2, r0
 800cc5e:	460b      	mov	r3, r1
 800cc60:	f7f3 fdb8 	bl	80007d4 <__aeabi_ddiv>
 800cc64:	e7e6      	b.n	800cc34 <__ieee754_sqrt+0x30>
 800cc66:	1509      	asrs	r1, r1, #20
 800cc68:	d076      	beq.n	800cd58 <__ieee754_sqrt+0x154>
 800cc6a:	f3c2 0213 	ubfx	r2, r2, #0, #20
 800cc6e:	07ce      	lsls	r6, r1, #31
 800cc70:	f442 1080 	orr.w	r0, r2, #1048576	; 0x100000
 800cc74:	bf5e      	ittt	pl
 800cc76:	0fda      	lsrpl	r2, r3, #31
 800cc78:	005b      	lslpl	r3, r3, #1
 800cc7a:	eb02 0040 	addpl.w	r0, r2, r0, lsl #1
 800cc7e:	0fda      	lsrs	r2, r3, #31
 800cc80:	f2a1 35ff 	subw	r5, r1, #1023	; 0x3ff
 800cc84:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 800cc88:	2000      	movs	r0, #0
 800cc8a:	106d      	asrs	r5, r5, #1
 800cc8c:	005b      	lsls	r3, r3, #1
 800cc8e:	f04f 0e16 	mov.w	lr, #22
 800cc92:	4684      	mov	ip, r0
 800cc94:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800cc98:	eb0c 0401 	add.w	r4, ip, r1
 800cc9c:	4294      	cmp	r4, r2
 800cc9e:	bfde      	ittt	le
 800cca0:	1b12      	suble	r2, r2, r4
 800cca2:	eb04 0c01 	addle.w	ip, r4, r1
 800cca6:	1840      	addle	r0, r0, r1
 800cca8:	0052      	lsls	r2, r2, #1
 800ccaa:	f1be 0e01 	subs.w	lr, lr, #1
 800ccae:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 800ccb2:	ea4f 0151 	mov.w	r1, r1, lsr #1
 800ccb6:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800ccba:	d1ed      	bne.n	800cc98 <__ieee754_sqrt+0x94>
 800ccbc:	4671      	mov	r1, lr
 800ccbe:	2720      	movs	r7, #32
 800ccc0:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 800ccc4:	4562      	cmp	r2, ip
 800ccc6:	eb04 060e 	add.w	r6, r4, lr
 800ccca:	dc02      	bgt.n	800ccd2 <__ieee754_sqrt+0xce>
 800cccc:	d113      	bne.n	800ccf6 <__ieee754_sqrt+0xf2>
 800ccce:	429e      	cmp	r6, r3
 800ccd0:	d811      	bhi.n	800ccf6 <__ieee754_sqrt+0xf2>
 800ccd2:	2e00      	cmp	r6, #0
 800ccd4:	eb06 0e04 	add.w	lr, r6, r4
 800ccd8:	da43      	bge.n	800cd62 <__ieee754_sqrt+0x15e>
 800ccda:	f1be 0f00 	cmp.w	lr, #0
 800ccde:	db40      	blt.n	800cd62 <__ieee754_sqrt+0x15e>
 800cce0:	f10c 0801 	add.w	r8, ip, #1
 800cce4:	eba2 020c 	sub.w	r2, r2, ip
 800cce8:	429e      	cmp	r6, r3
 800ccea:	bf88      	it	hi
 800ccec:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800ccf0:	1b9b      	subs	r3, r3, r6
 800ccf2:	4421      	add	r1, r4
 800ccf4:	46c4      	mov	ip, r8
 800ccf6:	0052      	lsls	r2, r2, #1
 800ccf8:	3f01      	subs	r7, #1
 800ccfa:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 800ccfe:	ea4f 0454 	mov.w	r4, r4, lsr #1
 800cd02:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800cd06:	d1dd      	bne.n	800ccc4 <__ieee754_sqrt+0xc0>
 800cd08:	4313      	orrs	r3, r2
 800cd0a:	d006      	beq.n	800cd1a <__ieee754_sqrt+0x116>
 800cd0c:	1c4c      	adds	r4, r1, #1
 800cd0e:	bf13      	iteet	ne
 800cd10:	3101      	addne	r1, #1
 800cd12:	3001      	addeq	r0, #1
 800cd14:	4639      	moveq	r1, r7
 800cd16:	f021 0101 	bicne.w	r1, r1, #1
 800cd1a:	1043      	asrs	r3, r0, #1
 800cd1c:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 800cd20:	0849      	lsrs	r1, r1, #1
 800cd22:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 800cd26:	07c2      	lsls	r2, r0, #31
 800cd28:	bf48      	it	mi
 800cd2a:	f041 4100 	orrmi.w	r1, r1, #2147483648	; 0x80000000
 800cd2e:	eb03 5705 	add.w	r7, r3, r5, lsl #20
 800cd32:	460c      	mov	r4, r1
 800cd34:	463d      	mov	r5, r7
 800cd36:	e77f      	b.n	800cc38 <__ieee754_sqrt+0x34>
 800cd38:	0ada      	lsrs	r2, r3, #11
 800cd3a:	3815      	subs	r0, #21
 800cd3c:	055b      	lsls	r3, r3, #21
 800cd3e:	2a00      	cmp	r2, #0
 800cd40:	d0fa      	beq.n	800cd38 <__ieee754_sqrt+0x134>
 800cd42:	02d7      	lsls	r7, r2, #11
 800cd44:	d50a      	bpl.n	800cd5c <__ieee754_sqrt+0x158>
 800cd46:	f1c1 0420 	rsb	r4, r1, #32
 800cd4a:	fa23 f404 	lsr.w	r4, r3, r4
 800cd4e:	1e4d      	subs	r5, r1, #1
 800cd50:	408b      	lsls	r3, r1
 800cd52:	4322      	orrs	r2, r4
 800cd54:	1b41      	subs	r1, r0, r5
 800cd56:	e788      	b.n	800cc6a <__ieee754_sqrt+0x66>
 800cd58:	4608      	mov	r0, r1
 800cd5a:	e7f0      	b.n	800cd3e <__ieee754_sqrt+0x13a>
 800cd5c:	0052      	lsls	r2, r2, #1
 800cd5e:	3101      	adds	r1, #1
 800cd60:	e7ef      	b.n	800cd42 <__ieee754_sqrt+0x13e>
 800cd62:	46e0      	mov	r8, ip
 800cd64:	e7be      	b.n	800cce4 <__ieee754_sqrt+0xe0>
 800cd66:	bf00      	nop
 800cd68:	7ff00000 	.word	0x7ff00000

0800cd6c <fabs>:
 800cd6c:	ec51 0b10 	vmov	r0, r1, d0
 800cd70:	ee10 2a10 	vmov	r2, s0
 800cd74:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800cd78:	ec43 2b10 	vmov	d0, r2, r3
 800cd7c:	4770      	bx	lr

0800cd7e <finite>:
 800cd7e:	b082      	sub	sp, #8
 800cd80:	ed8d 0b00 	vstr	d0, [sp]
 800cd84:	9801      	ldr	r0, [sp, #4]
 800cd86:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 800cd8a:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 800cd8e:	0fc0      	lsrs	r0, r0, #31
 800cd90:	b002      	add	sp, #8
 800cd92:	4770      	bx	lr
 800cd94:	0000      	movs	r0, r0
	...

0800cd98 <nan>:
 800cd98:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800cda0 <nan+0x8>
 800cd9c:	4770      	bx	lr
 800cd9e:	bf00      	nop
 800cda0:	00000000 	.word	0x00000000
 800cda4:	7ff80000 	.word	0x7ff80000

0800cda8 <rint>:
 800cda8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cdaa:	ec51 0b10 	vmov	r0, r1, d0
 800cdae:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800cdb2:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 800cdb6:	2e13      	cmp	r6, #19
 800cdb8:	ee10 4a10 	vmov	r4, s0
 800cdbc:	460b      	mov	r3, r1
 800cdbe:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 800cdc2:	dc58      	bgt.n	800ce76 <rint+0xce>
 800cdc4:	2e00      	cmp	r6, #0
 800cdc6:	da2b      	bge.n	800ce20 <rint+0x78>
 800cdc8:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 800cdcc:	4302      	orrs	r2, r0
 800cdce:	d023      	beq.n	800ce18 <rint+0x70>
 800cdd0:	f3c1 0213 	ubfx	r2, r1, #0, #20
 800cdd4:	4302      	orrs	r2, r0
 800cdd6:	4254      	negs	r4, r2
 800cdd8:	4314      	orrs	r4, r2
 800cdda:	0c4b      	lsrs	r3, r1, #17
 800cddc:	0b24      	lsrs	r4, r4, #12
 800cdde:	045b      	lsls	r3, r3, #17
 800cde0:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 800cde4:	ea44 0103 	orr.w	r1, r4, r3
 800cde8:	4b32      	ldr	r3, [pc, #200]	; (800ceb4 <rint+0x10c>)
 800cdea:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800cdee:	e9d3 6700 	ldrd	r6, r7, [r3]
 800cdf2:	4602      	mov	r2, r0
 800cdf4:	460b      	mov	r3, r1
 800cdf6:	4630      	mov	r0, r6
 800cdf8:	4639      	mov	r1, r7
 800cdfa:	f7f3 fa0b 	bl	8000214 <__adddf3>
 800cdfe:	e9cd 0100 	strd	r0, r1, [sp]
 800ce02:	463b      	mov	r3, r7
 800ce04:	e9dd 0100 	ldrd	r0, r1, [sp]
 800ce08:	4632      	mov	r2, r6
 800ce0a:	f7f3 fa01 	bl	8000210 <__aeabi_dsub>
 800ce0e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800ce12:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 800ce16:	4639      	mov	r1, r7
 800ce18:	ec41 0b10 	vmov	d0, r0, r1
 800ce1c:	b003      	add	sp, #12
 800ce1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ce20:	4a25      	ldr	r2, [pc, #148]	; (800ceb8 <rint+0x110>)
 800ce22:	4132      	asrs	r2, r6
 800ce24:	ea01 0702 	and.w	r7, r1, r2
 800ce28:	4307      	orrs	r7, r0
 800ce2a:	d0f5      	beq.n	800ce18 <rint+0x70>
 800ce2c:	0851      	lsrs	r1, r2, #1
 800ce2e:	ea03 0252 	and.w	r2, r3, r2, lsr #1
 800ce32:	4314      	orrs	r4, r2
 800ce34:	d00c      	beq.n	800ce50 <rint+0xa8>
 800ce36:	ea23 0201 	bic.w	r2, r3, r1
 800ce3a:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800ce3e:	2e13      	cmp	r6, #19
 800ce40:	fa43 f606 	asr.w	r6, r3, r6
 800ce44:	bf0c      	ite	eq
 800ce46:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 800ce4a:	2400      	movne	r4, #0
 800ce4c:	ea42 0306 	orr.w	r3, r2, r6
 800ce50:	4918      	ldr	r1, [pc, #96]	; (800ceb4 <rint+0x10c>)
 800ce52:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 800ce56:	4622      	mov	r2, r4
 800ce58:	e9d5 4500 	ldrd	r4, r5, [r5]
 800ce5c:	4620      	mov	r0, r4
 800ce5e:	4629      	mov	r1, r5
 800ce60:	f7f3 f9d8 	bl	8000214 <__adddf3>
 800ce64:	e9cd 0100 	strd	r0, r1, [sp]
 800ce68:	e9dd 0100 	ldrd	r0, r1, [sp]
 800ce6c:	4622      	mov	r2, r4
 800ce6e:	462b      	mov	r3, r5
 800ce70:	f7f3 f9ce 	bl	8000210 <__aeabi_dsub>
 800ce74:	e7d0      	b.n	800ce18 <rint+0x70>
 800ce76:	2e33      	cmp	r6, #51	; 0x33
 800ce78:	dd07      	ble.n	800ce8a <rint+0xe2>
 800ce7a:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800ce7e:	d1cb      	bne.n	800ce18 <rint+0x70>
 800ce80:	ee10 2a10 	vmov	r2, s0
 800ce84:	f7f3 f9c6 	bl	8000214 <__adddf3>
 800ce88:	e7c6      	b.n	800ce18 <rint+0x70>
 800ce8a:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 800ce8e:	f04f 36ff 	mov.w	r6, #4294967295
 800ce92:	40d6      	lsrs	r6, r2
 800ce94:	4230      	tst	r0, r6
 800ce96:	d0bf      	beq.n	800ce18 <rint+0x70>
 800ce98:	ea14 0056 	ands.w	r0, r4, r6, lsr #1
 800ce9c:	ea4f 0156 	mov.w	r1, r6, lsr #1
 800cea0:	bf1f      	itttt	ne
 800cea2:	ea24 0101 	bicne.w	r1, r4, r1
 800cea6:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 800ceaa:	fa44 f202 	asrne.w	r2, r4, r2
 800ceae:	ea41 0402 	orrne.w	r4, r1, r2
 800ceb2:	e7cd      	b.n	800ce50 <rint+0xa8>
 800ceb4:	0800d038 	.word	0x0800d038
 800ceb8:	000fffff 	.word	0x000fffff
 800cebc:	00000000 	.word	0x00000000

0800cec0 <scalbn>:
 800cec0:	b570      	push	{r4, r5, r6, lr}
 800cec2:	ec55 4b10 	vmov	r4, r5, d0
 800cec6:	f3c5 520a 	ubfx	r2, r5, #20, #11
 800ceca:	4606      	mov	r6, r0
 800cecc:	462b      	mov	r3, r5
 800cece:	b99a      	cbnz	r2, 800cef8 <scalbn+0x38>
 800ced0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800ced4:	4323      	orrs	r3, r4
 800ced6:	d036      	beq.n	800cf46 <scalbn+0x86>
 800ced8:	4b39      	ldr	r3, [pc, #228]	; (800cfc0 <scalbn+0x100>)
 800ceda:	4629      	mov	r1, r5
 800cedc:	ee10 0a10 	vmov	r0, s0
 800cee0:	2200      	movs	r2, #0
 800cee2:	f7f3 fb4d 	bl	8000580 <__aeabi_dmul>
 800cee6:	4b37      	ldr	r3, [pc, #220]	; (800cfc4 <scalbn+0x104>)
 800cee8:	429e      	cmp	r6, r3
 800ceea:	4604      	mov	r4, r0
 800ceec:	460d      	mov	r5, r1
 800ceee:	da10      	bge.n	800cf12 <scalbn+0x52>
 800cef0:	a32b      	add	r3, pc, #172	; (adr r3, 800cfa0 <scalbn+0xe0>)
 800cef2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cef6:	e03a      	b.n	800cf6e <scalbn+0xae>
 800cef8:	f240 71ff 	movw	r1, #2047	; 0x7ff
 800cefc:	428a      	cmp	r2, r1
 800cefe:	d10c      	bne.n	800cf1a <scalbn+0x5a>
 800cf00:	ee10 2a10 	vmov	r2, s0
 800cf04:	4620      	mov	r0, r4
 800cf06:	4629      	mov	r1, r5
 800cf08:	f7f3 f984 	bl	8000214 <__adddf3>
 800cf0c:	4604      	mov	r4, r0
 800cf0e:	460d      	mov	r5, r1
 800cf10:	e019      	b.n	800cf46 <scalbn+0x86>
 800cf12:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800cf16:	460b      	mov	r3, r1
 800cf18:	3a36      	subs	r2, #54	; 0x36
 800cf1a:	4432      	add	r2, r6
 800cf1c:	f240 71fe 	movw	r1, #2046	; 0x7fe
 800cf20:	428a      	cmp	r2, r1
 800cf22:	dd08      	ble.n	800cf36 <scalbn+0x76>
 800cf24:	2d00      	cmp	r5, #0
 800cf26:	a120      	add	r1, pc, #128	; (adr r1, 800cfa8 <scalbn+0xe8>)
 800cf28:	e9d1 0100 	ldrd	r0, r1, [r1]
 800cf2c:	da1c      	bge.n	800cf68 <scalbn+0xa8>
 800cf2e:	a120      	add	r1, pc, #128	; (adr r1, 800cfb0 <scalbn+0xf0>)
 800cf30:	e9d1 0100 	ldrd	r0, r1, [r1]
 800cf34:	e018      	b.n	800cf68 <scalbn+0xa8>
 800cf36:	2a00      	cmp	r2, #0
 800cf38:	dd08      	ble.n	800cf4c <scalbn+0x8c>
 800cf3a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800cf3e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800cf42:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800cf46:	ec45 4b10 	vmov	d0, r4, r5
 800cf4a:	bd70      	pop	{r4, r5, r6, pc}
 800cf4c:	f112 0f35 	cmn.w	r2, #53	; 0x35
 800cf50:	da19      	bge.n	800cf86 <scalbn+0xc6>
 800cf52:	f24c 3350 	movw	r3, #50000	; 0xc350
 800cf56:	429e      	cmp	r6, r3
 800cf58:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 800cf5c:	dd0a      	ble.n	800cf74 <scalbn+0xb4>
 800cf5e:	a112      	add	r1, pc, #72	; (adr r1, 800cfa8 <scalbn+0xe8>)
 800cf60:	e9d1 0100 	ldrd	r0, r1, [r1]
 800cf64:	2b00      	cmp	r3, #0
 800cf66:	d1e2      	bne.n	800cf2e <scalbn+0x6e>
 800cf68:	a30f      	add	r3, pc, #60	; (adr r3, 800cfa8 <scalbn+0xe8>)
 800cf6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cf6e:	f7f3 fb07 	bl	8000580 <__aeabi_dmul>
 800cf72:	e7cb      	b.n	800cf0c <scalbn+0x4c>
 800cf74:	a10a      	add	r1, pc, #40	; (adr r1, 800cfa0 <scalbn+0xe0>)
 800cf76:	e9d1 0100 	ldrd	r0, r1, [r1]
 800cf7a:	2b00      	cmp	r3, #0
 800cf7c:	d0b8      	beq.n	800cef0 <scalbn+0x30>
 800cf7e:	a10e      	add	r1, pc, #56	; (adr r1, 800cfb8 <scalbn+0xf8>)
 800cf80:	e9d1 0100 	ldrd	r0, r1, [r1]
 800cf84:	e7b4      	b.n	800cef0 <scalbn+0x30>
 800cf86:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800cf8a:	3236      	adds	r2, #54	; 0x36
 800cf8c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800cf90:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 800cf94:	4620      	mov	r0, r4
 800cf96:	4b0c      	ldr	r3, [pc, #48]	; (800cfc8 <scalbn+0x108>)
 800cf98:	2200      	movs	r2, #0
 800cf9a:	e7e8      	b.n	800cf6e <scalbn+0xae>
 800cf9c:	f3af 8000 	nop.w
 800cfa0:	c2f8f359 	.word	0xc2f8f359
 800cfa4:	01a56e1f 	.word	0x01a56e1f
 800cfa8:	8800759c 	.word	0x8800759c
 800cfac:	7e37e43c 	.word	0x7e37e43c
 800cfb0:	8800759c 	.word	0x8800759c
 800cfb4:	fe37e43c 	.word	0xfe37e43c
 800cfb8:	c2f8f359 	.word	0xc2f8f359
 800cfbc:	81a56e1f 	.word	0x81a56e1f
 800cfc0:	43500000 	.word	0x43500000
 800cfc4:	ffff3cb0 	.word	0xffff3cb0
 800cfc8:	3c900000 	.word	0x3c900000

0800cfcc <_init>:
 800cfcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cfce:	bf00      	nop
 800cfd0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800cfd2:	bc08      	pop	{r3}
 800cfd4:	469e      	mov	lr, r3
 800cfd6:	4770      	bx	lr

0800cfd8 <_fini>:
 800cfd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cfda:	bf00      	nop
 800cfdc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800cfde:	bc08      	pop	{r3}
 800cfe0:	469e      	mov	lr, r3
 800cfe2:	4770      	bx	lr
