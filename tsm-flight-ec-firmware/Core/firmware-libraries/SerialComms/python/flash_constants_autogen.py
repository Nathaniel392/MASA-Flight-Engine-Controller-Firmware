"""
MASA flash constant read/write generator script

Michigan Aeronautical Science Association
Author: Nathaniel Kalantar (nkalan@umich.edu)
Created: April 13, 2021
"""

from file_generator_byte_info import type_byte_lengths  # Dictionary mapping variable type to size in bytes
from pandas import read_csv
import sys
import time

def main():
    # Argument parsing and error checking
    if (len(sys.argv) != 3):
        print("Error: incorrect number of arguments. Proper usage is: flash_constants_autogen.py <csv> <board number>")
        return

    file_name = sys.argv[1]
    board_num = int(sys.argv[2])

    # Hardcoding file destinations: TODO change this?
    constants_h_dest = "../../../Inc/flash_constants.h"
    constants_c_dest = "../../../Src/flash_constants.c"

    # Read in the csv with pandas
    df = read_csv(file_name)

    # Start setting up string to write to the files
    # Not writing directly to files because it's easier this way trust me
    autogen_tag = "// AUTOGENERATED FILE - CHANGES MADE TO THIS FILE WILL BE OVERWRITTEN\n\n" \
        + "// Autogenerated by flash_constants_autogen.py on " + str(time.ctime()) + "\n\n\n"
    constants_h_str = autogen_tag + "#ifndef FLASH_CONSTANTS_H\n#define FLASH_CONSTANTS_H\n\n#include \"W25N01GV.h\"\n\n"
    constants_c_str = autogen_tag + "#include \"flash_constants.h\"\n\n"

    """
    TODO: include a user written section at the top that can be used for imports
    """

    # Iterate through each row in the csv and do stuff
    for index, line in df.iterrows():

        print(line)
        # Ignore rows not matching the board you want
        if board_num not in line['board'].strip().split():  # TODO: fix this
            continue


        """
        
        
        TODO: READ EVERYTHING IN HERE AND FORMAT THE STRINGS THAT WILL GET WRITTEN TO THE FILES
        use line['variable'], line['type'], line['xmit_scale']

        
        
        """

    # End header include protection
    constants_h_str += "#endif\n"

    # Write files
    #with open(constants_h_dest, 'w+') as constants_h_file:
    #    constants_h_file.write(constants_h_str)
    
    #with open(constants_c_dest, 'w+') as constants_c_file:
    #    constants_c_file.write(constants_c_str)

    #print("Successfully generated the following files:\n\t" + constants_h_dest + "\n\t" + constants_c_dest)

if __name__ == '__main__':
    main()